/* Generated By:JJTree: Do not edit this line. ASTExpression.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package de.uniol.inf.is.odysseus.pqlhack.parser;

public
class ASTExpression extends SimpleNode {
  public ASTExpression(int id) {
    super(id);
  }

  public ASTExpression(ProceduralExpressionParser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(ProceduralExpressionParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
  
	private String operator;
	  
	  public void setOperator(String operator){
		  this.operator = operator;
	  }
	  
	  public String getOperator(){
		  return this.operator;
	  }
	  
		@Override
		public String toString() {
			if (jjtGetNumChildren() == 1) {
				return jjtGetChild(0).toString();
			} else {
				return jjtGetChild(0).toString() + " " + getOperator() + " "
						+ jjtGetChild(1).toString();
			}
		}
}
/* JavaCC - OriginalChecksum=1441ed4c7cbe3e3363afc4492e49b8d4 (do not edit this line) */
