/*******************************************************************************
 * Copyright 2012 The Odysseus Team
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
/* Generated By:JJTree&JavaCC: Do not edit this line. MapleResultParserConstants.java */
package de.uniol.inf.is.odysseus.objecttracking.predicate.range.parser.nodes;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
@SuppressWarnings("all")
public interface MapleResultParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int K_AND = 5;
  /** RegularExpression Id. */
  int K_MAPLE = 6;
  /** RegularExpression Id. */
  int K_PIECEWISE = 7;
  /** RegularExpression Id. */
  int IDENTIFIER = 8;
  /** RegularExpression Id. */
  int LETTER = 9;
  /** RegularExpression Id. */
  int SPECIAL_CHARS = 10;
  /** RegularExpression Id. */
  int CHAR_LITERAL = 11;
  /** RegularExpression Id. */
  int QUOTED_IDENTIFIER = 12;
  /** RegularExpression Id. */
  int COMPARE_OPERATOR = 13;
  /** RegularExpression Id. */
  int REGEXP = 14;
  /** RegularExpression Id. */
  int FLOAT = 15;
  /** RegularExpression Id. */
  int INTEGER = 16;
  /** RegularExpression Id. */
  int DIGIT = 17;
  /** RegularExpression Id. */
  int IPADDRESS = 18;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"AND\"",
    "\"MAPLE\"",
    "\"PIECEWISE\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<SPECIAL_CHARS>",
    "<CHAR_LITERAL>",
    "<QUOTED_IDENTIFIER>",
    "<COMPARE_OPERATOR>",
    "<REGEXP>",
    "<FLOAT>",
    "<INTEGER>",
    "<DIGIT>",
    "<IPADDRESS>",
    "\"(\"",
    "\",\"",
    "\")\"",
    "\"{[{\"",
    "\"}]}\"",
    "\"{}\"",
    "\"-\"",
    "\"*\"",
    "\"+\"",
    "\"/\"",
    "\"^\"",
  };

}
