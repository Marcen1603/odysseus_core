// Konstanten
#DEFINE ip 192.168.0.42:5001 // Ip-Adresse der JDVE-Maschine, 127.0.0.1:5001 l√§sst DummySource generieren
#DEFINE sensorName laserSensor // Quellenname

// Quellendefinitionen
#PARSER CQL
#TRANSCFG StreamCars
#QUERY
CREATE SENSOR ${sensorName} (
    RECORD( scan,
        ATTRIBUTE(timestamp, STARTTIMESTAMP)
        LIST( cars, 
            RECORD( car,
                ATTRIBUTE(type, INTEGER)
                ATTRIBUTE(id, INTEGER)
                ATTRIBUTE(posx, MV FLOAT       (${sensorName}.scan:cars:car:posx*10/100 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 )
                          ) 
                ATTRIBUTE(posy, MV FLOAT      ( 0.0 ,
                                                ${sensorName}.scan:cars:car:posy*10/100 ,  
                                                0.0 ,
                                                0.0 ,
                                                0.0 )
                          )
                ATTRIBUTE(posz, MV FLOAT      ( 0.0 , 
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:posz*10/100 , 
                                                0.0 ,
                                                0.0 )
                          )
                ATTRIBUTE(heading, MV FLOAT   ( 0.0 , 
                                                0.0 ,
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:heading*10/100 , 
                                                0.0 )
                         )
                ATTRIBUTE(velocity, MV FLOAT  ( 0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:velocity*10/100 )
                         )
                ATTRIBUTE(nearX, FLOAT)
                ATTRIBUTE(nearY, FLOAT)
                LIST( points, 
                	RECORD( point, 
                		ATTRIBUTE(x, FLOAT)
                		ATTRIBUTE(y, FLOAT)
                	)
                )
            )
        )
    ),
    laserSensor.scan:cars
) FROM CHANNEL ${ip}

#QUERY
CREATE BROKER streamCarsBroker (
    RECORD( scan,
        ATTRIBUTE(timestamp, STARTTIMESTAMP)
        LIST( cars, 
            RECORD( car,
                ATTRIBUTE(type, INTEGER)
                ATTRIBUTE(id, INTEGER)
                ATTRIBUTE(posx, MV FLOAT       (${sensorName}.scan:cars:car:posx*10/100 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 )
                          ) 
                ATTRIBUTE(posy, MV FLOAT      ( 0.0 ,
                                                ${sensorName}.scan:cars:car:posy*10/100 ,  
                                                0.0 ,
                                                0.0 ,
                                                0.0 )
                          )
                ATTRIBUTE(posz, MV FLOAT      ( 0.0 , 
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:posz*10/100 , 
                                                0.0 ,
                                                0.0 )
                          )
                ATTRIBUTE(heading, MV FLOAT   ( 0.0 , 
                                                0.0 ,
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:heading*10/100 , 
                                                0.0 )
                         )
                ATTRIBUTE(velocity, MV FLOAT  ( 0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:velocity*10/100 )
                         )
                ATTRIBUTE(nearX, FLOAT)
                ATTRIBUTE(nearY, FLOAT)
                LIST( points, 
                	RECORD( point, 
                		ATTRIBUTE(x, FLOAT)
                		ATTRIBUTE(y, FLOAT)
                	)
                )
            )
        )
    )
) QUEUE (
    RECORD( scan,
        ATTRIBUTE(timestamp, STARTTIMESTAMP)
        LIST( cars, 
            RECORD( car,
                ATTRIBUTE(type, INTEGER)
                ATTRIBUTE(id, INTEGER)
                ATTRIBUTE(posx, MV FLOAT       (${sensorName}.scan:cars:car:posx*10/100 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 )
                          ) 
                ATTRIBUTE(posy, MV FLOAT      ( 0.0 ,
                                                ${sensorName}.scan:cars:car:posy*10/100 ,  
                                                0.0 ,
                                                0.0 ,
                                                0.0 )
                          )
                ATTRIBUTE(posz, MV FLOAT      ( 0.0 , 
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:posz*10/100 , 
                                                0.0 ,
                                                0.0 )
                          )
                ATTRIBUTE(heading, MV FLOAT   ( 0.0 , 
                                                0.0 ,
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:heading*10/100 , 
                                                0.0 )
                         )
                ATTRIBUTE(velocity, MV FLOAT  ( 0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:velocity*10/100 )
                         )
                ATTRIBUTE(nearX, FLOAT)
                ATTRIBUTE(nearY, FLOAT)
                LIST( points, 
                	RECORD( point, 
                		ATTRIBUTE(x, FLOAT)
                		ATTRIBUTE(y, FLOAT)
                	)
                )
            )
        )
    )
);

#QUERY
CREATE BROKER streamCarsBroker2 (
    RECORD( scan,
        ATTRIBUTE(timestamp, STARTTIMESTAMP)
        LIST( cars, 
            RECORD( car,
                ATTRIBUTE(type, INTEGER)
                ATTRIBUTE(id, INTEGER)
                ATTRIBUTE(posx, MV FLOAT       (${sensorName}.scan:cars:car:posx*10/100 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 )
                          ) 
                ATTRIBUTE(posy, MV FLOAT      ( 0.0 ,
                                                ${sensorName}.scan:cars:car:posy*10/100 ,  
                                                0.0 ,
                                                0.0 ,
                                                0.0 )
                          )
                ATTRIBUTE(posz, MV FLOAT      ( 0.0 , 
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:posz*10/100 , 
                                                0.0 ,
                                                0.0 )
                          )
                ATTRIBUTE(heading, MV FLOAT   ( 0.0 , 
                                                0.0 ,
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:heading*10/100 , 
                                                0.0 )
                         )
                ATTRIBUTE(velocity, MV FLOAT  ( 0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:velocity*10/100 )
                         )
                ATTRIBUTE(nearX, FLOAT)
                ATTRIBUTE(nearY, FLOAT)
                LIST( points, 
                	RECORD( point, 
                		ATTRIBUTE(x, FLOAT)
                		ATTRIBUTE(y, FLOAT)
                	)
                )
            )
        )
    )
) QUEUE (
    RECORD( scan,
        ATTRIBUTE(timestamp, STARTTIMESTAMP)
        LIST( cars, 
            RECORD( car,
                ATTRIBUTE(type, INTEGER)
                ATTRIBUTE(id, INTEGER)
                ATTRIBUTE(posx, MV FLOAT       (${sensorName}.scan:cars:car:posx*10/100 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 )
                          ) 
                ATTRIBUTE(posy, MV FLOAT      ( 0.0 ,
                                                ${sensorName}.scan:cars:car:posy*10/100 ,  
                                                0.0 ,
                                                0.0 ,
                                                0.0 )
                          )
                ATTRIBUTE(posz, MV FLOAT      ( 0.0 , 
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:posz*10/100 , 
                                                0.0 ,
                                                0.0 )
                          )
                ATTRIBUTE(heading, MV FLOAT   ( 0.0 , 
                                                0.0 ,
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:heading*10/100 , 
                                                0.0 )
                         )
                ATTRIBUTE(velocity, MV FLOAT  ( 0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                0.0 ,
                                                ${sensorName}.scan:cars:car:velocity*10/100 )
                         )
                ATTRIBUTE(nearX, FLOAT)
                ATTRIBUTE(nearY, FLOAT)
                LIST( points, 
                	RECORD( point, 
                		ATTRIBUTE(x, FLOAT)
                		ATTRIBUTE(y, FLOAT)
                	)
                )
            )
        )
    )
);