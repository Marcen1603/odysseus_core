module de.uniol.inf.is.odysseus.parser.cql2.GenerateCQL

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.ui.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.eclipse.emf.mwe.utils.*

var rootPath = "../../../../../odysseus"
var pathUi = "${rootPath}/client/cql/"
var projectBaseName = "de.uniol.inf.is.odysseus.parser.cql2"
var baseNameUi = "${projectBaseName}.ui"
var baseNameUiTests = "${baseNameUi}.tests"
var baseNameIde = "${projectBaseName}.ide"
var pathServer = "/server/cql/parser.cql2"

Workflow {

	component = org.eclipse.emf.mwe.utils.DirectoryCleaner {
		directory = "src-gen"
	}

	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "de.uniol.inf.is.odysseus.parser.cql2"
				rootPath = "${rootPath}${pathServer}"
				eclipsePlugin = {
					root = "${pathUi}${baseNameUi}/"
					name = baseNameUi
					enabled = true
				}

				eclipsePluginTest = {
					root = "${pathUi}${baseNameUiTests}/"
					name = baseNameUiTests
					enabled = true
				}

				genericIde = {
					root = "${pathUi}${baseNameIde}/"
					name = baseNameIde
					enabled = true
				}

				runtimeTest = {
					enabled = true
				}

				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}

		}
		language = StandardLanguage {
			name = "de.uniol.inf.is.odysseus.parser.cql2.CQL"
			fileExtensions = "cql"
			parserGenerator = {
				options = {
					ignoreCase = true
				}
			}

			serializer = {
				generateStub = false
			}

			// For insensitive case letters for scoping elements. Add this to the scope provider
			//			mwe2 scopeProvider = {
			//		      ignoreCase = true
			//		    }
			//			validator = {
			//				 composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			//			}

			//			fragment = scoping.ImportNamespacesScopingFragment2 auto-inject {}
			//			fragment = exporting.SimpleNamesFragment2 auto-inject {}
		}
	}
}
