/*
 * generated by Xtext 2.10.0
 */
parser grammar InternalCQLParser;

options {
	tokenVocab=InternalCQLLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package de.uniol.inf.is.odysseus.parser.novel.cql.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.uniol.inf.is.odysseus.parser.novel.cql.services.CQLGrammarAccess;

}
@members {
	private CQLGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("CircumflexAccent", "'^'");
		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
		tokenNameToValue.put("AS", "'AS'");
		tokenNameToValue.put("AT", "'AT'");
		tokenNameToValue.put("BY", "'BY'");
		tokenNameToValue.put("IF", "'IF'");
		tokenNameToValue.put("IN", "'IN'");
		tokenNameToValue.put("ON", "'ON'");
		tokenNameToValue.put("OR", "'OR'");
		tokenNameToValue.put("TO", "'TO'");
		tokenNameToValue.put("AND", "'AND'");
		tokenNameToValue.put("NOT", "'NOT'");
		tokenNameToValue.put("DROP", "'DROP'");
		tokenNameToValue.put("EACH", "'EACH'");
		tokenNameToValue.put("FILE", "'FILE'");
		tokenNameToValue.put("FROM", "'FROM'");
		tokenNameToValue.put("JDBC", "'JDBC'");
		tokenNameToValue.put("ROLE", "'ROLE'");
		tokenNameToValue.put("SINK", "'SINK'");
		tokenNameToValue.put("SIZE", "'SIZE'");
		tokenNameToValue.put("TIME", "'TIME'");
		tokenNameToValue.put("TRUE", "'TRUE'");
		tokenNameToValue.put("USER", "'USER'");
		tokenNameToValue.put("VIEW", "'VIEW'");
		tokenNameToValue.put("WITH", "'WITH'");
		tokenNameToValue.put("ALTER", "'ALTER'");
		tokenNameToValue.put("FALSE", "'FALSE'");
		tokenNameToValue.put("GRANT", "'GRANT'");
		tokenNameToValue.put("GROUP", "'GROUP'");
		tokenNameToValue.put("MULTI", "'MULTI'");
		tokenNameToValue.put("STORE", "'STORE'");
		tokenNameToValue.put("TABLE", "'TABLE'");
		tokenNameToValue.put("TUPLE", "'TUPLE'");
		tokenNameToValue.put("UNION", "'UNION'");
		tokenNameToValue.put("WHERE", "'WHERE'");
		tokenNameToValue.put("ATTACH", "'ATTACH'");
		tokenNameToValue.put("CREATE", "'CREATE'");
		tokenNameToValue.put("EXISTS", "'EXISTS'");
		tokenNameToValue.put("HAVING", "'HAVING'");
		tokenNameToValue.put("REVOKE", "'REVOKE'");
		tokenNameToValue.put("SELECT", "'SELECT'");
		tokenNameToValue.put("SINGLE", "'SINGLE'");
		tokenNameToValue.put("STREAM", "'STREAM'");
		tokenNameToValue.put("TENANT", "'TENANT'");
		tokenNameToValue.put("ADVANCE", "'ADVANCE'");
		tokenNameToValue.put("CHANNEL", "'CHANNEL'");
		tokenNameToValue.put("CONTEXT", "'CONTEXT'");
		tokenNameToValue.put("OPTIONS", "'OPTIONS'");
		tokenNameToValue.put("WRAPPER", "'WRAPPER'");
		tokenNameToValue.put("DATABASE", "'DATABASE'");
		tokenNameToValue.put("DISTINCT", "'DISTINCT'");
		tokenNameToValue.put("PASSWORD", "'PASSWORD'");
		tokenNameToValue.put("PROTOCOL", "'PROTOCOL'");
		tokenNameToValue.put("TRUNCATE", "'TRUNCATE'");
		tokenNameToValue.put("PARTITION", "'PARTITION'");
		tokenNameToValue.put("TRANSPORT", "'TRANSPORT'");
		tokenNameToValue.put("UNBOUNDED", "'UNBOUNDED'");
		tokenNameToValue.put("CONNECTION", "'CONNECTION'");
		tokenNameToValue.put("DIFFERENCE", "'DIFFERENCE'");
		tokenNameToValue.put("IDENTIFIED", "'IDENTIFIED'");
		tokenNameToValue.put("DATAHANDLER", "'DATAHANDLER'");
		tokenNameToValue.put("INTERSECTION", "'INTERSECTION'");
		tokenNameToValue.put("NO_LAZY_CONNECTION_CHECK", "'NO_LAZY_CONNECTION_CHECK'");
	}

	public void setGrammarAccess(CQLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)*
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN
:
{ before(grammarAccess.getBOOLEANRule()); }
	 ruleBOOLEAN
{ after(grammarAccess.getBOOLEANRule()); } 
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLEANAccess().getAlternatives()); }
		(rule__BOOLEAN__Alternatives)
		{ after(grammarAccess.getBOOLEANAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment()); }
		(rule__Statement__TypeAssignment)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getTypeAssignment()); }
		(rule__Command__TypeAssignment)
		{ after(grammarAccess.getCommandAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelect
entryRuleSelect
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectAccess().getGroup()); }
		(rule__Select__Group__0)
		{ after(grammarAccess.getSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInnerSelect
entryRuleInnerSelect
:
{ before(grammarAccess.getInnerSelectRule()); }
	 ruleInnerSelect
{ after(grammarAccess.getInnerSelectRule()); } 
	 EOF 
;

// Rule InnerSelect
ruleInnerSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInnerSelectAccess().getGroup()); }
		(rule__InnerSelect__Group__0)
		{ after(grammarAccess.getInnerSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInnerSelect2
entryRuleInnerSelect2
:
{ before(grammarAccess.getInnerSelect2Rule()); }
	 ruleInnerSelect2
{ after(grammarAccess.getInnerSelect2Rule()); } 
	 EOF 
;

// Rule InnerSelect2
ruleInnerSelect2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInnerSelect2Access().getSelectAssignment()); }
		(rule__InnerSelect2__SelectAssignment)
		{ after(grammarAccess.getInnerSelect2Access().getSelectAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectArgument
entryRuleSelectArgument
:
{ before(grammarAccess.getSelectArgumentRule()); }
	 ruleSelectArgument
{ after(grammarAccess.getSelectArgumentRule()); } 
	 EOF 
;

// Rule SelectArgument
ruleSelectArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectArgumentAccess().getAlternatives()); }
		(rule__SelectArgument__Alternatives)
		{ after(grammarAccess.getSelectArgumentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource
entryRuleSource
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceAccess().getAlternatives()); }
		(rule__Source__Alternatives)
		{ after(grammarAccess.getSourceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleSource
entryRuleSimpleSource
:
{ before(grammarAccess.getSimpleSourceRule()); }
	 ruleSimpleSource
{ after(grammarAccess.getSimpleSourceRule()); } 
	 EOF 
;

// Rule SimpleSource
ruleSimpleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleSourceAccess().getGroup()); }
		(rule__SimpleSource__Group__0)
		{ after(grammarAccess.getSimpleSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNestedSource
entryRuleNestedSource
:
{ before(grammarAccess.getNestedSourceRule()); }
	 ruleNestedSource
{ after(grammarAccess.getNestedSourceRule()); } 
	 EOF 
;

// Rule NestedSource
ruleNestedSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNestedSourceAccess().getGroup()); }
		(rule__NestedSource__Group__0)
		{ after(grammarAccess.getNestedSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedSourcename
entryRuleQualifiedSourcename
:
{ before(grammarAccess.getQualifiedSourcenameRule()); }
	 ruleQualifiedSourcename
{ after(grammarAccess.getQualifiedSourcenameRule()); } 
	 EOF 
;

// Rule QualifiedSourcename
ruleQualifiedSourcename 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedSourcenameAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getQualifiedSourcenameAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeWithoutAliasDefinition
entryRuleAttributeWithoutAliasDefinition
:
{ before(grammarAccess.getAttributeWithoutAliasDefinitionRule()); }
	 ruleAttributeWithoutAliasDefinition
{ after(grammarAccess.getAttributeWithoutAliasDefinitionRule()); } 
	 EOF 
;

// Rule AttributeWithoutAliasDefinition
ruleAttributeWithoutAliasDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeWithoutAliasDefinitionAccess().getNameAssignment()); }
		(rule__AttributeWithoutAliasDefinition__NameAssignment)
		{ after(grammarAccess.getAttributeWithoutAliasDefinitionAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedAttributename
entryRuleQualifiedAttributename
:
{ before(grammarAccess.getQualifiedAttributenameRule()); }
	 ruleQualifiedAttributename
{ after(grammarAccess.getQualifiedAttributenameRule()); } 
	 EOF 
;

// Rule QualifiedAttributename
ruleQualifiedAttributename 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedAttributenameAccess().getAlternatives()); }
		(rule__QualifiedAttributename__Alternatives)
		{ after(grammarAccess.getQualifiedAttributenameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeWithNestedStatement
entryRuleAttributeWithNestedStatement
:
{ before(grammarAccess.getAttributeWithNestedStatementRule()); }
	 ruleAttributeWithNestedStatement
{ after(grammarAccess.getAttributeWithNestedStatementRule()); } 
	 EOF 
;

// Rule AttributeWithNestedStatement
ruleAttributeWithNestedStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeWithNestedStatementAccess().getGroup()); }
		(rule__AttributeWithNestedStatement__Group__0)
		{ after(grammarAccess.getAttributeWithNestedStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndOperator
entryRuleAndOperator
:
{ before(grammarAccess.getAndOperatorRule()); }
	 ruleAndOperator
{ after(grammarAccess.getAndOperatorRule()); } 
	 EOF 
;

// Rule AndOperator
ruleAndOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndOperatorAccess().getANDKeyword()); }
		AND
		{ after(grammarAccess.getAndOperatorAccess().getANDKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrOperator
entryRuleOrOperator
:
{ before(grammarAccess.getOrOperatorRule()); }
	 ruleOrOperator
{ after(grammarAccess.getOrOperatorRule()); } 
	 EOF 
;

// Rule OrOperator
ruleOrOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrOperatorAccess().getORKeyword()); }
		OR
		{ after(grammarAccess.getOrOperatorAccess().getORKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEQUALITIY_OPERATOR
entryRuleEQUALITIY_OPERATOR
:
{ before(grammarAccess.getEQUALITIY_OPERATORRule()); }
	 ruleEQUALITIY_OPERATOR
{ after(grammarAccess.getEQUALITIY_OPERATORRule()); } 
	 EOF 
;

// Rule EQUALITIY_OPERATOR
ruleEQUALITIY_OPERATOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEQUALITIY_OPERATORAccess().getAlternatives()); }
		(rule__EQUALITIY_OPERATOR__Alternatives)
		{ after(grammarAccess.getEQUALITIY_OPERATORAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCOMPARE_OPERATOR
entryRuleCOMPARE_OPERATOR
:
{ before(grammarAccess.getCOMPARE_OPERATORRule()); }
	 ruleCOMPARE_OPERATOR
{ after(grammarAccess.getCOMPARE_OPERATORRule()); } 
	 EOF 
;

// Rule COMPARE_OPERATOR
ruleCOMPARE_OPERATOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCOMPARE_OPERATORAccess().getAlternatives()); }
		(rule__COMPARE_OPERATOR__Alternatives)
		{ after(grammarAccess.getCOMPARE_OPERATORAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleARITHMETIC_OPERATOR
entryRuleARITHMETIC_OPERATOR
:
{ before(grammarAccess.getARITHMETIC_OPERATORRule()); }
	 ruleARITHMETIC_OPERATOR
{ after(grammarAccess.getARITHMETIC_OPERATORRule()); } 
	 EOF 
;

// Rule ARITHMETIC_OPERATOR
ruleARITHMETIC_OPERATOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getARITHMETIC_OPERATORAccess().getAlternatives()); }
		(rule__ARITHMETIC_OPERATOR__Alternatives)
		{ after(grammarAccess.getARITHMETIC_OPERATORAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEXPONENT_OPERATOR
entryRuleEXPONENT_OPERATOR
:
{ before(grammarAccess.getEXPONENT_OPERATORRule()); }
	 ruleEXPONENT_OPERATOR
{ after(grammarAccess.getEXPONENT_OPERATORRule()); } 
	 EOF 
;

// Rule EXPONENT_OPERATOR
ruleEXPONENT_OPERATOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEXPONENT_OPERATORAccess().getCircumflexAccentKeyword()); }
		CircumflexAccent
		{ after(grammarAccess.getEXPONENT_OPERATORAccess().getCircumflexAccentKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMUL_OR_DIV_OPERATOR
entryRuleMUL_OR_DIV_OPERATOR
:
{ before(grammarAccess.getMUL_OR_DIV_OPERATORRule()); }
	 ruleMUL_OR_DIV_OPERATOR
{ after(grammarAccess.getMUL_OR_DIV_OPERATORRule()); } 
	 EOF 
;

// Rule MUL_OR_DIV_OPERATOR
ruleMUL_OR_DIV_OPERATOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMUL_OR_DIV_OPERATORAccess().getAlternatives()); }
		(rule__MUL_OR_DIV_OPERATOR__Alternatives)
		{ after(grammarAccess.getMUL_OR_DIV_OPERATORAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleADD_OPERATOR
entryRuleADD_OPERATOR
:
{ before(grammarAccess.getADD_OPERATORRule()); }
	 ruleADD_OPERATOR
{ after(grammarAccess.getADD_OPERATORRule()); } 
	 EOF 
;

// Rule ADD_OPERATOR
ruleADD_OPERATOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getADD_OPERATORAccess().getPlusSignKeyword()); }
		PlusSign
		{ after(grammarAccess.getADD_OPERATORAccess().getPlusSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMINUS_OPERATOR
entryRuleMINUS_OPERATOR
:
{ before(grammarAccess.getMINUS_OPERATORRule()); }
	 ruleMINUS_OPERATOR
{ after(grammarAccess.getMINUS_OPERATORRule()); } 
	 EOF 
;

// Rule MINUS_OPERATOR
ruleMINUS_OPERATOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMINUS_OPERATORAccess().getHyphenMinusKeyword()); }
		HyphenMinus
		{ after(grammarAccess.getMINUS_OPERATORAccess().getHyphenMinusKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectExpression
entryRuleSelectExpression
:
{ before(grammarAccess.getSelectExpressionRule()); }
	 ruleSelectExpression
{ after(grammarAccess.getSelectExpressionRule()); } 
	 EOF 
;

// Rule SelectExpression
ruleSelectExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getGroup()); }
		(rule__SelectExpression__Group__0)
		{ after(grammarAccess.getSelectExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectExpressionOnlyWithAttribute
entryRuleSelectExpressionOnlyWithAttribute
:
{ before(grammarAccess.getSelectExpressionOnlyWithAttributeRule()); }
	 ruleSelectExpressionOnlyWithAttribute
{ after(grammarAccess.getSelectExpressionOnlyWithAttributeRule()); } 
	 EOF 
;

// Rule SelectExpressionOnlyWithAttribute
ruleSelectExpressionOnlyWithAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectExpressionOnlyWithAttributeAccess().getExpressionsAssignment()); }
		(rule__SelectExpressionOnlyWithAttribute__ExpressionsAssignment)
		{ after(grammarAccess.getSelectExpressionOnlyWithAttributeAccess().getExpressionsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionComponent
entryRuleExpressionComponent
:
{ before(grammarAccess.getExpressionComponentRule()); }
	 ruleExpressionComponent
{ after(grammarAccess.getExpressionComponentRule()); } 
	 EOF 
;

// Rule ExpressionComponent
ruleExpressionComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionComponentAccess().getValueAssignment()); }
		(rule__ExpressionComponent__ValueAssignment)
		{ after(grammarAccess.getExpressionComponentAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionComponentAsAttribute
entryRuleExpressionComponentAsAttribute
:
{ before(grammarAccess.getExpressionComponentAsAttributeRule()); }
	 ruleExpressionComponentAsAttribute
{ after(grammarAccess.getExpressionComponentAsAttributeRule()); } 
	 EOF 
;

// Rule ExpressionComponentAsAttribute
ruleExpressionComponentAsAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionComponentAsAttributeAccess().getGroup()); }
		(rule__ExpressionComponentAsAttribute__Group__0)
		{ after(grammarAccess.getExpressionComponentAsAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlias
entryRuleAlias
:
{ before(grammarAccess.getAliasRule()); }
	 ruleAlias
{ after(grammarAccess.getAliasRule()); } 
	 EOF 
;

// Rule Alias
ruleAlias 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAliasAccess().getNameAssignment()); }
		(rule__Alias__NameAssignment)
		{ after(grammarAccess.getAliasAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAccessFramework
entryRuleAccessFramework
:
{ before(grammarAccess.getAccessFrameworkRule()); }
	 ruleAccessFramework
{ after(grammarAccess.getAccessFrameworkRule()); } 
	 EOF 
;

// Rule AccessFramework
ruleAccessFramework 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAccessFrameworkAccess().getGroup()); }
		(rule__AccessFramework__Group__0)
		{ after(grammarAccess.getAccessFrameworkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSchemaDefinition
entryRuleSchemaDefinition
:
{ before(grammarAccess.getSchemaDefinitionRule()); }
	 ruleSchemaDefinition
{ after(grammarAccess.getSchemaDefinitionRule()); } 
	 EOF 
;

// Rule SchemaDefinition
ruleSchemaDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSchemaDefinitionAccess().getGroup()); }
		(rule__SchemaDefinition__Group__0)
		{ after(grammarAccess.getSchemaDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreate
entryRuleCreate
:
{ before(grammarAccess.getCreateRule()); }
	 ruleCreate
{ after(grammarAccess.getCreateRule()); } 
	 EOF 
;

// Rule Create
ruleCreate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateAccess().getGroup()); }
		(rule__Create__Group__0)
		{ after(grammarAccess.getCreateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateAccessFramework
entryRuleCreateAccessFramework
:
{ before(grammarAccess.getCreateAccessFrameworkRule()); }
	 ruleCreateAccessFramework
{ after(grammarAccess.getCreateAccessFrameworkRule()); } 
	 EOF 
;

// Rule CreateAccessFramework
ruleCreateAccessFramework 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateAccessFrameworkAccess().getGroup()); }
		(rule__CreateAccessFramework__Group__0)
		{ after(grammarAccess.getCreateAccessFrameworkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateChannelFrameworkViaPort
entryRuleCreateChannelFrameworkViaPort
:
{ before(grammarAccess.getCreateChannelFrameworkViaPortRule()); }
	 ruleCreateChannelFrameworkViaPort
{ after(grammarAccess.getCreateChannelFrameworkViaPortRule()); } 
	 EOF 
;

// Rule CreateChannelFrameworkViaPort
ruleCreateChannelFrameworkViaPort 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateChannelFrameworkViaPortAccess().getGroup()); }
		(rule__CreateChannelFrameworkViaPort__Group__0)
		{ after(grammarAccess.getCreateChannelFrameworkViaPortAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateChannelFormatViaFile
entryRuleCreateChannelFormatViaFile
:
{ before(grammarAccess.getCreateChannelFormatViaFileRule()); }
	 ruleCreateChannelFormatViaFile
{ after(grammarAccess.getCreateChannelFormatViaFileRule()); } 
	 EOF 
;

// Rule CreateChannelFormatViaFile
ruleCreateChannelFormatViaFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateChannelFormatViaFileAccess().getGroup()); }
		(rule__CreateChannelFormatViaFile__Group__0)
		{ after(grammarAccess.getCreateChannelFormatViaFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateDatabaseStream
entryRuleCreateDatabaseStream
:
{ before(grammarAccess.getCreateDatabaseStreamRule()); }
	 ruleCreateDatabaseStream
{ after(grammarAccess.getCreateDatabaseStreamRule()); } 
	 EOF 
;

// Rule CreateDatabaseStream
ruleCreateDatabaseStream 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateDatabaseStreamAccess().getGroup()); }
		(rule__CreateDatabaseStream__Group__0)
		{ after(grammarAccess.getCreateDatabaseStreamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateDatabaseSink
entryRuleCreateDatabaseSink
:
{ before(grammarAccess.getCreateDatabaseSinkRule()); }
	 ruleCreateDatabaseSink
{ after(grammarAccess.getCreateDatabaseSinkRule()); } 
	 EOF 
;

// Rule CreateDatabaseSink
ruleCreateDatabaseSink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateDatabaseSinkAccess().getGroup()); }
		(rule__CreateDatabaseSink__Group__0)
		{ after(grammarAccess.getCreateDatabaseSinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateView
entryRuleCreateView
:
{ before(grammarAccess.getCreateViewRule()); }
	 ruleCreateView
{ after(grammarAccess.getCreateViewRule()); } 
	 EOF 
;

// Rule CreateView
ruleCreateView 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateViewAccess().getGroup()); }
		(rule__CreateView__Group__0)
		{ after(grammarAccess.getCreateViewAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateDataBaseJDBCConnection
entryRuleCreateDataBaseJDBCConnection
:
{ before(grammarAccess.getCreateDataBaseJDBCConnectionRule()); }
	 ruleCreateDataBaseJDBCConnection
{ after(grammarAccess.getCreateDataBaseJDBCConnectionRule()); } 
	 EOF 
;

// Rule CreateDataBaseJDBCConnection
ruleCreateDataBaseJDBCConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getGroup()); }
		(rule__CreateDataBaseJDBCConnection__Group__0)
		{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateDataBaseGenericConnection
entryRuleCreateDataBaseGenericConnection
:
{ before(grammarAccess.getCreateDataBaseGenericConnectionRule()); }
	 ruleCreateDataBaseGenericConnection
{ after(grammarAccess.getCreateDataBaseGenericConnectionRule()); } 
	 EOF 
;

// Rule CreateDataBaseGenericConnection
ruleCreateDataBaseGenericConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getGroup()); }
		(rule__CreateDataBaseGenericConnection__Group__0)
		{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDropDatabaseConnection
entryRuleDropDatabaseConnection
:
{ before(grammarAccess.getDropDatabaseConnectionRule()); }
	 ruleDropDatabaseConnection
{ after(grammarAccess.getDropDatabaseConnectionRule()); } 
	 EOF 
;

// Rule DropDatabaseConnection
ruleDropDatabaseConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDropDatabaseConnectionAccess().getGroup()); }
		(rule__DropDatabaseConnection__Group__0)
		{ after(grammarAccess.getDropDatabaseConnectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContextStoreType
entryRuleContextStoreType
:
{ before(grammarAccess.getContextStoreTypeRule()); }
	 ruleContextStoreType
{ after(grammarAccess.getContextStoreTypeRule()); } 
	 EOF 
;

// Rule ContextStoreType
ruleContextStoreType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContextStoreTypeAccess().getAlternatives()); }
		(rule__ContextStoreType__Alternatives)
		{ after(grammarAccess.getContextStoreTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateContextStore
entryRuleCreateContextStore
:
{ before(grammarAccess.getCreateContextStoreRule()); }
	 ruleCreateContextStore
{ after(grammarAccess.getCreateContextStoreRule()); } 
	 EOF 
;

// Rule CreateContextStore
ruleCreateContextStore 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateContextStoreAccess().getGroup()); }
		(rule__CreateContextStore__Group__0)
		{ after(grammarAccess.getCreateContextStoreAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDropContextStore
entryRuleDropContextStore
:
{ before(grammarAccess.getDropContextStoreRule()); }
	 ruleDropContextStore
{ after(grammarAccess.getDropContextStoreRule()); } 
	 EOF 
;

// Rule DropContextStore
ruleDropContextStore 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDropContextStoreAccess().getGroup()); }
		(rule__DropContextStore__Group__0)
		{ after(grammarAccess.getDropContextStoreAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStreamTo
entryRuleStreamTo
:
{ before(grammarAccess.getStreamToRule()); }
	 ruleStreamTo
{ after(grammarAccess.getStreamToRule()); } 
	 EOF 
;

// Rule StreamTo
ruleStreamTo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamToAccess().getGroup()); }
		(rule__StreamTo__Group__0)
		{ after(grammarAccess.getStreamToAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDropStream
entryRuleDropStream
:
{ before(grammarAccess.getDropStreamRule()); }
	 ruleDropStream
{ after(grammarAccess.getDropStreamRule()); } 
	 EOF 
;

// Rule DropStream
ruleDropStream 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDropStreamAccess().getGroup()); }
		(rule__DropStream__Group__0)
		{ after(grammarAccess.getDropStreamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUserManagement
entryRuleUserManagement
:
{ before(grammarAccess.getUserManagementRule()); }
	 ruleUserManagement
{ after(grammarAccess.getUserManagementRule()); } 
	 EOF 
;

// Rule UserManagement
ruleUserManagement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUserManagementAccess().getGroup()); }
		(rule__UserManagement__Group__0)
		{ after(grammarAccess.getUserManagementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightsManagement
entryRuleRightsManagement
:
{ before(grammarAccess.getRightsManagementRule()); }
	 ruleRightsManagement
{ after(grammarAccess.getRightsManagementRule()); } 
	 EOF 
;

// Rule RightsManagement
ruleRightsManagement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightsManagementAccess().getAlternatives()); }
		(rule__RightsManagement__Alternatives)
		{ after(grammarAccess.getRightsManagementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoleManagement
entryRuleRoleManagement
:
{ before(grammarAccess.getRoleManagementRule()); }
	 ruleRoleManagement
{ after(grammarAccess.getRoleManagementRule()); } 
	 EOF 
;

// Rule RoleManagement
ruleRoleManagement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoleManagementAccess().getAlternatives()); }
		(rule__RoleManagement__Alternatives)
		{ after(grammarAccess.getRoleManagementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWindowOperator
entryRuleWindowOperator
:
{ before(grammarAccess.getWindowOperatorRule()); }
	 ruleWindowOperator
{ after(grammarAccess.getWindowOperatorRule()); } 
	 EOF 
;

// Rule WindowOperator
ruleWindowOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWindowOperatorAccess().getGroup()); }
		(rule__WindowOperator__Group__0)
		{ after(grammarAccess.getWindowOperatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnboundedWindow
entryRuleUnboundedWindow
:
{ before(grammarAccess.getUnboundedWindowRule()); }
	 ruleUnboundedWindow
{ after(grammarAccess.getUnboundedWindowRule()); } 
	 EOF 
;

// Rule UnboundedWindow
ruleUnboundedWindow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnboundedWindowAccess().getGroup()); }
		(rule__UnboundedWindow__Group__0)
		{ after(grammarAccess.getUnboundedWindowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimebasedWindow
entryRuleTimebasedWindow
:
{ before(grammarAccess.getTimebasedWindowRule()); }
	 ruleTimebasedWindow
{ after(grammarAccess.getTimebasedWindowRule()); } 
	 EOF 
;

// Rule TimebasedWindow
ruleTimebasedWindow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimebasedWindowAccess().getGroup()); }
		(rule__TimebasedWindow__Group__0)
		{ after(grammarAccess.getTimebasedWindowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTuplebasedWindow
entryRuleTuplebasedWindow
:
{ before(grammarAccess.getTuplebasedWindowRule()); }
	 ruleTuplebasedWindow
{ after(grammarAccess.getTuplebasedWindowRule()); } 
	 EOF 
;

// Rule TuplebasedWindow
ruleTuplebasedWindow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTuplebasedWindowAccess().getGroup()); }
		(rule__TuplebasedWindow__Group__0)
		{ after(grammarAccess.getTuplebasedWindowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionsModel
entryRuleExpressionsModel
:
{ before(grammarAccess.getExpressionsModelRule()); }
	 ruleExpressionsModel
{ after(grammarAccess.getExpressionsModelRule()); } 
	 EOF 
;

// Rule ExpressionsModel
ruleExpressionsModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionsModelAccess().getGroup()); }
		(rule__ExpressionsModel__Group__0)
		{ after(grammarAccess.getExpressionsModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getOrPredicateParserRuleCall()); }
		ruleOrPredicate
		{ after(grammarAccess.getExpressionAccess().getOrPredicateParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrPredicate
entryRuleOrPredicate
:
{ before(grammarAccess.getOrPredicateRule()); }
	 ruleOrPredicate
{ after(grammarAccess.getOrPredicateRule()); } 
	 EOF 
;

// Rule OrPredicate
ruleOrPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrPredicateAccess().getGroup()); }
		(rule__OrPredicate__Group__0)
		{ after(grammarAccess.getOrPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndPredicate
entryRuleAndPredicate
:
{ before(grammarAccess.getAndPredicateRule()); }
	 ruleAndPredicate
{ after(grammarAccess.getAndPredicateRule()); } 
	 EOF 
;

// Rule AndPredicate
ruleAndPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndPredicateAccess().getGroup()); }
		(rule__AndPredicate__Group__0)
		{ after(grammarAccess.getAndPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualitiy
entryRuleEqualitiy
:
{ before(grammarAccess.getEqualitiyRule()); }
	 ruleEqualitiy
{ after(grammarAccess.getEqualitiyRule()); } 
	 EOF 
;

// Rule Equalitiy
ruleEqualitiy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualitiyAccess().getGroup()); }
		(rule__Equalitiy__Group__0)
		{ after(grammarAccess.getEqualitiyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus
:
{ before(grammarAccess.getPlusOrMinusRule()); }
	 rulePlusOrMinus
{ after(grammarAccess.getPlusOrMinusRule()); } 
	 EOF 
;

// Rule PlusOrMinus
rulePlusOrMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup()); }
		(rule__PlusOrMinus__Group__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv
:
{ before(grammarAccess.getMulOrDivRule()); }
	 ruleMulOrDiv
{ after(grammarAccess.getMulOrDivRule()); } 
	 EOF 
;

// Rule MulOrDiv
ruleMulOrDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup()); }
		(rule__MulOrDiv__Group__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicWithoutAttributeRef
entryRuleAtomicWithoutAttributeRef
:
{ before(grammarAccess.getAtomicWithoutAttributeRefRule()); }
	 ruleAtomicWithoutAttributeRef
{ after(grammarAccess.getAtomicWithoutAttributeRefRule()); } 
	 EOF 
;

// Rule AtomicWithoutAttributeRef
ruleAtomicWithoutAttributeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getAlternatives()); }
		(rule__AtomicWithoutAttributeRef__Alternatives)
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ComponentsAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getComponentsStatementParserRuleCall_0_0_0()); }
		ruleStatement
		{ after(grammarAccess.getModelAccess().getComponentsStatementParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getComponentsCommandParserRuleCall_0_0_1()); }
		ruleCommand
		{ after(grammarAccess.getModelAccess().getComponentsCommandParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEANAccess().getFALSEKeyword_0()); }
		FALSE
		{ after(grammarAccess.getBOOLEANAccess().getFALSEKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLEANAccess().getTRUEKeyword_1()); }
		TRUE
		{ after(grammarAccess.getBOOLEANAccess().getTRUEKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeSelectParserRuleCall_0_0()); }
		ruleSelect
		{ after(grammarAccess.getStatementAccess().getTypeSelectParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeCreateParserRuleCall_0_1()); }
		ruleCreate
		{ after(grammarAccess.getStatementAccess().getTypeCreateParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeStreamToParserRuleCall_0_2()); }
		ruleStreamTo
		{ after(grammarAccess.getStatementAccess().getTypeStreamToParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__TypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getTypeDropStreamParserRuleCall_0_0()); }
		ruleDropStream
		{ after(grammarAccess.getCommandAccess().getTypeDropStreamParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getTypeUserManagementParserRuleCall_0_1()); }
		ruleUserManagement
		{ after(grammarAccess.getCommandAccess().getTypeUserManagementParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getTypeRightsManagementParserRuleCall_0_2()); }
		ruleRightsManagement
		{ after(grammarAccess.getCommandAccess().getTypeRightsManagementParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getTypeRoleManagementParserRuleCall_0_3()); }
		ruleRoleManagement
		{ after(grammarAccess.getCommandAccess().getTypeRoleManagementParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getTypeCreateDataBaseGenericConnectionParserRuleCall_0_4()); }
		ruleCreateDataBaseGenericConnection
		{ after(grammarAccess.getCommandAccess().getTypeCreateDataBaseGenericConnectionParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getTypeCreateDataBaseJDBCConnectionParserRuleCall_0_5()); }
		ruleCreateDataBaseJDBCConnection
		{ after(grammarAccess.getCommandAccess().getTypeCreateDataBaseJDBCConnectionParserRuleCall_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getTypeDropDatabaseConnectionParserRuleCall_0_6()); }
		ruleDropDatabaseConnection
		{ after(grammarAccess.getCommandAccess().getTypeDropDatabaseConnectionParserRuleCall_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getTypeCreateContextStoreParserRuleCall_0_7()); }
		ruleCreateContextStore
		{ after(grammarAccess.getCommandAccess().getTypeCreateContextStoreParserRuleCall_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getTypeDropContextStoreParserRuleCall_0_8()); }
		ruleDropContextStore
		{ after(grammarAccess.getCommandAccess().getTypeDropContextStoreParserRuleCall_0_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getAsteriskKeyword_3_0()); }
		Asterisk
		{ after(grammarAccess.getSelectAccess().getAsteriskKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectAccess().getGroup_3_1()); }
		(rule__Select__Group_3_1__0)
		{ after(grammarAccess.getSelectAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectArgument__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectArgumentAccess().getAttributeAssignment_0()); }
		(rule__SelectArgument__AttributeAssignment_0)
		{ after(grammarAccess.getSelectArgumentAccess().getAttributeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectArgumentAccess().getExpressionAssignment_1()); }
		(rule__SelectArgument__ExpressionAssignment_1)
		{ after(grammarAccess.getSelectArgumentAccess().getExpressionAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getSimpleSourceParserRuleCall_0()); }
		ruleSimpleSource
		{ after(grammarAccess.getSourceAccess().getSimpleSourceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSourceAccess().getNestedSourceParserRuleCall_1()); }
		ruleNestedSource
		{ after(grammarAccess.getSourceAccess().getNestedSourceParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedAttributename__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedAttributenameAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getQualifiedAttributenameAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getQualifiedAttributenameAccess().getGroup_1()); }
		(rule__QualifiedAttributename__Group_1__0)
		{ after(grammarAccess.getQualifiedAttributenameAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getQualifiedAttributenameAccess().getGroup_2()); }
		(rule__QualifiedAttributename__Group_2__0)
		{ after(grammarAccess.getQualifiedAttributenameAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EQUALITIY_OPERATOR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEQUALITIY_OPERATORAccess().getEqualsSignKeyword_0()); }
		EqualsSign
		{ after(grammarAccess.getEQUALITIY_OPERATORAccess().getEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEQUALITIY_OPERATORAccess().getExclamationMarkEqualsSignKeyword_1()); }
		ExclamationMarkEqualsSign
		{ after(grammarAccess.getEQUALITIY_OPERATORAccess().getExclamationMarkEqualsSignKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARE_OPERATOR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARE_OPERATORAccess().getGreaterThanSignEqualsSignKeyword_0()); }
		GreaterThanSignEqualsSign
		{ after(grammarAccess.getCOMPARE_OPERATORAccess().getGreaterThanSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARE_OPERATORAccess().getLessThanSignEqualsSignKeyword_1()); }
		LessThanSignEqualsSign
		{ after(grammarAccess.getCOMPARE_OPERATORAccess().getLessThanSignEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARE_OPERATORAccess().getLessThanSignKeyword_2()); }
		LessThanSign
		{ after(grammarAccess.getCOMPARE_OPERATORAccess().getLessThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARE_OPERATORAccess().getGreaterThanSignKeyword_3()); }
		GreaterThanSign
		{ after(grammarAccess.getCOMPARE_OPERATORAccess().getGreaterThanSignKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARITHMETIC_OPERATOR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARITHMETIC_OPERATORAccess().getADD_OPERATORParserRuleCall_0()); }
		ruleADD_OPERATOR
		{ after(grammarAccess.getARITHMETIC_OPERATORAccess().getADD_OPERATORParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getARITHMETIC_OPERATORAccess().getMINUS_OPERATORParserRuleCall_1()); }
		ruleMINUS_OPERATOR
		{ after(grammarAccess.getARITHMETIC_OPERATORAccess().getMINUS_OPERATORParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getARITHMETIC_OPERATORAccess().getMUL_OR_DIV_OPERATORParserRuleCall_2()); }
		ruleMUL_OR_DIV_OPERATOR
		{ after(grammarAccess.getARITHMETIC_OPERATORAccess().getMUL_OR_DIV_OPERATORParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getARITHMETIC_OPERATORAccess().getEXPONENT_OPERATORParserRuleCall_3()); }
		ruleEXPONENT_OPERATOR
		{ after(grammarAccess.getARITHMETIC_OPERATORAccess().getEXPONENT_OPERATORParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MUL_OR_DIV_OPERATOR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMUL_OR_DIV_OPERATORAccess().getAsteriskKeyword_0()); }
		Asterisk
		{ after(grammarAccess.getMUL_OR_DIV_OPERATORAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMUL_OR_DIV_OPERATORAccess().getSolidusKeyword_1()); }
		Solidus
		{ after(grammarAccess.getMUL_OR_DIV_OPERATORAccess().getSolidusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getGroup_0_0()); }
		(rule__SelectExpression__Group_0_0__0)
		{ after(grammarAccess.getSelectExpressionAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionAccess().getGroup_0_1()); }
		(rule__SelectExpression__Group_0_1__0)
		{ after(grammarAccess.getSelectExpressionAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExpressionsAlternatives_0_0_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentParserRuleCall_0_0_1_1_0_0()); }
		ruleExpressionComponent
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentParserRuleCall_0_0_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentAsAttributeParserRuleCall_0_0_1_1_0_1()); }
		ruleExpressionComponentAsAttribute
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentAsAttributeParserRuleCall_0_0_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExpressionsAlternatives_0_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentParserRuleCall_0_1_1_1_0_0()); }
		ruleExpressionComponent
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentParserRuleCall_0_1_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentAsAttributeParserRuleCall_0_1_1_1_0_1()); }
		ruleExpressionComponentAsAttribute
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentAsAttributeParserRuleCall_0_1_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ValueAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getValueSelectExpressionParserRuleCall_3_0_0()); }
		ruleSelectExpression
		{ after(grammarAccess.getFunctionAccess().getValueSelectExpressionParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getValueSelectExpressionOnlyWithAttributeParserRuleCall_3_0_1()); }
		ruleSelectExpressionOnlyWithAttribute
		{ after(grammarAccess.getFunctionAccess().getValueSelectExpressionOnlyWithAttributeParserRuleCall_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponent__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionComponentAccess().getValueFunctionParserRuleCall_0_0()); }
		ruleFunction
		{ after(grammarAccess.getExpressionComponentAccess().getValueFunctionParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionComponentAccess().getValueAtomicWithoutAttributeRefParserRuleCall_0_1()); }
		ruleAtomicWithoutAttributeRef
		{ after(grammarAccess.getExpressionComponentAccess().getValueAtomicWithoutAttributeRefParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateAccess().getCREATEKeyword_1_0()); }
		CREATE
		{ after(grammarAccess.getCreateAccess().getCREATEKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCreateAccess().getATTACHKeyword_1_1()); }
		ATTACH
		{ after(grammarAccess.getCreateAccess().getATTACHKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__TypeAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateAccess().getTypeSTREAMKeyword_2_0_0()); }
		STREAM
		{ after(grammarAccess.getCreateAccess().getTypeSTREAMKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCreateAccess().getTypeSINKKeyword_2_0_1()); }
		SINK
		{ after(grammarAccess.getCreateAccess().getTypeSINKKeyword_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCreateAccess().getTypeVIEWKeyword_2_0_2()); }
		VIEW
		{ after(grammarAccess.getCreateAccess().getTypeVIEWKeyword_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__CreateAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateAccess().getCreateCreateAccessFrameworkParserRuleCall_3_0_0()); }
		ruleCreateAccessFramework
		{ after(grammarAccess.getCreateAccess().getCreateCreateAccessFrameworkParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCreateAccess().getCreateCreateChannelFrameworkViaPortParserRuleCall_3_0_1()); }
		ruleCreateChannelFrameworkViaPort
		{ after(grammarAccess.getCreateAccess().getCreateCreateChannelFrameworkViaPortParserRuleCall_3_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCreateAccess().getCreateCreateChannelFormatViaFileParserRuleCall_3_0_2()); }
		ruleCreateChannelFormatViaFile
		{ after(grammarAccess.getCreateAccess().getCreateCreateChannelFormatViaFileParserRuleCall_3_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCreateAccess().getCreateCreateDatabaseStreamParserRuleCall_3_0_3()); }
		ruleCreateDatabaseStream
		{ after(grammarAccess.getCreateAccess().getCreateCreateDatabaseStreamParserRuleCall_3_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getCreateAccess().getCreateCreateDatabaseSinkParserRuleCall_3_0_4()); }
		ruleCreateDatabaseSink
		{ after(grammarAccess.getCreateAccess().getCreateCreateDatabaseSinkParserRuleCall_3_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getCreateAccess().getCreateCreateViewParserRuleCall_3_0_5()); }
		ruleCreateView
		{ after(grammarAccess.getCreateAccess().getCreateCreateViewParserRuleCall_3_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__OptionAlternatives_6_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDatabaseSinkAccess().getOptionDROPKeyword_6_1_0_0()); }
		DROP
		{ after(grammarAccess.getCreateDatabaseSinkAccess().getOptionDROPKeyword_6_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCreateDatabaseSinkAccess().getOptionTRUNCATEKeyword_6_1_0_1()); }
		TRUNCATE
		{ after(grammarAccess.getCreateDatabaseSinkAccess().getOptionTRUNCATEKeyword_6_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextStoreTypeAccess().getTypeAssignment_0()); }
		(rule__ContextStoreType__TypeAssignment_0)
		{ after(grammarAccess.getContextStoreTypeAccess().getTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getContextStoreTypeAccess().getGroup_1()); }
		(rule__ContextStoreType__Group_1__0)
		{ after(grammarAccess.getContextStoreTypeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamToAccess().getStatementAssignment_4_0()); }
		(rule__StreamTo__StatementAssignment_4_0)
		{ after(grammarAccess.getStreamToAccess().getStatementAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getStreamToAccess().getInputnameAssignment_4_1()); }
		(rule__StreamTo__InputnameAssignment_4_1)
		{ after(grammarAccess.getStreamToAccess().getInputnameAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__NameAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropStreamAccess().getNameSINKKeyword_2_0_0()); }
		SINK
		{ after(grammarAccess.getDropStreamAccess().getNameSINKKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDropStreamAccess().getNameSTREAMKeyword_2_0_1()); }
		STREAM
		{ after(grammarAccess.getDropStreamAccess().getNameSTREAMKeyword_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDropStreamAccess().getNameVIEWKeyword_2_0_2()); }
		VIEW
		{ after(grammarAccess.getDropStreamAccess().getNameVIEWKeyword_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserManagementAccess().getNameCREATEKeyword_1_0_0()); }
		CREATE
		{ after(grammarAccess.getUserManagementAccess().getNameCREATEKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUserManagementAccess().getNameALTERKeyword_1_0_1()); }
		ALTER
		{ after(grammarAccess.getUserManagementAccess().getNameALTERKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getUserManagementAccess().getNameDROPKeyword_1_0_2()); }
		DROP
		{ after(grammarAccess.getUserManagementAccess().getNameDROPKeyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__SubjectAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserManagementAccess().getSubjectUSERKeyword_2_0_0()); }
		USER
		{ after(grammarAccess.getUserManagementAccess().getSubjectUSERKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUserManagementAccess().getSubjectROLEKeyword_2_0_1()); }
		ROLE
		{ after(grammarAccess.getUserManagementAccess().getSubjectROLEKeyword_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getUserManagementAccess().getSubjectTENANTKeyword_2_0_2()); }
		TENANT
		{ after(grammarAccess.getUserManagementAccess().getSubjectTENANTKeyword_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsManagementAccess().getGroup_0()); }
		(rule__RightsManagement__Group_0__0)
		{ after(grammarAccess.getRightsManagementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRightsManagementAccess().getGroup_1()); }
		(rule__RightsManagement__Group_1__0)
		{ after(grammarAccess.getRightsManagementAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleManagementAccess().getGroup_0()); }
		(rule__RoleManagement__Group_0__0)
		{ after(grammarAccess.getRoleManagementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRoleManagementAccess().getGroup_1()); }
		(rule__RoleManagement__Group_1__0)
		{ after(grammarAccess.getRoleManagementAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindowOperatorAccess().getUnboundedWindowParserRuleCall_1_0()); }
		ruleUnboundedWindow
		{ after(grammarAccess.getWindowOperatorAccess().getUnboundedWindowParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getWindowOperatorAccess().getTimebasedWindowParserRuleCall_1_1()); }
		ruleTimebasedWindow
		{ after(grammarAccess.getWindowOperatorAccess().getTimebasedWindowParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getWindowOperatorAccess().getTuplebasedWindowParserRuleCall_1_2()); }
		ruleTuplebasedWindow
		{ after(grammarAccess.getWindowOperatorAccess().getTuplebasedWindowParserRuleCall_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
		(rule__PlusOrMinus__Group_1_0_0__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
		(rule__PlusOrMinus__Group_1_0_1__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_0()); }
		Solidus
		{ after(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_1()); }
		Asterisk
		{ after(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
		(rule__Atomic__Group_2__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
		(rule__Atomic__Group_3__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_4()); }
		(rule__Atomic__Group_4__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAssignment_4_1_0()); }
		(rule__Atomic__ValueAssignment_4_1_0)
		{ after(grammarAccess.getAtomicAccess().getValueAssignment_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getValueAssignment_4_1_1()); }
		(rule__Atomic__ValueAssignment_4_1_1)
		{ after(grammarAccess.getAtomicAccess().getValueAssignment_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_0()); }
		(rule__AtomicWithoutAttributeRef__Group_0__0)
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_1()); }
		(rule__AtomicWithoutAttributeRef__Group_1__0)
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_2()); }
		(rule__AtomicWithoutAttributeRef__Group_2__0)
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_3()); }
		(rule__AtomicWithoutAttributeRef__Group_3__0)
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getComponentsAssignment_0()); }
	(rule__Model__ComponentsAssignment_0)
	{ after(grammarAccess.getModelAccess().getComponentsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSemicolonKeyword_1()); }
	(Semicolon)?
	{ after(grammarAccess.getModelAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectAction_0()); }
	()
	{ after(grammarAccess.getSelectAccess().getSelectAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__1__Impl
	rule__Select__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSELECTKeyword_1()); }
	SELECT
	{ after(grammarAccess.getSelectAccess().getSELECTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__2__Impl
	rule__Select__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getDistinctAssignment_2()); }
	(rule__Select__DistinctAssignment_2)?
	{ after(grammarAccess.getSelectAccess().getDistinctAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__3__Impl
	rule__Select__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getAlternatives_3()); }
	(rule__Select__Alternatives_3)
	{ after(grammarAccess.getSelectAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__4__Impl
	rule__Select__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_4()); }
	(rule__Select__Group_4__0)
	{ after(grammarAccess.getSelectAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__5__Impl
	rule__Select__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_5()); }
	(rule__Select__Group_5__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__6__Impl
	rule__Select__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_6()); }
	(rule__Select__Group_6__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_7()); }
	(rule__Select__Group_7__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3_1__0__Impl
	rule__Select__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectAccess().getArgumentsAssignment_3_1_0()); }
		(rule__Select__ArgumentsAssignment_3_1_0)
		{ after(grammarAccess.getSelectAccess().getArgumentsAssignment_3_1_0()); }
	)
	(
		{ before(grammarAccess.getSelectAccess().getArgumentsAssignment_3_1_0()); }
		(rule__Select__ArgumentsAssignment_3_1_0)*
		{ after(grammarAccess.getSelectAccess().getArgumentsAssignment_3_1_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_3_1_1()); }
	(rule__Select__Group_3_1_1__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_3_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3_1_1__0__Impl
	rule__Select__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_3_1_1_0()); }
	Comma
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_3_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getArgumentsAssignment_3_1_1_1()); }
	(rule__Select__ArgumentsAssignment_3_1_1_1)
	{ after(grammarAccess.getSelectAccess().getArgumentsAssignment_3_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_4__0__Impl
	rule__Select__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getFROMKeyword_4_0()); }
	FROM
	{ after(grammarAccess.getSelectAccess().getFROMKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_4__1__Impl
	rule__Select__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectAccess().getSourcesAssignment_4_1()); }
		(rule__Select__SourcesAssignment_4_1)
		{ after(grammarAccess.getSelectAccess().getSourcesAssignment_4_1()); }
	)
	(
		{ before(grammarAccess.getSelectAccess().getSourcesAssignment_4_1()); }
		(rule__Select__SourcesAssignment_4_1)*
		{ after(grammarAccess.getSelectAccess().getSourcesAssignment_4_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_4_2()); }
	(rule__Select__Group_4_2__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_4_2__0__Impl
	rule__Select__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_4_2_0()); }
	Comma
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSourcesAssignment_4_2_1()); }
	(rule__Select__SourcesAssignment_4_2_1)
	{ after(grammarAccess.getSelectAccess().getSourcesAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5__0__Impl
	rule__Select__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getWHEREKeyword_5_0()); }
	WHERE
	{ after(grammarAccess.getSelectAccess().getWHEREKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getPredicatesAssignment_5_1()); }
	(rule__Select__PredicatesAssignment_5_1)
	{ after(grammarAccess.getSelectAccess().getPredicatesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6__0__Impl
	rule__Select__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGROUPKeyword_6_0()); }
	GROUP
	{ after(grammarAccess.getSelectAccess().getGROUPKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6__1__Impl
	rule__Select__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getBYKeyword_6_1()); }
	BY
	{ after(grammarAccess.getSelectAccess().getBYKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6__2__Impl
	rule__Select__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectAccess().getOrderAssignment_6_2()); }
		(rule__Select__OrderAssignment_6_2)
		{ after(grammarAccess.getSelectAccess().getOrderAssignment_6_2()); }
	)
	(
		{ before(grammarAccess.getSelectAccess().getOrderAssignment_6_2()); }
		(rule__Select__OrderAssignment_6_2)*
		{ after(grammarAccess.getSelectAccess().getOrderAssignment_6_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_6_3()); }
	(rule__Select__Group_6_3__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_6_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6_3__0__Impl
	rule__Select__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_6_3_0()); }
	Comma
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_6_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getOrderAssignment_6_3_1()); }
	(rule__Select__OrderAssignment_6_3_1)
	{ after(grammarAccess.getSelectAccess().getOrderAssignment_6_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_7__0__Impl
	rule__Select__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getHAVINGKeyword_7_0()); }
	HAVING
	{ after(grammarAccess.getSelectAccess().getHAVINGKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getHavingAssignment_7_1()); }
	(rule__Select__HavingAssignment_7_1)
	{ after(grammarAccess.getSelectAccess().getHavingAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InnerSelect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerSelect__Group__0__Impl
	rule__InnerSelect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerSelect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerSelectAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getInnerSelectAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerSelect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerSelect__Group__1__Impl
	rule__InnerSelect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerSelect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerSelectAccess().getSelectAssignment_1()); }
	(rule__InnerSelect__SelectAssignment_1)
	{ after(grammarAccess.getInnerSelectAccess().getSelectAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerSelect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerSelect__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerSelect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerSelectAccess().getRightParenthesisKeyword_2()); }
	RightParenthesis
	{ after(grammarAccess.getInnerSelectAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSource__Group__0__Impl
	rule__SimpleSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSourceAccess().getSimpleSourceAction_0()); }
	()
	{ after(grammarAccess.getSimpleSourceAccess().getSimpleSourceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSource__Group__1__Impl
	rule__SimpleSource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSourceAccess().getNameAssignment_1()); }
	(rule__SimpleSource__NameAssignment_1)
	{ after(grammarAccess.getSimpleSourceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSource__Group__2__Impl
	rule__SimpleSource__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSourceAccess().getWindowAssignment_2()); }
	(rule__SimpleSource__WindowAssignment_2)?
	{ after(grammarAccess.getSimpleSourceAccess().getWindowAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSource__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSource__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSource__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSourceAccess().getGroup_3()); }
	(rule__SimpleSource__Group_3__0)?
	{ after(grammarAccess.getSimpleSourceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSource__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSource__Group_3__0__Impl
	rule__SimpleSource__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSource__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSourceAccess().getASKeyword_3_0()); }
	AS
	{ after(grammarAccess.getSimpleSourceAccess().getASKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSource__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSource__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSource__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSourceAccess().getAliasAssignment_3_1()); }
	(rule__SimpleSource__AliasAssignment_3_1)
	{ after(grammarAccess.getSimpleSourceAccess().getAliasAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedSource__Group__0__Impl
	rule__NestedSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedSourceAccess().getNestedSourceAction_0()); }
	()
	{ after(grammarAccess.getNestedSourceAccess().getNestedSourceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedSource__Group__1__Impl
	rule__NestedSource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedSourceAccess().getStatementAssignment_1()); }
	(rule__NestedSource__StatementAssignment_1)
	{ after(grammarAccess.getNestedSourceAccess().getStatementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedSource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedSource__Group__2__Impl
	rule__NestedSource__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedSource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedSourceAccess().getASKeyword_2()); }
	AS
	{ after(grammarAccess.getNestedSourceAccess().getASKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedSource__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedSource__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedSource__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedSourceAccess().getAliasAssignment_3()); }
	(rule__NestedSource__AliasAssignment_3)
	{ after(grammarAccess.getNestedSourceAccess().getAliasAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
	(rule__Attribute__NameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getGroup_1()); }
	(rule__Attribute__Group_1__0)?
	{ after(grammarAccess.getAttributeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__0__Impl
	rule__Attribute__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getASKeyword_1_0()); }
	AS
	{ after(grammarAccess.getAttributeAccess().getASKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAliasAssignment_1_1()); }
	(rule__Attribute__AliasAssignment_1_1)
	{ after(grammarAccess.getAttributeAccess().getAliasAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedAttributename__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedAttributename__Group_1__0__Impl
	rule__QualifiedAttributename__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedAttributename__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedAttributenameAccess().getQualifiedSourcenameParserRuleCall_1_0()); }
	ruleQualifiedSourcename
	{ after(grammarAccess.getQualifiedAttributenameAccess().getQualifiedSourcenameParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedAttributename__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedAttributename__Group_1__1__Impl
	rule__QualifiedAttributename__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedAttributename__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedAttributenameAccess().getFullStopKeyword_1_1()); }
	FullStop
	{ after(grammarAccess.getQualifiedAttributenameAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedAttributename__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedAttributename__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedAttributename__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedAttributenameAccess().getIDTerminalRuleCall_1_2()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedAttributenameAccess().getIDTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedAttributename__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedAttributename__Group_2__0__Impl
	rule__QualifiedAttributename__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedAttributename__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedAttributenameAccess().getQualifiedSourcenameParserRuleCall_2_0()); }
	ruleQualifiedSourcename
	{ after(grammarAccess.getQualifiedAttributenameAccess().getQualifiedSourcenameParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedAttributename__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedAttributename__Group_2__1__Impl
	rule__QualifiedAttributename__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedAttributename__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedAttributenameAccess().getFullStopKeyword_2_1()); }
	FullStop
	{ after(grammarAccess.getQualifiedAttributenameAccess().getFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedAttributename__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedAttributename__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedAttributename__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedAttributenameAccess().getAsteriskKeyword_2_2()); }
	Asterisk
	{ after(grammarAccess.getQualifiedAttributenameAccess().getAsteriskKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeWithNestedStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeWithNestedStatement__Group__0__Impl
	rule__AttributeWithNestedStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeWithNestedStatementAccess().getValueAssignment_0()); }
	(rule__AttributeWithNestedStatement__ValueAssignment_0)
	{ after(grammarAccess.getAttributeWithNestedStatementAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeWithNestedStatement__Group__1__Impl
	rule__AttributeWithNestedStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeWithNestedStatementAccess().getINKeyword_1()); }
	IN
	{ after(grammarAccess.getAttributeWithNestedStatementAccess().getINKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeWithNestedStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeWithNestedStatementAccess().getNestedAssignment_2()); }
	(rule__AttributeWithNestedStatement__NestedAssignment_2)
	{ after(grammarAccess.getAttributeWithNestedStatementAccess().getNestedAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group__0__Impl
	rule__SelectExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getAlternatives_0()); }
	(rule__SelectExpression__Alternatives_0)
	{ after(grammarAccess.getSelectExpressionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getGroup_1()); }
	(rule__SelectExpression__Group_1__0)?
	{ after(grammarAccess.getSelectExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_0__0__Impl
	rule__SelectExpression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_0_0()); }
	(rule__SelectExpression__ExpressionsAssignment_0_0_0)
	{ after(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getGroup_0_0_1()); }
	(rule__SelectExpression__Group_0_0_1__0)*
	{ after(grammarAccess.getSelectExpressionAccess().getGroup_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_0_1__0__Impl
	rule__SelectExpression__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getOperatorsAssignment_0_0_1_0()); }
	(rule__SelectExpression__OperatorsAssignment_0_0_1_0)
	{ after(grammarAccess.getSelectExpressionAccess().getOperatorsAssignment_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_0_1_1()); }
	(rule__SelectExpression__ExpressionsAssignment_0_0_1_1)
	{ after(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_1__0__Impl
	rule__SelectExpression__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_1_0()); }
	(rule__SelectExpression__ExpressionsAssignment_0_1_0)
	{ after(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectExpressionAccess().getGroup_0_1_1()); }
		(rule__SelectExpression__Group_0_1_1__0)
		{ after(grammarAccess.getSelectExpressionAccess().getGroup_0_1_1()); }
	)
	(
		{ before(grammarAccess.getSelectExpressionAccess().getGroup_0_1_1()); }
		(rule__SelectExpression__Group_0_1_1__0)*
		{ after(grammarAccess.getSelectExpressionAccess().getGroup_0_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_1_1__0__Impl
	rule__SelectExpression__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getOperatorsAssignment_0_1_1_0()); }
	(rule__SelectExpression__OperatorsAssignment_0_1_1_0)
	{ after(grammarAccess.getSelectExpressionAccess().getOperatorsAssignment_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_1_1_1()); }
	(rule__SelectExpression__ExpressionsAssignment_0_1_1_1)
	{ after(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_1__0__Impl
	rule__SelectExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getASKeyword_1_0()); }
	AS
	{ after(grammarAccess.getSelectExpressionAccess().getASKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getAliasAssignment_1_1()); }
	(rule__SelectExpression__AliasAssignment_1_1)
	{ after(grammarAccess.getSelectExpressionAccess().getAliasAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
	()
	{ after(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getValueAssignment_3()); }
	(rule__Function__ValueAssignment_3)
	{ after(grammarAccess.getFunctionAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionComponentAsAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionComponentAsAttribute__Group__0__Impl
	rule__ExpressionComponentAsAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentAsAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionComponentAsAttributeAccess().getExpressionComponentAsAttributeAction_0()); }
	()
	{ after(grammarAccess.getExpressionComponentAsAttributeAccess().getExpressionComponentAsAttributeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentAsAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionComponentAsAttribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentAsAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionComponentAsAttributeAccess().getValueAssignment_1()); }
	(rule__ExpressionComponentAsAttribute__ValueAssignment_1)
	{ after(grammarAccess.getExpressionComponentAsAttributeAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AccessFramework__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group__0__Impl
	rule__AccessFramework__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getWRAPPERKeyword_0()); }
	WRAPPER
	{ after(grammarAccess.getAccessFrameworkAccess().getWRAPPERKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group__1__Impl
	rule__AccessFramework__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getWrapperAssignment_1()); }
	(rule__AccessFramework__WrapperAssignment_1)
	{ after(grammarAccess.getAccessFrameworkAccess().getWrapperAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group__2__Impl
	rule__AccessFramework__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getPROTOCOLKeyword_2()); }
	PROTOCOL
	{ after(grammarAccess.getAccessFrameworkAccess().getPROTOCOLKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group__3__Impl
	rule__AccessFramework__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getProtocolAssignment_3()); }
	(rule__AccessFramework__ProtocolAssignment_3)
	{ after(grammarAccess.getAccessFrameworkAccess().getProtocolAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group__4__Impl
	rule__AccessFramework__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getTRANSPORTKeyword_4()); }
	TRANSPORT
	{ after(grammarAccess.getAccessFrameworkAccess().getTRANSPORTKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group__5__Impl
	rule__AccessFramework__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getTransportAssignment_5()); }
	(rule__AccessFramework__TransportAssignment_5)
	{ after(grammarAccess.getAccessFrameworkAccess().getTransportAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group__6__Impl
	rule__AccessFramework__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getDATAHANDLERKeyword_6()); }
	DATAHANDLER
	{ after(grammarAccess.getAccessFrameworkAccess().getDATAHANDLERKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group__7__Impl
	rule__AccessFramework__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getDatahandlerAssignment_7()); }
	(rule__AccessFramework__DatahandlerAssignment_7)
	{ after(grammarAccess.getAccessFrameworkAccess().getDatahandlerAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group__8__Impl
	rule__AccessFramework__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getOPTIONSKeyword_8()); }
	OPTIONS
	{ after(grammarAccess.getAccessFrameworkAccess().getOPTIONSKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group__9__Impl
	rule__AccessFramework__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getLeftParenthesisKeyword_9()); }
	LeftParenthesis
	{ after(grammarAccess.getAccessFrameworkAccess().getLeftParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group__10__Impl
	rule__AccessFramework__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAccessFrameworkAccess().getGroup_10()); }
		(rule__AccessFramework__Group_10__0)
		{ after(grammarAccess.getAccessFrameworkAccess().getGroup_10()); }
	)
	(
		{ before(grammarAccess.getAccessFrameworkAccess().getGroup_10()); }
		(rule__AccessFramework__Group_10__0)*
		{ after(grammarAccess.getAccessFrameworkAccess().getGroup_10()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group__11__Impl
	rule__AccessFramework__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getGroup_11()); }
	(rule__AccessFramework__Group_11__0)?
	{ after(grammarAccess.getAccessFrameworkAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getRightParenthesisKeyword_12()); }
	RightParenthesis
	{ after(grammarAccess.getAccessFrameworkAccess().getRightParenthesisKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AccessFramework__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group_10__0__Impl
	rule__AccessFramework__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getKeysAssignment_10_0()); }
	(rule__AccessFramework__KeysAssignment_10_0)
	{ after(grammarAccess.getAccessFrameworkAccess().getKeysAssignment_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getValuesAssignment_10_1()); }
	(rule__AccessFramework__ValuesAssignment_10_1)
	{ after(grammarAccess.getAccessFrameworkAccess().getValuesAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AccessFramework__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group_11__0__Impl
	rule__AccessFramework__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getCommaKeyword_11_0()); }
	Comma
	{ after(grammarAccess.getAccessFrameworkAccess().getCommaKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group_11__1__Impl
	rule__AccessFramework__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getKeysAssignment_11_1()); }
	(rule__AccessFramework__KeysAssignment_11_1)
	{ after(grammarAccess.getAccessFrameworkAccess().getKeysAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group_11__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessFramework__Group_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__Group_11__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessFrameworkAccess().getValuesAssignment_11_2()); }
	(rule__AccessFramework__ValuesAssignment_11_2)
	{ after(grammarAccess.getAccessFrameworkAccess().getValuesAssignment_11_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SchemaDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SchemaDefinition__Group__0__Impl
	rule__SchemaDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaDefinitionAccess().getNameAssignment_0()); }
	(rule__SchemaDefinition__NameAssignment_0)
	{ after(grammarAccess.getSchemaDefinitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SchemaDefinition__Group__1__Impl
	rule__SchemaDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaDefinitionAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getSchemaDefinitionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SchemaDefinition__Group__2__Impl
	rule__SchemaDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaDefinitionAccess().getArgumentsAssignment_2()); }
	(rule__SchemaDefinition__ArgumentsAssignment_2)
	{ after(grammarAccess.getSchemaDefinitionAccess().getArgumentsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SchemaDefinition__Group__3__Impl
	rule__SchemaDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaDefinitionAccess().getArgumentsAssignment_3()); }
	(rule__SchemaDefinition__ArgumentsAssignment_3)
	{ after(grammarAccess.getSchemaDefinitionAccess().getArgumentsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SchemaDefinition__Group__4__Impl
	rule__SchemaDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaDefinitionAccess().getGroup_4()); }
	(rule__SchemaDefinition__Group_4__0)*
	{ after(grammarAccess.getSchemaDefinitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SchemaDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaDefinitionAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getSchemaDefinitionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SchemaDefinition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SchemaDefinition__Group_4__0__Impl
	rule__SchemaDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaDefinitionAccess().getCommaKeyword_4_0()); }
	Comma
	{ after(grammarAccess.getSchemaDefinitionAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SchemaDefinition__Group_4__1__Impl
	rule__SchemaDefinition__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaDefinitionAccess().getArgumentsAssignment_4_1()); }
	(rule__SchemaDefinition__ArgumentsAssignment_4_1)
	{ after(grammarAccess.getSchemaDefinitionAccess().getArgumentsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SchemaDefinition__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaDefinitionAccess().getArgumentsAssignment_4_2()); }
	(rule__SchemaDefinition__ArgumentsAssignment_4_2)
	{ after(grammarAccess.getSchemaDefinitionAccess().getArgumentsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Create__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__0__Impl
	rule__Create__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getCreateAction_0()); }
	()
	{ after(grammarAccess.getCreateAccess().getCreateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__1__Impl
	rule__Create__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getAlternatives_1()); }
	(rule__Create__Alternatives_1)
	{ after(grammarAccess.getCreateAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__2__Impl
	rule__Create__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getTypeAssignment_2()); }
	(rule__Create__TypeAssignment_2)
	{ after(grammarAccess.getCreateAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getCreateAssignment_3()); }
	(rule__Create__CreateAssignment_3)
	{ after(grammarAccess.getCreateAccess().getCreateAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateAccessFramework__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateAccessFramework__Group__0__Impl
	rule__CreateAccessFramework__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateAccessFramework__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccessFrameworkAccess().getAttributesAssignment_0()); }
	(rule__CreateAccessFramework__AttributesAssignment_0)
	{ after(grammarAccess.getCreateAccessFrameworkAccess().getAttributesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateAccessFramework__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateAccessFramework__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateAccessFramework__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccessFrameworkAccess().getParsAssignment_1()); }
	(rule__CreateAccessFramework__ParsAssignment_1)
	{ after(grammarAccess.getCreateAccessFrameworkAccess().getParsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateChannelFrameworkViaPort__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateChannelFrameworkViaPort__Group__0__Impl
	rule__CreateChannelFrameworkViaPort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFrameworkViaPort__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateChannelFrameworkViaPortAccess().getAttributesAssignment_0()); }
	(rule__CreateChannelFrameworkViaPort__AttributesAssignment_0)
	{ after(grammarAccess.getCreateChannelFrameworkViaPortAccess().getAttributesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFrameworkViaPort__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateChannelFrameworkViaPort__Group__1__Impl
	rule__CreateChannelFrameworkViaPort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFrameworkViaPort__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateChannelFrameworkViaPortAccess().getCHANNELKeyword_1()); }
	CHANNEL
	{ after(grammarAccess.getCreateChannelFrameworkViaPortAccess().getCHANNELKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFrameworkViaPort__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateChannelFrameworkViaPort__Group__2__Impl
	rule__CreateChannelFrameworkViaPort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFrameworkViaPort__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateChannelFrameworkViaPortAccess().getHostAssignment_2()); }
	(rule__CreateChannelFrameworkViaPort__HostAssignment_2)
	{ after(grammarAccess.getCreateChannelFrameworkViaPortAccess().getHostAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFrameworkViaPort__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateChannelFrameworkViaPort__Group__3__Impl
	rule__CreateChannelFrameworkViaPort__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFrameworkViaPort__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateChannelFrameworkViaPortAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getCreateChannelFrameworkViaPortAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFrameworkViaPort__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateChannelFrameworkViaPort__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFrameworkViaPort__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateChannelFrameworkViaPortAccess().getPortAssignment_4()); }
	(rule__CreateChannelFrameworkViaPort__PortAssignment_4)
	{ after(grammarAccess.getCreateChannelFrameworkViaPortAccess().getPortAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateChannelFormatViaFile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateChannelFormatViaFile__Group__0__Impl
	rule__CreateChannelFormatViaFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFormatViaFile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateChannelFormatViaFileAccess().getAttributesAssignment_0()); }
	(rule__CreateChannelFormatViaFile__AttributesAssignment_0)
	{ after(grammarAccess.getCreateChannelFormatViaFileAccess().getAttributesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFormatViaFile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateChannelFormatViaFile__Group__1__Impl
	rule__CreateChannelFormatViaFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFormatViaFile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateChannelFormatViaFileAccess().getFILEKeyword_1()); }
	FILE
	{ after(grammarAccess.getCreateChannelFormatViaFileAccess().getFILEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFormatViaFile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateChannelFormatViaFile__Group__2__Impl
	rule__CreateChannelFormatViaFile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFormatViaFile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateChannelFormatViaFileAccess().getFilenameAssignment_2()); }
	(rule__CreateChannelFormatViaFile__FilenameAssignment_2)
	{ after(grammarAccess.getCreateChannelFormatViaFileAccess().getFilenameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFormatViaFile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateChannelFormatViaFile__Group__3__Impl
	rule__CreateChannelFormatViaFile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFormatViaFile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateChannelFormatViaFileAccess().getASKeyword_3()); }
	AS
	{ after(grammarAccess.getCreateChannelFormatViaFileAccess().getASKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFormatViaFile__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateChannelFormatViaFile__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFormatViaFile__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateChannelFormatViaFileAccess().getTypeAssignment_4()); }
	(rule__CreateChannelFormatViaFile__TypeAssignment_4)
	{ after(grammarAccess.getCreateChannelFormatViaFileAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateDatabaseStream__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStream__Group__0__Impl
	rule__CreateDatabaseStream__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStreamAccess().getAttributesAssignment_0()); }
	(rule__CreateDatabaseStream__AttributesAssignment_0)
	{ after(grammarAccess.getCreateDatabaseStreamAccess().getAttributesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStream__Group__1__Impl
	rule__CreateDatabaseStream__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStreamAccess().getDATABASEKeyword_1()); }
	DATABASE
	{ after(grammarAccess.getCreateDatabaseStreamAccess().getDATABASEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStream__Group__2__Impl
	rule__CreateDatabaseStream__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStreamAccess().getDatabaseAssignment_2()); }
	(rule__CreateDatabaseStream__DatabaseAssignment_2)
	{ after(grammarAccess.getCreateDatabaseStreamAccess().getDatabaseAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStream__Group__3__Impl
	rule__CreateDatabaseStream__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStreamAccess().getTABLEKeyword_3()); }
	TABLE
	{ after(grammarAccess.getCreateDatabaseStreamAccess().getTABLEKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStream__Group__4__Impl
	rule__CreateDatabaseStream__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStreamAccess().getTableAssignment_4()); }
	(rule__CreateDatabaseStream__TableAssignment_4)
	{ after(grammarAccess.getCreateDatabaseStreamAccess().getTableAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStream__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStreamAccess().getGroup_5()); }
	(rule__CreateDatabaseStream__Group_5__0)?
	{ after(grammarAccess.getCreateDatabaseStreamAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateDatabaseStream__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStream__Group_5__0__Impl
	rule__CreateDatabaseStream__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStreamAccess().getEACHKeyword_5_0()); }
	EACH
	{ after(grammarAccess.getCreateDatabaseStreamAccess().getEACHKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStream__Group_5__1__Impl
	rule__CreateDatabaseStream__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStreamAccess().getSizeAssignment_5_1()); }
	(rule__CreateDatabaseStream__SizeAssignment_5_1)
	{ after(grammarAccess.getCreateDatabaseStreamAccess().getSizeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStream__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStreamAccess().getUnitAssignment_5_2()); }
	(rule__CreateDatabaseStream__UnitAssignment_5_2)
	{ after(grammarAccess.getCreateDatabaseStreamAccess().getUnitAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateDatabaseSink__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseSink__Group__0__Impl
	rule__CreateDatabaseSink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseSinkAccess().getNameAssignment_0()); }
	(rule__CreateDatabaseSink__NameAssignment_0)
	{ after(grammarAccess.getCreateDatabaseSinkAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseSink__Group__1__Impl
	rule__CreateDatabaseSink__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseSinkAccess().getASKeyword_1()); }
	AS
	{ after(grammarAccess.getCreateDatabaseSinkAccess().getASKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseSink__Group__2__Impl
	rule__CreateDatabaseSink__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseSinkAccess().getDATABASEKeyword_2()); }
	DATABASE
	{ after(grammarAccess.getCreateDatabaseSinkAccess().getDATABASEKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseSink__Group__3__Impl
	rule__CreateDatabaseSink__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseSinkAccess().getDatabaseAssignment_3()); }
	(rule__CreateDatabaseSink__DatabaseAssignment_3)
	{ after(grammarAccess.getCreateDatabaseSinkAccess().getDatabaseAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseSink__Group__4__Impl
	rule__CreateDatabaseSink__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseSinkAccess().getTABLEKeyword_4()); }
	TABLE
	{ after(grammarAccess.getCreateDatabaseSinkAccess().getTABLEKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseSink__Group__5__Impl
	rule__CreateDatabaseSink__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseSinkAccess().getTableAssignment_5()); }
	(rule__CreateDatabaseSink__TableAssignment_5)
	{ after(grammarAccess.getCreateDatabaseSinkAccess().getTableAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseSink__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseSinkAccess().getGroup_6()); }
	(rule__CreateDatabaseSink__Group_6__0)?
	{ after(grammarAccess.getCreateDatabaseSinkAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateDatabaseSink__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseSink__Group_6__0__Impl
	rule__CreateDatabaseSink__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseSinkAccess().getANDKeyword_6_0()); }
	AND
	{ after(grammarAccess.getCreateDatabaseSinkAccess().getANDKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseSink__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseSinkAccess().getOptionAssignment_6_1()); }
	(rule__CreateDatabaseSink__OptionAssignment_6_1)
	{ after(grammarAccess.getCreateDatabaseSinkAccess().getOptionAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateView__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateView__Group__0__Impl
	rule__CreateView__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateViewAccess().getNameAssignment_0()); }
	(rule__CreateView__NameAssignment_0)
	{ after(grammarAccess.getCreateViewAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateView__Group__1__Impl
	rule__CreateView__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateViewAccess().getFROMKeyword_1()); }
	FROM
	{ after(grammarAccess.getCreateViewAccess().getFROMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateView__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateViewAccess().getSelectAssignment_2()); }
	(rule__CreateView__SelectAssignment_2)
	{ after(grammarAccess.getCreateViewAccess().getSelectAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateDataBaseJDBCConnection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group__0__Impl
	rule__CreateDataBaseJDBCConnection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getCreateDataBaseConnectionJDBCAction_0()); }
	()
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getCreateDataBaseConnectionJDBCAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group__1__Impl
	rule__CreateDataBaseJDBCConnection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getCREATEKeyword_1()); }
	CREATE
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getCREATEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group__2__Impl
	rule__CreateDataBaseJDBCConnection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getDATABASEKeyword_2()); }
	DATABASE
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getDATABASEKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group__3__Impl
	rule__CreateDataBaseJDBCConnection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getCONNECTIONKeyword_3()); }
	CONNECTION
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getCONNECTIONKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group__4__Impl
	rule__CreateDataBaseJDBCConnection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getNameAssignment_4()); }
	(rule__CreateDataBaseJDBCConnection__NameAssignment_4)
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group__5__Impl
	rule__CreateDataBaseJDBCConnection__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getJDBCKeyword_5()); }
	JDBC
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getJDBCKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group__6__Impl
	rule__CreateDataBaseJDBCConnection__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getServerAssignment_6()); }
	(rule__CreateDataBaseJDBCConnection__ServerAssignment_6)
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getServerAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getGroup_7()); }
	(rule__CreateDataBaseJDBCConnection__Group_7__0)?
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateDataBaseJDBCConnection__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group_7__0__Impl
	rule__CreateDataBaseJDBCConnection__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getWITHKeyword_7_0()); }
	WITH
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getWITHKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group_7__1__Impl
	rule__CreateDataBaseJDBCConnection__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getUSERKeyword_7_1()); }
	USER
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getUSERKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group_7__2__Impl
	rule__CreateDataBaseJDBCConnection__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getUserAssignment_7_2()); }
	(rule__CreateDataBaseJDBCConnection__UserAssignment_7_2)
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getUserAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group_7__3__Impl
	rule__CreateDataBaseJDBCConnection__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getPASSWORDKeyword_7_3()); }
	PASSWORD
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getPASSWORDKeyword_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group_7__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group_7__4__Impl
	rule__CreateDataBaseJDBCConnection__Group_7__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group_7__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getPasswordAssignment_7_4()); }
	(rule__CreateDataBaseJDBCConnection__PasswordAssignment_7_4)
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getPasswordAssignment_7_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group_7__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseJDBCConnection__Group_7__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__Group_7__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getLazyAssignment_7_5()); }
	(rule__CreateDataBaseJDBCConnection__LazyAssignment_7_5)?
	{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getLazyAssignment_7_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateDataBaseGenericConnection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group__0__Impl
	rule__CreateDataBaseGenericConnection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getCreateDataBaseConnectionGenericAction_0()); }
	()
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getCreateDataBaseConnectionGenericAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group__1__Impl
	rule__CreateDataBaseGenericConnection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getCREATEKeyword_1()); }
	CREATE
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getCREATEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group__2__Impl
	rule__CreateDataBaseGenericConnection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getDATABASEKeyword_2()); }
	DATABASE
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getDATABASEKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group__3__Impl
	rule__CreateDataBaseGenericConnection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getCONNECTIONKeyword_3()); }
	CONNECTION
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getCONNECTIONKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group__4__Impl
	rule__CreateDataBaseGenericConnection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getNameAssignment_4()); }
	(rule__CreateDataBaseGenericConnection__NameAssignment_4)
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group__5__Impl
	rule__CreateDataBaseGenericConnection__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getASKeyword_5()); }
	AS
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getASKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group__6__Impl
	rule__CreateDataBaseGenericConnection__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getDriverAssignment_6()); }
	(rule__CreateDataBaseGenericConnection__DriverAssignment_6)
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getDriverAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group__7__Impl
	rule__CreateDataBaseGenericConnection__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getTOKeyword_7()); }
	TO
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getTOKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group__8__Impl
	rule__CreateDataBaseGenericConnection__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getSourceAssignment_8()); }
	(rule__CreateDataBaseGenericConnection__SourceAssignment_8)
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getSourceAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group__9__Impl
	rule__CreateDataBaseGenericConnection__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getGroup_9()); }
	(rule__CreateDataBaseGenericConnection__Group_9__0)?
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getGroup_10()); }
	(rule__CreateDataBaseGenericConnection__Group_10__0)?
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateDataBaseGenericConnection__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group_9__0__Impl
	rule__CreateDataBaseGenericConnection__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getATKeyword_9_0()); }
	AT
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getATKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group_9__1__Impl
	rule__CreateDataBaseGenericConnection__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getHostAssignment_9_1()); }
	(rule__CreateDataBaseGenericConnection__HostAssignment_9_1)
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getHostAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group_9__2__Impl
	rule__CreateDataBaseGenericConnection__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getColonKeyword_9_2()); }
	Colon
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getColonKeyword_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_9__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group_9__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_9__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getPortAssignment_9_3()); }
	(rule__CreateDataBaseGenericConnection__PortAssignment_9_3)
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getPortAssignment_9_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateDataBaseGenericConnection__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group_10__0__Impl
	rule__CreateDataBaseGenericConnection__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getWITHKeyword_10_0()); }
	WITH
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getWITHKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group_10__1__Impl
	rule__CreateDataBaseGenericConnection__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getUSERKeyword_10_1()); }
	USER
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getUSERKeyword_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_10__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group_10__2__Impl
	rule__CreateDataBaseGenericConnection__Group_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_10__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getUserAssignment_10_2()); }
	(rule__CreateDataBaseGenericConnection__UserAssignment_10_2)
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getUserAssignment_10_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_10__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group_10__3__Impl
	rule__CreateDataBaseGenericConnection__Group_10__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_10__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getPASSWORDKeyword_10_3()); }
	PASSWORD
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getPASSWORDKeyword_10_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_10__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group_10__4__Impl
	rule__CreateDataBaseGenericConnection__Group_10__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_10__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getPasswordAssignment_10_4()); }
	(rule__CreateDataBaseGenericConnection__PasswordAssignment_10_4)
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getPasswordAssignment_10_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_10__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDataBaseGenericConnection__Group_10__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__Group_10__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getLazyAssignment_10_5()); }
	(rule__CreateDataBaseGenericConnection__LazyAssignment_10_5)?
	{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getLazyAssignment_10_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DropDatabaseConnection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropDatabaseConnection__Group__0__Impl
	rule__DropDatabaseConnection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DropDatabaseConnection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropDatabaseConnectionAccess().getDropDatabaseConnectionAction_0()); }
	()
	{ after(grammarAccess.getDropDatabaseConnectionAccess().getDropDatabaseConnectionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropDatabaseConnection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropDatabaseConnection__Group__1__Impl
	rule__DropDatabaseConnection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DropDatabaseConnection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropDatabaseConnectionAccess().getDROPKeyword_1()); }
	DROP
	{ after(grammarAccess.getDropDatabaseConnectionAccess().getDROPKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropDatabaseConnection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropDatabaseConnection__Group__2__Impl
	rule__DropDatabaseConnection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DropDatabaseConnection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropDatabaseConnectionAccess().getDATABASEKeyword_2()); }
	DATABASE
	{ after(grammarAccess.getDropDatabaseConnectionAccess().getDATABASEKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropDatabaseConnection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropDatabaseConnection__Group__3__Impl
	rule__DropDatabaseConnection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DropDatabaseConnection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropDatabaseConnectionAccess().getCONNECTIONKeyword_3()); }
	CONNECTION
	{ after(grammarAccess.getDropDatabaseConnectionAccess().getCONNECTIONKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropDatabaseConnection__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropDatabaseConnection__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DropDatabaseConnection__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropDatabaseConnectionAccess().getNameAssignment_4()); }
	(rule__DropDatabaseConnection__NameAssignment_4)
	{ after(grammarAccess.getDropDatabaseConnectionAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContextStoreType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextStoreType__Group_1__0__Impl
	rule__ContextStoreType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextStoreTypeAccess().getTypeAssignment_1_0()); }
	(rule__ContextStoreType__TypeAssignment_1_0)
	{ after(grammarAccess.getContextStoreTypeAccess().getTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextStoreType__Group_1__1__Impl
	rule__ContextStoreType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextStoreTypeAccess().getSizeAssignment_1_1()); }
	(rule__ContextStoreType__SizeAssignment_1_1)
	{ after(grammarAccess.getContextStoreTypeAccess().getSizeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextStoreType__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextStoreTypeAccess().getGroup_1_2()); }
	(rule__ContextStoreType__Group_1_2__0)?
	{ after(grammarAccess.getContextStoreTypeAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContextStoreType__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextStoreType__Group_1_2__0__Impl
	rule__ContextStoreType__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextStoreTypeAccess().getPARTITIONKeyword_1_2_0()); }
	PARTITION
	{ after(grammarAccess.getContextStoreTypeAccess().getPARTITIONKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextStoreType__Group_1_2__1__Impl
	rule__ContextStoreType__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextStoreTypeAccess().getBYKeyword_1_2_1()); }
	BY
	{ after(grammarAccess.getContextStoreTypeAccess().getBYKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextStoreType__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextStoreTypeAccess().getPartitionAssignment_1_2_2()); }
	(rule__ContextStoreType__PartitionAssignment_1_2_2)
	{ after(grammarAccess.getContextStoreTypeAccess().getPartitionAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateContextStore__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateContextStore__Group__0__Impl
	rule__CreateContextStore__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateContextStoreAccess().getCreateContextStoreAction_0()); }
	()
	{ after(grammarAccess.getCreateContextStoreAccess().getCreateContextStoreAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateContextStore__Group__1__Impl
	rule__CreateContextStore__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateContextStoreAccess().getCREATEKeyword_1()); }
	CREATE
	{ after(grammarAccess.getCreateContextStoreAccess().getCREATEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateContextStore__Group__2__Impl
	rule__CreateContextStore__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateContextStoreAccess().getCONTEXTKeyword_2()); }
	CONTEXT
	{ after(grammarAccess.getCreateContextStoreAccess().getCONTEXTKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateContextStore__Group__3__Impl
	rule__CreateContextStore__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateContextStoreAccess().getSTOREKeyword_3()); }
	STORE
	{ after(grammarAccess.getCreateContextStoreAccess().getSTOREKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateContextStore__Group__4__Impl
	rule__CreateContextStore__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateContextStoreAccess().getAttributesAssignment_4()); }
	(rule__CreateContextStore__AttributesAssignment_4)
	{ after(grammarAccess.getCreateContextStoreAccess().getAttributesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateContextStore__Group__5__Impl
	rule__CreateContextStore__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateContextStoreAccess().getASKeyword_5()); }
	AS
	{ after(grammarAccess.getCreateContextStoreAccess().getASKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateContextStore__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateContextStoreAccess().getContextTypeAssignment_6()); }
	(rule__CreateContextStore__ContextTypeAssignment_6)
	{ after(grammarAccess.getCreateContextStoreAccess().getContextTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DropContextStore__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropContextStore__Group__0__Impl
	rule__DropContextStore__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropContextStoreAccess().getDropContextStoreAction_0()); }
	()
	{ after(grammarAccess.getDropContextStoreAccess().getDropContextStoreAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropContextStore__Group__1__Impl
	rule__DropContextStore__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropContextStoreAccess().getDROPKeyword_1()); }
	DROP
	{ after(grammarAccess.getDropContextStoreAccess().getDROPKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropContextStore__Group__2__Impl
	rule__DropContextStore__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropContextStoreAccess().getCONTEXTKeyword_2()); }
	CONTEXT
	{ after(grammarAccess.getDropContextStoreAccess().getCONTEXTKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropContextStore__Group__3__Impl
	rule__DropContextStore__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropContextStoreAccess().getSTOREKeyword_3()); }
	STORE
	{ after(grammarAccess.getDropContextStoreAccess().getSTOREKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropContextStore__Group__4__Impl
	rule__DropContextStore__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropContextStoreAccess().getNameAssignment_4()); }
	(rule__DropContextStore__NameAssignment_4)
	{ after(grammarAccess.getDropContextStoreAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropContextStore__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropContextStoreAccess().getGroup_5()); }
	(rule__DropContextStore__Group_5__0)?
	{ after(grammarAccess.getDropContextStoreAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DropContextStore__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropContextStore__Group_5__0__Impl
	rule__DropContextStore__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropContextStoreAccess().getIFKeyword_5_0()); }
	IF
	{ after(grammarAccess.getDropContextStoreAccess().getIFKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropContextStore__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropContextStoreAccess().getExistsAssignment_5_1()); }
	(rule__DropContextStore__ExistsAssignment_5_1)
	{ after(grammarAccess.getDropContextStoreAccess().getExistsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamTo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamTo__Group__0__Impl
	rule__StreamTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamToAccess().getStreamToAction_0()); }
	()
	{ after(grammarAccess.getStreamToAccess().getStreamToAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamTo__Group__1__Impl
	rule__StreamTo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamToAccess().getSTREAMKeyword_1()); }
	STREAM
	{ after(grammarAccess.getStreamToAccess().getSTREAMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamTo__Group__2__Impl
	rule__StreamTo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamToAccess().getTOKeyword_2()); }
	TO
	{ after(grammarAccess.getStreamToAccess().getTOKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamTo__Group__3__Impl
	rule__StreamTo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamToAccess().getNameAssignment_3()); }
	(rule__StreamTo__NameAssignment_3)
	{ after(grammarAccess.getStreamToAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamTo__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamToAccess().getAlternatives_4()); }
	(rule__StreamTo__Alternatives_4)
	{ after(grammarAccess.getStreamToAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DropStream__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropStream__Group__0__Impl
	rule__DropStream__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropStreamAccess().getDropStreamAction_0()); }
	()
	{ after(grammarAccess.getDropStreamAccess().getDropStreamAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropStream__Group__1__Impl
	rule__DropStream__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropStreamAccess().getDROPKeyword_1()); }
	DROP
	{ after(grammarAccess.getDropStreamAccess().getDROPKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropStream__Group__2__Impl
	rule__DropStream__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropStreamAccess().getNameAssignment_2()); }
	(rule__DropStream__NameAssignment_2)
	{ after(grammarAccess.getDropStreamAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropStream__Group__3__Impl
	rule__DropStream__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropStreamAccess().getStreamAssignment_3()); }
	(rule__DropStream__StreamAssignment_3)
	{ after(grammarAccess.getDropStreamAccess().getStreamAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropStream__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropStreamAccess().getGroup_4()); }
	(rule__DropStream__Group_4__0)?
	{ after(grammarAccess.getDropStreamAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DropStream__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropStream__Group_4__0__Impl
	rule__DropStream__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropStreamAccess().getExistsAssignment_4_0()); }
	(rule__DropStream__ExistsAssignment_4_0)
	{ after(grammarAccess.getDropStreamAccess().getExistsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropStream__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropStreamAccess().getEXISTSKeyword_4_1()); }
	EXISTS
	{ after(grammarAccess.getDropStreamAccess().getEXISTSKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UserManagement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserManagement__Group__0__Impl
	rule__UserManagement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserManagementAccess().getUserManagementAction_0()); }
	()
	{ after(grammarAccess.getUserManagementAccess().getUserManagementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserManagement__Group__1__Impl
	rule__UserManagement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserManagementAccess().getNameAssignment_1()); }
	(rule__UserManagement__NameAssignment_1)
	{ after(grammarAccess.getUserManagementAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserManagement__Group__2__Impl
	rule__UserManagement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserManagementAccess().getSubjectAssignment_2()); }
	(rule__UserManagement__SubjectAssignment_2)
	{ after(grammarAccess.getUserManagementAccess().getSubjectAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserManagement__Group__3__Impl
	rule__UserManagement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserManagementAccess().getSubjectNameAssignment_3()); }
	(rule__UserManagement__SubjectNameAssignment_3)
	{ after(grammarAccess.getUserManagementAccess().getSubjectNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserManagement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserManagementAccess().getGroup_4()); }
	(rule__UserManagement__Group_4__0)?
	{ after(grammarAccess.getUserManagementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UserManagement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserManagement__Group_4__0__Impl
	rule__UserManagement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserManagementAccess().getIDENTIFIEDKeyword_4_0()); }
	IDENTIFIED
	{ after(grammarAccess.getUserManagementAccess().getIDENTIFIEDKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserManagement__Group_4__1__Impl
	rule__UserManagement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserManagementAccess().getBYKeyword_4_1()); }
	BY
	{ after(grammarAccess.getUserManagementAccess().getBYKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserManagement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserManagementAccess().getPasswordAssignment_4_2()); }
	(rule__UserManagement__PasswordAssignment_4_2)
	{ after(grammarAccess.getUserManagementAccess().getPasswordAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsManagement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0__0__Impl
	rule__RightsManagement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getRightsManagementAction_0_0()); }
	()
	{ after(grammarAccess.getRightsManagementAccess().getRightsManagementAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0__1__Impl
	rule__RightsManagement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getNameAssignment_0_1()); }
	(rule__RightsManagement__NameAssignment_0_1)
	{ after(grammarAccess.getRightsManagementAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0__2__Impl
	rule__RightsManagement__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getOperationsAssignment_0_2()); }
	(rule__RightsManagement__OperationsAssignment_0_2)
	{ after(grammarAccess.getRightsManagementAccess().getOperationsAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0__3__Impl
	rule__RightsManagement__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getGroup_0_3()); }
	(rule__RightsManagement__Group_0_3__0)*
	{ after(grammarAccess.getRightsManagementAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0__4__Impl
	rule__RightsManagement__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getGroup_0_4()); }
	(rule__RightsManagement__Group_0_4__0)?
	{ after(grammarAccess.getRightsManagementAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0__5__Impl
	rule__RightsManagement__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getTOKeyword_0_5()); }
	TO
	{ after(grammarAccess.getRightsManagementAccess().getTOKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getUserAssignment_0_6()); }
	(rule__RightsManagement__UserAssignment_0_6)
	{ after(grammarAccess.getRightsManagementAccess().getUserAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsManagement__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0_3__0__Impl
	rule__RightsManagement__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getCommaKeyword_0_3_0()); }
	Comma
	{ after(grammarAccess.getRightsManagementAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getOperationsAssignment_0_3_1()); }
	(rule__RightsManagement__OperationsAssignment_0_3_1)
	{ after(grammarAccess.getRightsManagementAccess().getOperationsAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsManagement__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0_4__0__Impl
	rule__RightsManagement__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getONKeyword_0_4_0()); }
	ON
	{ after(grammarAccess.getRightsManagementAccess().getONKeyword_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0_4__1__Impl
	rule__RightsManagement__Group_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getOperations2Assignment_0_4_1()); }
	(rule__RightsManagement__Operations2Assignment_0_4_1)
	{ after(grammarAccess.getRightsManagementAccess().getOperations2Assignment_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getGroup_0_4_2()); }
	(rule__RightsManagement__Group_0_4_2__0)*
	{ after(grammarAccess.getRightsManagementAccess().getGroup_0_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsManagement__Group_0_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0_4_2__0__Impl
	rule__RightsManagement__Group_0_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getCommaKeyword_0_4_2_0()); }
	Comma
	{ after(grammarAccess.getRightsManagementAccess().getCommaKeyword_0_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_0_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_0_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getOperations2Assignment_0_4_2_1()); }
	(rule__RightsManagement__Operations2Assignment_0_4_2_1)
	{ after(grammarAccess.getRightsManagementAccess().getOperations2Assignment_0_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsManagement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1__0__Impl
	rule__RightsManagement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getRightsManagementAction_1_0()); }
	()
	{ after(grammarAccess.getRightsManagementAccess().getRightsManagementAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1__1__Impl
	rule__RightsManagement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getNameAssignment_1_1()); }
	(rule__RightsManagement__NameAssignment_1_1)
	{ after(grammarAccess.getRightsManagementAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1__2__Impl
	rule__RightsManagement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getOperationsAssignment_1_2()); }
	(rule__RightsManagement__OperationsAssignment_1_2)
	{ after(grammarAccess.getRightsManagementAccess().getOperationsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1__3__Impl
	rule__RightsManagement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getGroup_1_3()); }
	(rule__RightsManagement__Group_1_3__0)*
	{ after(grammarAccess.getRightsManagementAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1__4__Impl
	rule__RightsManagement__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getGroup_1_4()); }
	(rule__RightsManagement__Group_1_4__0)?
	{ after(grammarAccess.getRightsManagementAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1__5__Impl
	rule__RightsManagement__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getFROMKeyword_1_5()); }
	FROM
	{ after(grammarAccess.getRightsManagementAccess().getFROMKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getUserAssignment_1_6()); }
	(rule__RightsManagement__UserAssignment_1_6)
	{ after(grammarAccess.getRightsManagementAccess().getUserAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsManagement__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1_3__0__Impl
	rule__RightsManagement__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getCommaKeyword_1_3_0()); }
	Comma
	{ after(grammarAccess.getRightsManagementAccess().getCommaKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getOperationsAssignment_1_3_1()); }
	(rule__RightsManagement__OperationsAssignment_1_3_1)
	{ after(grammarAccess.getRightsManagementAccess().getOperationsAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsManagement__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1_4__0__Impl
	rule__RightsManagement__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getONKeyword_1_4_0()); }
	ON
	{ after(grammarAccess.getRightsManagementAccess().getONKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1_4__1__Impl
	rule__RightsManagement__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getOperations2Assignment_1_4_1()); }
	(rule__RightsManagement__Operations2Assignment_1_4_1)
	{ after(grammarAccess.getRightsManagementAccess().getOperations2Assignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getGroup_1_4_2()); }
	(rule__RightsManagement__Group_1_4_2__0)*
	{ after(grammarAccess.getRightsManagementAccess().getGroup_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsManagement__Group_1_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1_4_2__0__Impl
	rule__RightsManagement__Group_1_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getCommaKeyword_1_4_2_0()); }
	Comma
	{ after(grammarAccess.getRightsManagementAccess().getCommaKeyword_1_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsManagement__Group_1_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Group_1_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsManagementAccess().getOperations2Assignment_1_4_2_1()); }
	(rule__RightsManagement__Operations2Assignment_1_4_2_1)
	{ after(grammarAccess.getRightsManagementAccess().getOperations2Assignment_1_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoleManagement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_0__0__Impl
	rule__RoleManagement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getRoleManagementAction_0_0()); }
	()
	{ after(grammarAccess.getRoleManagementAccess().getRoleManagementAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_0__1__Impl
	rule__RoleManagement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getNameAssignment_0_1()); }
	(rule__RoleManagement__NameAssignment_0_1)
	{ after(grammarAccess.getRoleManagementAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_0__2__Impl
	rule__RoleManagement__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getROLEKeyword_0_2()); }
	ROLE
	{ after(grammarAccess.getRoleManagementAccess().getROLEKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_0__3__Impl
	rule__RoleManagement__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getOperationsAssignment_0_3()); }
	(rule__RoleManagement__OperationsAssignment_0_3)
	{ after(grammarAccess.getRoleManagementAccess().getOperationsAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_0__4__Impl
	rule__RoleManagement__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getGroup_0_4()); }
	(rule__RoleManagement__Group_0_4__0)*
	{ after(grammarAccess.getRoleManagementAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_0__5__Impl
	rule__RoleManagement__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getTOKeyword_0_5()); }
	TO
	{ after(grammarAccess.getRoleManagementAccess().getTOKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getUserAssignment_0_6()); }
	(rule__RoleManagement__UserAssignment_0_6)
	{ after(grammarAccess.getRoleManagementAccess().getUserAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoleManagement__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_0_4__0__Impl
	rule__RoleManagement__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getCommaKeyword_0_4_0()); }
	Comma
	{ after(grammarAccess.getRoleManagementAccess().getCommaKeyword_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getOperationsAssignment_0_4_1()); }
	(rule__RoleManagement__OperationsAssignment_0_4_1)
	{ after(grammarAccess.getRoleManagementAccess().getOperationsAssignment_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoleManagement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_1__0__Impl
	rule__RoleManagement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getRoleManagementAction_1_0()); }
	()
	{ after(grammarAccess.getRoleManagementAccess().getRoleManagementAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_1__1__Impl
	rule__RoleManagement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getNameAssignment_1_1()); }
	(rule__RoleManagement__NameAssignment_1_1)
	{ after(grammarAccess.getRoleManagementAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_1__2__Impl
	rule__RoleManagement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getROLEKeyword_1_2()); }
	ROLE
	{ after(grammarAccess.getRoleManagementAccess().getROLEKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_1__3__Impl
	rule__RoleManagement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getOperationsAssignment_1_3()); }
	(rule__RoleManagement__OperationsAssignment_1_3)
	{ after(grammarAccess.getRoleManagementAccess().getOperationsAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_1__4__Impl
	rule__RoleManagement__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getGroup_1_4()); }
	(rule__RoleManagement__Group_1_4__0)*
	{ after(grammarAccess.getRoleManagementAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_1__5__Impl
	rule__RoleManagement__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getFROMKeyword_1_5()); }
	FROM
	{ after(grammarAccess.getRoleManagementAccess().getFROMKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getUserAssignment_1_6()); }
	(rule__RoleManagement__UserAssignment_1_6)
	{ after(grammarAccess.getRoleManagementAccess().getUserAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoleManagement__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_1_4__0__Impl
	rule__RoleManagement__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getCommaKeyword_1_4_0()); }
	Comma
	{ after(grammarAccess.getRoleManagementAccess().getCommaKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleManagement__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleManagementAccess().getOperationsAssignment_1_4_1()); }
	(rule__RoleManagement__OperationsAssignment_1_4_1)
	{ after(grammarAccess.getRoleManagementAccess().getOperationsAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WindowOperator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WindowOperator__Group__0__Impl
	rule__WindowOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowOperatorAccess().getLeftSquareBracketKeyword_0()); }
	LeftSquareBracket
	{ after(grammarAccess.getWindowOperatorAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WindowOperator__Group__1__Impl
	rule__WindowOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowOperatorAccess().getAlternatives_1()); }
	(rule__WindowOperator__Alternatives_1)
	{ after(grammarAccess.getWindowOperatorAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WindowOperator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WindowOperator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowOperatorAccess().getRightSquareBracketKeyword_2()); }
	RightSquareBracket
	{ after(grammarAccess.getWindowOperatorAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnboundedWindow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnboundedWindow__Group__0__Impl
	rule__UnboundedWindow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnboundedWindow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnboundedWindowAccess().getUndboundedWindowAction_0()); }
	()
	{ after(grammarAccess.getUnboundedWindowAccess().getUndboundedWindowAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnboundedWindow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnboundedWindow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnboundedWindow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnboundedWindowAccess().getUNBOUNDEDKeyword_1()); }
	UNBOUNDED
	{ after(grammarAccess.getUnboundedWindowAccess().getUNBOUNDEDKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimebasedWindow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimebasedWindow__Group__0__Impl
	rule__TimebasedWindow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimebasedWindowAccess().getTimebasedWindowAction_0()); }
	()
	{ after(grammarAccess.getTimebasedWindowAccess().getTimebasedWindowAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimebasedWindow__Group__1__Impl
	rule__TimebasedWindow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimebasedWindowAccess().getSIZEKeyword_1()); }
	SIZE
	{ after(grammarAccess.getTimebasedWindowAccess().getSIZEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimebasedWindow__Group__2__Impl
	rule__TimebasedWindow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimebasedWindowAccess().getSizeAssignment_2()); }
	(rule__TimebasedWindow__SizeAssignment_2)
	{ after(grammarAccess.getTimebasedWindowAccess().getSizeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimebasedWindow__Group__3__Impl
	rule__TimebasedWindow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimebasedWindowAccess().getUnitAssignment_3()); }
	(rule__TimebasedWindow__UnitAssignment_3)
	{ after(grammarAccess.getTimebasedWindowAccess().getUnitAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimebasedWindow__Group__4__Impl
	rule__TimebasedWindow__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimebasedWindowAccess().getGroup_4()); }
	(rule__TimebasedWindow__Group_4__0)?
	{ after(grammarAccess.getTimebasedWindowAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimebasedWindow__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimebasedWindowAccess().getTIMEKeyword_5()); }
	TIME
	{ after(grammarAccess.getTimebasedWindowAccess().getTIMEKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimebasedWindow__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimebasedWindow__Group_4__0__Impl
	rule__TimebasedWindow__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimebasedWindowAccess().getADVANCEKeyword_4_0()); }
	ADVANCE
	{ after(grammarAccess.getTimebasedWindowAccess().getADVANCEKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimebasedWindow__Group_4__1__Impl
	rule__TimebasedWindow__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimebasedWindowAccess().getAdvance_sizeAssignment_4_1()); }
	(rule__TimebasedWindow__Advance_sizeAssignment_4_1)
	{ after(grammarAccess.getTimebasedWindowAccess().getAdvance_sizeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimebasedWindow__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimebasedWindowAccess().getAdvance_unitAssignment_4_2()); }
	(rule__TimebasedWindow__Advance_unitAssignment_4_2)
	{ after(grammarAccess.getTimebasedWindowAccess().getAdvance_unitAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TuplebasedWindow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplebasedWindow__Group__0__Impl
	rule__TuplebasedWindow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplebasedWindowAccess().getTuplebasedWindowAction_0()); }
	()
	{ after(grammarAccess.getTuplebasedWindowAccess().getTuplebasedWindowAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplebasedWindow__Group__1__Impl
	rule__TuplebasedWindow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplebasedWindowAccess().getSIZEKeyword_1()); }
	SIZE
	{ after(grammarAccess.getTuplebasedWindowAccess().getSIZEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplebasedWindow__Group__2__Impl
	rule__TuplebasedWindow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplebasedWindowAccess().getSizeAssignment_2()); }
	(rule__TuplebasedWindow__SizeAssignment_2)
	{ after(grammarAccess.getTuplebasedWindowAccess().getSizeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplebasedWindow__Group__3__Impl
	rule__TuplebasedWindow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplebasedWindowAccess().getGroup_3()); }
	(rule__TuplebasedWindow__Group_3__0)?
	{ after(grammarAccess.getTuplebasedWindowAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplebasedWindow__Group__4__Impl
	rule__TuplebasedWindow__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplebasedWindowAccess().getTUPLEKeyword_4()); }
	TUPLE
	{ after(grammarAccess.getTuplebasedWindowAccess().getTUPLEKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplebasedWindow__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplebasedWindowAccess().getGroup_5()); }
	(rule__TuplebasedWindow__Group_5__0)?
	{ after(grammarAccess.getTuplebasedWindowAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TuplebasedWindow__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplebasedWindow__Group_3__0__Impl
	rule__TuplebasedWindow__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplebasedWindowAccess().getADVANCEKeyword_3_0()); }
	ADVANCE
	{ after(grammarAccess.getTuplebasedWindowAccess().getADVANCEKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplebasedWindow__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplebasedWindowAccess().getAdvance_sizeAssignment_3_1()); }
	(rule__TuplebasedWindow__Advance_sizeAssignment_3_1)
	{ after(grammarAccess.getTuplebasedWindowAccess().getAdvance_sizeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TuplebasedWindow__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplebasedWindow__Group_5__0__Impl
	rule__TuplebasedWindow__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplebasedWindowAccess().getPARTITIONKeyword_5_0()); }
	PARTITION
	{ after(grammarAccess.getTuplebasedWindowAccess().getPARTITIONKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplebasedWindow__Group_5__1__Impl
	rule__TuplebasedWindow__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplebasedWindowAccess().getBYKeyword_5_1()); }
	BY
	{ after(grammarAccess.getTuplebasedWindowAccess().getBYKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplebasedWindow__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplebasedWindowAccess().getPartition_attributeAssignment_5_2()); }
	(rule__TuplebasedWindow__Partition_attributeAssignment_5_2)
	{ after(grammarAccess.getTuplebasedWindowAccess().getPartition_attributeAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionsModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionsModel__Group__0__Impl
	rule__ExpressionsModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionsModelAccess().getExpressionsModelAction_0()); }
	()
	{ after(grammarAccess.getExpressionsModelAccess().getExpressionsModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionsModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionsModelAccess().getElementsAssignment_1()); }
	(rule__ExpressionsModel__ElementsAssignment_1)
	{ after(grammarAccess.getExpressionsModelAccess().getElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrPredicate__Group__0__Impl
	rule__OrPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrPredicateAccess().getAndPredicateParserRuleCall_0()); }
	ruleAndPredicate
	{ after(grammarAccess.getOrPredicateAccess().getAndPredicateParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrPredicate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrPredicateAccess().getGroup_1()); }
	(rule__OrPredicate__Group_1__0)*
	{ after(grammarAccess.getOrPredicateAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrPredicate__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrPredicate__Group_1__0__Impl
	rule__OrPredicate__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrPredicateAccess().getOrPredicateLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrPredicateAccess().getOrPredicateLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrPredicate__Group_1__1__Impl
	rule__OrPredicate__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrPredicateAccess().getOrOperatorParserRuleCall_1_1()); }
	ruleOrOperator
	{ after(grammarAccess.getOrPredicateAccess().getOrOperatorParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrPredicate__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrPredicateAccess().getRightAssignment_1_2()); }
	(rule__OrPredicate__RightAssignment_1_2)
	{ after(grammarAccess.getOrPredicateAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndPredicate__Group__0__Impl
	rule__AndPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndPredicateAccess().getEqualitiyParserRuleCall_0()); }
	ruleEqualitiy
	{ after(grammarAccess.getAndPredicateAccess().getEqualitiyParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndPredicate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndPredicateAccess().getGroup_1()); }
	(rule__AndPredicate__Group_1__0)*
	{ after(grammarAccess.getAndPredicateAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndPredicate__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndPredicate__Group_1__0__Impl
	rule__AndPredicate__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndPredicateAccess().getAndPredicateLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndPredicateAccess().getAndPredicateLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndPredicate__Group_1__1__Impl
	rule__AndPredicate__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndPredicateAccess().getAndOperatorParserRuleCall_1_1()); }
	ruleAndOperator
	{ after(grammarAccess.getAndPredicateAccess().getAndOperatorParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndPredicate__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndPredicateAccess().getRightAssignment_1_2()); }
	(rule__AndPredicate__RightAssignment_1_2)
	{ after(grammarAccess.getAndPredicateAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equalitiy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group__0__Impl
	rule__Equalitiy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualitiyAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getGroup_1()); }
	(rule__Equalitiy__Group_1__0)*
	{ after(grammarAccess.getEqualitiyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equalitiy__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group_1__0__Impl
	rule__Equalitiy__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getEqualityLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualitiyAccess().getEqualityLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group_1__1__Impl
	rule__Equalitiy__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getOpAssignment_1_1()); }
	(rule__Equalitiy__OpAssignment_1_1)
	{ after(grammarAccess.getEqualitiyAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getRightAssignment_1_2()); }
	(rule__Equalitiy__RightAssignment_1_2)
	{ after(grammarAccess.getEqualitiyAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
	rulePlusOrMinus
	{ after(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getComparisionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
	(rule__Comparison__OpAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
	(rule__Comparison__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__0__Impl
	rule__PlusOrMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
	ruleMulOrDiv
	{ after(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
	(rule__PlusOrMinus__Group_1__0)*
	{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__0__Impl
	rule__PlusOrMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
	(rule__PlusOrMinus__Alternatives_1_0)
	{ after(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
	(rule__PlusOrMinus__RightAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__0__Impl
	rule__PlusOrMinus__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
	PlusSign
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__0__Impl
	rule__PlusOrMinus__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
	HyphenMinus
	{ after(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__0__Impl
	rule__MulOrDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getGroup_1()); }
	(rule__MulOrDiv__Group_1__0)*
	{ after(grammarAccess.getMulOrDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__0__Impl
	rule__MulOrDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__1__Impl
	rule__MulOrDiv__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); }
	(rule__MulOrDiv__OpAssignment_1_1)
	{ after(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); }
	(rule__MulOrDiv__RightAssignment_1_2)
	{ after(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getBracketAction_0_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getBracketAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); }
	LeftParenthesis
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
	rule__Primary__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getInnerAssignment_0_2()); }
	(rule__Primary__InnerAssignment_0_2)
	{ after(grammarAccess.getPrimaryAccess().getInnerAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); }
	RightParenthesis
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNOTAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNOTAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNOTKeyword_1_1()); }
	NOT
	{ after(grammarAccess.getPrimaryAccess().getNOTKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
	(rule__Primary__ExpressionAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
	(rule__Atomic__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getFloatConstantAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getFloatConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
	(rule__Atomic__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getStringConstantAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getStringConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
	(rule__Atomic__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getBoolConstantAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getBoolConstantAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
	(rule__Atomic__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__0__Impl
	rule__Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getAttributeRefAction_4_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getAttributeRefAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getAlternatives_4_1()); }
	(rule__Atomic__Alternatives_4_1)
	{ after(grammarAccess.getAtomicAccess().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicWithoutAttributeRef__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_0__0__Impl
	rule__AtomicWithoutAttributeRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_0_1()); }
	(rule__AtomicWithoutAttributeRef__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicWithoutAttributeRef__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_1__0__Impl
	rule__AtomicWithoutAttributeRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getFloatConstantAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getFloatConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_1_1()); }
	(rule__AtomicWithoutAttributeRef__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicWithoutAttributeRef__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_2__0__Impl
	rule__AtomicWithoutAttributeRef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getStringConstantAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getStringConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_2_1()); }
	(rule__AtomicWithoutAttributeRef__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicWithoutAttributeRef__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_3__0__Impl
	rule__AtomicWithoutAttributeRef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getBoolConstantAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getBoolConstantAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_3_1()); }
	(rule__AtomicWithoutAttributeRef__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ComponentsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getComponentsAlternatives_0_0()); }
		(rule__Model__ComponentsAlternatives_0_0)
		{ after(grammarAccess.getModelAccess().getComponentsAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeAlternatives_0()); }
		(rule__Statement__TypeAlternatives_0)
		{ after(grammarAccess.getStatementAccess().getTypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getTypeAlternatives_0()); }
		(rule__Command__TypeAlternatives_0)
		{ after(grammarAccess.getCommandAccess().getTypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__DistinctAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_2_0()); }
		(
			{ before(grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_2_0()); }
			DISTINCT
			{ after(grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_2_0()); }
		)
		{ after(grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ArgumentsAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getArgumentsSelectArgumentParserRuleCall_3_1_0_0()); }
		ruleSelectArgument
		{ after(grammarAccess.getSelectAccess().getArgumentsSelectArgumentParserRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ArgumentsAssignment_3_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getArgumentsSelectArgumentParserRuleCall_3_1_1_1_0()); }
		ruleSelectArgument
		{ after(grammarAccess.getSelectAccess().getArgumentsSelectArgumentParserRuleCall_3_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__SourcesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_4_1_0()); }
		ruleSource
		{ after(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__SourcesAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_4_2_1_0()); }
		ruleSource
		{ after(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__PredicatesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getPredicatesExpressionsModelParserRuleCall_5_1_0()); }
		ruleExpressionsModel
		{ after(grammarAccess.getSelectAccess().getPredicatesExpressionsModelParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__OrderAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_6_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__OrderAssignment_6_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_6_3_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_6_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__HavingAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getHavingExpressionsModelParserRuleCall_7_1_0()); }
		ruleExpressionsModel
		{ after(grammarAccess.getSelectAccess().getHavingExpressionsModelParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerSelect__SelectAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInnerSelectAccess().getSelectSelectParserRuleCall_1_0()); }
		ruleSelect
		{ after(grammarAccess.getInnerSelectAccess().getSelectSelectParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerSelect2__SelectAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInnerSelect2Access().getSelectSelectParserRuleCall_0()); }
		ruleSelect
		{ after(grammarAccess.getInnerSelect2Access().getSelectSelectParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectArgument__AttributeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectArgumentAccess().getAttributeAttributeParserRuleCall_0_0()); }
		ruleAttribute
		{ after(grammarAccess.getSelectArgumentAccess().getAttributeAttributeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectArgument__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectArgumentAccess().getExpressionSelectExpressionParserRuleCall_1_0()); }
		ruleSelectExpression
		{ after(grammarAccess.getSelectArgumentAccess().getExpressionSelectExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSource__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSourceAccess().getNameQualifiedSourcenameParserRuleCall_1_0()); }
		ruleQualifiedSourcename
		{ after(grammarAccess.getSimpleSourceAccess().getNameQualifiedSourcenameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSource__WindowAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSourceAccess().getWindowWindowOperatorParserRuleCall_2_0()); }
		ruleWindowOperator
		{ after(grammarAccess.getSimpleSourceAccess().getWindowWindowOperatorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSource__AliasAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSourceAccess().getAliasAliasParserRuleCall_3_1_0()); }
		ruleAlias
		{ after(grammarAccess.getSimpleSourceAccess().getAliasAliasParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedSource__StatementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedSourceAccess().getStatementInnerSelectParserRuleCall_1_0()); }
		ruleInnerSelect
		{ after(grammarAccess.getNestedSourceAccess().getStatementInnerSelectParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedSource__AliasAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedSourceAccess().getAliasAliasParserRuleCall_3_0()); }
		ruleAlias
		{ after(grammarAccess.getNestedSourceAccess().getAliasAliasParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameQualifiedAttributenameParserRuleCall_0_0()); }
		ruleQualifiedAttributename
		{ after(grammarAccess.getAttributeAccess().getNameQualifiedAttributenameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AliasAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getAliasAliasParserRuleCall_1_1_0()); }
		ruleAlias
		{ after(grammarAccess.getAttributeAccess().getAliasAliasParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithoutAliasDefinition__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeWithoutAliasDefinitionAccess().getNameQualifiedAttributenameParserRuleCall_0()); }
		ruleQualifiedAttributename
		{ after(grammarAccess.getAttributeWithoutAliasDefinitionAccess().getNameQualifiedAttributenameParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeWithNestedStatementAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_0_0()); }
		ruleAttributeWithoutAliasDefinition
		{ after(grammarAccess.getAttributeWithNestedStatementAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__NestedAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeWithNestedStatementAccess().getNestedInnerSelectParserRuleCall_2_0()); }
		ruleInnerSelect
		{ after(grammarAccess.getAttributeWithNestedStatementAccess().getNestedInnerSelectParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExpressionsAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentParserRuleCall_0_0_0_0()); }
		ruleExpressionComponent
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__OperatorsAssignment_0_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getOperatorsARITHMETIC_OPERATORParserRuleCall_0_0_1_0_0()); }
		ruleARITHMETIC_OPERATOR
		{ after(grammarAccess.getSelectExpressionAccess().getOperatorsARITHMETIC_OPERATORParserRuleCall_0_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExpressionsAssignment_0_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsAlternatives_0_0_1_1_0()); }
		(rule__SelectExpression__ExpressionsAlternatives_0_0_1_1_0)
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsAlternatives_0_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExpressionsAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentAsAttributeParserRuleCall_0_1_0_0()); }
		ruleExpressionComponentAsAttribute
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentAsAttributeParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__OperatorsAssignment_0_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getOperatorsARITHMETIC_OPERATORParserRuleCall_0_1_1_0_0()); }
		ruleARITHMETIC_OPERATOR
		{ after(grammarAccess.getSelectExpressionAccess().getOperatorsARITHMETIC_OPERATORParserRuleCall_0_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExpressionsAssignment_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsAlternatives_0_1_1_1_0()); }
		(rule__SelectExpression__ExpressionsAlternatives_0_1_1_1_0)
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsAlternatives_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__AliasAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getAliasAliasParserRuleCall_1_1_0()); }
		ruleAlias
		{ after(grammarAccess.getSelectExpressionAccess().getAliasAliasParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionOnlyWithAttribute__ExpressionsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionOnlyWithAttributeAccess().getExpressionsExpressionComponentAsAttributeParserRuleCall_0()); }
		ruleExpressionComponentAsAttribute
		{ after(grammarAccess.getSelectExpressionOnlyWithAttributeAccess().getExpressionsExpressionComponentAsAttributeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getValueAlternatives_3_0()); }
		(rule__Function__ValueAlternatives_3_0)
		{ after(grammarAccess.getFunctionAccess().getValueAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponent__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionComponentAccess().getValueAlternatives_0()); }
		(rule__ExpressionComponent__ValueAlternatives_0)
		{ after(grammarAccess.getExpressionComponentAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentAsAttribute__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionComponentAsAttributeAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_1_0()); }
		ruleAttributeWithoutAliasDefinition
		{ after(grammarAccess.getExpressionComponentAsAttributeAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAliasAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getAliasAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__WrapperAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessFrameworkAccess().getWrapperSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAccessFrameworkAccess().getWrapperSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__ProtocolAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessFrameworkAccess().getProtocolSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getAccessFrameworkAccess().getProtocolSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__TransportAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessFrameworkAccess().getTransportSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getAccessFrameworkAccess().getTransportSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__DatahandlerAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessFrameworkAccess().getDatahandlerSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getAccessFrameworkAccess().getDatahandlerSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__KeysAssignment_10_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessFrameworkAccess().getKeysSTRINGTerminalRuleCall_10_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getAccessFrameworkAccess().getKeysSTRINGTerminalRuleCall_10_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__ValuesAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessFrameworkAccess().getValuesSTRINGTerminalRuleCall_10_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAccessFrameworkAccess().getValuesSTRINGTerminalRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__KeysAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessFrameworkAccess().getKeysSTRINGTerminalRuleCall_11_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAccessFrameworkAccess().getKeysSTRINGTerminalRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessFramework__ValuesAssignment_11_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessFrameworkAccess().getValuesSTRINGTerminalRuleCall_11_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getAccessFrameworkAccess().getValuesSTRINGTerminalRuleCall_11_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSchemaDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__ArgumentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaDefinitionAccess().getArgumentsIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSchemaDefinitionAccess().getArgumentsIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__ArgumentsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaDefinitionAccess().getArgumentsIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getSchemaDefinitionAccess().getArgumentsIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__ArgumentsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaDefinitionAccess().getArgumentsIDTerminalRuleCall_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSchemaDefinitionAccess().getArgumentsIDTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaDefinition__ArgumentsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaDefinitionAccess().getArgumentsIDTerminalRuleCall_4_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSchemaDefinitionAccess().getArgumentsIDTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateAccess().getTypeAlternatives_2_0()); }
		(rule__Create__TypeAlternatives_2_0)
		{ after(grammarAccess.getCreateAccess().getTypeAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__CreateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateAccess().getCreateAlternatives_3_0()); }
		(rule__Create__CreateAlternatives_3_0)
		{ after(grammarAccess.getCreateAccess().getCreateAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateAccessFramework__AttributesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateAccessFrameworkAccess().getAttributesSchemaDefinitionParserRuleCall_0_0()); }
		ruleSchemaDefinition
		{ after(grammarAccess.getCreateAccessFrameworkAccess().getAttributesSchemaDefinitionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateAccessFramework__ParsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateAccessFrameworkAccess().getParsAccessFrameworkParserRuleCall_1_0()); }
		ruleAccessFramework
		{ after(grammarAccess.getCreateAccessFrameworkAccess().getParsAccessFrameworkParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFrameworkViaPort__AttributesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateChannelFrameworkViaPortAccess().getAttributesSchemaDefinitionParserRuleCall_0_0()); }
		ruleSchemaDefinition
		{ after(grammarAccess.getCreateChannelFrameworkViaPortAccess().getAttributesSchemaDefinitionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFrameworkViaPort__HostAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateChannelFrameworkViaPortAccess().getHostIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateChannelFrameworkViaPortAccess().getHostIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFrameworkViaPort__PortAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateChannelFrameworkViaPortAccess().getPortINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getCreateChannelFrameworkViaPortAccess().getPortINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFormatViaFile__AttributesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateChannelFormatViaFileAccess().getAttributesSchemaDefinitionParserRuleCall_0_0()); }
		ruleSchemaDefinition
		{ after(grammarAccess.getCreateChannelFormatViaFileAccess().getAttributesSchemaDefinitionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFormatViaFile__FilenameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateChannelFormatViaFileAccess().getFilenameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateChannelFormatViaFileAccess().getFilenameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateChannelFormatViaFile__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateChannelFormatViaFileAccess().getTypeIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateChannelFormatViaFileAccess().getTypeIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__AttributesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDatabaseStreamAccess().getAttributesSchemaDefinitionParserRuleCall_0_0()); }
		ruleSchemaDefinition
		{ after(grammarAccess.getCreateDatabaseStreamAccess().getAttributesSchemaDefinitionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__DatabaseAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDatabaseStreamAccess().getDatabaseIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDatabaseStreamAccess().getDatabaseIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__TableAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDatabaseStreamAccess().getTableIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDatabaseStreamAccess().getTableIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__SizeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDatabaseStreamAccess().getSizeINTTerminalRuleCall_5_1_0()); }
		RULE_INT
		{ after(grammarAccess.getCreateDatabaseStreamAccess().getSizeINTTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStream__UnitAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDatabaseStreamAccess().getUnitIDTerminalRuleCall_5_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDatabaseStreamAccess().getUnitIDTerminalRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDatabaseSinkAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDatabaseSinkAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__DatabaseAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDatabaseSinkAccess().getDatabaseIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDatabaseSinkAccess().getDatabaseIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__TableAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDatabaseSinkAccess().getTableIDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDatabaseSinkAccess().getTableIDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseSink__OptionAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDatabaseSinkAccess().getOptionAlternatives_6_1_0()); }
		(rule__CreateDatabaseSink__OptionAlternatives_6_1_0)
		{ after(grammarAccess.getCreateDatabaseSinkAccess().getOptionAlternatives_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateViewAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateViewAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__SelectAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateViewAccess().getSelectInnerSelectParserRuleCall_2_0()); }
		ruleInnerSelect
		{ after(grammarAccess.getCreateViewAccess().getSelectInnerSelectParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__ServerAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getServerIDTerminalRuleCall_6_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getServerIDTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__UserAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getUserIDTerminalRuleCall_7_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getUserIDTerminalRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__PasswordAssignment_7_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getPasswordIDTerminalRuleCall_7_4_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getPasswordIDTerminalRuleCall_7_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseJDBCConnection__LazyAssignment_7_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getLazyNO_LAZY_CONNECTION_CHECKKeyword_7_5_0()); }
		(
			{ before(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getLazyNO_LAZY_CONNECTION_CHECKKeyword_7_5_0()); }
			NO_LAZY_CONNECTION_CHECK
			{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getLazyNO_LAZY_CONNECTION_CHECKKeyword_7_5_0()); }
		)
		{ after(grammarAccess.getCreateDataBaseJDBCConnectionAccess().getLazyNO_LAZY_CONNECTION_CHECKKeyword_7_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__DriverAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getDriverIDTerminalRuleCall_6_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getDriverIDTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__SourceAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getSourceIDTerminalRuleCall_8_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getSourceIDTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__HostAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getHostIDTerminalRuleCall_9_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getHostIDTerminalRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__PortAssignment_9_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getPortINTTerminalRuleCall_9_3_0()); }
		RULE_INT
		{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getPortINTTerminalRuleCall_9_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__UserAssignment_10_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getUserIDTerminalRuleCall_10_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getUserIDTerminalRuleCall_10_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__PasswordAssignment_10_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getPasswordIDTerminalRuleCall_10_4_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getPasswordIDTerminalRuleCall_10_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDataBaseGenericConnection__LazyAssignment_10_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getLazyNO_LAZY_CONNECTION_CHECKKeyword_10_5_0()); }
		(
			{ before(grammarAccess.getCreateDataBaseGenericConnectionAccess().getLazyNO_LAZY_CONNECTION_CHECKKeyword_10_5_0()); }
			NO_LAZY_CONNECTION_CHECK
			{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getLazyNO_LAZY_CONNECTION_CHECKKeyword_10_5_0()); }
		)
		{ after(grammarAccess.getCreateDataBaseGenericConnectionAccess().getLazyNO_LAZY_CONNECTION_CHECKKeyword_10_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropDatabaseConnection__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropDatabaseConnectionAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getDropDatabaseConnectionAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextStoreTypeAccess().getTypeSINGLEKeyword_0_0()); }
		(
			{ before(grammarAccess.getContextStoreTypeAccess().getTypeSINGLEKeyword_0_0()); }
			SINGLE
			{ after(grammarAccess.getContextStoreTypeAccess().getTypeSINGLEKeyword_0_0()); }
		)
		{ after(grammarAccess.getContextStoreTypeAccess().getTypeSINGLEKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextStoreTypeAccess().getTypeMULTIKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getContextStoreTypeAccess().getTypeMULTIKeyword_1_0_0()); }
			MULTI
			{ after(grammarAccess.getContextStoreTypeAccess().getTypeMULTIKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getContextStoreTypeAccess().getTypeMULTIKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__SizeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextStoreTypeAccess().getSizeINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getContextStoreTypeAccess().getSizeINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextStoreType__PartitionAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextStoreTypeAccess().getPartitionINTTerminalRuleCall_1_2_2_0()); }
		RULE_INT
		{ after(grammarAccess.getContextStoreTypeAccess().getPartitionINTTerminalRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__AttributesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateContextStoreAccess().getAttributesSchemaDefinitionParserRuleCall_4_0()); }
		ruleSchemaDefinition
		{ after(grammarAccess.getCreateContextStoreAccess().getAttributesSchemaDefinitionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateContextStore__ContextTypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateContextStoreAccess().getContextTypeContextStoreTypeParserRuleCall_6_0()); }
		ruleContextStoreType
		{ after(grammarAccess.getCreateContextStoreAccess().getContextTypeContextStoreTypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropContextStoreAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getDropContextStoreAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropContextStore__ExistsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropContextStoreAccess().getExistsEXISTSKeyword_5_1_0()); }
		(
			{ before(grammarAccess.getDropContextStoreAccess().getExistsEXISTSKeyword_5_1_0()); }
			EXISTS
			{ after(grammarAccess.getDropContextStoreAccess().getExistsEXISTSKeyword_5_1_0()); }
		)
		{ after(grammarAccess.getDropContextStoreAccess().getExistsEXISTSKeyword_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamToAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getStreamToAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__StatementAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamToAccess().getStatementInnerSelect2ParserRuleCall_4_0_0()); }
		ruleInnerSelect2
		{ after(grammarAccess.getStreamToAccess().getStatementInnerSelect2ParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__InputnameAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamToAccess().getInputnameIDTerminalRuleCall_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStreamToAccess().getInputnameIDTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropStreamAccess().getNameAlternatives_2_0()); }
		(rule__DropStream__NameAlternatives_2_0)
		{ after(grammarAccess.getDropStreamAccess().getNameAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__StreamAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropStreamAccess().getStreamIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getDropStreamAccess().getStreamIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropStream__ExistsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropStreamAccess().getExistsIFKeyword_4_0_0()); }
		(
			{ before(grammarAccess.getDropStreamAccess().getExistsIFKeyword_4_0_0()); }
			IF
			{ after(grammarAccess.getDropStreamAccess().getExistsIFKeyword_4_0_0()); }
		)
		{ after(grammarAccess.getDropStreamAccess().getExistsIFKeyword_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserManagementAccess().getNameAlternatives_1_0()); }
		(rule__UserManagement__NameAlternatives_1_0)
		{ after(grammarAccess.getUserManagementAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__SubjectAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserManagementAccess().getSubjectAlternatives_2_0()); }
		(rule__UserManagement__SubjectAlternatives_2_0)
		{ after(grammarAccess.getUserManagementAccess().getSubjectAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__SubjectNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserManagementAccess().getSubjectNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getUserManagementAccess().getSubjectNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserManagement__PasswordAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserManagementAccess().getPasswordSTRINGTerminalRuleCall_4_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getUserManagementAccess().getPasswordSTRINGTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsManagementAccess().getNameGRANTKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getRightsManagementAccess().getNameGRANTKeyword_0_1_0()); }
			GRANT
			{ after(grammarAccess.getRightsManagementAccess().getNameGRANTKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getRightsManagementAccess().getNameGRANTKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__OperationsAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsManagementAccess().getOperationsIDTerminalRuleCall_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsManagementAccess().getOperationsIDTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__OperationsAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsManagementAccess().getOperationsIDTerminalRuleCall_0_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsManagementAccess().getOperationsIDTerminalRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Operations2Assignment_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsManagementAccess().getOperations2IDTerminalRuleCall_0_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsManagementAccess().getOperations2IDTerminalRuleCall_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Operations2Assignment_0_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsManagementAccess().getOperations2IDTerminalRuleCall_0_4_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsManagementAccess().getOperations2IDTerminalRuleCall_0_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__UserAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsManagementAccess().getUserIDTerminalRuleCall_0_6_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsManagementAccess().getUserIDTerminalRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsManagementAccess().getNameREVOKEKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getRightsManagementAccess().getNameREVOKEKeyword_1_1_0()); }
			REVOKE
			{ after(grammarAccess.getRightsManagementAccess().getNameREVOKEKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getRightsManagementAccess().getNameREVOKEKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__OperationsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsManagementAccess().getOperationsIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsManagementAccess().getOperationsIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__OperationsAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsManagementAccess().getOperationsIDTerminalRuleCall_1_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsManagementAccess().getOperationsIDTerminalRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Operations2Assignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsManagementAccess().getOperations2IDTerminalRuleCall_1_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsManagementAccess().getOperations2IDTerminalRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__Operations2Assignment_1_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsManagementAccess().getOperations2IDTerminalRuleCall_1_4_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsManagementAccess().getOperations2IDTerminalRuleCall_1_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsManagement__UserAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsManagementAccess().getUserIDTerminalRuleCall_1_6_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsManagementAccess().getUserIDTerminalRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleManagementAccess().getNameGRANTKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getRoleManagementAccess().getNameGRANTKeyword_0_1_0()); }
			GRANT
			{ after(grammarAccess.getRoleManagementAccess().getNameGRANTKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getRoleManagementAccess().getNameGRANTKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__OperationsAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleManagementAccess().getOperationsIDTerminalRuleCall_0_3_0()); }
		RULE_ID
		{ after(grammarAccess.getRoleManagementAccess().getOperationsIDTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__OperationsAssignment_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleManagementAccess().getOperationsIDTerminalRuleCall_0_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRoleManagementAccess().getOperationsIDTerminalRuleCall_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__UserAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleManagementAccess().getUserIDTerminalRuleCall_0_6_0()); }
		RULE_ID
		{ after(grammarAccess.getRoleManagementAccess().getUserIDTerminalRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleManagementAccess().getNameREVOKEKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getRoleManagementAccess().getNameREVOKEKeyword_1_1_0()); }
			REVOKE
			{ after(grammarAccess.getRoleManagementAccess().getNameREVOKEKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getRoleManagementAccess().getNameREVOKEKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__OperationsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleManagementAccess().getOperationsIDTerminalRuleCall_1_3_0()); }
		RULE_ID
		{ after(grammarAccess.getRoleManagementAccess().getOperationsIDTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__OperationsAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleManagementAccess().getOperationsIDTerminalRuleCall_1_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRoleManagementAccess().getOperationsIDTerminalRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleManagement__UserAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleManagementAccess().getUserIDTerminalRuleCall_1_6_0()); }
		RULE_ID
		{ after(grammarAccess.getRoleManagementAccess().getUserIDTerminalRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__SizeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimebasedWindowAccess().getSizeINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getTimebasedWindowAccess().getSizeINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__UnitAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimebasedWindowAccess().getUnitIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getTimebasedWindowAccess().getUnitIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Advance_sizeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimebasedWindowAccess().getAdvance_sizeINTTerminalRuleCall_4_1_0()); }
		RULE_INT
		{ after(grammarAccess.getTimebasedWindowAccess().getAdvance_sizeINTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimebasedWindow__Advance_unitAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimebasedWindowAccess().getAdvance_unitIDTerminalRuleCall_4_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTimebasedWindowAccess().getAdvance_unitIDTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__SizeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTuplebasedWindowAccess().getSizeINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getTuplebasedWindowAccess().getSizeINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Advance_sizeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTuplebasedWindowAccess().getAdvance_sizeINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getTuplebasedWindowAccess().getAdvance_sizeINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplebasedWindow__Partition_attributeAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTuplebasedWindowAccess().getPartition_attributeAttributeParserRuleCall_5_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getTuplebasedWindowAccess().getPartition_attributeAttributeParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsModel__ElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionsModelAccess().getElementsExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionsModelAccess().getElementsExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrPredicateAccess().getRightAndPredicateParserRuleCall_1_2_0()); }
		ruleAndPredicate
		{ after(grammarAccess.getOrPredicateAccess().getRightAndPredicateParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndPredicateAccess().getRightEqualitiyParserRuleCall_1_2_0()); }
		ruleEqualitiy
		{ after(grammarAccess.getAndPredicateAccess().getRightEqualitiyParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualitiyAccess().getOpEQUALITIY_OPERATORParserRuleCall_1_1_0()); }
		ruleEQUALITIY_OPERATOR
		{ after(grammarAccess.getEqualitiyAccess().getOpEQUALITIY_OPERATORParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualitiyAccess().getRightComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualitiyAccess().getRightComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpCOMPARE_OPERATORParserRuleCall_1_1_0()); }
		ruleCOMPARE_OPERATOR
		{ after(grammarAccess.getComparisonAccess().getOpCOMPARE_OPERATORParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
		ruleMulOrDiv
		{ after(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); }
		(rule__MulOrDiv__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__InnerAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getInnerExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryAccess().getInnerExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getAtomicAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueBOOLEANParserRuleCall_3_1_0()); }
		ruleBOOLEAN
		{ after(grammarAccess.getAtomicAccess().getValueBOOLEANParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_4_1_0_0()); }
		ruleAttributeWithoutAliasDefinition
		{ after(grammarAccess.getAtomicAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAttributeWithNestedStatementParserRuleCall_4_1_1_0()); }
		ruleAttributeWithNestedStatement
		{ after(grammarAccess.getAtomicAccess().getValueAttributeWithNestedStatementParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueBOOLEANParserRuleCall_3_1_0()); }
		ruleBOOLEAN
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueBOOLEANParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
