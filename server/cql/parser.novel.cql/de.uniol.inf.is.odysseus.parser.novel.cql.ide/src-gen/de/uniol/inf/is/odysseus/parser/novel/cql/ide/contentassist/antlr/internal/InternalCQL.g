/*
 * generated by Xtext 2.10.0
 */
grammar InternalCQL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.uniol.inf.is.odysseus.parser.novel.cql.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.uniol.inf.is.odysseus.parser.novel.cql.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.uniol.inf.is.odysseus.parser.novel.cql.services.CQLGrammarAccess;

}
@parser::members {
	private CQLGrammarAccess grammarAccess;

	public void setGrammarAccess(CQLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getStatementsAssignment()); }
		(rule__Model__StatementsAssignment)*
		{ after(grammarAccess.getModelAccess().getStatementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelect
entryRuleSelect
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectAccess().getGroup()); }
		(rule__Select__Group__0)
		{ after(grammarAccess.getSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNestedStatement
entryRuleNestedStatement
:
{ before(grammarAccess.getNestedStatementRule()); }
	 ruleNestedStatement
{ after(grammarAccess.getNestedStatementRule()); } 
	 EOF 
;

// Rule NestedStatement
ruleNestedStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNestedStatementAccess().getGroup()); }
		(rule__NestedStatement__Group__0)
		{ after(grammarAccess.getNestedStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource
entryRuleSource
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceAccess().getAlternatives()); }
		(rule__Source__Alternatives)
		{ after(grammarAccess.getSourceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceName
entryRuleSourceName
:
{ before(grammarAccess.getSourceNameRule()); }
	 ruleSourceName
{ after(grammarAccess.getSourceNameRule()); } 
	 EOF 
;

// Rule SourceName
ruleSourceName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceNameAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getSourceNameAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeWithoutAlias
entryRuleAttributeWithoutAlias
:
{ before(grammarAccess.getAttributeWithoutAliasRule()); }
	 ruleAttributeWithoutAlias
{ after(grammarAccess.getAttributeWithoutAliasRule()); } 
	 EOF 
;

// Rule AttributeWithoutAlias
ruleAttributeWithoutAlias 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeWithoutAliasAccess().getNameAssignment()); }
		(rule__AttributeWithoutAlias__NameAssignment)
		{ after(grammarAccess.getAttributeWithoutAliasAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeName
entryRuleAttributeName
:
{ before(grammarAccess.getAttributeNameRule()); }
	 ruleAttributeName
{ after(grammarAccess.getAttributeNameRule()); } 
	 EOF 
;

// Rule AttributeName
ruleAttributeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeNameAccess().getAlternatives()); }
		(rule__AttributeName__Alternatives)
		{ after(grammarAccess.getAttributeNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeWithNestedStatement
entryRuleAttributeWithNestedStatement
:
{ before(grammarAccess.getAttributeWithNestedStatementRule()); }
	 ruleAttributeWithNestedStatement
{ after(grammarAccess.getAttributeWithNestedStatementRule()); } 
	 EOF 
;

// Rule AttributeWithNestedStatement
ruleAttributeWithNestedStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeWithNestedStatementAccess().getGroup()); }
		(rule__AttributeWithNestedStatement__Group__0)
		{ after(grammarAccess.getAttributeWithNestedStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAggregation
entryRuleAggregation
:
{ before(grammarAccess.getAggregationRule()); }
	 ruleAggregation
{ after(grammarAccess.getAggregationRule()); } 
	 EOF 
;

// Rule Aggregation
ruleAggregation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAggregationAccess().getGroup()); }
		(rule__Aggregation__Group__0)
		{ after(grammarAccess.getAggregationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlias
entryRuleAlias
:
{ before(grammarAccess.getAliasRule()); }
	 ruleAlias
{ after(grammarAccess.getAliasRule()); } 
	 EOF 
;

// Rule Alias
ruleAlias 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAliasAccess().getNameAssignment()); }
		(rule__Alias__NameAssignment)
		{ after(grammarAccess.getAliasAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateParameters
entryRuleCreateParameters
:
{ before(grammarAccess.getCreateParametersRule()); }
	 ruleCreateParameters
{ after(grammarAccess.getCreateParametersRule()); } 
	 EOF 
;

// Rule CreateParameters
ruleCreateParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateParametersAccess().getGroup()); }
		(rule__CreateParameters__Group__0)
		{ after(grammarAccess.getCreateParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition
:
{ before(grammarAccess.getAttributeDefinitionRule()); }
	 ruleAttributeDefinition
{ after(grammarAccess.getAttributeDefinitionRule()); } 
	 EOF 
;

// Rule AttributeDefinition
ruleAttributeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getGroup()); }
		(rule__AttributeDefinition__Group__0)
		{ after(grammarAccess.getAttributeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateStream1
entryRuleCreateStream1
:
{ before(grammarAccess.getCreateStream1Rule()); }
	 ruleCreateStream1
{ after(grammarAccess.getCreateStream1Rule()); } 
	 EOF 
;

// Rule CreateStream1
ruleCreateStream1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateStream1Access().getGroup()); }
		(rule__CreateStream1__Group__0)
		{ after(grammarAccess.getCreateStream1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateSink1
entryRuleCreateSink1
:
{ before(grammarAccess.getCreateSink1Rule()); }
	 ruleCreateSink1
{ after(grammarAccess.getCreateSink1Rule()); } 
	 EOF 
;

// Rule CreateSink1
ruleCreateSink1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateSink1Access().getGroup()); }
		(rule__CreateSink1__Group__0)
		{ after(grammarAccess.getCreateSink1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateStreamChannel
entryRuleCreateStreamChannel
:
{ before(grammarAccess.getCreateStreamChannelRule()); }
	 ruleCreateStreamChannel
{ after(grammarAccess.getCreateStreamChannelRule()); } 
	 EOF 
;

// Rule CreateStreamChannel
ruleCreateStreamChannel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateStreamChannelAccess().getGroup()); }
		(rule__CreateStreamChannel__Group__0)
		{ after(grammarAccess.getCreateStreamChannelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateStreamFile
entryRuleCreateStreamFile
:
{ before(grammarAccess.getCreateStreamFileRule()); }
	 ruleCreateStreamFile
{ after(grammarAccess.getCreateStreamFileRule()); } 
	 EOF 
;

// Rule CreateStreamFile
ruleCreateStreamFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateStreamFileAccess().getGroup()); }
		(rule__CreateStreamFile__Group__0)
		{ after(grammarAccess.getCreateStreamFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateView
entryRuleCreateView
:
{ before(grammarAccess.getCreateViewRule()); }
	 ruleCreateView
{ after(grammarAccess.getCreateViewRule()); } 
	 EOF 
;

// Rule CreateView
ruleCreateView 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateViewAccess().getGroup()); }
		(rule__CreateView__Group__0)
		{ after(grammarAccess.getCreateViewAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStreamTo
entryRuleStreamTo
:
{ before(grammarAccess.getStreamToRule()); }
	 ruleStreamTo
{ after(grammarAccess.getStreamToRule()); } 
	 EOF 
;

// Rule StreamTo
ruleStreamTo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamToAccess().getGroup()); }
		(rule__StreamTo__Group__0)
		{ after(grammarAccess.getStreamToAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDrop
entryRuleDrop
:
{ before(grammarAccess.getDropRule()); }
	 ruleDrop
{ after(grammarAccess.getDropRule()); } 
	 EOF 
;

// Rule Drop
ruleDrop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDropAccess().getGroup()); }
		(rule__Drop__Group__0)
		{ after(grammarAccess.getDropAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWindow_Unbounded
entryRuleWindow_Unbounded
:
{ before(grammarAccess.getWindow_UnboundedRule()); }
	 ruleWindow_Unbounded
{ after(grammarAccess.getWindow_UnboundedRule()); } 
	 EOF 
;

// Rule Window_Unbounded
ruleWindow_Unbounded 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWindow_UnboundedAccess().getUNBOUNDEDKeyword()); }
		'UNBOUNDED'
		{ after(grammarAccess.getWindow_UnboundedAccess().getUNBOUNDEDKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWindow_Timebased
entryRuleWindow_Timebased
:
{ before(grammarAccess.getWindow_TimebasedRule()); }
	 ruleWindow_Timebased
{ after(grammarAccess.getWindow_TimebasedRule()); } 
	 EOF 
;

// Rule Window_Timebased
ruleWindow_Timebased 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWindow_TimebasedAccess().getGroup()); }
		(rule__Window_Timebased__Group__0)
		{ after(grammarAccess.getWindow_TimebasedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWindow_Tuplebased
entryRuleWindow_Tuplebased
:
{ before(grammarAccess.getWindow_TuplebasedRule()); }
	 ruleWindow_Tuplebased
{ after(grammarAccess.getWindow_TuplebasedRule()); } 
	 EOF 
;

// Rule Window_Tuplebased
ruleWindow_Tuplebased 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWindow_TuplebasedAccess().getGroup()); }
		(rule__Window_Tuplebased__Group__0)
		{ after(grammarAccess.getWindow_TuplebasedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionsModel
entryRuleExpressionsModel
:
{ before(grammarAccess.getExpressionsModelRule()); }
	 ruleExpressionsModel
{ after(grammarAccess.getExpressionsModelRule()); } 
	 EOF 
;

// Rule ExpressionsModel
ruleExpressionsModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionsModelAccess().getGroup()); }
		(rule__ExpressionsModel__Group__0)
		{ after(grammarAccess.getExpressionsModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
		ruleOr
		{ after(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualitiy
entryRuleEqualitiy
:
{ before(grammarAccess.getEqualitiyRule()); }
	 ruleEqualitiy
{ after(grammarAccess.getEqualitiyRule()); } 
	 EOF 
;

// Rule Equalitiy
ruleEqualitiy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualitiyAccess().getGroup()); }
		(rule__Equalitiy__Group__0)
		{ after(grammarAccess.getEqualitiyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus
:
{ before(grammarAccess.getPlusOrMinusRule()); }
	 rulePlusOrMinus
{ after(grammarAccess.getPlusOrMinusRule()); } 
	 EOF 
;

// Rule PlusOrMinus
rulePlusOrMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup()); }
		(rule__PlusOrMinus__Group__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv
:
{ before(grammarAccess.getMulOrDivRule()); }
	 ruleMulOrDiv
{ after(grammarAccess.getMulOrDivRule()); } 
	 EOF 
;

// Rule MulOrDiv
ruleMulOrDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup()); }
		(rule__MulOrDiv__Group__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getValueAssignment()); }
		(rule__DataType__ValueAssignment)
		{ after(grammarAccess.getDataTypeAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_0_0()); }
		(rule__Statement__TypeAssignment_0_0)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_0_1()); }
		(rule__Statement__TypeAssignment_0_1)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_0_2()); }
		(rule__Statement__TypeAssignment_0_2)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_0_3()); }
		(rule__Statement__TypeAssignment_0_3)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_0_4()); }
		(rule__Statement__TypeAssignment_0_4)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_0_5()); }
		(rule__Statement__TypeAssignment_0_5)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_0_6()); }
		(rule__Statement__TypeAssignment_0_6)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_0_7()); }
		(rule__Statement__TypeAssignment_0_7)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_0_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getAsteriskKeyword_2_0()); }
		'*'
		{ after(grammarAccess.getSelectAccess().getAsteriskKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectAccess().getUnorderedGroup_2_1()); }
		(rule__Select__UnorderedGroup_2_1)
		{ after(grammarAccess.getSelectAccess().getUnorderedGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Alternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getAttributesAssignment_2_1_0_0()); }
		(rule__Select__AttributesAssignment_2_1_0_0)
		{ after(grammarAccess.getSelectAccess().getAttributesAssignment_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectAccess().getAggregationsAssignment_2_1_0_1()); }
		(rule__Select__AggregationsAssignment_2_1_0_1)
		{ after(grammarAccess.getSelectAccess().getAggregationsAssignment_2_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getGroup_0()); }
		(rule__Source__Group_0__0)
		{ after(grammarAccess.getSourceAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSourceAccess().getGroup_1()); }
		(rule__Source__Group_1__0)
		{ after(grammarAccess.getSourceAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Alternatives_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getUnboundedAssignment_0_1_1_0()); }
		(rule__Source__UnboundedAssignment_0_1_1_0)
		{ after(grammarAccess.getSourceAccess().getUnboundedAssignment_0_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSourceAccess().getTimeAssignment_0_1_1_1()); }
		(rule__Source__TimeAssignment_0_1_1_1)
		{ after(grammarAccess.getSourceAccess().getTimeAssignment_0_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getSourceAccess().getTupleAssignment_0_1_1_2()); }
		(rule__Source__TupleAssignment_0_1_1_2)
		{ after(grammarAccess.getSourceAccess().getTupleAssignment_0_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeNameAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeNameAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeNameAccess().getGroup_1()); }
		(rule__AttributeName__Group_1__0)
		{ after(grammarAccess.getAttributeNameAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamToAccess().getStatementAssignment_3_0()); }
		(rule__StreamTo__StatementAssignment_3_0)
		{ after(grammarAccess.getStreamToAccess().getStatementAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getStreamToAccess().getInputnameAssignment_3_1()); }
		(rule__StreamTo__InputnameAssignment_3_1)
		{ after(grammarAccess.getStreamToAccess().getInputnameAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Keyword2Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropAccess().getKeyword2SINKKeyword_1_0_0()); }
		'SINK'
		{ after(grammarAccess.getDropAccess().getKeyword2SINKKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDropAccess().getKeyword2STREAMKeyword_1_0_1()); }
		'STREAM'
		{ after(grammarAccess.getDropAccess().getKeyword2STREAMKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualitiyAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
		'=='
		{ after(grammarAccess.getEqualitiyAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualitiyAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		'!='
		{ after(grammarAccess.getEqualitiyAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
		'>='
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
		'<='
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_2()); }
		'<'
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_3()); }
		'>'
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
		(rule__PlusOrMinus__Group_1_0_0__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
		(rule__PlusOrMinus__Group_1_0_1__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
		(rule__Atomic__Group_2__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
		(rule__Atomic__Group_3__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_4()); }
		(rule__Atomic__Group_4__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAlternatives_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueTRUEKeyword_3_1_0_0()); }
		'TRUE'
		{ after(grammarAccess.getAtomicAccess().getValueTRUEKeyword_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getValueFALSEKeyword_3_1_0_1()); }
		'FALSE'
		{ after(grammarAccess.getAtomicAccess().getValueFALSEKeyword_3_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAssignment_4_1_0()); }
		(rule__Atomic__ValueAssignment_4_1_0)
		{ after(grammarAccess.getAtomicAccess().getValueAssignment_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getValueAssignment_4_1_1()); }
		(rule__Atomic__ValueAssignment_4_1_1)
		{ after(grammarAccess.getAtomicAccess().getValueAssignment_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getValueINTEGERKeyword_0_0()); }
		'INTEGER'
		{ after(grammarAccess.getDataTypeAccess().getValueINTEGERKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getValueDOUBLEKeyword_0_1()); }
		'DOUBLE'
		{ after(grammarAccess.getDataTypeAccess().getValueDOUBLEKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getValueFLOATKeyword_0_2()); }
		'FLOAT'
		{ after(grammarAccess.getDataTypeAccess().getValueFLOATKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getValueSTRINGKeyword_0_3()); }
		'STRING'
		{ after(grammarAccess.getDataTypeAccess().getValueSTRINGKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getValueBOOLEANKeyword_0_4()); }
		'BOOLEAN'
		{ after(grammarAccess.getDataTypeAccess().getValueBOOLEANKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getValueSTARTTIMESTAMPKeyword_0_5()); }
		'STARTTIMESTAMP'
		{ after(grammarAccess.getDataTypeAccess().getValueSTARTTIMESTAMPKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getValueENDTIMESTAMPKeyword_0_6()); }
		'ENDTIMESTAMP'
		{ after(grammarAccess.getDataTypeAccess().getValueENDTIMESTAMPKeyword_0_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getAlternatives_0()); }
	(rule__Statement__Alternatives_0)
	{ after(grammarAccess.getStatementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_1()); }
	(';')?
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getNameAssignment_0()); }
	(rule__Select__NameAssignment_0)
	{ after(grammarAccess.getSelectAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__1__Impl
	rule__Select__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getDistinctAssignment_1()); }
	(rule__Select__DistinctAssignment_1)?
	{ after(grammarAccess.getSelectAccess().getDistinctAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__2__Impl
	rule__Select__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getAlternatives_2()); }
	(rule__Select__Alternatives_2)
	{ after(grammarAccess.getSelectAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__3__Impl
	rule__Select__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_3()); }
	(rule__Select__Group_3__0)
	{ after(grammarAccess.getSelectAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__4__Impl
	rule__Select__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_4()); }
	(rule__Select__Group_4__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__5__Impl
	rule__Select__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_5()); }
	(rule__Select__Group_5__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_6()); }
	(rule__Select__Group_6__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_1_1__0__Impl
	rule__Select__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_2_1_1_0()); }
	','
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getAttributesAssignment_2_1_1_1()); }
	(rule__Select__AttributesAssignment_2_1_1_1)
	{ after(grammarAccess.getSelectAccess().getAttributesAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_2_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_1_2__0__Impl
	rule__Select__Group_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_2_1_2_0()); }
	','
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_2_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getAggregationsAssignment_2_1_2_1()); }
	(rule__Select__AggregationsAssignment_2_1_2_1)
	{ after(grammarAccess.getSelectAccess().getAggregationsAssignment_2_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3__0__Impl
	rule__Select__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getFROMKeyword_3_0()); }
	'FROM'
	{ after(grammarAccess.getSelectAccess().getFROMKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3__1__Impl
	rule__Select__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectAccess().getSourcesAssignment_3_1()); }
		(rule__Select__SourcesAssignment_3_1)
		{ after(grammarAccess.getSelectAccess().getSourcesAssignment_3_1()); }
	)
	(
		{ before(grammarAccess.getSelectAccess().getSourcesAssignment_3_1()); }
		(rule__Select__SourcesAssignment_3_1)*
		{ after(grammarAccess.getSelectAccess().getSourcesAssignment_3_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_3_2()); }
	(rule__Select__Group_3_2__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3_2__0__Impl
	rule__Select__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSourcesAssignment_3_2_1()); }
	(rule__Select__SourcesAssignment_3_2_1)
	{ after(grammarAccess.getSelectAccess().getSourcesAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_4__0__Impl
	rule__Select__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getWHEREKeyword_4_0()); }
	'WHERE'
	{ after(grammarAccess.getSelectAccess().getWHEREKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getPredicatesAssignment_4_1()); }
	(rule__Select__PredicatesAssignment_4_1)
	{ after(grammarAccess.getSelectAccess().getPredicatesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5__0__Impl
	rule__Select__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGROUPKeyword_5_0()); }
	'GROUP'
	{ after(grammarAccess.getSelectAccess().getGROUPKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5__1__Impl
	rule__Select__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getBYKeyword_5_1()); }
	'BY'
	{ after(grammarAccess.getSelectAccess().getBYKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5__2__Impl
	rule__Select__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectAccess().getOrderAssignment_5_2()); }
		(rule__Select__OrderAssignment_5_2)
		{ after(grammarAccess.getSelectAccess().getOrderAssignment_5_2()); }
	)
	(
		{ before(grammarAccess.getSelectAccess().getOrderAssignment_5_2()); }
		(rule__Select__OrderAssignment_5_2)*
		{ after(grammarAccess.getSelectAccess().getOrderAssignment_5_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_5_3()); }
	(rule__Select__Group_5_3__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5_3__0__Impl
	rule__Select__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_5_3_0()); }
	','
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getOrderAssignment_5_3_1()); }
	(rule__Select__OrderAssignment_5_3_1)
	{ after(grammarAccess.getSelectAccess().getOrderAssignment_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6__0__Impl
	rule__Select__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getHAVINGKeyword_6_0()); }
	'HAVING'
	{ after(grammarAccess.getSelectAccess().getHAVINGKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getHavingAssignment_6_1()); }
	(rule__Select__HavingAssignment_6_1)
	{ after(grammarAccess.getSelectAccess().getHavingAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedStatement__Group__0__Impl
	rule__NestedStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedStatementAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getNestedStatementAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedStatement__Group__1__Impl
	rule__NestedStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedStatementAccess().getSelectParserRuleCall_1()); }
	ruleSelect
	{ after(grammarAccess.getNestedStatementAccess().getSelectParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedStatementAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getNestedStatementAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0__0__Impl
	rule__Source__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getNameAssignment_0_0()); }
	(rule__Source__NameAssignment_0_0)
	{ after(grammarAccess.getSourceAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0__1__Impl
	rule__Source__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getGroup_0_1()); }
	(rule__Source__Group_0_1__0)?
	{ after(grammarAccess.getSourceAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getGroup_0_2()); }
	(rule__Source__Group_0_2__0)?
	{ after(grammarAccess.getSourceAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0_1__0__Impl
	rule__Source__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getLeftSquareBracketKeyword_0_1_0()); }
	'['
	{ after(grammarAccess.getSourceAccess().getLeftSquareBracketKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0_1__1__Impl
	rule__Source__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getAlternatives_0_1_1()); }
	(rule__Source__Alternatives_0_1_1)
	{ after(grammarAccess.getSourceAccess().getAlternatives_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getRightSquareBracketKeyword_0_1_2()); }
	']'
	{ after(grammarAccess.getSourceAccess().getRightSquareBracketKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0_2__0__Impl
	rule__Source__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getASKeyword_0_2_0()); }
	'AS'
	{ after(grammarAccess.getSourceAccess().getASKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getAliasAssignment_0_2_1()); }
	(rule__Source__AliasAssignment_0_2_1)
	{ after(grammarAccess.getSourceAccess().getAliasAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_1__0__Impl
	rule__Source__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getNestedAssignment_1_0()); }
	(rule__Source__NestedAssignment_1_0)
	{ after(grammarAccess.getSourceAccess().getNestedAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_1__1__Impl
	rule__Source__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getASKeyword_1_1()); }
	'AS'
	{ after(grammarAccess.getSourceAccess().getASKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getAliasAssignment_1_2()); }
	(rule__Source__AliasAssignment_1_2)
	{ after(grammarAccess.getSourceAccess().getAliasAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
	(rule__Attribute__NameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getGroup_1()); }
	(rule__Attribute__Group_1__0)?
	{ after(grammarAccess.getAttributeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__0__Impl
	rule__Attribute__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getASKeyword_1_0()); }
	'AS'
	{ after(grammarAccess.getAttributeAccess().getASKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAliasAssignment_1_1()); }
	(rule__Attribute__AliasAssignment_1_1)
	{ after(grammarAccess.getAttributeAccess().getAliasAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeName__Group_1__0__Impl
	rule__AttributeName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeNameAccess().getSourceNameParserRuleCall_1_0()); }
	ruleSourceName
	{ after(grammarAccess.getAttributeNameAccess().getSourceNameParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeName__Group_1__1__Impl
	rule__AttributeName__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeNameAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getAttributeNameAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeName__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeNameAccess().getIDTerminalRuleCall_1_2()); }
	RULE_ID
	{ after(grammarAccess.getAttributeNameAccess().getIDTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeWithNestedStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeWithNestedStatement__Group__0__Impl
	rule__AttributeWithNestedStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeWithNestedStatementAccess().getValueAssignment_0()); }
	(rule__AttributeWithNestedStatement__ValueAssignment_0)
	{ after(grammarAccess.getAttributeWithNestedStatementAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeWithNestedStatement__Group__1__Impl
	rule__AttributeWithNestedStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeWithNestedStatementAccess().getINKeyword_1()); }
	'IN'
	{ after(grammarAccess.getAttributeWithNestedStatementAccess().getINKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeWithNestedStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeWithNestedStatementAccess().getNestedAssignment_2()); }
	(rule__AttributeWithNestedStatement__NestedAssignment_2)
	{ after(grammarAccess.getAttributeWithNestedStatementAccess().getNestedAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__0__Impl
	rule__Aggregation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getNameAssignment_0()); }
	(rule__Aggregation__NameAssignment_0)
	{ after(grammarAccess.getAggregationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__1__Impl
	rule__Aggregation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAggregationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__2__Impl
	rule__Aggregation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getAttributeAssignment_2()); }
	(rule__Aggregation__AttributeAssignment_2)
	{ after(grammarAccess.getAggregationAccess().getAttributeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__3__Impl
	rule__Aggregation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAggregationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getGroup_4()); }
	(rule__Aggregation__Group_4__0)?
	{ after(grammarAccess.getAggregationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group_4__0__Impl
	rule__Aggregation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getASKeyword_4_0()); }
	'AS'
	{ after(grammarAccess.getAggregationAccess().getASKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getAliasAssignment_4_1()); }
	(rule__Aggregation__AliasAssignment_4_1)
	{ after(grammarAccess.getAggregationAccess().getAliasAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateParameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__0__Impl
	rule__CreateParameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getWRAPPERKeyword_0()); }
	'WRAPPER'
	{ after(grammarAccess.getCreateParametersAccess().getWRAPPERKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__1__Impl
	rule__CreateParameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getWrapperAssignment_1()); }
	(rule__CreateParameters__WrapperAssignment_1)
	{ after(grammarAccess.getCreateParametersAccess().getWrapperAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__2__Impl
	rule__CreateParameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getPROTOCOLKeyword_2()); }
	'PROTOCOL'
	{ after(grammarAccess.getCreateParametersAccess().getPROTOCOLKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__3__Impl
	rule__CreateParameters__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getProtocolAssignment_3()); }
	(rule__CreateParameters__ProtocolAssignment_3)
	{ after(grammarAccess.getCreateParametersAccess().getProtocolAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__4__Impl
	rule__CreateParameters__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getTRANSPORTKeyword_4()); }
	'TRANSPORT'
	{ after(grammarAccess.getCreateParametersAccess().getTRANSPORTKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__5__Impl
	rule__CreateParameters__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getTransportAssignment_5()); }
	(rule__CreateParameters__TransportAssignment_5)
	{ after(grammarAccess.getCreateParametersAccess().getTransportAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__6__Impl
	rule__CreateParameters__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getDATAHANDLERKeyword_6()); }
	'DATAHANDLER'
	{ after(grammarAccess.getCreateParametersAccess().getDATAHANDLERKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__7__Impl
	rule__CreateParameters__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getDatahandlerAssignment_7()); }
	(rule__CreateParameters__DatahandlerAssignment_7)
	{ after(grammarAccess.getCreateParametersAccess().getDatahandlerAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__8__Impl
	rule__CreateParameters__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getOPTIONSKeyword_8()); }
	'OPTIONS'
	{ after(grammarAccess.getCreateParametersAccess().getOPTIONSKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__9__Impl
	rule__CreateParameters__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getLeftParenthesisKeyword_9()); }
	'('
	{ after(grammarAccess.getCreateParametersAccess().getLeftParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__10__Impl
	rule__CreateParameters__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCreateParametersAccess().getGroup_10()); }
		(rule__CreateParameters__Group_10__0)
		{ after(grammarAccess.getCreateParametersAccess().getGroup_10()); }
	)
	(
		{ before(grammarAccess.getCreateParametersAccess().getGroup_10()); }
		(rule__CreateParameters__Group_10__0)*
		{ after(grammarAccess.getCreateParametersAccess().getGroup_10()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__11__Impl
	rule__CreateParameters__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getGroup_11()); }
	(rule__CreateParameters__Group_11__0)?
	{ after(grammarAccess.getCreateParametersAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getRightParenthesisKeyword_12()); }
	')'
	{ after(grammarAccess.getCreateParametersAccess().getRightParenthesisKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateParameters__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group_10__0__Impl
	rule__CreateParameters__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getKeysAssignment_10_0()); }
	(rule__CreateParameters__KeysAssignment_10_0)
	{ after(grammarAccess.getCreateParametersAccess().getKeysAssignment_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getValuesAssignment_10_1()); }
	(rule__CreateParameters__ValuesAssignment_10_1)
	{ after(grammarAccess.getCreateParametersAccess().getValuesAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateParameters__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group_11__0__Impl
	rule__CreateParameters__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getCommaKeyword_11_0()); }
	','
	{ after(grammarAccess.getCreateParametersAccess().getCommaKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group_11__1__Impl
	rule__CreateParameters__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getKeysAssignment_11_1()); }
	(rule__CreateParameters__KeysAssignment_11_1)
	{ after(grammarAccess.getCreateParametersAccess().getKeysAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_11__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_11__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getValuesAssignment_11_2()); }
	(rule__CreateParameters__ValuesAssignment_11_2)
	{ after(grammarAccess.getCreateParametersAccess().getValuesAssignment_11_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__0__Impl
	rule__AttributeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getNameAssignment_0()); }
	(rule__AttributeDefinition__NameAssignment_0)
	{ after(grammarAccess.getAttributeDefinitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__1__Impl
	rule__AttributeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAttributeDefinitionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__2__Impl
	rule__AttributeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getAttributesAssignment_2()); }
		(rule__AttributeDefinition__AttributesAssignment_2)
		{ after(grammarAccess.getAttributeDefinitionAccess().getAttributesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getAttributesAssignment_2()); }
		(rule__AttributeDefinition__AttributesAssignment_2)*
		{ after(grammarAccess.getAttributeDefinitionAccess().getAttributesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__3__Impl
	rule__AttributeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getDatatypesAssignment_3()); }
		(rule__AttributeDefinition__DatatypesAssignment_3)
		{ after(grammarAccess.getAttributeDefinitionAccess().getDatatypesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getDatatypesAssignment_3()); }
		(rule__AttributeDefinition__DatatypesAssignment_3)*
		{ after(grammarAccess.getAttributeDefinitionAccess().getDatatypesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__4__Impl
	rule__AttributeDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getGroup_4()); }
	(rule__AttributeDefinition__Group_4__0)*
	{ after(grammarAccess.getAttributeDefinitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getAttributeDefinitionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4__0__Impl
	rule__AttributeDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getAttributeDefinitionAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4__1__Impl
	rule__AttributeDefinition__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getAttributesAssignment_4_1()); }
	(rule__AttributeDefinition__AttributesAssignment_4_1)
	{ after(grammarAccess.getAttributeDefinitionAccess().getAttributesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getDatatypesAssignment_4_2()); }
	(rule__AttributeDefinition__DatatypesAssignment_4_2)
	{ after(grammarAccess.getAttributeDefinitionAccess().getDatatypesAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateStream1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStream1__Group__0__Impl
	rule__CreateStream1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStream1Access().getCREATEKeyword_0()); }
	'CREATE'
	{ after(grammarAccess.getCreateStream1Access().getCREATEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStream1__Group__1__Impl
	rule__CreateStream1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStream1Access().getSTREAMKeyword_1()); }
	'STREAM'
	{ after(grammarAccess.getCreateStream1Access().getSTREAMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStream1__Group__2__Impl
	rule__CreateStream1__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStream1Access().getAttributesAssignment_2()); }
	(rule__CreateStream1__AttributesAssignment_2)
	{ after(grammarAccess.getCreateStream1Access().getAttributesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStream1__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStream1Access().getParsAssignment_3()); }
	(rule__CreateStream1__ParsAssignment_3)
	{ after(grammarAccess.getCreateStream1Access().getParsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateSink1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateSink1__Group__0__Impl
	rule__CreateSink1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateSink1Access().getCREATEKeyword_0()); }
	'CREATE'
	{ after(grammarAccess.getCreateSink1Access().getCREATEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateSink1__Group__1__Impl
	rule__CreateSink1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateSink1Access().getSINKKeyword_1()); }
	'SINK'
	{ after(grammarAccess.getCreateSink1Access().getSINKKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateSink1__Group__2__Impl
	rule__CreateSink1__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateSink1Access().getAttributesAssignment_2()); }
	(rule__CreateSink1__AttributesAssignment_2)
	{ after(grammarAccess.getCreateSink1Access().getAttributesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateSink1__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateSink1Access().getParsAssignment_3()); }
	(rule__CreateSink1__ParsAssignment_3)
	{ after(grammarAccess.getCreateSink1Access().getParsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateStreamChannel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__0__Impl
	rule__CreateStreamChannel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getCREATEKeyword_0()); }
	'CREATE'
	{ after(grammarAccess.getCreateStreamChannelAccess().getCREATEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__1__Impl
	rule__CreateStreamChannel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getSTREAMKeyword_1()); }
	'STREAM'
	{ after(grammarAccess.getCreateStreamChannelAccess().getSTREAMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__2__Impl
	rule__CreateStreamChannel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getAttributesAssignment_2()); }
	(rule__CreateStreamChannel__AttributesAssignment_2)
	{ after(grammarAccess.getCreateStreamChannelAccess().getAttributesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__3__Impl
	rule__CreateStreamChannel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getCHANNELKeyword_3()); }
	'CHANNEL'
	{ after(grammarAccess.getCreateStreamChannelAccess().getCHANNELKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__4__Impl
	rule__CreateStreamChannel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getHostAssignment_4()); }
	(rule__CreateStreamChannel__HostAssignment_4)
	{ after(grammarAccess.getCreateStreamChannelAccess().getHostAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__5__Impl
	rule__CreateStreamChannel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getCreateStreamChannelAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getPortAssignment_6()); }
	(rule__CreateStreamChannel__PortAssignment_6)
	{ after(grammarAccess.getCreateStreamChannelAccess().getPortAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateStreamFile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__0__Impl
	rule__CreateStreamFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getCREATEKeyword_0()); }
	'CREATE'
	{ after(grammarAccess.getCreateStreamFileAccess().getCREATEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__1__Impl
	rule__CreateStreamFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getSTREAMKeyword_1()); }
	'STREAM'
	{ after(grammarAccess.getCreateStreamFileAccess().getSTREAMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__2__Impl
	rule__CreateStreamFile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getAttributesAssignment_2()); }
	(rule__CreateStreamFile__AttributesAssignment_2)
	{ after(grammarAccess.getCreateStreamFileAccess().getAttributesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__3__Impl
	rule__CreateStreamFile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getFILEKeyword_3()); }
	'FILE'
	{ after(grammarAccess.getCreateStreamFileAccess().getFILEKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__4__Impl
	rule__CreateStreamFile__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getFilenameAssignment_4()); }
	(rule__CreateStreamFile__FilenameAssignment_4)
	{ after(grammarAccess.getCreateStreamFileAccess().getFilenameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__5__Impl
	rule__CreateStreamFile__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getASKeyword_5()); }
	'AS'
	{ after(grammarAccess.getCreateStreamFileAccess().getASKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getTypeAssignment_6()); }
	(rule__CreateStreamFile__TypeAssignment_6)
	{ after(grammarAccess.getCreateStreamFileAccess().getTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateView__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateView__Group__0__Impl
	rule__CreateView__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateViewAccess().getVIEWKeyword_0()); }
	'VIEW'
	{ after(grammarAccess.getCreateViewAccess().getVIEWKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateView__Group__1__Impl
	rule__CreateView__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateViewAccess().getNameAssignment_1()); }
	(rule__CreateView__NameAssignment_1)
	{ after(grammarAccess.getCreateViewAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateView__Group__2__Impl
	rule__CreateView__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateViewAccess().getFROMKeyword_2()); }
	'FROM'
	{ after(grammarAccess.getCreateViewAccess().getFROMKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateView__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateViewAccess().getSelectAssignment_3()); }
	(rule__CreateView__SelectAssignment_3)
	{ after(grammarAccess.getCreateViewAccess().getSelectAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamTo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamTo__Group__0__Impl
	rule__StreamTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamToAccess().getSTREAMKeyword_0()); }
	'STREAM'
	{ after(grammarAccess.getStreamToAccess().getSTREAMKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamTo__Group__1__Impl
	rule__StreamTo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamToAccess().getTOKeyword_1()); }
	'TO'
	{ after(grammarAccess.getStreamToAccess().getTOKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamTo__Group__2__Impl
	rule__StreamTo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamToAccess().getNameAssignment_2()); }
	(rule__StreamTo__NameAssignment_2)
	{ after(grammarAccess.getStreamToAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamTo__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamToAccess().getAlternatives_3()); }
	(rule__StreamTo__Alternatives_3)
	{ after(grammarAccess.getStreamToAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Drop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drop__Group__0__Impl
	rule__Drop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropAccess().getKeyword1Assignment_0()); }
	(rule__Drop__Keyword1Assignment_0)
	{ after(grammarAccess.getDropAccess().getKeyword1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drop__Group__1__Impl
	rule__Drop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropAccess().getKeyword2Assignment_1()); }
	(rule__Drop__Keyword2Assignment_1)
	{ after(grammarAccess.getDropAccess().getKeyword2Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drop__Group__2__Impl
	rule__Drop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropAccess().getValue1Assignment_2()); }
	(rule__Drop__Value1Assignment_2)
	{ after(grammarAccess.getDropAccess().getValue1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drop__Group__3__Impl
	rule__Drop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropAccess().getKeyword3Assignment_3()); }
	(rule__Drop__Keyword3Assignment_3)?
	{ after(grammarAccess.getDropAccess().getKeyword3Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drop__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropAccess().getValue2Assignment_4()); }
	(rule__Drop__Value2Assignment_4)
	{ after(grammarAccess.getDropAccess().getValue2Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window_Timebased__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group__0__Impl
	rule__Window_Timebased__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getSIZEKeyword_0()); }
	'SIZE'
	{ after(grammarAccess.getWindow_TimebasedAccess().getSIZEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group__1__Impl
	rule__Window_Timebased__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getSizeAssignment_1()); }
	(rule__Window_Timebased__SizeAssignment_1)
	{ after(grammarAccess.getWindow_TimebasedAccess().getSizeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group__2__Impl
	rule__Window_Timebased__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getUnitAssignment_2()); }
	(rule__Window_Timebased__UnitAssignment_2)
	{ after(grammarAccess.getWindow_TimebasedAccess().getUnitAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group__3__Impl
	rule__Window_Timebased__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getGroup_3()); }
	(rule__Window_Timebased__Group_3__0)?
	{ after(grammarAccess.getWindow_TimebasedAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getTIMEKeyword_4()); }
	'TIME'
	{ after(grammarAccess.getWindow_TimebasedAccess().getTIMEKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window_Timebased__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group_3__0__Impl
	rule__Window_Timebased__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getADVANCEKeyword_3_0()); }
	'ADVANCE'
	{ after(grammarAccess.getWindow_TimebasedAccess().getADVANCEKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group_3__1__Impl
	rule__Window_Timebased__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getAdvance_sizeAssignment_3_1()); }
	(rule__Window_Timebased__Advance_sizeAssignment_3_1)
	{ after(grammarAccess.getWindow_TimebasedAccess().getAdvance_sizeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getAdvance_unitAssignment_3_2()); }
	(rule__Window_Timebased__Advance_unitAssignment_3_2)
	{ after(grammarAccess.getWindow_TimebasedAccess().getAdvance_unitAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window_Tuplebased__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group__0__Impl
	rule__Window_Tuplebased__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getSIZEKeyword_0()); }
	'SIZE'
	{ after(grammarAccess.getWindow_TuplebasedAccess().getSIZEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group__1__Impl
	rule__Window_Tuplebased__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getSizeAssignment_1()); }
	(rule__Window_Tuplebased__SizeAssignment_1)
	{ after(grammarAccess.getWindow_TuplebasedAccess().getSizeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group__2__Impl
	rule__Window_Tuplebased__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getGroup_2()); }
	(rule__Window_Tuplebased__Group_2__0)?
	{ after(grammarAccess.getWindow_TuplebasedAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group__3__Impl
	rule__Window_Tuplebased__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getTUPLEKeyword_3()); }
	'TUPLE'
	{ after(grammarAccess.getWindow_TuplebasedAccess().getTUPLEKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getGroup_4()); }
	(rule__Window_Tuplebased__Group_4__0)?
	{ after(grammarAccess.getWindow_TuplebasedAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window_Tuplebased__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group_2__0__Impl
	rule__Window_Tuplebased__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getADVANCEKeyword_2_0()); }
	'ADVANCE'
	{ after(grammarAccess.getWindow_TuplebasedAccess().getADVANCEKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getAdvance_sizeAssignment_2_1()); }
	(rule__Window_Tuplebased__Advance_sizeAssignment_2_1)
	{ after(grammarAccess.getWindow_TuplebasedAccess().getAdvance_sizeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window_Tuplebased__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group_4__0__Impl
	rule__Window_Tuplebased__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getPARTITIONKeyword_4_0()); }
	'PARTITION'
	{ after(grammarAccess.getWindow_TuplebasedAccess().getPARTITIONKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group_4__1__Impl
	rule__Window_Tuplebased__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getBYKeyword_4_1()); }
	'BY'
	{ after(grammarAccess.getWindow_TuplebasedAccess().getBYKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getPartition_attributeAssignment_4_2()); }
	(rule__Window_Tuplebased__Partition_attributeAssignment_4_2)
	{ after(grammarAccess.getWindow_TuplebasedAccess().getPartition_attributeAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionsModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionsModel__Group__0__Impl
	rule__ExpressionsModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionsModelAccess().getExpressionsModelAction_0()); }
	()
	{ after(grammarAccess.getExpressionsModelAccess().getExpressionsModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionsModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionsModelAccess().getElementsAssignment_1()); }
	(rule__ExpressionsModel__ElementsAssignment_1)
	{ after(grammarAccess.getExpressionsModelAccess().getElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getORKeyword_1_1()); }
	'OR'
	{ after(grammarAccess.getOrAccess().getORKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
	(rule__Or__RightAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualitiyParserRuleCall_0()); }
	ruleEqualitiy
	{ after(grammarAccess.getAndAccess().getEqualitiyParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getANDKeyword_1_1()); }
	'AND'
	{ after(grammarAccess.getAndAccess().getANDKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
	(rule__And__RightAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equalitiy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group__0__Impl
	rule__Equalitiy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualitiyAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getGroup_1()); }
	(rule__Equalitiy__Group_1__0)*
	{ after(grammarAccess.getEqualitiyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equalitiy__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group_1__0__Impl
	rule__Equalitiy__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getEqualityLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualitiyAccess().getEqualityLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group_1__1__Impl
	rule__Equalitiy__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getOpAssignment_1_1()); }
	(rule__Equalitiy__OpAssignment_1_1)
	{ after(grammarAccess.getEqualitiyAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getRightAssignment_1_2()); }
	(rule__Equalitiy__RightAssignment_1_2)
	{ after(grammarAccess.getEqualitiyAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
	rulePlusOrMinus
	{ after(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getComparisionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
	(rule__Comparison__OpAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
	(rule__Comparison__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__0__Impl
	rule__PlusOrMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
	ruleMulOrDiv
	{ after(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
	(rule__PlusOrMinus__Group_1__0)*
	{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__0__Impl
	rule__PlusOrMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
	(rule__PlusOrMinus__Alternatives_1_0)
	{ after(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
	(rule__PlusOrMinus__RightAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__0__Impl
	rule__PlusOrMinus__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__0__Impl
	rule__PlusOrMinus__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__0__Impl
	rule__MulOrDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getGroup_1()); }
	(rule__MulOrDiv__Group_1__0)*
	{ after(grammarAccess.getMulOrDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__0__Impl
	rule__MulOrDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__1__Impl
	rule__MulOrDiv__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); }
	(rule__MulOrDiv__OpAssignment_1_1)
	{ after(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); }
	(rule__MulOrDiv__RightAssignment_1_2)
	{ after(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getBracketAction_0_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getBracketAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
	rule__Primary__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getInnerAssignment_0_2()); }
	(rule__Primary__InnerAssignment_0_2)
	{ after(grammarAccess.getPrimaryAccess().getInnerAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNOTAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNOTAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNOTKeyword_1_1()); }
	'NOT'
	{ after(grammarAccess.getPrimaryAccess().getNOTKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
	(rule__Primary__ExpressionAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
	(rule__Atomic__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getFloatConstantAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getFloatConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
	(rule__Atomic__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getStringConstantAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getStringConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
	(rule__Atomic__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getBoolConstantAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getBoolConstantAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
	(rule__Atomic__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__0__Impl
	rule__Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getAttributeRefAction_4_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getAttributeRefAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getAlternatives_4_1()); }
	(rule__Atomic__Alternatives_4_1)
	{ after(grammarAccess.getAtomicAccess().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__UnorderedGroup_2_1
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getSelectAccess().getUnorderedGroup_2_1());
	}
:
	rule__Select__UnorderedGroup_2_1__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getSelectAccess().getUnorderedGroup_2_1())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getSelectAccess().getUnorderedGroup_2_1());
	restoreStackSize(stackSize);
}

rule__Select__UnorderedGroup_2_1__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getSelectAccess().getUnorderedGroup_2_1(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getSelectAccess().getUnorderedGroup_2_1(), 0);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getSelectAccess().getAlternatives_2_1_0()); }
						(rule__Select__Alternatives_2_1_0)
						{ after(grammarAccess.getSelectAccess().getAlternatives_2_1_0()); }
					)
					(
						{ before(grammarAccess.getSelectAccess().getAlternatives_2_1_0()); }
						((rule__Select__Alternatives_2_1_0)=>rule__Select__Alternatives_2_1_0)*
						{ after(grammarAccess.getSelectAccess().getAlternatives_2_1_0()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getSelectAccess().getUnorderedGroup_2_1(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getSelectAccess().getUnorderedGroup_2_1(), 1);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getSelectAccess().getGroup_2_1_1()); }
						(rule__Select__Group_2_1_1__0)
						{ after(grammarAccess.getSelectAccess().getGroup_2_1_1()); }
					)
					(
						{ before(grammarAccess.getSelectAccess().getGroup_2_1_1()); }
						((rule__Select__Group_2_1_1__0)=>rule__Select__Group_2_1_1__0)*
						{ after(grammarAccess.getSelectAccess().getGroup_2_1_1()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getSelectAccess().getUnorderedGroup_2_1(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getSelectAccess().getUnorderedGroup_2_1(), 2);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getSelectAccess().getGroup_2_1_2()); }
						(rule__Select__Group_2_1_2__0)
						{ after(grammarAccess.getSelectAccess().getGroup_2_1_2()); }
					)
					(
						{ before(grammarAccess.getSelectAccess().getGroup_2_1_2()); }
						((rule__Select__Group_2_1_2__0)=>rule__Select__Group_2_1_2__0)*
						{ after(grammarAccess.getSelectAccess().getGroup_2_1_2()); }
					)
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectAccess().getUnorderedGroup_2_1());
	restoreStackSize(stackSize);
}

rule__Select__UnorderedGroup_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__UnorderedGroup_2_1__Impl
	rule__Select__UnorderedGroup_2_1__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__UnorderedGroup_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__UnorderedGroup_2_1__Impl
	rule__Select__UnorderedGroup_2_1__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__UnorderedGroup_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__UnorderedGroup_2_1__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__StatementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_0()); }
		ruleStatement
		{ after(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeSelectParserRuleCall_0_0_0()); }
		ruleSelect
		{ after(grammarAccess.getStatementAccess().getTypeSelectParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeStreamToParserRuleCall_0_1_0()); }
		ruleStreamTo
		{ after(grammarAccess.getStatementAccess().getTypeStreamToParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeDropParserRuleCall_0_2_0()); }
		ruleDrop
		{ after(grammarAccess.getStatementAccess().getTypeDropParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeCreateStream1ParserRuleCall_0_3_0()); }
		ruleCreateStream1
		{ after(grammarAccess.getStatementAccess().getTypeCreateStream1ParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeCreateSink1ParserRuleCall_0_4_0()); }
		ruleCreateSink1
		{ after(grammarAccess.getStatementAccess().getTypeCreateSink1ParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeCreateStreamChannelParserRuleCall_0_5_0()); }
		ruleCreateStreamChannel
		{ after(grammarAccess.getStatementAccess().getTypeCreateStreamChannelParserRuleCall_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeCreateStreamFileParserRuleCall_0_6_0()); }
		ruleCreateStreamFile
		{ after(grammarAccess.getStatementAccess().getTypeCreateStreamFileParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_0_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeCreateViewParserRuleCall_0_7_0()); }
		ruleCreateView
		{ after(grammarAccess.getStatementAccess().getTypeCreateViewParserRuleCall_0_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getNameSELECTKeyword_0_0()); }
		(
			{ before(grammarAccess.getSelectAccess().getNameSELECTKeyword_0_0()); }
			'SELECT'
			{ after(grammarAccess.getSelectAccess().getNameSELECTKeyword_0_0()); }
		)
		{ after(grammarAccess.getSelectAccess().getNameSELECTKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__DistinctAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_1_0()); }
		(
			{ before(grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_1_0()); }
			'DISTINCT'
			{ after(grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_1_0()); }
		)
		{ after(grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__AttributesAssignment_2_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getAttributesAttributeParserRuleCall_2_1_0_0_0()); }
		ruleAttribute
		{ after(grammarAccess.getSelectAccess().getAttributesAttributeParserRuleCall_2_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__AggregationsAssignment_2_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getAggregationsAggregationParserRuleCall_2_1_0_1_0()); }
		ruleAggregation
		{ after(grammarAccess.getSelectAccess().getAggregationsAggregationParserRuleCall_2_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__AttributesAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getAttributesAttributeParserRuleCall_2_1_1_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getSelectAccess().getAttributesAttributeParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__AggregationsAssignment_2_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getAggregationsAggregationParserRuleCall_2_1_2_1_0()); }
		ruleAggregation
		{ after(grammarAccess.getSelectAccess().getAggregationsAggregationParserRuleCall_2_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__SourcesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_3_1_0()); }
		ruleSource
		{ after(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__SourcesAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_3_2_1_0()); }
		ruleSource
		{ after(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__PredicatesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getPredicatesExpressionsModelParserRuleCall_4_1_0()); }
		ruleExpressionsModel
		{ after(grammarAccess.getSelectAccess().getPredicatesExpressionsModelParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__OrderAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_5_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__OrderAssignment_5_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_5_3_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_5_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__HavingAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getHavingExpressionsModelParserRuleCall_6_1_0()); }
		ruleExpressionsModel
		{ after(grammarAccess.getSelectAccess().getHavingExpressionsModelParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getNameSourceNameParserRuleCall_0_0_0()); }
		ruleSourceName
		{ after(grammarAccess.getSourceAccess().getNameSourceNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__UnboundedAssignment_0_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getUnboundedWindow_UnboundedParserRuleCall_0_1_1_0_0()); }
		ruleWindow_Unbounded
		{ after(grammarAccess.getSourceAccess().getUnboundedWindow_UnboundedParserRuleCall_0_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__TimeAssignment_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getTimeWindow_TimebasedParserRuleCall_0_1_1_1_0()); }
		ruleWindow_Timebased
		{ after(grammarAccess.getSourceAccess().getTimeWindow_TimebasedParserRuleCall_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__TupleAssignment_0_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getTupleWindow_TuplebasedParserRuleCall_0_1_1_2_0()); }
		ruleWindow_Tuplebased
		{ after(grammarAccess.getSourceAccess().getTupleWindow_TuplebasedParserRuleCall_0_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__AliasAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getAliasAliasParserRuleCall_0_2_1_0()); }
		ruleAlias
		{ after(grammarAccess.getSourceAccess().getAliasAliasParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__NestedAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getNestedNestedStatementParserRuleCall_1_0_0()); }
		ruleNestedStatement
		{ after(grammarAccess.getSourceAccess().getNestedNestedStatementParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__AliasAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getAliasAliasParserRuleCall_1_2_0()); }
		ruleAlias
		{ after(grammarAccess.getSourceAccess().getAliasAliasParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameAttributeNameParserRuleCall_0_0()); }
		ruleAttributeName
		{ after(grammarAccess.getAttributeAccess().getNameAttributeNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AliasAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getAliasAliasParserRuleCall_1_1_0()); }
		ruleAlias
		{ after(grammarAccess.getAttributeAccess().getAliasAliasParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithoutAlias__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeWithoutAliasAccess().getNameAttributeNameParserRuleCall_0()); }
		ruleAttributeName
		{ after(grammarAccess.getAttributeWithoutAliasAccess().getNameAttributeNameParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeWithNestedStatementAccess().getValueAttributeWithoutAliasParserRuleCall_0_0()); }
		ruleAttributeWithoutAlias
		{ after(grammarAccess.getAttributeWithNestedStatementAccess().getValueAttributeWithoutAliasParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__NestedAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeWithNestedStatementAccess().getNestedNestedStatementParserRuleCall_2_0()); }
		ruleNestedStatement
		{ after(grammarAccess.getAttributeWithNestedStatementAccess().getNestedNestedStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAggregationAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__AttributeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationAccess().getAttributeAttributeWithoutAliasParserRuleCall_2_0()); }
		ruleAttributeWithoutAlias
		{ after(grammarAccess.getAggregationAccess().getAttributeAttributeWithoutAliasParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__AliasAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationAccess().getAliasAliasParserRuleCall_4_1_0()); }
		ruleAlias
		{ after(grammarAccess.getAggregationAccess().getAliasAliasParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAliasAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getAliasAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__WrapperAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getWrapperSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getWrapperSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__ProtocolAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getProtocolSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getProtocolSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__TransportAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getTransportSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getTransportSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__DatahandlerAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getDatahandlerSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getDatahandlerSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__KeysAssignment_10_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getKeysSTRINGTerminalRuleCall_10_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getKeysSTRINGTerminalRuleCall_10_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__ValuesAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getValuesSTRINGTerminalRuleCall_10_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getValuesSTRINGTerminalRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__KeysAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getKeysSTRINGTerminalRuleCall_11_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getKeysSTRINGTerminalRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__ValuesAssignment_11_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getValuesSTRINGTerminalRuleCall_11_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getValuesSTRINGTerminalRuleCall_11_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__AttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getAttributesAttributeParserRuleCall_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getAttributeDefinitionAccess().getAttributesAttributeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__DatatypesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getDatatypesDataTypeParserRuleCall_3_0()); }
		ruleDataType
		{ after(grammarAccess.getAttributeDefinitionAccess().getDatatypesDataTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__AttributesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getAttributesAttributeParserRuleCall_4_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getAttributeDefinitionAccess().getAttributesAttributeParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__DatatypesAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getDatatypesDataTypeParserRuleCall_4_2_0()); }
		ruleDataType
		{ after(grammarAccess.getAttributeDefinitionAccess().getDatatypesDataTypeParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__AttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStream1Access().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
		ruleAttributeDefinition
		{ after(grammarAccess.getCreateStream1Access().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__ParsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStream1Access().getParsCreateParametersParserRuleCall_3_0()); }
		ruleCreateParameters
		{ after(grammarAccess.getCreateStream1Access().getParsCreateParametersParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__AttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateSink1Access().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
		ruleAttributeDefinition
		{ after(grammarAccess.getCreateSink1Access().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__ParsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateSink1Access().getParsCreateParametersParserRuleCall_3_0()); }
		ruleCreateParameters
		{ after(grammarAccess.getCreateSink1Access().getParsCreateParametersParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__AttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamChannelAccess().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
		ruleAttributeDefinition
		{ after(grammarAccess.getCreateStreamChannelAccess().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__HostAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamChannelAccess().getHostIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateStreamChannelAccess().getHostIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__PortAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamChannelAccess().getPortINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getCreateStreamChannelAccess().getPortINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__AttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamFileAccess().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
		ruleAttributeDefinition
		{ after(grammarAccess.getCreateStreamFileAccess().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__FilenameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamFileAccess().getFilenameSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateStreamFileAccess().getFilenameSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__TypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamFileAccess().getTypeIDTerminalRuleCall_6_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateStreamFileAccess().getTypeIDTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateViewAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateViewAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__SelectAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateViewAccess().getSelectNestedStatementParserRuleCall_3_0()); }
		ruleNestedStatement
		{ after(grammarAccess.getCreateViewAccess().getSelectNestedStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamToAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStreamToAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__StatementAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamToAccess().getStatementSelectParserRuleCall_3_0_0()); }
		ruleSelect
		{ after(grammarAccess.getStreamToAccess().getStatementSelectParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__InputnameAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamToAccess().getInputnameIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStreamToAccess().getInputnameIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Keyword1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropAccess().getKeyword1DROPKeyword_0_0()); }
		(
			{ before(grammarAccess.getDropAccess().getKeyword1DROPKeyword_0_0()); }
			'DROP'
			{ after(grammarAccess.getDropAccess().getKeyword1DROPKeyword_0_0()); }
		)
		{ after(grammarAccess.getDropAccess().getKeyword1DROPKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Keyword2Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropAccess().getKeyword2Alternatives_1_0()); }
		(rule__Drop__Keyword2Alternatives_1_0)
		{ after(grammarAccess.getDropAccess().getKeyword2Alternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Value1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropAccess().getValue1IDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDropAccess().getValue1IDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Keyword3Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropAccess().getKeyword3IFEXISTSKeyword_3_0()); }
		(
			{ before(grammarAccess.getDropAccess().getKeyword3IFEXISTSKeyword_3_0()); }
			'IF EXISTS'
			{ after(grammarAccess.getDropAccess().getKeyword3IFEXISTSKeyword_3_0()); }
		)
		{ after(grammarAccess.getDropAccess().getKeyword3IFEXISTSKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Value2Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropAccess().getValue2IDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getDropAccess().getValue2IDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__SizeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TimebasedAccess().getSizeINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getWindow_TimebasedAccess().getSizeINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__UnitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TimebasedAccess().getUnitIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getWindow_TimebasedAccess().getUnitIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Advance_sizeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TimebasedAccess().getAdvance_sizeINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getWindow_TimebasedAccess().getAdvance_sizeINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Advance_unitAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TimebasedAccess().getAdvance_unitIDTerminalRuleCall_3_2_0()); }
		RULE_ID
		{ after(grammarAccess.getWindow_TimebasedAccess().getAdvance_unitIDTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__SizeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TuplebasedAccess().getSizeINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getWindow_TuplebasedAccess().getSizeINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Advance_sizeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TuplebasedAccess().getAdvance_sizeINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getWindow_TuplebasedAccess().getAdvance_sizeINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Partition_attributeAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TuplebasedAccess().getPartition_attributeAttributeParserRuleCall_4_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getWindow_TuplebasedAccess().getPartition_attributeAttributeParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsModel__ElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionsModelAccess().getElementsExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionsModelAccess().getElementsExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRightEqualitiyParserRuleCall_1_2_0()); }
		ruleEqualitiy
		{ after(grammarAccess.getAndAccess().getRightEqualitiyParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualitiyAccess().getOpAlternatives_1_1_0()); }
		(rule__Equalitiy__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualitiyAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualitiyAccess().getRightComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualitiyAccess().getRightComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
		(rule__Comparison__OpAlternatives_1_1_0)
		{ after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
		ruleMulOrDiv
		{ after(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); }
		(rule__MulOrDiv__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__InnerAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getInnerExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryAccess().getInnerExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getAtomicAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAlternatives_3_1_0()); }
		(rule__Atomic__ValueAlternatives_3_1_0)
		{ after(grammarAccess.getAtomicAccess().getValueAlternatives_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAttributeWithoutAliasParserRuleCall_4_1_0_0()); }
		ruleAttributeWithoutAlias
		{ after(grammarAccess.getAtomicAccess().getValueAttributeWithoutAliasParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAttributeWithNestedStatementParserRuleCall_4_1_1_0()); }
		ruleAttributeWithNestedStatement
		{ after(grammarAccess.getAtomicAccess().getValueAttributeWithNestedStatementParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getValueAlternatives_0()); }
		(rule__DataType__ValueAlternatives_0)
		{ after(grammarAccess.getDataTypeAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|':'|'$'|'{'|'}') ('a'..'z'|'A'..'Z'|'_'|':'|'$'|'{'|'}'|'0'..'9')*;

RULE_FLOAT : RULE_INT '.' RULE_INT;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
