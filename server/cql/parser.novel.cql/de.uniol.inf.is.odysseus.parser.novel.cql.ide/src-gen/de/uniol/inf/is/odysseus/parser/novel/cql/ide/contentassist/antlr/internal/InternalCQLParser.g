/*
 * generated by Xtext 2.10.0
 */
parser grammar InternalCQLParser;

options {
	tokenVocab=InternalCQLLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package de.uniol.inf.is.odysseus.parser.novel.cql.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.uniol.inf.is.odysseus.parser.novel.cql.services.CQLGrammarAccess;

}
@members {
	private CQLGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
		tokenNameToValue.put("AS", "'AS'");
		tokenNameToValue.put("BY", "'BY'");
		tokenNameToValue.put("IF", "'IF'");
		tokenNameToValue.put("IN", "'IN'");
		tokenNameToValue.put("ON", "'ON'");
		tokenNameToValue.put("OR", "'OR'");
		tokenNameToValue.put("TO", "'TO'");
		tokenNameToValue.put("AND", "'AND'");
		tokenNameToValue.put("NOT", "'NOT'");
		tokenNameToValue.put("DROP", "'DROP'");
		tokenNameToValue.put("FILE", "'FILE'");
		tokenNameToValue.put("FROM", "'FROM'");
		tokenNameToValue.put("ROLE", "'ROLE'");
		tokenNameToValue.put("SINK", "'SINK'");
		tokenNameToValue.put("SIZE", "'SIZE'");
		tokenNameToValue.put("TIME", "'TIME'");
		tokenNameToValue.put("TRUE", "'TRUE'");
		tokenNameToValue.put("USER", "'USER'");
		tokenNameToValue.put("VIEW", "'VIEW'");
		tokenNameToValue.put("ALTER", "'ALTER'");
		tokenNameToValue.put("FALSE", "'FALSE'");
		tokenNameToValue.put("GRANT", "'GRANT'");
		tokenNameToValue.put("GROUP", "'GROUP'");
		tokenNameToValue.put("TUPLE", "'TUPLE'");
		tokenNameToValue.put("UNION", "'UNION'");
		tokenNameToValue.put("WHERE", "'WHERE'");
		tokenNameToValue.put("ATTACH", "'ATTACH'");
		tokenNameToValue.put("CREATE", "'CREATE'");
		tokenNameToValue.put("EXISTS", "'EXISTS'");
		tokenNameToValue.put("HAVING", "'HAVING'");
		tokenNameToValue.put("REVOKE", "'REVOKE'");
		tokenNameToValue.put("SELECT", "'SELECT'");
		tokenNameToValue.put("STREAM", "'STREAM'");
		tokenNameToValue.put("TENANT", "'TENANT'");
		tokenNameToValue.put("ADVANCE", "'ADVANCE'");
		tokenNameToValue.put("CHANNEL", "'CHANNEL'");
		tokenNameToValue.put("OPTIONS", "'OPTIONS'");
		tokenNameToValue.put("WRAPPER", "'WRAPPER'");
		tokenNameToValue.put("DISTINCT", "'DISTINCT'");
		tokenNameToValue.put("PROTOCOL", "'PROTOCOL'");
		tokenNameToValue.put("PARTITION", "'PARTITION'");
		tokenNameToValue.put("TRANSPORT", "'TRANSPORT'");
		tokenNameToValue.put("UNBOUNDED", "'UNBOUNDED'");
		tokenNameToValue.put("DIFFERENCE", "'DIFFERENCE'");
		tokenNameToValue.put("IDENTIFIED", "'IDENTIFIED'");
		tokenNameToValue.put("DATAHANDLER", "'DATAHANDLER'");
		tokenNameToValue.put("INTERSECTION", "'INTERSECTION'");
	}

	public void setGrammarAccess(CQLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getStatementsAssignment()); }
		(rule__Model__StatementsAssignment)*
		{ after(grammarAccess.getModelAccess().getStatementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelect
entryRuleSelect
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectAccess().getGroup()); }
		(rule__Select__Group__0)
		{ after(grammarAccess.getSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNestedStatement
entryRuleNestedStatement
:
{ before(grammarAccess.getNestedStatementRule()); }
	 ruleNestedStatement
{ after(grammarAccess.getNestedStatementRule()); } 
	 EOF 
;

// Rule NestedStatement
ruleNestedStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNestedStatementAccess().getGroup()); }
		(rule__NestedStatement__Group__0)
		{ after(grammarAccess.getNestedStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getAlternatives()); }
		(rule__Argument__Alternatives)
		{ after(grammarAccess.getArgumentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource
entryRuleSource
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceAccess().getAlternatives()); }
		(rule__Source__Alternatives)
		{ after(grammarAccess.getSourceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceName
entryRuleSourceName
:
{ before(grammarAccess.getSourceNameRule()); }
	 ruleSourceName
{ after(grammarAccess.getSourceNameRule()); } 
	 EOF 
;

// Rule SourceName
ruleSourceName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceNameAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getSourceNameAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeWithoutAliasDefinition
entryRuleAttributeWithoutAliasDefinition
:
{ before(grammarAccess.getAttributeWithoutAliasDefinitionRule()); }
	 ruleAttributeWithoutAliasDefinition
{ after(grammarAccess.getAttributeWithoutAliasDefinitionRule()); } 
	 EOF 
;

// Rule AttributeWithoutAliasDefinition
ruleAttributeWithoutAliasDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeWithoutAliasDefinitionAccess().getNameAssignment()); }
		(rule__AttributeWithoutAliasDefinition__NameAssignment)
		{ after(grammarAccess.getAttributeWithoutAliasDefinitionAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeName
entryRuleAttributeName
:
{ before(grammarAccess.getAttributeNameRule()); }
	 ruleAttributeName
{ after(grammarAccess.getAttributeNameRule()); } 
	 EOF 
;

// Rule AttributeName
ruleAttributeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeNameAccess().getAlternatives()); }
		(rule__AttributeName__Alternatives)
		{ after(grammarAccess.getAttributeNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeWithNestedStatement
entryRuleAttributeWithNestedStatement
:
{ before(grammarAccess.getAttributeWithNestedStatementRule()); }
	 ruleAttributeWithNestedStatement
{ after(grammarAccess.getAttributeWithNestedStatementRule()); } 
	 EOF 
;

// Rule AttributeWithNestedStatement
ruleAttributeWithNestedStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeWithNestedStatementAccess().getGroup()); }
		(rule__AttributeWithNestedStatement__Group__0)
		{ after(grammarAccess.getAttributeWithNestedStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectExpression
entryRuleSelectExpression
:
{ before(grammarAccess.getSelectExpressionRule()); }
	 ruleSelectExpression
{ after(grammarAccess.getSelectExpressionRule()); } 
	 EOF 
;

// Rule SelectExpression
ruleSelectExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getGroup()); }
		(rule__SelectExpression__Group__0)
		{ after(grammarAccess.getSelectExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectExpressionWithoutAliasDefinition
entryRuleSelectExpressionWithoutAliasDefinition
:
{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule()); }
	 ruleSelectExpressionWithoutAliasDefinition
{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule()); } 
	 EOF 
;

// Rule SelectExpressionWithoutAliasDefinition
ruleSelectExpressionWithoutAliasDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getGroup()); }
		(rule__SelectExpressionWithoutAliasDefinition__Group__0)
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectExpressionWithOnlyAttributeOrConstant
entryRuleSelectExpressionWithOnlyAttributeOrConstant
:
{ before(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantRule()); }
	 ruleSelectExpressionWithOnlyAttributeOrConstant
{ after(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantRule()); } 
	 EOF 
;

// Rule SelectExpressionWithOnlyAttributeOrConstant
ruleSelectExpressionWithOnlyAttributeOrConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getGroup()); }
		(rule__SelectExpressionWithOnlyAttributeOrConstant__Group__0)
		{ after(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionComponentConstantOrAttribute
entryRuleExpressionComponentConstantOrAttribute
:
{ before(grammarAccess.getExpressionComponentConstantOrAttributeRule()); }
	 ruleExpressionComponentConstantOrAttribute
{ after(grammarAccess.getExpressionComponentConstantOrAttributeRule()); } 
	 EOF 
;

// Rule ExpressionComponentConstantOrAttribute
ruleExpressionComponentConstantOrAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionComponentConstantOrAttributeAccess().getAlternatives()); }
		(rule__ExpressionComponentConstantOrAttribute__Alternatives)
		{ after(grammarAccess.getExpressionComponentConstantOrAttributeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionComponentFunctionOrConstant
entryRuleExpressionComponentFunctionOrConstant
:
{ before(grammarAccess.getExpressionComponentFunctionOrConstantRule()); }
	 ruleExpressionComponentFunctionOrConstant
{ after(grammarAccess.getExpressionComponentFunctionOrConstantRule()); } 
	 EOF 
;

// Rule ExpressionComponentFunctionOrConstant
ruleExpressionComponentFunctionOrConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getAlternatives()); }
		(rule__ExpressionComponentFunctionOrConstant__Alternatives)
		{ after(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionComponentOnlyWithAttribute
entryRuleExpressionComponentOnlyWithAttribute
:
{ before(grammarAccess.getExpressionComponentOnlyWithAttributeRule()); }
	 ruleExpressionComponentOnlyWithAttribute
{ after(grammarAccess.getExpressionComponentOnlyWithAttributeRule()); } 
	 EOF 
;

// Rule ExpressionComponentOnlyWithAttribute
ruleExpressionComponentOnlyWithAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionComponentOnlyWithAttributeAccess().getValueAssignment()); }
		(rule__ExpressionComponentOnlyWithAttribute__ValueAssignment)
		{ after(grammarAccess.getExpressionComponentOnlyWithAttributeAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionComponentOnlyWithFunction
entryRuleExpressionComponentOnlyWithFunction
:
{ before(grammarAccess.getExpressionComponentOnlyWithFunctionRule()); }
	 ruleExpressionComponentOnlyWithFunction
{ after(grammarAccess.getExpressionComponentOnlyWithFunctionRule()); } 
	 EOF 
;

// Rule ExpressionComponentOnlyWithFunction
ruleExpressionComponentOnlyWithFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionComponentOnlyWithFunctionAccess().getGroup()); }
		(rule__ExpressionComponentOnlyWithFunction__Group__0)
		{ after(grammarAccess.getExpressionComponentOnlyWithFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlias
entryRuleAlias
:
{ before(grammarAccess.getAliasRule()); }
	 ruleAlias
{ after(grammarAccess.getAliasRule()); } 
	 EOF 
;

// Rule Alias
ruleAlias 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAliasAccess().getNameAssignment()); }
		(rule__Alias__NameAssignment)
		{ after(grammarAccess.getAliasAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateParameters
entryRuleCreateParameters
:
{ before(grammarAccess.getCreateParametersRule()); }
	 ruleCreateParameters
{ after(grammarAccess.getCreateParametersRule()); } 
	 EOF 
;

// Rule CreateParameters
ruleCreateParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateParametersAccess().getGroup()); }
		(rule__CreateParameters__Group__0)
		{ after(grammarAccess.getCreateParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition
:
{ before(grammarAccess.getAttributeDefinitionRule()); }
	 ruleAttributeDefinition
{ after(grammarAccess.getAttributeDefinitionRule()); } 
	 EOF 
;

// Rule AttributeDefinition
ruleAttributeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getGroup()); }
		(rule__AttributeDefinition__Group__0)
		{ after(grammarAccess.getAttributeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateStream1
entryRuleCreateStream1
:
{ before(grammarAccess.getCreateStream1Rule()); }
	 ruleCreateStream1
{ after(grammarAccess.getCreateStream1Rule()); } 
	 EOF 
;

// Rule CreateStream1
ruleCreateStream1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateStream1Access().getGroup()); }
		(rule__CreateStream1__Group__0)
		{ after(grammarAccess.getCreateStream1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateSink1
entryRuleCreateSink1
:
{ before(grammarAccess.getCreateSink1Rule()); }
	 ruleCreateSink1
{ after(grammarAccess.getCreateSink1Rule()); } 
	 EOF 
;

// Rule CreateSink1
ruleCreateSink1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateSink1Access().getGroup()); }
		(rule__CreateSink1__Group__0)
		{ after(grammarAccess.getCreateSink1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateStreamChannel
entryRuleCreateStreamChannel
:
{ before(grammarAccess.getCreateStreamChannelRule()); }
	 ruleCreateStreamChannel
{ after(grammarAccess.getCreateStreamChannelRule()); } 
	 EOF 
;

// Rule CreateStreamChannel
ruleCreateStreamChannel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateStreamChannelAccess().getGroup()); }
		(rule__CreateStreamChannel__Group__0)
		{ after(grammarAccess.getCreateStreamChannelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateStreamFile
entryRuleCreateStreamFile
:
{ before(grammarAccess.getCreateStreamFileRule()); }
	 ruleCreateStreamFile
{ after(grammarAccess.getCreateStreamFileRule()); } 
	 EOF 
;

// Rule CreateStreamFile
ruleCreateStreamFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateStreamFileAccess().getGroup()); }
		(rule__CreateStreamFile__Group__0)
		{ after(grammarAccess.getCreateStreamFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateView
entryRuleCreateView
:
{ before(grammarAccess.getCreateViewRule()); }
	 ruleCreateView
{ after(grammarAccess.getCreateViewRule()); } 
	 EOF 
;

// Rule CreateView
ruleCreateView 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateViewAccess().getGroup()); }
		(rule__CreateView__Group__0)
		{ after(grammarAccess.getCreateViewAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStreamTo
entryRuleStreamTo
:
{ before(grammarAccess.getStreamToRule()); }
	 ruleStreamTo
{ after(grammarAccess.getStreamToRule()); } 
	 EOF 
;

// Rule StreamTo
ruleStreamTo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamToAccess().getGroup()); }
		(rule__StreamTo__Group__0)
		{ after(grammarAccess.getStreamToAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDropCommand
entryRuleDropCommand
:
{ before(grammarAccess.getDropCommandRule()); }
	 ruleDropCommand
{ after(grammarAccess.getDropCommandRule()); } 
	 EOF 
;

// Rule DropCommand
ruleDropCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDropCommandAccess().getGroup()); }
		(rule__DropCommand__Group__0)
		{ after(grammarAccess.getDropCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUserCommand
entryRuleUserCommand
:
{ before(grammarAccess.getUserCommandRule()); }
	 ruleUserCommand
{ after(grammarAccess.getUserCommandRule()); } 
	 EOF 
;

// Rule UserCommand
ruleUserCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUserCommandAccess().getGroup()); }
		(rule__UserCommand__Group__0)
		{ after(grammarAccess.getUserCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightsCommand
entryRuleRightsCommand
:
{ before(grammarAccess.getRightsCommandRule()); }
	 ruleRightsCommand
{ after(grammarAccess.getRightsCommandRule()); } 
	 EOF 
;

// Rule RightsCommand
ruleRightsCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightsCommandAccess().getAlternatives()); }
		(rule__RightsCommand__Alternatives)
		{ after(grammarAccess.getRightsCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightsRoleCommand
entryRuleRightsRoleCommand
:
{ before(grammarAccess.getRightsRoleCommandRule()); }
	 ruleRightsRoleCommand
{ after(grammarAccess.getRightsRoleCommandRule()); } 
	 EOF 
;

// Rule RightsRoleCommand
ruleRightsRoleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightsRoleCommandAccess().getAlternatives()); }
		(rule__RightsRoleCommand__Alternatives)
		{ after(grammarAccess.getRightsRoleCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWindow_Unbounded
entryRuleWindow_Unbounded
:
{ before(grammarAccess.getWindow_UnboundedRule()); }
	 ruleWindow_Unbounded
{ after(grammarAccess.getWindow_UnboundedRule()); } 
	 EOF 
;

// Rule Window_Unbounded
ruleWindow_Unbounded 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWindow_UnboundedAccess().getUNBOUNDEDKeyword()); }
		UNBOUNDED
		{ after(grammarAccess.getWindow_UnboundedAccess().getUNBOUNDEDKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWindow_Timebased
entryRuleWindow_Timebased
:
{ before(grammarAccess.getWindow_TimebasedRule()); }
	 ruleWindow_Timebased
{ after(grammarAccess.getWindow_TimebasedRule()); } 
	 EOF 
;

// Rule Window_Timebased
ruleWindow_Timebased 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWindow_TimebasedAccess().getGroup()); }
		(rule__Window_Timebased__Group__0)
		{ after(grammarAccess.getWindow_TimebasedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWindow_Tuplebased
entryRuleWindow_Tuplebased
:
{ before(grammarAccess.getWindow_TuplebasedRule()); }
	 ruleWindow_Tuplebased
{ after(grammarAccess.getWindow_TuplebasedRule()); } 
	 EOF 
;

// Rule Window_Tuplebased
ruleWindow_Tuplebased 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWindow_TuplebasedAccess().getGroup()); }
		(rule__Window_Tuplebased__Group__0)
		{ after(grammarAccess.getWindow_TuplebasedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionsModel
entryRuleExpressionsModel
:
{ before(grammarAccess.getExpressionsModelRule()); }
	 ruleExpressionsModel
{ after(grammarAccess.getExpressionsModelRule()); } 
	 EOF 
;

// Rule ExpressionsModel
ruleExpressionsModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionsModelAccess().getGroup()); }
		(rule__ExpressionsModel__Group__0)
		{ after(grammarAccess.getExpressionsModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
		ruleOr
		{ after(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualitiy
entryRuleEqualitiy
:
{ before(grammarAccess.getEqualitiyRule()); }
	 ruleEqualitiy
{ after(grammarAccess.getEqualitiyRule()); } 
	 EOF 
;

// Rule Equalitiy
ruleEqualitiy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualitiyAccess().getGroup()); }
		(rule__Equalitiy__Group__0)
		{ after(grammarAccess.getEqualitiyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus
:
{ before(grammarAccess.getPlusOrMinusRule()); }
	 rulePlusOrMinus
{ after(grammarAccess.getPlusOrMinusRule()); } 
	 EOF 
;

// Rule PlusOrMinus
rulePlusOrMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup()); }
		(rule__PlusOrMinus__Group__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv
:
{ before(grammarAccess.getMulOrDivRule()); }
	 ruleMulOrDiv
{ after(grammarAccess.getMulOrDivRule()); } 
	 EOF 
;

// Rule MulOrDiv
ruleMulOrDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup()); }
		(rule__MulOrDiv__Group__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicWithoutAttributeRef
entryRuleAtomicWithoutAttributeRef
:
{ before(grammarAccess.getAtomicWithoutAttributeRefRule()); }
	 ruleAtomicWithoutAttributeRef
{ after(grammarAccess.getAtomicWithoutAttributeRefRule()); } 
	 EOF 
;

// Rule AtomicWithoutAttributeRef
ruleAtomicWithoutAttributeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getAlternatives()); }
		(rule__AtomicWithoutAttributeRef__Alternatives)
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CreateKeyword
ruleCreateKeyword
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateKeywordAccess().getAlternatives()); }
		(rule__CreateKeyword__Alternatives)
		{ after(grammarAccess.getCreateKeywordAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_1_0()); }
		(rule__Statement__TypeAssignment_1_0)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_1_1()); }
		(rule__Statement__TypeAssignment_1_1)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_1_2()); }
		(rule__Statement__TypeAssignment_1_2)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_1_3()); }
		(rule__Statement__TypeAssignment_1_3)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_1_4()); }
		(rule__Statement__TypeAssignment_1_4)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_1_5()); }
		(rule__Statement__TypeAssignment_1_5)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_1_6()); }
		(rule__Statement__TypeAssignment_1_6)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_1_7()); }
		(rule__Statement__TypeAssignment_1_7)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_1_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_1_8()); }
		(rule__Statement__TypeAssignment_1_8)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_1_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_1_9()); }
		(rule__Statement__TypeAssignment_1_9)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_1_9()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTypeAssignment_1_10()); }
		(rule__Statement__TypeAssignment_1_10)
		{ after(grammarAccess.getStatementAccess().getTypeAssignment_1_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getAsteriskKeyword_2_0()); }
		Asterisk
		{ after(grammarAccess.getSelectAccess().getAsteriskKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectAccess().getGroup_2_1()); }
		(rule__Select__Group_2_1__0)
		{ after(grammarAccess.getSelectAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getAttributeAssignment_0()); }
		(rule__Argument__AttributeAssignment_0)
		{ after(grammarAccess.getArgumentAccess().getAttributeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentAccess().getExpressionAssignment_1()); }
		(rule__Argument__ExpressionAssignment_1)
		{ after(grammarAccess.getArgumentAccess().getExpressionAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getGroup_0()); }
		(rule__Source__Group_0__0)
		{ after(grammarAccess.getSourceAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSourceAccess().getGroup_1()); }
		(rule__Source__Group_1__0)
		{ after(grammarAccess.getSourceAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Alternatives_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getUnboundedAssignment_0_1_1_0()); }
		(rule__Source__UnboundedAssignment_0_1_1_0)
		{ after(grammarAccess.getSourceAccess().getUnboundedAssignment_0_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSourceAccess().getTimeAssignment_0_1_1_1()); }
		(rule__Source__TimeAssignment_0_1_1_1)
		{ after(grammarAccess.getSourceAccess().getTimeAssignment_0_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getSourceAccess().getTupleAssignment_0_1_1_2()); }
		(rule__Source__TupleAssignment_0_1_1_2)
		{ after(grammarAccess.getSourceAccess().getTupleAssignment_0_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeNameAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeNameAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeNameAccess().getGroup_1()); }
		(rule__AttributeName__Group_1__0)
		{ after(grammarAccess.getAttributeNameAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeNameAccess().getGroup_2()); }
		(rule__AttributeName__Group_2__0)
		{ after(grammarAccess.getAttributeNameAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getGroup_0_0()); }
		(rule__SelectExpression__Group_0_0__0)
		{ after(grammarAccess.getSelectExpressionAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionAccess().getGroup_0_1()); }
		(rule__SelectExpression__Group_0_1__0)
		{ after(grammarAccess.getSelectExpressionAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__OperatorsAlternatives_0_0_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getOperatorsPlusSignKeyword_0_0_1_0_0_0()); }
		PlusSign
		{ after(grammarAccess.getSelectExpressionAccess().getOperatorsPlusSignKeyword_0_0_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionAccess().getOperatorsHyphenMinusKeyword_0_0_1_0_0_1()); }
		HyphenMinus
		{ after(grammarAccess.getSelectExpressionAccess().getOperatorsHyphenMinusKeyword_0_0_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionAccess().getOperatorsAsteriskKeyword_0_0_1_0_0_2()); }
		Asterisk
		{ after(grammarAccess.getSelectExpressionAccess().getOperatorsAsteriskKeyword_0_0_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionAccess().getOperatorsSolidusKeyword_0_0_1_0_0_3()); }
		Solidus
		{ after(grammarAccess.getSelectExpressionAccess().getOperatorsSolidusKeyword_0_0_1_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExpressionsAlternatives_0_0_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_0_0_1_1_0_0()); }
		ruleExpressionComponentConstantOrAttribute
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_0_0_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentOnlyWithFunctionParserRuleCall_0_0_1_1_0_1()); }
		ruleExpressionComponentOnlyWithFunction
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentOnlyWithFunctionParserRuleCall_0_0_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__OperatorsAlternatives_0_1_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getOperatorsPlusSignKeyword_0_1_1_0_0_0()); }
		PlusSign
		{ after(grammarAccess.getSelectExpressionAccess().getOperatorsPlusSignKeyword_0_1_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionAccess().getOperatorsHyphenMinusKeyword_0_1_1_0_0_1()); }
		HyphenMinus
		{ after(grammarAccess.getSelectExpressionAccess().getOperatorsHyphenMinusKeyword_0_1_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionAccess().getOperatorsAsteriskKeyword_0_1_1_0_0_2()); }
		Asterisk
		{ after(grammarAccess.getSelectExpressionAccess().getOperatorsAsteriskKeyword_0_1_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionAccess().getOperatorsSolidusKeyword_0_1_1_0_0_3()); }
		Solidus
		{ after(grammarAccess.getSelectExpressionAccess().getOperatorsSolidusKeyword_0_1_1_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExpressionsAlternatives_0_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_0_1_1_1_0_0()); }
		ruleExpressionComponentConstantOrAttribute
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_0_1_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentOnlyWithFunctionParserRuleCall_0_1_1_1_0_1()); }
		ruleExpressionComponentOnlyWithFunction
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentOnlyWithFunctionParserRuleCall_0_1_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getGroup_1_0()); }
		(rule__SelectExpressionWithoutAliasDefinition__Group_1_0__0)
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getGroup_1_1()); }
		(rule__SelectExpressionWithoutAliasDefinition__Group_1_1__0)
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__OperatorsAlternatives_1_0_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsPlusSignKeyword_1_0_1_0_0_0()); }
		PlusSign
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsPlusSignKeyword_1_0_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsHyphenMinusKeyword_1_0_1_0_0_1()); }
		HyphenMinus
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsHyphenMinusKeyword_1_0_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAsteriskKeyword_1_0_1_0_0_2()); }
		Asterisk
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAsteriskKeyword_1_0_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsSolidusKeyword_1_0_1_0_0_3()); }
		Solidus
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsSolidusKeyword_1_0_1_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__ExpressionsAlternatives_1_0_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_1_0_1_1_0_0()); }
		ruleExpressionComponentConstantOrAttribute
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_1_0_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentOnlyWithFunctionParserRuleCall_1_0_1_1_0_1()); }
		ruleExpressionComponentOnlyWithFunction
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentOnlyWithFunctionParserRuleCall_1_0_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__OperatorsAlternatives_1_1_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsPlusSignKeyword_1_1_1_0_0_0()); }
		PlusSign
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsPlusSignKeyword_1_1_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsHyphenMinusKeyword_1_1_1_0_0_1()); }
		HyphenMinus
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsHyphenMinusKeyword_1_1_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAsteriskKeyword_1_1_1_0_0_2()); }
		Asterisk
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAsteriskKeyword_1_1_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsSolidusKeyword_1_1_1_0_0_3()); }
		Solidus
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsSolidusKeyword_1_1_1_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__ExpressionsAlternatives_1_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_1_1_1_1_0_0()); }
		ruleExpressionComponentConstantOrAttribute
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_1_1_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentOnlyWithFunctionParserRuleCall_1_1_1_1_0_1()); }
		ruleExpressionComponentOnlyWithFunction
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentOnlyWithFunctionParserRuleCall_1_1_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithOnlyAttributeOrConstant__OperatorsAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsPlusSignKeyword_1_0_0_0()); }
		PlusSign
		{ after(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsPlusSignKeyword_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsHyphenMinusKeyword_1_0_0_1()); }
		HyphenMinus
		{ after(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsHyphenMinusKeyword_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsAsteriskKeyword_1_0_0_2()); }
		Asterisk
		{ after(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsAsteriskKeyword_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsSolidusKeyword_1_0_0_3()); }
		Solidus
		{ after(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsSolidusKeyword_1_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentConstantOrAttribute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionComponentConstantOrAttributeAccess().getValueAssignment_0()); }
		(rule__ExpressionComponentConstantOrAttribute__ValueAssignment_0)
		{ after(grammarAccess.getExpressionComponentConstantOrAttributeAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionComponentConstantOrAttributeAccess().getValueAssignment_1()); }
		(rule__ExpressionComponentConstantOrAttribute__ValueAssignment_1)
		{ after(grammarAccess.getExpressionComponentConstantOrAttributeAccess().getValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentFunctionOrConstant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getGroup_0()); }
		(rule__ExpressionComponentFunctionOrConstant__Group_0__0)
		{ after(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getValueAssignment_1()); }
		(rule__ExpressionComponentFunctionOrConstant__ValueAssignment_1)
		{ after(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamToAccess().getStatementAssignment_3_0()); }
		(rule__StreamTo__StatementAssignment_3_0)
		{ after(grammarAccess.getStreamToAccess().getStatementAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getStreamToAccess().getInputnameAssignment_3_1()); }
		(rule__StreamTo__InputnameAssignment_3_1)
		{ after(grammarAccess.getStreamToAccess().getInputnameAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__NameAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropCommandAccess().getNameSINKKeyword_2_0_0()); }
		SINK
		{ after(grammarAccess.getDropCommandAccess().getNameSINKKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDropCommandAccess().getNameSTREAMKeyword_2_0_1()); }
		STREAM
		{ after(grammarAccess.getDropCommandAccess().getNameSTREAMKeyword_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDropCommandAccess().getNameVIEWKeyword_2_0_2()); }
		VIEW
		{ after(grammarAccess.getDropCommandAccess().getNameVIEWKeyword_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserCommandAccess().getNameCREATEKeyword_1_0_0()); }
		CREATE
		{ after(grammarAccess.getUserCommandAccess().getNameCREATEKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUserCommandAccess().getNameALTERKeyword_1_0_1()); }
		ALTER
		{ after(grammarAccess.getUserCommandAccess().getNameALTERKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getUserCommandAccess().getNameDROPKeyword_1_0_2()); }
		DROP
		{ after(grammarAccess.getUserCommandAccess().getNameDROPKeyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__SubjectAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserCommandAccess().getSubjectUSERKeyword_2_0_0()); }
		USER
		{ after(grammarAccess.getUserCommandAccess().getSubjectUSERKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUserCommandAccess().getSubjectROLEKeyword_2_0_1()); }
		ROLE
		{ after(grammarAccess.getUserCommandAccess().getSubjectROLEKeyword_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getUserCommandAccess().getSubjectTENANTKeyword_2_0_2()); }
		TENANT
		{ after(grammarAccess.getUserCommandAccess().getSubjectTENANTKeyword_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsCommandAccess().getGroup_0()); }
		(rule__RightsCommand__Group_0__0)
		{ after(grammarAccess.getRightsCommandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRightsCommandAccess().getGroup_1()); }
		(rule__RightsCommand__Group_1__0)
		{ after(grammarAccess.getRightsCommandAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsRoleCommandAccess().getGroup_0()); }
		(rule__RightsRoleCommand__Group_0__0)
		{ after(grammarAccess.getRightsRoleCommandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRightsRoleCommandAccess().getGroup_1()); }
		(rule__RightsRoleCommand__Group_1__0)
		{ after(grammarAccess.getRightsRoleCommandAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualitiyAccess().getOpEqualsSignKeyword_1_1_0_0()); }
		EqualsSign
		{ after(grammarAccess.getEqualitiyAccess().getOpEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualitiyAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		ExclamationMarkEqualsSign
		{ after(grammarAccess.getEqualitiyAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
		GreaterThanSignEqualsSign
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
		LessThanSignEqualsSign
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_2()); }
		LessThanSign
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_3()); }
		GreaterThanSign
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
		(rule__PlusOrMinus__Group_1_0_0__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
		(rule__PlusOrMinus__Group_1_0_1__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
		Asterisk
		{ after(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); }
		Solidus
		{ after(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
		(rule__Atomic__Group_2__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
		(rule__Atomic__Group_3__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_4()); }
		(rule__Atomic__Group_4__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAlternatives_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueTRUEKeyword_3_1_0_0()); }
		TRUE
		{ after(grammarAccess.getAtomicAccess().getValueTRUEKeyword_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getValueFALSEKeyword_3_1_0_1()); }
		FALSE
		{ after(grammarAccess.getAtomicAccess().getValueFALSEKeyword_3_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAssignment_4_1_0()); }
		(rule__Atomic__ValueAssignment_4_1_0)
		{ after(grammarAccess.getAtomicAccess().getValueAssignment_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getValueAssignment_4_1_1()); }
		(rule__Atomic__ValueAssignment_4_1_1)
		{ after(grammarAccess.getAtomicAccess().getValueAssignment_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_0()); }
		(rule__AtomicWithoutAttributeRef__Group_0__0)
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_1()); }
		(rule__AtomicWithoutAttributeRef__Group_1__0)
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_2()); }
		(rule__AtomicWithoutAttributeRef__Group_2__0)
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_3()); }
		(rule__AtomicWithoutAttributeRef__Group_3__0)
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__ValueAlternatives_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueTRUEKeyword_3_1_0_0()); }
		TRUE
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueTRUEKeyword_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueFALSEKeyword_3_1_0_1()); }
		FALSE
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueFALSEKeyword_3_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateKeyword__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateKeywordAccess().getCREATEEnumLiteralDeclaration_0()); }
		(CREATE)
		{ after(grammarAccess.getCreateKeywordAccess().getCREATEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCreateKeywordAccess().getATTACHEnumLiteralDeclaration_1()); }
		(ATTACH)
		{ after(grammarAccess.getCreateKeywordAccess().getATTACHEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAction_0()); }
	()
	{ after(grammarAccess.getStatementAccess().getStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
	rule__Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getAlternatives_1()); }
	(rule__Statement__Alternatives_1)
	{ after(grammarAccess.getStatementAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_2()); }
	(Semicolon)?
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getNameAssignment_0()); }
	(rule__Select__NameAssignment_0)
	{ after(grammarAccess.getSelectAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__1__Impl
	rule__Select__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getDistinctAssignment_1()); }
	(rule__Select__DistinctAssignment_1)?
	{ after(grammarAccess.getSelectAccess().getDistinctAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__2__Impl
	rule__Select__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getAlternatives_2()); }
	(rule__Select__Alternatives_2)
	{ after(grammarAccess.getSelectAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__3__Impl
	rule__Select__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_3()); }
	(rule__Select__Group_3__0)
	{ after(grammarAccess.getSelectAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__4__Impl
	rule__Select__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_4()); }
	(rule__Select__Group_4__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__5__Impl
	rule__Select__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_5()); }
	(rule__Select__Group_5__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_6()); }
	(rule__Select__Group_6__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_1__0__Impl
	rule__Select__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectAccess().getArgumentsAssignment_2_1_0()); }
		(rule__Select__ArgumentsAssignment_2_1_0)
		{ after(grammarAccess.getSelectAccess().getArgumentsAssignment_2_1_0()); }
	)
	(
		{ before(grammarAccess.getSelectAccess().getArgumentsAssignment_2_1_0()); }
		(rule__Select__ArgumentsAssignment_2_1_0)*
		{ after(grammarAccess.getSelectAccess().getArgumentsAssignment_2_1_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_2_1_1()); }
	(rule__Select__Group_2_1_1__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_1_1__0__Impl
	rule__Select__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_2_1_1_0()); }
	Comma
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getArgumentsAssignment_2_1_1_1()); }
	(rule__Select__ArgumentsAssignment_2_1_1_1)
	{ after(grammarAccess.getSelectAccess().getArgumentsAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3__0__Impl
	rule__Select__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getFROMKeyword_3_0()); }
	FROM
	{ after(grammarAccess.getSelectAccess().getFROMKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3__1__Impl
	rule__Select__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectAccess().getSourcesAssignment_3_1()); }
		(rule__Select__SourcesAssignment_3_1)
		{ after(grammarAccess.getSelectAccess().getSourcesAssignment_3_1()); }
	)
	(
		{ before(grammarAccess.getSelectAccess().getSourcesAssignment_3_1()); }
		(rule__Select__SourcesAssignment_3_1)*
		{ after(grammarAccess.getSelectAccess().getSourcesAssignment_3_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_3_2()); }
	(rule__Select__Group_3_2__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3_2__0__Impl
	rule__Select__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_3_2_0()); }
	Comma
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSourcesAssignment_3_2_1()); }
	(rule__Select__SourcesAssignment_3_2_1)
	{ after(grammarAccess.getSelectAccess().getSourcesAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_4__0__Impl
	rule__Select__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getWHEREKeyword_4_0()); }
	WHERE
	{ after(grammarAccess.getSelectAccess().getWHEREKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getPredicatesAssignment_4_1()); }
	(rule__Select__PredicatesAssignment_4_1)
	{ after(grammarAccess.getSelectAccess().getPredicatesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5__0__Impl
	rule__Select__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGROUPKeyword_5_0()); }
	GROUP
	{ after(grammarAccess.getSelectAccess().getGROUPKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5__1__Impl
	rule__Select__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getBYKeyword_5_1()); }
	BY
	{ after(grammarAccess.getSelectAccess().getBYKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5__2__Impl
	rule__Select__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectAccess().getOrderAssignment_5_2()); }
		(rule__Select__OrderAssignment_5_2)
		{ after(grammarAccess.getSelectAccess().getOrderAssignment_5_2()); }
	)
	(
		{ before(grammarAccess.getSelectAccess().getOrderAssignment_5_2()); }
		(rule__Select__OrderAssignment_5_2)*
		{ after(grammarAccess.getSelectAccess().getOrderAssignment_5_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_5_3()); }
	(rule__Select__Group_5_3__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5_3__0__Impl
	rule__Select__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_5_3_0()); }
	Comma
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getOrderAssignment_5_3_1()); }
	(rule__Select__OrderAssignment_5_3_1)
	{ after(grammarAccess.getSelectAccess().getOrderAssignment_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6__0__Impl
	rule__Select__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getHAVINGKeyword_6_0()); }
	HAVING
	{ after(grammarAccess.getSelectAccess().getHAVINGKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getHavingAssignment_6_1()); }
	(rule__Select__HavingAssignment_6_1)
	{ after(grammarAccess.getSelectAccess().getHavingAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedStatement__Group__0__Impl
	rule__NestedStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedStatementAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getNestedStatementAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedStatement__Group__1__Impl
	rule__NestedStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedStatementAccess().getSelectParserRuleCall_1()); }
	ruleSelect
	{ after(grammarAccess.getNestedStatementAccess().getSelectParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedStatementAccess().getRightParenthesisKeyword_2()); }
	RightParenthesis
	{ after(grammarAccess.getNestedStatementAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0__0__Impl
	rule__Source__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getNameAssignment_0_0()); }
	(rule__Source__NameAssignment_0_0)
	{ after(grammarAccess.getSourceAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0__1__Impl
	rule__Source__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getGroup_0_1()); }
	(rule__Source__Group_0_1__0)?
	{ after(grammarAccess.getSourceAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getGroup_0_2()); }
	(rule__Source__Group_0_2__0)?
	{ after(grammarAccess.getSourceAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0_1__0__Impl
	rule__Source__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getLeftSquareBracketKeyword_0_1_0()); }
	LeftSquareBracket
	{ after(grammarAccess.getSourceAccess().getLeftSquareBracketKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0_1__1__Impl
	rule__Source__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getAlternatives_0_1_1()); }
	(rule__Source__Alternatives_0_1_1)
	{ after(grammarAccess.getSourceAccess().getAlternatives_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getRightSquareBracketKeyword_0_1_2()); }
	RightSquareBracket
	{ after(grammarAccess.getSourceAccess().getRightSquareBracketKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0_2__0__Impl
	rule__Source__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getASKeyword_0_2_0()); }
	AS
	{ after(grammarAccess.getSourceAccess().getASKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getAliasAssignment_0_2_1()); }
	(rule__Source__AliasAssignment_0_2_1)
	{ after(grammarAccess.getSourceAccess().getAliasAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_1__0__Impl
	rule__Source__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getNestedAssignment_1_0()); }
	(rule__Source__NestedAssignment_1_0)
	{ after(grammarAccess.getSourceAccess().getNestedAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_1__1__Impl
	rule__Source__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getASKeyword_1_1()); }
	AS
	{ after(grammarAccess.getSourceAccess().getASKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getAliasAssignment_1_2()); }
	(rule__Source__AliasAssignment_1_2)
	{ after(grammarAccess.getSourceAccess().getAliasAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
	(rule__Attribute__NameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getGroup_1()); }
	(rule__Attribute__Group_1__0)?
	{ after(grammarAccess.getAttributeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__0__Impl
	rule__Attribute__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getASKeyword_1_0()); }
	AS
	{ after(grammarAccess.getAttributeAccess().getASKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAliasAssignment_1_1()); }
	(rule__Attribute__AliasAssignment_1_1)
	{ after(grammarAccess.getAttributeAccess().getAliasAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeName__Group_1__0__Impl
	rule__AttributeName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeNameAccess().getSourceNameParserRuleCall_1_0()); }
	ruleSourceName
	{ after(grammarAccess.getAttributeNameAccess().getSourceNameParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeName__Group_1__1__Impl
	rule__AttributeName__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeNameAccess().getFullStopKeyword_1_1()); }
	FullStop
	{ after(grammarAccess.getAttributeNameAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeName__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeNameAccess().getIDTerminalRuleCall_1_2()); }
	RULE_ID
	{ after(grammarAccess.getAttributeNameAccess().getIDTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeName__Group_2__0__Impl
	rule__AttributeName__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeNameAccess().getSourceNameParserRuleCall_2_0()); }
	ruleSourceName
	{ after(grammarAccess.getAttributeNameAccess().getSourceNameParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeName__Group_2__1__Impl
	rule__AttributeName__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeNameAccess().getFullStopKeyword_2_1()); }
	FullStop
	{ after(grammarAccess.getAttributeNameAccess().getFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeName__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeNameAccess().getAsteriskKeyword_2_2()); }
	Asterisk
	{ after(grammarAccess.getAttributeNameAccess().getAsteriskKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeWithNestedStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeWithNestedStatement__Group__0__Impl
	rule__AttributeWithNestedStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeWithNestedStatementAccess().getValueAssignment_0()); }
	(rule__AttributeWithNestedStatement__ValueAssignment_0)
	{ after(grammarAccess.getAttributeWithNestedStatementAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeWithNestedStatement__Group__1__Impl
	rule__AttributeWithNestedStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeWithNestedStatementAccess().getINKeyword_1()); }
	IN
	{ after(grammarAccess.getAttributeWithNestedStatementAccess().getINKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeWithNestedStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeWithNestedStatementAccess().getNestedAssignment_2()); }
	(rule__AttributeWithNestedStatement__NestedAssignment_2)
	{ after(grammarAccess.getAttributeWithNestedStatementAccess().getNestedAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group__0__Impl
	rule__SelectExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getAlternatives_0()); }
	(rule__SelectExpression__Alternatives_0)
	{ after(grammarAccess.getSelectExpressionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getGroup_1()); }
	(rule__SelectExpression__Group_1__0)?
	{ after(grammarAccess.getSelectExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_0__0__Impl
	rule__SelectExpression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_0_0()); }
	(rule__SelectExpression__ExpressionsAssignment_0_0_0)
	{ after(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getGroup_0_0_1()); }
	(rule__SelectExpression__Group_0_0_1__0)*
	{ after(grammarAccess.getSelectExpressionAccess().getGroup_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_0_1__0__Impl
	rule__SelectExpression__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getOperatorsAssignment_0_0_1_0()); }
	(rule__SelectExpression__OperatorsAssignment_0_0_1_0)
	{ after(grammarAccess.getSelectExpressionAccess().getOperatorsAssignment_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_0_1_1()); }
	(rule__SelectExpression__ExpressionsAssignment_0_0_1_1)
	{ after(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_1__0__Impl
	rule__SelectExpression__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_1_0()); }
	(rule__SelectExpression__ExpressionsAssignment_0_1_0)
	{ after(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectExpressionAccess().getGroup_0_1_1()); }
		(rule__SelectExpression__Group_0_1_1__0)
		{ after(grammarAccess.getSelectExpressionAccess().getGroup_0_1_1()); }
	)
	(
		{ before(grammarAccess.getSelectExpressionAccess().getGroup_0_1_1()); }
		(rule__SelectExpression__Group_0_1_1__0)*
		{ after(grammarAccess.getSelectExpressionAccess().getGroup_0_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_1_1__0__Impl
	rule__SelectExpression__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getOperatorsAssignment_0_1_1_0()); }
	(rule__SelectExpression__OperatorsAssignment_0_1_1_0)
	{ after(grammarAccess.getSelectExpressionAccess().getOperatorsAssignment_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_1_1_1()); }
	(rule__SelectExpression__ExpressionsAssignment_0_1_1_1)
	{ after(grammarAccess.getSelectExpressionAccess().getExpressionsAssignment_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_1__0__Impl
	rule__SelectExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getASKeyword_1_0()); }
	AS
	{ after(grammarAccess.getSelectExpressionAccess().getASKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getAliasAssignment_1_1()); }
	(rule__SelectExpression__AliasAssignment_1_1)
	{ after(grammarAccess.getSelectExpressionAccess().getAliasAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpressionWithoutAliasDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithoutAliasDefinition__Group__0__Impl
	rule__SelectExpressionWithoutAliasDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getSelectExpressionWithOnlyAttributeOrConstantParserRuleCall_0()); }
	ruleSelectExpressionWithOnlyAttributeOrConstant
	{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getSelectExpressionWithOnlyAttributeOrConstantParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithoutAliasDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getAlternatives_1()); }
	(rule__SelectExpressionWithoutAliasDefinition__Alternatives_1)
	{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpressionWithoutAliasDefinition__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithoutAliasDefinition__Group_1_0__0__Impl
	rule__SelectExpressionWithoutAliasDefinition__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsAssignment_1_0_0()); }
	(rule__SelectExpressionWithoutAliasDefinition__ExpressionsAssignment_1_0_0)
	{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithoutAliasDefinition__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getGroup_1_0_1()); }
	(rule__SelectExpressionWithoutAliasDefinition__Group_1_0_1__0)*
	{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getGroup_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpressionWithoutAliasDefinition__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithoutAliasDefinition__Group_1_0_1__0__Impl
	rule__SelectExpressionWithoutAliasDefinition__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAssignment_1_0_1_0()); }
	(rule__SelectExpressionWithoutAliasDefinition__OperatorsAssignment_1_0_1_0)
	{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAssignment_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithoutAliasDefinition__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsAssignment_1_0_1_1()); }
	(rule__SelectExpressionWithoutAliasDefinition__ExpressionsAssignment_1_0_1_1)
	{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsAssignment_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpressionWithoutAliasDefinition__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithoutAliasDefinition__Group_1_1__0__Impl
	rule__SelectExpressionWithoutAliasDefinition__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsAssignment_1_1_0()); }
	(rule__SelectExpressionWithoutAliasDefinition__ExpressionsAssignment_1_1_0)
	{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithoutAliasDefinition__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getGroup_1_1_1()); }
		(rule__SelectExpressionWithoutAliasDefinition__Group_1_1_1__0)
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getGroup_1_1_1()); }
	)
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getGroup_1_1_1()); }
		(rule__SelectExpressionWithoutAliasDefinition__Group_1_1_1__0)*
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getGroup_1_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpressionWithoutAliasDefinition__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithoutAliasDefinition__Group_1_1_1__0__Impl
	rule__SelectExpressionWithoutAliasDefinition__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAssignment_1_1_1_0()); }
	(rule__SelectExpressionWithoutAliasDefinition__OperatorsAssignment_1_1_1_0)
	{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAssignment_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithoutAliasDefinition__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsAssignment_1_1_1_1()); }
	(rule__SelectExpressionWithoutAliasDefinition__ExpressionsAssignment_1_1_1_1)
	{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpressionWithOnlyAttributeOrConstant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithOnlyAttributeOrConstant__Group__0__Impl
	rule__SelectExpressionWithOnlyAttributeOrConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithOnlyAttributeOrConstant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getExpressionsAssignment_0()); }
	(rule__SelectExpressionWithOnlyAttributeOrConstant__ExpressionsAssignment_0)
	{ after(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getExpressionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithOnlyAttributeOrConstant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithOnlyAttributeOrConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithOnlyAttributeOrConstant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getGroup_1()); }
	(rule__SelectExpressionWithOnlyAttributeOrConstant__Group_1__0)*
	{ after(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpressionWithOnlyAttributeOrConstant__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithOnlyAttributeOrConstant__Group_1__0__Impl
	rule__SelectExpressionWithOnlyAttributeOrConstant__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithOnlyAttributeOrConstant__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsAssignment_1_0()); }
	(rule__SelectExpressionWithOnlyAttributeOrConstant__OperatorsAssignment_1_0)
	{ after(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithOnlyAttributeOrConstant__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpressionWithOnlyAttributeOrConstant__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithOnlyAttributeOrConstant__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getExpressionsAssignment_1_1()); }
	(rule__SelectExpressionWithOnlyAttributeOrConstant__ExpressionsAssignment_1_1)
	{ after(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getExpressionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
	()
	{ after(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getValueAssignment_3()); }
	(rule__Function__ValueAssignment_3)
	{ after(grammarAccess.getFunctionAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionComponentFunctionOrConstant__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionComponentFunctionOrConstant__Group_0__0__Impl
	rule__ExpressionComponentFunctionOrConstant__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentFunctionOrConstant__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getFunctionParserRuleCall_0_0()); }
	ruleFunction
	{ after(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getFunctionParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentFunctionOrConstant__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionComponentFunctionOrConstant__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentFunctionOrConstant__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getExpressionComponentValueAction_0_1()); }
	()
	{ after(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getExpressionComponentValueAction_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionComponentOnlyWithFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionComponentOnlyWithFunction__Group__0__Impl
	rule__ExpressionComponentOnlyWithFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentOnlyWithFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionComponentOnlyWithFunctionAccess().getFunctionParserRuleCall_0()); }
	ruleFunction
	{ after(grammarAccess.getExpressionComponentOnlyWithFunctionAccess().getFunctionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentOnlyWithFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionComponentOnlyWithFunction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentOnlyWithFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionComponentOnlyWithFunctionAccess().getExpressionComponentValueAction_1()); }
	()
	{ after(grammarAccess.getExpressionComponentOnlyWithFunctionAccess().getExpressionComponentValueAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateParameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__0__Impl
	rule__CreateParameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getWRAPPERKeyword_0()); }
	WRAPPER
	{ after(grammarAccess.getCreateParametersAccess().getWRAPPERKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__1__Impl
	rule__CreateParameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getWrapperAssignment_1()); }
	(rule__CreateParameters__WrapperAssignment_1)
	{ after(grammarAccess.getCreateParametersAccess().getWrapperAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__2__Impl
	rule__CreateParameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getPROTOCOLKeyword_2()); }
	PROTOCOL
	{ after(grammarAccess.getCreateParametersAccess().getPROTOCOLKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__3__Impl
	rule__CreateParameters__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getProtocolAssignment_3()); }
	(rule__CreateParameters__ProtocolAssignment_3)
	{ after(grammarAccess.getCreateParametersAccess().getProtocolAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__4__Impl
	rule__CreateParameters__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getTRANSPORTKeyword_4()); }
	TRANSPORT
	{ after(grammarAccess.getCreateParametersAccess().getTRANSPORTKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__5__Impl
	rule__CreateParameters__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getTransportAssignment_5()); }
	(rule__CreateParameters__TransportAssignment_5)
	{ after(grammarAccess.getCreateParametersAccess().getTransportAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__6__Impl
	rule__CreateParameters__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getDATAHANDLERKeyword_6()); }
	DATAHANDLER
	{ after(grammarAccess.getCreateParametersAccess().getDATAHANDLERKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__7__Impl
	rule__CreateParameters__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getDatahandlerAssignment_7()); }
	(rule__CreateParameters__DatahandlerAssignment_7)
	{ after(grammarAccess.getCreateParametersAccess().getDatahandlerAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__8__Impl
	rule__CreateParameters__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getOPTIONSKeyword_8()); }
	OPTIONS
	{ after(grammarAccess.getCreateParametersAccess().getOPTIONSKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__9__Impl
	rule__CreateParameters__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getLeftParenthesisKeyword_9()); }
	LeftParenthesis
	{ after(grammarAccess.getCreateParametersAccess().getLeftParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__10__Impl
	rule__CreateParameters__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCreateParametersAccess().getGroup_10()); }
		(rule__CreateParameters__Group_10__0)
		{ after(grammarAccess.getCreateParametersAccess().getGroup_10()); }
	)
	(
		{ before(grammarAccess.getCreateParametersAccess().getGroup_10()); }
		(rule__CreateParameters__Group_10__0)*
		{ after(grammarAccess.getCreateParametersAccess().getGroup_10()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__11__Impl
	rule__CreateParameters__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getGroup_11()); }
	(rule__CreateParameters__Group_11__0)?
	{ after(grammarAccess.getCreateParametersAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getRightParenthesisKeyword_12()); }
	RightParenthesis
	{ after(grammarAccess.getCreateParametersAccess().getRightParenthesisKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateParameters__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group_10__0__Impl
	rule__CreateParameters__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getKeysAssignment_10_0()); }
	(rule__CreateParameters__KeysAssignment_10_0)
	{ after(grammarAccess.getCreateParametersAccess().getKeysAssignment_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getValuesAssignment_10_1()); }
	(rule__CreateParameters__ValuesAssignment_10_1)
	{ after(grammarAccess.getCreateParametersAccess().getValuesAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateParameters__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group_11__0__Impl
	rule__CreateParameters__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getCommaKeyword_11_0()); }
	Comma
	{ after(grammarAccess.getCreateParametersAccess().getCommaKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group_11__1__Impl
	rule__CreateParameters__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getKeysAssignment_11_1()); }
	(rule__CreateParameters__KeysAssignment_11_1)
	{ after(grammarAccess.getCreateParametersAccess().getKeysAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_11__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateParameters__Group_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__Group_11__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateParametersAccess().getValuesAssignment_11_2()); }
	(rule__CreateParameters__ValuesAssignment_11_2)
	{ after(grammarAccess.getCreateParametersAccess().getValuesAssignment_11_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__0__Impl
	rule__AttributeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getNameAssignment_0()); }
	(rule__AttributeDefinition__NameAssignment_0)
	{ after(grammarAccess.getAttributeDefinitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__1__Impl
	rule__AttributeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getAttributeDefinitionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__2__Impl
	rule__AttributeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getArgumentsAssignment_2()); }
	(rule__AttributeDefinition__ArgumentsAssignment_2)
	{ after(grammarAccess.getAttributeDefinitionAccess().getArgumentsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__3__Impl
	rule__AttributeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getArgumentsAssignment_3()); }
	(rule__AttributeDefinition__ArgumentsAssignment_3)
	{ after(grammarAccess.getAttributeDefinitionAccess().getArgumentsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__4__Impl
	rule__AttributeDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getGroup_4()); }
	(rule__AttributeDefinition__Group_4__0)*
	{ after(grammarAccess.getAttributeDefinitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getAttributeDefinitionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4__0__Impl
	rule__AttributeDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getCommaKeyword_4_0()); }
	Comma
	{ after(grammarAccess.getAttributeDefinitionAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4__1__Impl
	rule__AttributeDefinition__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getArgumentsAssignment_4_1()); }
	(rule__AttributeDefinition__ArgumentsAssignment_4_1)
	{ after(grammarAccess.getAttributeDefinitionAccess().getArgumentsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getArgumentsAssignment_4_2()); }
	(rule__AttributeDefinition__ArgumentsAssignment_4_2)
	{ after(grammarAccess.getAttributeDefinitionAccess().getArgumentsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateStream1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStream1__Group__0__Impl
	rule__CreateStream1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStream1Access().getKeywordAssignment_0()); }
	(rule__CreateStream1__KeywordAssignment_0)
	{ after(grammarAccess.getCreateStream1Access().getKeywordAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStream1__Group__1__Impl
	rule__CreateStream1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStream1Access().getSTREAMKeyword_1()); }
	STREAM
	{ after(grammarAccess.getCreateStream1Access().getSTREAMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStream1__Group__2__Impl
	rule__CreateStream1__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStream1Access().getAttributesAssignment_2()); }
	(rule__CreateStream1__AttributesAssignment_2)
	{ after(grammarAccess.getCreateStream1Access().getAttributesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStream1__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStream1Access().getParsAssignment_3()); }
	(rule__CreateStream1__ParsAssignment_3)
	{ after(grammarAccess.getCreateStream1Access().getParsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateSink1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateSink1__Group__0__Impl
	rule__CreateSink1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateSink1Access().getKeywordAssignment_0()); }
	(rule__CreateSink1__KeywordAssignment_0)
	{ after(grammarAccess.getCreateSink1Access().getKeywordAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateSink1__Group__1__Impl
	rule__CreateSink1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateSink1Access().getSINKKeyword_1()); }
	SINK
	{ after(grammarAccess.getCreateSink1Access().getSINKKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateSink1__Group__2__Impl
	rule__CreateSink1__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateSink1Access().getAttributesAssignment_2()); }
	(rule__CreateSink1__AttributesAssignment_2)
	{ after(grammarAccess.getCreateSink1Access().getAttributesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateSink1__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateSink1Access().getParsAssignment_3()); }
	(rule__CreateSink1__ParsAssignment_3)
	{ after(grammarAccess.getCreateSink1Access().getParsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateStreamChannel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__0__Impl
	rule__CreateStreamChannel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getKeywordAssignment_0()); }
	(rule__CreateStreamChannel__KeywordAssignment_0)
	{ after(grammarAccess.getCreateStreamChannelAccess().getKeywordAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__1__Impl
	rule__CreateStreamChannel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getSTREAMKeyword_1()); }
	STREAM
	{ after(grammarAccess.getCreateStreamChannelAccess().getSTREAMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__2__Impl
	rule__CreateStreamChannel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getAttributesAssignment_2()); }
	(rule__CreateStreamChannel__AttributesAssignment_2)
	{ after(grammarAccess.getCreateStreamChannelAccess().getAttributesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__3__Impl
	rule__CreateStreamChannel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getCHANNELKeyword_3()); }
	CHANNEL
	{ after(grammarAccess.getCreateStreamChannelAccess().getCHANNELKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__4__Impl
	rule__CreateStreamChannel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getHostAssignment_4()); }
	(rule__CreateStreamChannel__HostAssignment_4)
	{ after(grammarAccess.getCreateStreamChannelAccess().getHostAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__5__Impl
	rule__CreateStreamChannel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getColonKeyword_5()); }
	Colon
	{ after(grammarAccess.getCreateStreamChannelAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamChannel__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamChannelAccess().getPortAssignment_6()); }
	(rule__CreateStreamChannel__PortAssignment_6)
	{ after(grammarAccess.getCreateStreamChannelAccess().getPortAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateStreamFile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__0__Impl
	rule__CreateStreamFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getKeywordAssignment_0()); }
	(rule__CreateStreamFile__KeywordAssignment_0)
	{ after(grammarAccess.getCreateStreamFileAccess().getKeywordAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__1__Impl
	rule__CreateStreamFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getSTREAMKeyword_1()); }
	STREAM
	{ after(grammarAccess.getCreateStreamFileAccess().getSTREAMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__2__Impl
	rule__CreateStreamFile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getAttributesAssignment_2()); }
	(rule__CreateStreamFile__AttributesAssignment_2)
	{ after(grammarAccess.getCreateStreamFileAccess().getAttributesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__3__Impl
	rule__CreateStreamFile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getFILEKeyword_3()); }
	FILE
	{ after(grammarAccess.getCreateStreamFileAccess().getFILEKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__4__Impl
	rule__CreateStreamFile__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getFilenameAssignment_4()); }
	(rule__CreateStreamFile__FilenameAssignment_4)
	{ after(grammarAccess.getCreateStreamFileAccess().getFilenameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__5__Impl
	rule__CreateStreamFile__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getASKeyword_5()); }
	AS
	{ after(grammarAccess.getCreateStreamFileAccess().getASKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateStreamFile__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateStreamFileAccess().getTypeAssignment_6()); }
	(rule__CreateStreamFile__TypeAssignment_6)
	{ after(grammarAccess.getCreateStreamFileAccess().getTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateView__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateView__Group__0__Impl
	rule__CreateView__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateViewAccess().getVIEWKeyword_0()); }
	VIEW
	{ after(grammarAccess.getCreateViewAccess().getVIEWKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateView__Group__1__Impl
	rule__CreateView__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateViewAccess().getNameAssignment_1()); }
	(rule__CreateView__NameAssignment_1)
	{ after(grammarAccess.getCreateViewAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateView__Group__2__Impl
	rule__CreateView__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateViewAccess().getFROMKeyword_2()); }
	FROM
	{ after(grammarAccess.getCreateViewAccess().getFROMKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateView__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateViewAccess().getSelectAssignment_3()); }
	(rule__CreateView__SelectAssignment_3)
	{ after(grammarAccess.getCreateViewAccess().getSelectAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamTo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamTo__Group__0__Impl
	rule__StreamTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamToAccess().getSTREAMKeyword_0()); }
	STREAM
	{ after(grammarAccess.getStreamToAccess().getSTREAMKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamTo__Group__1__Impl
	rule__StreamTo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamToAccess().getTOKeyword_1()); }
	TO
	{ after(grammarAccess.getStreamToAccess().getTOKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamTo__Group__2__Impl
	rule__StreamTo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamToAccess().getNameAssignment_2()); }
	(rule__StreamTo__NameAssignment_2)
	{ after(grammarAccess.getStreamToAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamTo__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamToAccess().getAlternatives_3()); }
	(rule__StreamTo__Alternatives_3)
	{ after(grammarAccess.getStreamToAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DropCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropCommand__Group__0__Impl
	rule__DropCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropCommandAccess().getDropCommandAction_0()); }
	()
	{ after(grammarAccess.getDropCommandAccess().getDropCommandAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropCommand__Group__1__Impl
	rule__DropCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropCommandAccess().getDROPKeyword_1()); }
	DROP
	{ after(grammarAccess.getDropCommandAccess().getDROPKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropCommand__Group__2__Impl
	rule__DropCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropCommandAccess().getNameAssignment_2()); }
	(rule__DropCommand__NameAssignment_2)
	{ after(grammarAccess.getDropCommandAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropCommand__Group__3__Impl
	rule__DropCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropCommandAccess().getStreamAssignment_3()); }
	(rule__DropCommand__StreamAssignment_3)
	{ after(grammarAccess.getDropCommandAccess().getStreamAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropCommandAccess().getGroup_4()); }
	(rule__DropCommand__Group_4__0)?
	{ after(grammarAccess.getDropCommandAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DropCommand__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropCommand__Group_4__0__Impl
	rule__DropCommand__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropCommandAccess().getExistsAssignment_4_0()); }
	(rule__DropCommand__ExistsAssignment_4_0)
	{ after(grammarAccess.getDropCommandAccess().getExistsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropCommand__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropCommandAccess().getEXISTSKeyword_4_1()); }
	EXISTS
	{ after(grammarAccess.getDropCommandAccess().getEXISTSKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UserCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserCommand__Group__0__Impl
	rule__UserCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserCommandAccess().getUserCommandAction_0()); }
	()
	{ after(grammarAccess.getUserCommandAccess().getUserCommandAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserCommand__Group__1__Impl
	rule__UserCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserCommandAccess().getNameAssignment_1()); }
	(rule__UserCommand__NameAssignment_1)
	{ after(grammarAccess.getUserCommandAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserCommand__Group__2__Impl
	rule__UserCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserCommandAccess().getSubjectAssignment_2()); }
	(rule__UserCommand__SubjectAssignment_2)
	{ after(grammarAccess.getUserCommandAccess().getSubjectAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserCommand__Group__3__Impl
	rule__UserCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserCommandAccess().getSubjectNameAssignment_3()); }
	(rule__UserCommand__SubjectNameAssignment_3)
	{ after(grammarAccess.getUserCommandAccess().getSubjectNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserCommandAccess().getGroup_4()); }
	(rule__UserCommand__Group_4__0)?
	{ after(grammarAccess.getUserCommandAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UserCommand__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserCommand__Group_4__0__Impl
	rule__UserCommand__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserCommandAccess().getIDENTIFIEDKeyword_4_0()); }
	IDENTIFIED
	{ after(grammarAccess.getUserCommandAccess().getIDENTIFIEDKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserCommand__Group_4__1__Impl
	rule__UserCommand__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserCommandAccess().getBYKeyword_4_1()); }
	BY
	{ after(grammarAccess.getUserCommandAccess().getBYKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UserCommand__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserCommandAccess().getPasswordAssignment_4_2()); }
	(rule__UserCommand__PasswordAssignment_4_2)
	{ after(grammarAccess.getUserCommandAccess().getPasswordAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsCommand__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0__0__Impl
	rule__RightsCommand__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getRightsCommandAction_0_0()); }
	()
	{ after(grammarAccess.getRightsCommandAccess().getRightsCommandAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0__1__Impl
	rule__RightsCommand__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getNameAssignment_0_1()); }
	(rule__RightsCommand__NameAssignment_0_1)
	{ after(grammarAccess.getRightsCommandAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0__2__Impl
	rule__RightsCommand__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getOperationsAssignment_0_2()); }
	(rule__RightsCommand__OperationsAssignment_0_2)
	{ after(grammarAccess.getRightsCommandAccess().getOperationsAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0__3__Impl
	rule__RightsCommand__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getGroup_0_3()); }
	(rule__RightsCommand__Group_0_3__0)*
	{ after(grammarAccess.getRightsCommandAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0__4__Impl
	rule__RightsCommand__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getGroup_0_4()); }
	(rule__RightsCommand__Group_0_4__0)?
	{ after(grammarAccess.getRightsCommandAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0__5__Impl
	rule__RightsCommand__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getTOKeyword_0_5()); }
	TO
	{ after(grammarAccess.getRightsCommandAccess().getTOKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getUserAssignment_0_6()); }
	(rule__RightsCommand__UserAssignment_0_6)
	{ after(grammarAccess.getRightsCommandAccess().getUserAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsCommand__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0_3__0__Impl
	rule__RightsCommand__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getCommaKeyword_0_3_0()); }
	Comma
	{ after(grammarAccess.getRightsCommandAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getOperationsAssignment_0_3_1()); }
	(rule__RightsCommand__OperationsAssignment_0_3_1)
	{ after(grammarAccess.getRightsCommandAccess().getOperationsAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsCommand__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0_4__0__Impl
	rule__RightsCommand__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getONKeyword_0_4_0()); }
	ON
	{ after(grammarAccess.getRightsCommandAccess().getONKeyword_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0_4__1__Impl
	rule__RightsCommand__Group_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getOperations2Assignment_0_4_1()); }
	(rule__RightsCommand__Operations2Assignment_0_4_1)
	{ after(grammarAccess.getRightsCommandAccess().getOperations2Assignment_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getGroup_0_4_2()); }
	(rule__RightsCommand__Group_0_4_2__0)*
	{ after(grammarAccess.getRightsCommandAccess().getGroup_0_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsCommand__Group_0_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0_4_2__0__Impl
	rule__RightsCommand__Group_0_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getCommaKeyword_0_4_2_0()); }
	Comma
	{ after(grammarAccess.getRightsCommandAccess().getCommaKeyword_0_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_0_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_0_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getOperations2Assignment_0_4_2_1()); }
	(rule__RightsCommand__Operations2Assignment_0_4_2_1)
	{ after(grammarAccess.getRightsCommandAccess().getOperations2Assignment_0_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsCommand__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1__0__Impl
	rule__RightsCommand__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getRightsCommandAction_1_0()); }
	()
	{ after(grammarAccess.getRightsCommandAccess().getRightsCommandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1__1__Impl
	rule__RightsCommand__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getNameAssignment_1_1()); }
	(rule__RightsCommand__NameAssignment_1_1)
	{ after(grammarAccess.getRightsCommandAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1__2__Impl
	rule__RightsCommand__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getOperationsAssignment_1_2()); }
	(rule__RightsCommand__OperationsAssignment_1_2)
	{ after(grammarAccess.getRightsCommandAccess().getOperationsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1__3__Impl
	rule__RightsCommand__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getGroup_1_3()); }
	(rule__RightsCommand__Group_1_3__0)*
	{ after(grammarAccess.getRightsCommandAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1__4__Impl
	rule__RightsCommand__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getGroup_1_4()); }
	(rule__RightsCommand__Group_1_4__0)?
	{ after(grammarAccess.getRightsCommandAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1__5__Impl
	rule__RightsCommand__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getFROMKeyword_1_5()); }
	FROM
	{ after(grammarAccess.getRightsCommandAccess().getFROMKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getUserAssignment_1_6()); }
	(rule__RightsCommand__UserAssignment_1_6)
	{ after(grammarAccess.getRightsCommandAccess().getUserAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsCommand__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1_3__0__Impl
	rule__RightsCommand__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getCommaKeyword_1_3_0()); }
	Comma
	{ after(grammarAccess.getRightsCommandAccess().getCommaKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getOperationsAssignment_1_3_1()); }
	(rule__RightsCommand__OperationsAssignment_1_3_1)
	{ after(grammarAccess.getRightsCommandAccess().getOperationsAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsCommand__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1_4__0__Impl
	rule__RightsCommand__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getONKeyword_1_4_0()); }
	ON
	{ after(grammarAccess.getRightsCommandAccess().getONKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1_4__1__Impl
	rule__RightsCommand__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getOperations2Assignment_1_4_1()); }
	(rule__RightsCommand__Operations2Assignment_1_4_1)
	{ after(grammarAccess.getRightsCommandAccess().getOperations2Assignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getGroup_1_4_2()); }
	(rule__RightsCommand__Group_1_4_2__0)*
	{ after(grammarAccess.getRightsCommandAccess().getGroup_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsCommand__Group_1_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1_4_2__0__Impl
	rule__RightsCommand__Group_1_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getCommaKeyword_1_4_2_0()); }
	Comma
	{ after(grammarAccess.getRightsCommandAccess().getCommaKeyword_1_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsCommand__Group_1_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Group_1_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsCommandAccess().getOperations2Assignment_1_4_2_1()); }
	(rule__RightsCommand__Operations2Assignment_1_4_2_1)
	{ after(grammarAccess.getRightsCommandAccess().getOperations2Assignment_1_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsRoleCommand__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_0__0__Impl
	rule__RightsRoleCommand__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getRightsRoleCommandAction_0_0()); }
	()
	{ after(grammarAccess.getRightsRoleCommandAccess().getRightsRoleCommandAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_0__1__Impl
	rule__RightsRoleCommand__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getNameAssignment_0_1()); }
	(rule__RightsRoleCommand__NameAssignment_0_1)
	{ after(grammarAccess.getRightsRoleCommandAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_0__2__Impl
	rule__RightsRoleCommand__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getROLEKeyword_0_2()); }
	ROLE
	{ after(grammarAccess.getRightsRoleCommandAccess().getROLEKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_0__3__Impl
	rule__RightsRoleCommand__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getOperationsAssignment_0_3()); }
	(rule__RightsRoleCommand__OperationsAssignment_0_3)
	{ after(grammarAccess.getRightsRoleCommandAccess().getOperationsAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_0__4__Impl
	rule__RightsRoleCommand__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getGroup_0_4()); }
	(rule__RightsRoleCommand__Group_0_4__0)*
	{ after(grammarAccess.getRightsRoleCommandAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_0__5__Impl
	rule__RightsRoleCommand__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getTOKeyword_0_5()); }
	TO
	{ after(grammarAccess.getRightsRoleCommandAccess().getTOKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getUserAssignment_0_6()); }
	(rule__RightsRoleCommand__UserAssignment_0_6)
	{ after(grammarAccess.getRightsRoleCommandAccess().getUserAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsRoleCommand__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_0_4__0__Impl
	rule__RightsRoleCommand__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getCommaKeyword_0_4_0()); }
	Comma
	{ after(grammarAccess.getRightsRoleCommandAccess().getCommaKeyword_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getOperationsAssignment_0_4_1()); }
	(rule__RightsRoleCommand__OperationsAssignment_0_4_1)
	{ after(grammarAccess.getRightsRoleCommandAccess().getOperationsAssignment_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsRoleCommand__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_1__0__Impl
	rule__RightsRoleCommand__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getRightsRoleCommandAction_1_0()); }
	()
	{ after(grammarAccess.getRightsRoleCommandAccess().getRightsRoleCommandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_1__1__Impl
	rule__RightsRoleCommand__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getNameAssignment_1_1()); }
	(rule__RightsRoleCommand__NameAssignment_1_1)
	{ after(grammarAccess.getRightsRoleCommandAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_1__2__Impl
	rule__RightsRoleCommand__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getROLEKeyword_1_2()); }
	ROLE
	{ after(grammarAccess.getRightsRoleCommandAccess().getROLEKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_1__3__Impl
	rule__RightsRoleCommand__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getOperationsAssignment_1_3()); }
	(rule__RightsRoleCommand__OperationsAssignment_1_3)
	{ after(grammarAccess.getRightsRoleCommandAccess().getOperationsAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_1__4__Impl
	rule__RightsRoleCommand__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getGroup_1_4()); }
	(rule__RightsRoleCommand__Group_1_4__0)*
	{ after(grammarAccess.getRightsRoleCommandAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_1__5__Impl
	rule__RightsRoleCommand__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getFROMKeyword_1_5()); }
	FROM
	{ after(grammarAccess.getRightsRoleCommandAccess().getFROMKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getUserAssignment_1_6()); }
	(rule__RightsRoleCommand__UserAssignment_1_6)
	{ after(grammarAccess.getRightsRoleCommandAccess().getUserAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightsRoleCommand__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_1_4__0__Impl
	rule__RightsRoleCommand__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getCommaKeyword_1_4_0()); }
	Comma
	{ after(grammarAccess.getRightsRoleCommandAccess().getCommaKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightsRoleCommand__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightsRoleCommandAccess().getOperationsAssignment_1_4_1()); }
	(rule__RightsRoleCommand__OperationsAssignment_1_4_1)
	{ after(grammarAccess.getRightsRoleCommandAccess().getOperationsAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window_Timebased__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group__0__Impl
	rule__Window_Timebased__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getSIZEKeyword_0()); }
	SIZE
	{ after(grammarAccess.getWindow_TimebasedAccess().getSIZEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group__1__Impl
	rule__Window_Timebased__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getSizeAssignment_1()); }
	(rule__Window_Timebased__SizeAssignment_1)
	{ after(grammarAccess.getWindow_TimebasedAccess().getSizeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group__2__Impl
	rule__Window_Timebased__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getUnitAssignment_2()); }
	(rule__Window_Timebased__UnitAssignment_2)
	{ after(grammarAccess.getWindow_TimebasedAccess().getUnitAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group__3__Impl
	rule__Window_Timebased__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getGroup_3()); }
	(rule__Window_Timebased__Group_3__0)?
	{ after(grammarAccess.getWindow_TimebasedAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getTIMEKeyword_4()); }
	TIME
	{ after(grammarAccess.getWindow_TimebasedAccess().getTIMEKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window_Timebased__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group_3__0__Impl
	rule__Window_Timebased__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getADVANCEKeyword_3_0()); }
	ADVANCE
	{ after(grammarAccess.getWindow_TimebasedAccess().getADVANCEKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group_3__1__Impl
	rule__Window_Timebased__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getAdvance_sizeAssignment_3_1()); }
	(rule__Window_Timebased__Advance_sizeAssignment_3_1)
	{ after(grammarAccess.getWindow_TimebasedAccess().getAdvance_sizeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Timebased__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TimebasedAccess().getAdvance_unitAssignment_3_2()); }
	(rule__Window_Timebased__Advance_unitAssignment_3_2)
	{ after(grammarAccess.getWindow_TimebasedAccess().getAdvance_unitAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window_Tuplebased__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group__0__Impl
	rule__Window_Tuplebased__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getSIZEKeyword_0()); }
	SIZE
	{ after(grammarAccess.getWindow_TuplebasedAccess().getSIZEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group__1__Impl
	rule__Window_Tuplebased__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getSizeAssignment_1()); }
	(rule__Window_Tuplebased__SizeAssignment_1)
	{ after(grammarAccess.getWindow_TuplebasedAccess().getSizeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group__2__Impl
	rule__Window_Tuplebased__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getGroup_2()); }
	(rule__Window_Tuplebased__Group_2__0)?
	{ after(grammarAccess.getWindow_TuplebasedAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group__3__Impl
	rule__Window_Tuplebased__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getTUPLEKeyword_3()); }
	TUPLE
	{ after(grammarAccess.getWindow_TuplebasedAccess().getTUPLEKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getGroup_4()); }
	(rule__Window_Tuplebased__Group_4__0)?
	{ after(grammarAccess.getWindow_TuplebasedAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window_Tuplebased__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group_2__0__Impl
	rule__Window_Tuplebased__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getADVANCEKeyword_2_0()); }
	ADVANCE
	{ after(grammarAccess.getWindow_TuplebasedAccess().getADVANCEKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getAdvance_sizeAssignment_2_1()); }
	(rule__Window_Tuplebased__Advance_sizeAssignment_2_1)
	{ after(grammarAccess.getWindow_TuplebasedAccess().getAdvance_sizeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window_Tuplebased__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group_4__0__Impl
	rule__Window_Tuplebased__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getPARTITIONKeyword_4_0()); }
	PARTITION
	{ after(grammarAccess.getWindow_TuplebasedAccess().getPARTITIONKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group_4__1__Impl
	rule__Window_Tuplebased__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getBYKeyword_4_1()); }
	BY
	{ after(grammarAccess.getWindow_TuplebasedAccess().getBYKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window_Tuplebased__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindow_TuplebasedAccess().getPartition_attributeAssignment_4_2()); }
	(rule__Window_Tuplebased__Partition_attributeAssignment_4_2)
	{ after(grammarAccess.getWindow_TuplebasedAccess().getPartition_attributeAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionsModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionsModel__Group__0__Impl
	rule__ExpressionsModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionsModelAccess().getExpressionsModelAction_0()); }
	()
	{ after(grammarAccess.getExpressionsModelAccess().getExpressionsModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionsModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionsModelAccess().getElementsAssignment_1()); }
	(rule__ExpressionsModel__ElementsAssignment_1)
	{ after(grammarAccess.getExpressionsModelAccess().getElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getORKeyword_1_1()); }
	OR
	{ after(grammarAccess.getOrAccess().getORKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
	(rule__Or__RightAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualitiyParserRuleCall_0()); }
	ruleEqualitiy
	{ after(grammarAccess.getAndAccess().getEqualitiyParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getANDKeyword_1_1()); }
	AND
	{ after(grammarAccess.getAndAccess().getANDKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
	(rule__And__RightAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equalitiy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group__0__Impl
	rule__Equalitiy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualitiyAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getGroup_1()); }
	(rule__Equalitiy__Group_1__0)*
	{ after(grammarAccess.getEqualitiyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equalitiy__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group_1__0__Impl
	rule__Equalitiy__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getEqualityLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualitiyAccess().getEqualityLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group_1__1__Impl
	rule__Equalitiy__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getOpAssignment_1_1()); }
	(rule__Equalitiy__OpAssignment_1_1)
	{ after(grammarAccess.getEqualitiyAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equalitiy__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualitiyAccess().getRightAssignment_1_2()); }
	(rule__Equalitiy__RightAssignment_1_2)
	{ after(grammarAccess.getEqualitiyAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
	rulePlusOrMinus
	{ after(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getComparisionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
	(rule__Comparison__OpAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
	(rule__Comparison__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__0__Impl
	rule__PlusOrMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
	ruleMulOrDiv
	{ after(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
	(rule__PlusOrMinus__Group_1__0)*
	{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__0__Impl
	rule__PlusOrMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
	(rule__PlusOrMinus__Alternatives_1_0)
	{ after(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
	(rule__PlusOrMinus__RightAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__0__Impl
	rule__PlusOrMinus__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
	PlusSign
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__0__Impl
	rule__PlusOrMinus__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
	HyphenMinus
	{ after(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__0__Impl
	rule__MulOrDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getGroup_1()); }
	(rule__MulOrDiv__Group_1__0)*
	{ after(grammarAccess.getMulOrDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__0__Impl
	rule__MulOrDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__1__Impl
	rule__MulOrDiv__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); }
	(rule__MulOrDiv__OpAssignment_1_1)
	{ after(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); }
	(rule__MulOrDiv__RightAssignment_1_2)
	{ after(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getBracketAction_0_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getBracketAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); }
	LeftParenthesis
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
	rule__Primary__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getInnerAssignment_0_2()); }
	(rule__Primary__InnerAssignment_0_2)
	{ after(grammarAccess.getPrimaryAccess().getInnerAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); }
	RightParenthesis
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNOTAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNOTAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNOTKeyword_1_1()); }
	NOT
	{ after(grammarAccess.getPrimaryAccess().getNOTKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
	(rule__Primary__ExpressionAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
	(rule__Atomic__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getFloatConstantAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getFloatConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
	(rule__Atomic__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getStringConstantAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getStringConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
	(rule__Atomic__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getBoolConstantAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getBoolConstantAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
	(rule__Atomic__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__0__Impl
	rule__Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getAttributeRefAction_4_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getAttributeRefAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getAlternatives_4_1()); }
	(rule__Atomic__Alternatives_4_1)
	{ after(grammarAccess.getAtomicAccess().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicWithoutAttributeRef__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_0__0__Impl
	rule__AtomicWithoutAttributeRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_0_1()); }
	(rule__AtomicWithoutAttributeRef__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicWithoutAttributeRef__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_1__0__Impl
	rule__AtomicWithoutAttributeRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getFloatConstantAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getFloatConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_1_1()); }
	(rule__AtomicWithoutAttributeRef__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicWithoutAttributeRef__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_2__0__Impl
	rule__AtomicWithoutAttributeRef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getStringConstantAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getStringConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_2_1()); }
	(rule__AtomicWithoutAttributeRef__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicWithoutAttributeRef__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_3__0__Impl
	rule__AtomicWithoutAttributeRef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getBoolConstantAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getBoolConstantAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicWithoutAttributeRef__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_3_1()); }
	(rule__AtomicWithoutAttributeRef__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__StatementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_0()); }
		ruleStatement
		{ after(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeSelectParserRuleCall_1_0_0()); }
		ruleSelect
		{ after(grammarAccess.getStatementAccess().getTypeSelectParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeStreamToParserRuleCall_1_1_0()); }
		ruleStreamTo
		{ after(grammarAccess.getStatementAccess().getTypeStreamToParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeDropCommandParserRuleCall_1_2_0()); }
		ruleDropCommand
		{ after(grammarAccess.getStatementAccess().getTypeDropCommandParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeUserCommandParserRuleCall_1_3_0()); }
		ruleUserCommand
		{ after(grammarAccess.getStatementAccess().getTypeUserCommandParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeRightsCommandParserRuleCall_1_4_0()); }
		ruleRightsCommand
		{ after(grammarAccess.getStatementAccess().getTypeRightsCommandParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeRightsRoleCommandParserRuleCall_1_5_0()); }
		ruleRightsRoleCommand
		{ after(grammarAccess.getStatementAccess().getTypeRightsRoleCommandParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeCreateStream1ParserRuleCall_1_6_0()); }
		ruleCreateStream1
		{ after(grammarAccess.getStatementAccess().getTypeCreateStream1ParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_1_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeCreateSink1ParserRuleCall_1_7_0()); }
		ruleCreateSink1
		{ after(grammarAccess.getStatementAccess().getTypeCreateSink1ParserRuleCall_1_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_1_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeCreateStreamChannelParserRuleCall_1_8_0()); }
		ruleCreateStreamChannel
		{ after(grammarAccess.getStatementAccess().getTypeCreateStreamChannelParserRuleCall_1_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_1_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeCreateStreamFileParserRuleCall_1_9_0()); }
		ruleCreateStreamFile
		{ after(grammarAccess.getStatementAccess().getTypeCreateStreamFileParserRuleCall_1_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_1_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeCreateViewParserRuleCall_1_10_0()); }
		ruleCreateView
		{ after(grammarAccess.getStatementAccess().getTypeCreateViewParserRuleCall_1_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getNameSELECTKeyword_0_0()); }
		(
			{ before(grammarAccess.getSelectAccess().getNameSELECTKeyword_0_0()); }
			SELECT
			{ after(grammarAccess.getSelectAccess().getNameSELECTKeyword_0_0()); }
		)
		{ after(grammarAccess.getSelectAccess().getNameSELECTKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__DistinctAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_1_0()); }
		(
			{ before(grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_1_0()); }
			DISTINCT
			{ after(grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_1_0()); }
		)
		{ after(grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ArgumentsAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getArgumentsArgumentParserRuleCall_2_1_0_0()); }
		ruleArgument
		{ after(grammarAccess.getSelectAccess().getArgumentsArgumentParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ArgumentsAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getArgumentsArgumentParserRuleCall_2_1_1_1_0()); }
		ruleArgument
		{ after(grammarAccess.getSelectAccess().getArgumentsArgumentParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__SourcesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_3_1_0()); }
		ruleSource
		{ after(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__SourcesAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_3_2_1_0()); }
		ruleSource
		{ after(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__PredicatesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getPredicatesExpressionsModelParserRuleCall_4_1_0()); }
		ruleExpressionsModel
		{ after(grammarAccess.getSelectAccess().getPredicatesExpressionsModelParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__OrderAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_5_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__OrderAssignment_5_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_5_3_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_5_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__HavingAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getHavingExpressionsModelParserRuleCall_6_1_0()); }
		ruleExpressionsModel
		{ after(grammarAccess.getSelectAccess().getHavingExpressionsModelParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__AttributeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getAttributeAttributeParserRuleCall_0_0()); }
		ruleAttribute
		{ after(grammarAccess.getArgumentAccess().getAttributeAttributeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getExpressionSelectExpressionParserRuleCall_1_0()); }
		ruleSelectExpression
		{ after(grammarAccess.getArgumentAccess().getExpressionSelectExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getNameSourceNameParserRuleCall_0_0_0()); }
		ruleSourceName
		{ after(grammarAccess.getSourceAccess().getNameSourceNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__UnboundedAssignment_0_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getUnboundedWindow_UnboundedParserRuleCall_0_1_1_0_0()); }
		ruleWindow_Unbounded
		{ after(grammarAccess.getSourceAccess().getUnboundedWindow_UnboundedParserRuleCall_0_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__TimeAssignment_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getTimeWindow_TimebasedParserRuleCall_0_1_1_1_0()); }
		ruleWindow_Timebased
		{ after(grammarAccess.getSourceAccess().getTimeWindow_TimebasedParserRuleCall_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__TupleAssignment_0_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getTupleWindow_TuplebasedParserRuleCall_0_1_1_2_0()); }
		ruleWindow_Tuplebased
		{ after(grammarAccess.getSourceAccess().getTupleWindow_TuplebasedParserRuleCall_0_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__AliasAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getAliasAliasParserRuleCall_0_2_1_0()); }
		ruleAlias
		{ after(grammarAccess.getSourceAccess().getAliasAliasParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__NestedAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getNestedNestedStatementParserRuleCall_1_0_0()); }
		ruleNestedStatement
		{ after(grammarAccess.getSourceAccess().getNestedNestedStatementParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__AliasAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getAliasAliasParserRuleCall_1_2_0()); }
		ruleAlias
		{ after(grammarAccess.getSourceAccess().getAliasAliasParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameAttributeNameParserRuleCall_0_0()); }
		ruleAttributeName
		{ after(grammarAccess.getAttributeAccess().getNameAttributeNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AliasAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getAliasAliasParserRuleCall_1_1_0()); }
		ruleAlias
		{ after(grammarAccess.getAttributeAccess().getAliasAliasParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithoutAliasDefinition__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeWithoutAliasDefinitionAccess().getNameAttributeNameParserRuleCall_0()); }
		ruleAttributeName
		{ after(grammarAccess.getAttributeWithoutAliasDefinitionAccess().getNameAttributeNameParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeWithNestedStatementAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_0_0()); }
		ruleAttributeWithoutAliasDefinition
		{ after(grammarAccess.getAttributeWithNestedStatementAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeWithNestedStatement__NestedAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeWithNestedStatementAccess().getNestedNestedStatementParserRuleCall_2_0()); }
		ruleNestedStatement
		{ after(grammarAccess.getAttributeWithNestedStatementAccess().getNestedNestedStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExpressionsAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentFunctionOrConstantParserRuleCall_0_0_0_0()); }
		ruleExpressionComponentFunctionOrConstant
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentFunctionOrConstantParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__OperatorsAssignment_0_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getOperatorsAlternatives_0_0_1_0_0()); }
		(rule__SelectExpression__OperatorsAlternatives_0_0_1_0_0)
		{ after(grammarAccess.getSelectExpressionAccess().getOperatorsAlternatives_0_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExpressionsAssignment_0_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsAlternatives_0_0_1_1_0()); }
		(rule__SelectExpression__ExpressionsAlternatives_0_0_1_1_0)
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsAlternatives_0_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExpressionsAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentOnlyWithAttributeParserRuleCall_0_1_0_0()); }
		ruleExpressionComponentOnlyWithAttribute
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentOnlyWithAttributeParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__OperatorsAssignment_0_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getOperatorsAlternatives_0_1_1_0_0()); }
		(rule__SelectExpression__OperatorsAlternatives_0_1_1_0_0)
		{ after(grammarAccess.getSelectExpressionAccess().getOperatorsAlternatives_0_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExpressionsAssignment_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExpressionsAlternatives_0_1_1_1_0()); }
		(rule__SelectExpression__ExpressionsAlternatives_0_1_1_1_0)
		{ after(grammarAccess.getSelectExpressionAccess().getExpressionsAlternatives_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__AliasAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getAliasAliasParserRuleCall_1_1_0()); }
		ruleAlias
		{ after(grammarAccess.getSelectExpressionAccess().getAliasAliasParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__ExpressionsAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentFunctionOrConstantParserRuleCall_1_0_0_0()); }
		ruleExpressionComponentFunctionOrConstant
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentFunctionOrConstantParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__OperatorsAssignment_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAlternatives_1_0_1_0_0()); }
		(rule__SelectExpressionWithoutAliasDefinition__OperatorsAlternatives_1_0_1_0_0)
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAlternatives_1_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__ExpressionsAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsAlternatives_1_0_1_1_0()); }
		(rule__SelectExpressionWithoutAliasDefinition__ExpressionsAlternatives_1_0_1_1_0)
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsAlternatives_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__ExpressionsAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentOnlyWithAttributeParserRuleCall_1_1_0_0()); }
		ruleExpressionComponentOnlyWithAttribute
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentOnlyWithAttributeParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__OperatorsAssignment_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAlternatives_1_1_1_0_0()); }
		(rule__SelectExpressionWithoutAliasDefinition__OperatorsAlternatives_1_1_1_0_0)
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAlternatives_1_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithoutAliasDefinition__ExpressionsAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsAlternatives_1_1_1_1_0()); }
		(rule__SelectExpressionWithoutAliasDefinition__ExpressionsAlternatives_1_1_1_1_0)
		{ after(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsAlternatives_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithOnlyAttributeOrConstant__ExpressionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_0_0()); }
		ruleExpressionComponentConstantOrAttribute
		{ after(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithOnlyAttributeOrConstant__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsAlternatives_1_0_0()); }
		(rule__SelectExpressionWithOnlyAttributeOrConstant__OperatorsAlternatives_1_0_0)
		{ after(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpressionWithOnlyAttributeOrConstant__ExpressionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_1_1_0()); }
		ruleExpressionComponentConstantOrAttribute
		{ after(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getValueSelectExpressionWithoutAliasDefinitionParserRuleCall_3_0()); }
		ruleSelectExpressionWithoutAliasDefinition
		{ after(grammarAccess.getFunctionAccess().getValueSelectExpressionWithoutAliasDefinitionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentConstantOrAttribute__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionComponentConstantOrAttributeAccess().getValueAtomicWithoutAttributeRefParserRuleCall_0_0()); }
		ruleAtomicWithoutAttributeRef
		{ after(grammarAccess.getExpressionComponentConstantOrAttributeAccess().getValueAtomicWithoutAttributeRefParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentConstantOrAttribute__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionComponentConstantOrAttributeAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_1_0()); }
		ruleAttributeWithoutAliasDefinition
		{ after(grammarAccess.getExpressionComponentConstantOrAttributeAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentFunctionOrConstant__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getValueAtomicWithoutAttributeRefParserRuleCall_1_0()); }
		ruleAtomicWithoutAttributeRef
		{ after(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getValueAtomicWithoutAttributeRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionComponentOnlyWithAttribute__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionComponentOnlyWithAttributeAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_0()); }
		ruleAttributeWithoutAliasDefinition
		{ after(grammarAccess.getExpressionComponentOnlyWithAttributeAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAliasAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getAliasAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__WrapperAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getWrapperSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getWrapperSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__ProtocolAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getProtocolSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getProtocolSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__TransportAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getTransportSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getTransportSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__DatahandlerAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getDatahandlerSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getDatahandlerSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__KeysAssignment_10_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getKeysSTRINGTerminalRuleCall_10_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getKeysSTRINGTerminalRuleCall_10_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__ValuesAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getValuesSTRINGTerminalRuleCall_10_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getValuesSTRINGTerminalRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__KeysAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getKeysSTRINGTerminalRuleCall_11_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getKeysSTRINGTerminalRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateParameters__ValuesAssignment_11_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateParametersAccess().getValuesSTRINGTerminalRuleCall_11_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateParametersAccess().getValuesSTRINGTerminalRuleCall_11_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__ArgumentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getArgumentsIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeDefinitionAccess().getArgumentsIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__ArgumentsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getArgumentsIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeDefinitionAccess().getArgumentsIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__ArgumentsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getArgumentsIDTerminalRuleCall_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeDefinitionAccess().getArgumentsIDTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__ArgumentsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getArgumentsIDTerminalRuleCall_4_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeDefinitionAccess().getArgumentsIDTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__KeywordAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStream1Access().getKeywordCreateKeywordEnumRuleCall_0_0()); }
		ruleCreateKeyword
		{ after(grammarAccess.getCreateStream1Access().getKeywordCreateKeywordEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__AttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStream1Access().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
		ruleAttributeDefinition
		{ after(grammarAccess.getCreateStream1Access().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStream1__ParsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStream1Access().getParsCreateParametersParserRuleCall_3_0()); }
		ruleCreateParameters
		{ after(grammarAccess.getCreateStream1Access().getParsCreateParametersParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__KeywordAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateSink1Access().getKeywordCreateKeywordEnumRuleCall_0_0()); }
		ruleCreateKeyword
		{ after(grammarAccess.getCreateSink1Access().getKeywordCreateKeywordEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__AttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateSink1Access().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
		ruleAttributeDefinition
		{ after(grammarAccess.getCreateSink1Access().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSink1__ParsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateSink1Access().getParsCreateParametersParserRuleCall_3_0()); }
		ruleCreateParameters
		{ after(grammarAccess.getCreateSink1Access().getParsCreateParametersParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__KeywordAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamChannelAccess().getKeywordCreateKeywordEnumRuleCall_0_0()); }
		ruleCreateKeyword
		{ after(grammarAccess.getCreateStreamChannelAccess().getKeywordCreateKeywordEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__AttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamChannelAccess().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
		ruleAttributeDefinition
		{ after(grammarAccess.getCreateStreamChannelAccess().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__HostAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamChannelAccess().getHostIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateStreamChannelAccess().getHostIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamChannel__PortAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamChannelAccess().getPortINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getCreateStreamChannelAccess().getPortINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__KeywordAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamFileAccess().getKeywordCreateKeywordEnumRuleCall_0_0()); }
		ruleCreateKeyword
		{ after(grammarAccess.getCreateStreamFileAccess().getKeywordCreateKeywordEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__AttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamFileAccess().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
		ruleAttributeDefinition
		{ after(grammarAccess.getCreateStreamFileAccess().getAttributesAttributeDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__FilenameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamFileAccess().getFilenameSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateStreamFileAccess().getFilenameSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStreamFile__TypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStreamFileAccess().getTypeIDTerminalRuleCall_6_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateStreamFileAccess().getTypeIDTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateViewAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateViewAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateView__SelectAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateViewAccess().getSelectNestedStatementParserRuleCall_3_0()); }
		ruleNestedStatement
		{ after(grammarAccess.getCreateViewAccess().getSelectNestedStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamToAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStreamToAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__StatementAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamToAccess().getStatementSelectParserRuleCall_3_0_0()); }
		ruleSelect
		{ after(grammarAccess.getStreamToAccess().getStatementSelectParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamTo__InputnameAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamToAccess().getInputnameIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStreamToAccess().getInputnameIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropCommandAccess().getNameAlternatives_2_0()); }
		(rule__DropCommand__NameAlternatives_2_0)
		{ after(grammarAccess.getDropCommandAccess().getNameAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__StreamAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropCommandAccess().getStreamIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getDropCommandAccess().getStreamIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropCommand__ExistsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropCommandAccess().getExistsIFKeyword_4_0_0()); }
		(
			{ before(grammarAccess.getDropCommandAccess().getExistsIFKeyword_4_0_0()); }
			IF
			{ after(grammarAccess.getDropCommandAccess().getExistsIFKeyword_4_0_0()); }
		)
		{ after(grammarAccess.getDropCommandAccess().getExistsIFKeyword_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserCommandAccess().getNameAlternatives_1_0()); }
		(rule__UserCommand__NameAlternatives_1_0)
		{ after(grammarAccess.getUserCommandAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__SubjectAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserCommandAccess().getSubjectAlternatives_2_0()); }
		(rule__UserCommand__SubjectAlternatives_2_0)
		{ after(grammarAccess.getUserCommandAccess().getSubjectAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__SubjectNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserCommandAccess().getSubjectNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getUserCommandAccess().getSubjectNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UserCommand__PasswordAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserCommandAccess().getPasswordSTRINGTerminalRuleCall_4_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getUserCommandAccess().getPasswordSTRINGTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsCommandAccess().getNameGRANTKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getRightsCommandAccess().getNameGRANTKeyword_0_1_0()); }
			GRANT
			{ after(grammarAccess.getRightsCommandAccess().getNameGRANTKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getRightsCommandAccess().getNameGRANTKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__OperationsAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsCommandAccess().getOperationsIDTerminalRuleCall_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsCommandAccess().getOperationsIDTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__OperationsAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsCommandAccess().getOperationsIDTerminalRuleCall_0_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsCommandAccess().getOperationsIDTerminalRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Operations2Assignment_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsCommandAccess().getOperations2IDTerminalRuleCall_0_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsCommandAccess().getOperations2IDTerminalRuleCall_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Operations2Assignment_0_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsCommandAccess().getOperations2IDTerminalRuleCall_0_4_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsCommandAccess().getOperations2IDTerminalRuleCall_0_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__UserAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsCommandAccess().getUserIDTerminalRuleCall_0_6_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsCommandAccess().getUserIDTerminalRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsCommandAccess().getNameREVOKEKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getRightsCommandAccess().getNameREVOKEKeyword_1_1_0()); }
			REVOKE
			{ after(grammarAccess.getRightsCommandAccess().getNameREVOKEKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getRightsCommandAccess().getNameREVOKEKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__OperationsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsCommandAccess().getOperationsIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsCommandAccess().getOperationsIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__OperationsAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsCommandAccess().getOperationsIDTerminalRuleCall_1_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsCommandAccess().getOperationsIDTerminalRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Operations2Assignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsCommandAccess().getOperations2IDTerminalRuleCall_1_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsCommandAccess().getOperations2IDTerminalRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__Operations2Assignment_1_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsCommandAccess().getOperations2IDTerminalRuleCall_1_4_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsCommandAccess().getOperations2IDTerminalRuleCall_1_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsCommand__UserAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsCommandAccess().getUserIDTerminalRuleCall_1_6_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsCommandAccess().getUserIDTerminalRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsRoleCommandAccess().getNameGRANTKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getRightsRoleCommandAccess().getNameGRANTKeyword_0_1_0()); }
			GRANT
			{ after(grammarAccess.getRightsRoleCommandAccess().getNameGRANTKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getRightsRoleCommandAccess().getNameGRANTKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__OperationsAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsRoleCommandAccess().getOperationsIDTerminalRuleCall_0_3_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsRoleCommandAccess().getOperationsIDTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__OperationsAssignment_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsRoleCommandAccess().getOperationsIDTerminalRuleCall_0_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsRoleCommandAccess().getOperationsIDTerminalRuleCall_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__UserAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsRoleCommandAccess().getUserIDTerminalRuleCall_0_6_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsRoleCommandAccess().getUserIDTerminalRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsRoleCommandAccess().getNameREVOKEKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getRightsRoleCommandAccess().getNameREVOKEKeyword_1_1_0()); }
			REVOKE
			{ after(grammarAccess.getRightsRoleCommandAccess().getNameREVOKEKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getRightsRoleCommandAccess().getNameREVOKEKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__OperationsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsRoleCommandAccess().getOperationsIDTerminalRuleCall_1_3_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsRoleCommandAccess().getOperationsIDTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__OperationsAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsRoleCommandAccess().getOperationsIDTerminalRuleCall_1_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsRoleCommandAccess().getOperationsIDTerminalRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightsRoleCommand__UserAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightsRoleCommandAccess().getUserIDTerminalRuleCall_1_6_0()); }
		RULE_ID
		{ after(grammarAccess.getRightsRoleCommandAccess().getUserIDTerminalRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__SizeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TimebasedAccess().getSizeINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getWindow_TimebasedAccess().getSizeINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__UnitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TimebasedAccess().getUnitIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getWindow_TimebasedAccess().getUnitIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Advance_sizeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TimebasedAccess().getAdvance_sizeINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getWindow_TimebasedAccess().getAdvance_sizeINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Timebased__Advance_unitAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TimebasedAccess().getAdvance_unitIDTerminalRuleCall_3_2_0()); }
		RULE_ID
		{ after(grammarAccess.getWindow_TimebasedAccess().getAdvance_unitIDTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__SizeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TuplebasedAccess().getSizeINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getWindow_TuplebasedAccess().getSizeINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Advance_sizeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TuplebasedAccess().getAdvance_sizeINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getWindow_TuplebasedAccess().getAdvance_sizeINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window_Tuplebased__Partition_attributeAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindow_TuplebasedAccess().getPartition_attributeAttributeParserRuleCall_4_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getWindow_TuplebasedAccess().getPartition_attributeAttributeParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsModel__ElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionsModelAccess().getElementsExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionsModelAccess().getElementsExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRightEqualitiyParserRuleCall_1_2_0()); }
		ruleEqualitiy
		{ after(grammarAccess.getAndAccess().getRightEqualitiyParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualitiyAccess().getOpAlternatives_1_1_0()); }
		(rule__Equalitiy__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualitiyAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equalitiy__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualitiyAccess().getRightComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualitiyAccess().getRightComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
		(rule__Comparison__OpAlternatives_1_1_0)
		{ after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
		ruleMulOrDiv
		{ after(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); }
		(rule__MulOrDiv__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__InnerAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getInnerExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryAccess().getInnerExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getAtomicAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAlternatives_3_1_0()); }
		(rule__Atomic__ValueAlternatives_3_1_0)
		{ after(grammarAccess.getAtomicAccess().getValueAlternatives_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_4_1_0_0()); }
		ruleAttributeWithoutAliasDefinition
		{ after(grammarAccess.getAtomicAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAttributeWithNestedStatementParserRuleCall_4_1_1_0()); }
		ruleAttributeWithNestedStatement
		{ after(grammarAccess.getAtomicAccess().getValueAttributeWithNestedStatementParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicWithoutAttributeRef__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAlternatives_3_1_0()); }
		(rule__AtomicWithoutAttributeRef__ValueAlternatives_3_1_0)
		{ after(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueAlternatives_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
