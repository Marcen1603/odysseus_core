/*
 * generated by Xtext 2.10.0
 */
grammar InternalCQL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.uniol.inf.is.odysseus.parser.novel.cql.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.uniol.inf.is.odysseus.parser.novel.cql.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.uniol.inf.is.odysseus.parser.novel.cql.services.CQLGrammarAccess;

}

@parser::members {

 	private CQLGrammarAccess grammarAccess;

    public InternalCQLParser(TokenStream input, CQLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected CQLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_0());
			}
			lv_statements_0_0=ruleStatement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"statements",
					lv_statements_0_0,
					"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Statement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeSelectParserRuleCall_0_0_0());
					}
					lv_type_0_0=ruleSelect
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_0_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Select");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeStreamToParserRuleCall_0_1_0());
					}
					lv_type_1_0=ruleStreamTo
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_1_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.StreamTo");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeDropParserRuleCall_0_2_0());
					}
					lv_type_2_0=ruleDrop
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Drop");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeCreateStream1ParserRuleCall_0_3_0());
					}
					lv_type_3_0=ruleCreateStream1
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateStream1");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeCreateSink1ParserRuleCall_0_4_0());
					}
					lv_type_4_0=ruleCreateSink1
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateSink1");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeCreateStreamChannelParserRuleCall_0_5_0());
					}
					lv_type_5_0=ruleCreateStreamChannel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_5_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateStreamChannel");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeCreateStreamFileParserRuleCall_0_6_0());
					}
					lv_type_6_0=ruleCreateStreamFile
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_6_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateStreamFile");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeCreateViewParserRuleCall_0_7_0());
					}
					lv_type_7_0=ruleCreateView
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_7_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateView");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getStatementAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleSelect
entryRuleSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectRule()); }
	iv_ruleSelect=ruleSelect
	{ $current=$iv_ruleSelect.current; }
	EOF;

// Rule Select
ruleSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='SELECT'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSelectAccess().getNameSELECTKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "SELECT");
				}
			)
		)
		(
			(
				lv_distinct_1_0='DISTINCT'
				{
					newLeafNode(lv_distinct_1_0, grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectRule());
					}
					setWithLastConsumed($current, "distinct", lv_distinct_1_0, "DISTINCT");
				}
			)
		)?
		(
			otherlv_2='*'
			{
				newLeafNode(otherlv_2, grammarAccess.getSelectAccess().getAsteriskKeyword_2_0());
			}
			    |
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectAccess().getAttributesAttributeParserRuleCall_2_1_0_0_0());
							}
							lv_attributes_3_0=ruleAttribute
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectRule());
								}
								add(
									$current,
									"attributes",
									lv_attributes_3_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectAccess().getAggregationsAggregationParserRuleCall_2_1_0_1_0());
							}
							lv_aggregations_4_0=ruleAggregation
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectRule());
								}
								add(
									$current,
									"aggregations",
									lv_aggregations_4_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Aggregation");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectAccess().getExpressionsSelectExpressionParserRuleCall_2_1_0_2_0());
							}
							lv_expressions_5_0=ruleSelectExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectRule());
								}
								add(
									$current,
									"expressions",
									lv_expressions_5_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)+
				(
					(
						otherlv_6=','
						{
							newLeafNode(otherlv_6, grammarAccess.getSelectAccess().getCommaKeyword_2_1_1_0_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectAccess().getAttributesAttributeParserRuleCall_2_1_1_0_1_0());
								}
								lv_attributes_7_0=ruleAttribute
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectRule());
									}
									add(
										$current,
										"attributes",
										lv_attributes_7_0,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
					    |
					(
						otherlv_8=','
						{
							newLeafNode(otherlv_8, grammarAccess.getSelectAccess().getCommaKeyword_2_1_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectAccess().getAggregationsAggregationParserRuleCall_2_1_1_1_1_0());
								}
								lv_aggregations_9_0=ruleAggregation
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectRule());
									}
									add(
										$current,
										"aggregations",
										lv_aggregations_9_0,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Aggregation");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
					    |
					(
						otherlv_10=','
						{
							newLeafNode(otherlv_10, grammarAccess.getSelectAccess().getCommaKeyword_2_1_1_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectAccess().getExpressionsSelectExpressionParserRuleCall_2_1_1_2_1_0());
								}
								lv_expressions_11_0=ruleSelectExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectRule());
									}
									add(
										$current,
										"expressions",
										lv_expressions_11_0,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)*
			)
		)
		(
			otherlv_12='FROM'
			{
				newLeafNode(otherlv_12, grammarAccess.getSelectAccess().getFROMKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_3_1_0());
					}
					lv_sources_13_0=ruleSource
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						add(
							$current,
							"sources",
							lv_sources_13_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Source");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getSelectAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_3_2_1_0());
						}
						lv_sources_15_0=ruleSource
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectRule());
							}
							add(
								$current,
								"sources",
								lv_sources_15_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Source");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		(
			otherlv_16='WHERE'
			{
				newLeafNode(otherlv_16, grammarAccess.getSelectAccess().getWHEREKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getPredicatesExpressionsModelParserRuleCall_4_1_0());
					}
					lv_predicates_17_0=ruleExpressionsModel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						set(
							$current,
							"predicates",
							lv_predicates_17_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionsModel");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_18='GROUP'
			{
				newLeafNode(otherlv_18, grammarAccess.getSelectAccess().getGROUPKeyword_5_0());
			}
			otherlv_19='BY'
			{
				newLeafNode(otherlv_19, grammarAccess.getSelectAccess().getBYKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_5_2_0());
					}
					lv_order_20_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						add(
							$current,
							"order",
							lv_order_20_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			(
				otherlv_21=','
				{
					newLeafNode(otherlv_21, grammarAccess.getSelectAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_5_3_1_0());
						}
						lv_order_22_0=ruleAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectRule());
							}
							add(
								$current,
								"order",
								lv_order_22_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_23='HAVING'
			{
				newLeafNode(otherlv_23, grammarAccess.getSelectAccess().getHAVINGKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getHavingExpressionsModelParserRuleCall_6_1_0());
					}
					lv_having_24_0=ruleExpressionsModel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						set(
							$current,
							"having",
							lv_having_24_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionsModel");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNestedStatement
entryRuleNestedStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNestedStatementRule()); }
	iv_ruleNestedStatement=ruleNestedStatement
	{ $current=$iv_ruleNestedStatement.current; }
	EOF;

// Rule NestedStatement
ruleNestedStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getNestedStatementAccess().getLeftParenthesisKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getNestedStatementAccess().getSelectParserRuleCall_1());
		}
		this_Select_1=ruleSelect
		{
			$current = $this_Select_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getNestedStatementAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleSource
entryRuleSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceRule()); }
	iv_ruleSource=ruleSource
	{ $current=$iv_ruleSource.current; }
	EOF;

// Rule Source
ruleSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSourceAccess().getNameSourceNameParserRuleCall_0_0_0());
					}
					lv_name_0_0=ruleSourceName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSourceRule());
						}
						set(
							$current,
							"name",
							lv_name_0_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SourceName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1='['
				{
					newLeafNode(otherlv_1, grammarAccess.getSourceAccess().getLeftSquareBracketKeyword_0_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getSourceAccess().getUnboundedWindow_UnboundedParserRuleCall_0_1_1_0_0());
							}
							lv_unbounded_2_0=ruleWindow_Unbounded
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSourceRule());
								}
								set(
									$current,
									"unbounded",
									lv_unbounded_2_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Window_Unbounded");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getSourceAccess().getTimeWindow_TimebasedParserRuleCall_0_1_1_1_0());
							}
							lv_time_3_0=ruleWindow_Timebased
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSourceRule());
								}
								set(
									$current,
									"time",
									lv_time_3_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Window_Timebased");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getSourceAccess().getTupleWindow_TuplebasedParserRuleCall_0_1_1_2_0());
							}
							lv_tuple_4_0=ruleWindow_Tuplebased
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSourceRule());
								}
								set(
									$current,
									"tuple",
									lv_tuple_4_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Window_Tuplebased");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				otherlv_5=']'
				{
					newLeafNode(otherlv_5, grammarAccess.getSourceAccess().getRightSquareBracketKeyword_0_1_2());
				}
			)?
			(
				otherlv_6='AS'
				{
					newLeafNode(otherlv_6, grammarAccess.getSourceAccess().getASKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSourceAccess().getAliasAliasParserRuleCall_0_2_1_0());
						}
						lv_alias_7_0=ruleAlias
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSourceRule());
							}
							set(
								$current,
								"alias",
								lv_alias_7_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Alias");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSourceAccess().getNestedNestedStatementParserRuleCall_1_0_0());
					}
					lv_nested_8_0=ruleNestedStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSourceRule());
						}
						set(
							$current,
							"nested",
							lv_nested_8_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.NestedStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9='AS'
			{
				newLeafNode(otherlv_9, grammarAccess.getSourceAccess().getASKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSourceAccess().getAliasAliasParserRuleCall_1_2_0());
					}
					lv_alias_10_0=ruleAlias
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSourceRule());
						}
						set(
							$current,
							"alias",
							lv_alias_10_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Alias");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSourceName
entryRuleSourceName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSourceNameRule()); }
	iv_ruleSourceName=ruleSourceName
	{ $current=$iv_ruleSourceName.current.getText(); }
	EOF;

// Rule SourceName
ruleSourceName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getSourceNameAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getNameAttributeNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleAttributeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='AS'
			{
				newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getASKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getAliasAliasParserRuleCall_1_1_0());
					}
					lv_alias_2_0=ruleAlias
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"alias",
							lv_alias_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Alias");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAttributeWithoutAliasDefinition
entryRuleAttributeWithoutAliasDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeWithoutAliasDefinitionRule()); }
	iv_ruleAttributeWithoutAliasDefinition=ruleAttributeWithoutAliasDefinition
	{ $current=$iv_ruleAttributeWithoutAliasDefinition.current; }
	EOF;

// Rule AttributeWithoutAliasDefinition
ruleAttributeWithoutAliasDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAttributeWithoutAliasDefinitionAccess().getNameAttributeNameParserRuleCall_0());
			}
			lv_name_0_0=ruleAttributeName
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getAttributeWithoutAliasDefinitionRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeName");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleAttributeName
entryRuleAttributeName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAttributeNameRule()); }
	iv_ruleAttributeName=ruleAttributeName
	{ $current=$iv_ruleAttributeName.current.getText(); }
	EOF;

// Rule AttributeName
ruleAttributeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getAttributeNameAccess().getIDTerminalRuleCall_0());
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getAttributeNameAccess().getSourceNameParserRuleCall_1_0());
			}
			this_SourceName_1=ruleSourceName
			{
				$current.merge(this_SourceName_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getAttributeNameAccess().getFullStopKeyword_1_1());
			}
			this_ID_3=RULE_ID
			{
				$current.merge(this_ID_3);
			}
			{
				newLeafNode(this_ID_3, grammarAccess.getAttributeNameAccess().getIDTerminalRuleCall_1_2());
			}
		)
	)
;

// Entry rule entryRuleAttributeWithNestedStatement
entryRuleAttributeWithNestedStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeWithNestedStatementRule()); }
	iv_ruleAttributeWithNestedStatement=ruleAttributeWithNestedStatement
	{ $current=$iv_ruleAttributeWithNestedStatement.current; }
	EOF;

// Rule AttributeWithNestedStatement
ruleAttributeWithNestedStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeWithNestedStatementAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_0_0());
				}
				lv_value_0_0=ruleAttributeWithoutAliasDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeWithNestedStatementRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='IN'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeWithNestedStatementAccess().getINKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeWithNestedStatementAccess().getNestedNestedStatementParserRuleCall_2_0());
				}
				lv_nested_2_0=ruleNestedStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeWithNestedStatementRule());
					}
					set(
						$current,
						"nested",
						lv_nested_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.NestedStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAggregation
entryRuleAggregation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAggregationRule()); }
	iv_ruleAggregation=ruleAggregation
	{ $current=$iv_ruleAggregation.current; }
	EOF;

// Rule Aggregation
ruleAggregation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_1='AVG'
					{
						newLeafNode(lv_name_0_1, grammarAccess.getAggregationAccess().getNameAVGKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAggregationRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_1, null);
					}
					    |
					lv_name_0_2='MIN'
					{
						newLeafNode(lv_name_0_2, grammarAccess.getAggregationAccess().getNameMINKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAggregationRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_2, null);
					}
					    |
					lv_name_0_3='MAX'
					{
						newLeafNode(lv_name_0_3, grammarAccess.getAggregationAccess().getNameMAXKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAggregationRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_3, null);
					}
					    |
					lv_name_0_4='COUNT'
					{
						newLeafNode(lv_name_0_4, grammarAccess.getAggregationAccess().getNameCOUNTKeyword_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAggregationRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_4, null);
					}
					    |
					lv_name_0_5='SUM'
					{
						newLeafNode(lv_name_0_5, grammarAccess.getAggregationAccess().getNameSUMKeyword_0_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAggregationRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_5, null);
					}
					    |
					lv_name_0_6='MEDIAN'
					{
						newLeafNode(lv_name_0_6, grammarAccess.getAggregationAccess().getNameMEDIANKeyword_0_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAggregationRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_6, null);
					}
					    |
					lv_name_0_7='FIRST'
					{
						newLeafNode(lv_name_0_7, grammarAccess.getAggregationAccess().getNameFIRSTKeyword_0_0_6());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAggregationRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_7, null);
					}
					    |
					lv_name_0_8='LAST'
					{
						newLeafNode(lv_name_0_8, grammarAccess.getAggregationAccess().getNameLASTKeyword_0_0_7());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAggregationRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_8, null);
					}
				)
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAggregationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAggregationAccess().getAttributeAttributeWithoutAliasDefinitionParserRuleCall_2_0_0());
					}
					lv_attribute_2_0=ruleAttributeWithoutAliasDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAggregationRule());
						}
						set(
							$current,
							"attribute",
							lv_attribute_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAggregationAccess().getExpressionSelectExpressionOnlyWithAttributeParserRuleCall_2_1_0());
					}
					lv_expression_3_0=ruleSelectExpressionOnlyWithAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAggregationRule());
						}
						set(
							$current,
							"expression",
							lv_expression_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpressionOnlyWithAttribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getAggregationAccess().getRightParenthesisKeyword_3());
		}
		(
			otherlv_5='AS'
			{
				newLeafNode(otherlv_5, grammarAccess.getAggregationAccess().getASKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAggregationAccess().getAliasAliasParserRuleCall_4_1_0());
					}
					lv_alias_6_0=ruleAlias
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAggregationRule());
						}
						set(
							$current,
							"alias",
							lv_alias_6_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Alias");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMapper
entryRuleMapper returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapperRule()); }
	iv_ruleMapper=ruleMapper
	{ $current=$iv_ruleMapper.current; }
	EOF;

// Rule Mapper
ruleMapper returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='DolToEur'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMapperAccess().getNameDolToEurKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMapperRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "DolToEur");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMapperAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMapperAccess().getAttributeAttributeWithoutAliasDefinitionParserRuleCall_2_0_0());
					}
					lv_attribute_2_0=ruleAttributeWithoutAliasDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapperRule());
						}
						set(
							$current,
							"attribute",
							lv_attribute_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getMapperAccess().getInnerexpressionSelectExpressionOnlyWithAttributeAndConstantParserRuleCall_2_1_0());
					}
					lv_innerexpression_3_0=ruleSelectExpressionOnlyWithAttributeAndConstant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapperRule());
						}
						set(
							$current,
							"innerexpression",
							lv_innerexpression_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpressionOnlyWithAttributeAndConstant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getMapperAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleSelectExpression
entryRuleSelectExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionRule()); }
	iv_ruleSelectExpression=ruleSelectExpression
	{ $current=$iv_ruleSelectExpression.current; }
	EOF;

// Rule SelectExpression
ruleSelectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionAccess().getLeftmapperMapperParserRuleCall_0_0_0());
					}
					lv_leftmapper_0_0=ruleMapper
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
						}
						set(
							$current,
							"leftmapper",
							lv_leftmapper_0_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Mapper");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionAccess().getLeftattributeAttributeWithoutAliasDefinitionParserRuleCall_0_1_0());
					}
					lv_leftattribute_1_0=ruleAttributeWithoutAliasDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
						}
						set(
							$current,
							"leftattribute",
							lv_leftattribute_1_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionAccess().getLeftconstantAtomicWithoutAttributeRefParserRuleCall_0_2_0());
					}
					lv_leftconstant_2_0=ruleAtomicWithoutAttributeRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
						}
						set(
							$current,
							"leftconstant",
							lv_leftconstant_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AtomicWithoutAttributeRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					lv_operator_3_1='+'
					{
						newLeafNode(lv_operator_3_1, grammarAccess.getSelectExpressionAccess().getOperatorPlusSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_3_1, null);
					}
					    |
					lv_operator_3_2='-'
					{
						newLeafNode(lv_operator_3_2, grammarAccess.getSelectExpressionAccess().getOperatorHyphenMinusKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_3_2, null);
					}
					    |
					lv_operator_3_3='/'
					{
						newLeafNode(lv_operator_3_3, grammarAccess.getSelectExpressionAccess().getOperatorSolidusKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_3_3, null);
					}
					    |
					lv_operator_3_4='*'
					{
						newLeafNode(lv_operator_3_4, grammarAccess.getSelectExpressionAccess().getOperatorAsteriskKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_3_4, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionAccess().getInnerexpressionSelectExpressionWithoutAliasDefinitionParserRuleCall_2_0());
				}
				lv_innerexpression_4_0=ruleSelectExpressionWithoutAliasDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
					}
					set(
						$current,
						"innerexpression",
						lv_innerexpression_4_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpressionWithoutAliasDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionAccess().getRightattributeAttributeWithoutAliasDefinitionParserRuleCall_3_0_0());
					}
					lv_rightattribute_5_0=ruleAttributeWithoutAliasDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
						}
						set(
							$current,
							"rightattribute",
							lv_rightattribute_5_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionAccess().getRightconstantAtomicWithoutAttributeRefParserRuleCall_3_1_0());
					}
					lv_rightconstant_6_0=ruleAtomicWithoutAttributeRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
						}
						set(
							$current,
							"rightconstant",
							lv_rightconstant_6_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AtomicWithoutAttributeRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_7='AS'
			{
				newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getASKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionAccess().getAliasAliasParserRuleCall_4_1_0());
					}
					lv_alias_8_0=ruleAlias
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
						}
						set(
							$current,
							"alias",
							lv_alias_8_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Alias");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSelectExpressionWithoutAliasDefinition
entryRuleSelectExpressionWithoutAliasDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule()); }
	iv_ruleSelectExpressionWithoutAliasDefinition=ruleSelectExpressionWithoutAliasDefinition
	{ $current=$iv_ruleSelectExpressionWithoutAliasDefinition.current; }
	EOF;

// Rule SelectExpressionWithoutAliasDefinition
ruleSelectExpressionWithoutAliasDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getLeftmapperMapperParserRuleCall_0_0_0());
					}
					lv_leftmapper_0_0=ruleMapper
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
						}
						set(
							$current,
							"leftmapper",
							lv_leftmapper_0_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Mapper");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getLeftattributeAttributeWithoutAliasDefinitionParserRuleCall_0_1_0());
					}
					lv_leftattribute_1_0=ruleAttributeWithoutAliasDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
						}
						set(
							$current,
							"leftattribute",
							lv_leftattribute_1_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getLeftconstantAtomicWithoutAttributeRefParserRuleCall_0_2_0());
					}
					lv_leftconstant_2_0=ruleAtomicWithoutAttributeRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
						}
						set(
							$current,
							"leftconstant",
							lv_leftconstant_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AtomicWithoutAttributeRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					lv_operator_3_1='+'
					{
						newLeafNode(lv_operator_3_1, grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorPlusSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_3_1, null);
					}
					    |
					lv_operator_3_2='-'
					{
						newLeafNode(lv_operator_3_2, grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorHyphenMinusKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_3_2, null);
					}
					    |
					lv_operator_3_3='/'
					{
						newLeafNode(lv_operator_3_3, grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorSolidusKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_3_3, null);
					}
					    |
					lv_operator_3_4='*'
					{
						newLeafNode(lv_operator_3_4, grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorAsteriskKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_3_4, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getInnerexpressionSelectExpressionWithoutAliasDefinitionParserRuleCall_2_0());
				}
				lv_innerexpression_4_0=ruleSelectExpressionWithoutAliasDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
					}
					set(
						$current,
						"innerexpression",
						lv_innerexpression_4_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpressionWithoutAliasDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSelectExpressionOnlyWithAttributeAndConstant
entryRuleSelectExpressionOnlyWithAttributeAndConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantRule()); }
	iv_ruleSelectExpressionOnlyWithAttributeAndConstant=ruleSelectExpressionOnlyWithAttributeAndConstant
	{ $current=$iv_ruleSelectExpressionOnlyWithAttributeAndConstant.current; }
	EOF;

// Rule SelectExpressionOnlyWithAttributeAndConstant
ruleSelectExpressionOnlyWithAttributeAndConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantAccess().getLeftattributeAttributeWithoutAliasDefinitionParserRuleCall_0_0_0());
					}
					lv_leftattribute_0_0=ruleAttributeWithoutAliasDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantRule());
						}
						set(
							$current,
							"leftattribute",
							lv_leftattribute_0_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantAccess().getLeftconstantAtomicWithoutAttributeRefParserRuleCall_0_1_0());
					}
					lv_leftconstant_1_0=ruleAtomicWithoutAttributeRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantRule());
						}
						set(
							$current,
							"leftconstant",
							lv_leftconstant_1_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AtomicWithoutAttributeRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					lv_operator_2_1='+'
					{
						newLeafNode(lv_operator_2_1, grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantAccess().getOperatorPlusSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_1, null);
					}
					    |
					lv_operator_2_2='-'
					{
						newLeafNode(lv_operator_2_2, grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantAccess().getOperatorHyphenMinusKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_2, null);
					}
					    |
					lv_operator_2_3='/'
					{
						newLeafNode(lv_operator_2_3, grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantAccess().getOperatorSolidusKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_3, null);
					}
					    |
					lv_operator_2_4='*'
					{
						newLeafNode(lv_operator_2_4, grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantAccess().getOperatorAsteriskKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_4, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantAccess().getInnerexpressionSelectExpressionOnlyWithAttributeAndConstant2ParserRuleCall_2_0());
				}
				lv_innerexpression_3_0=ruleSelectExpressionOnlyWithAttributeAndConstant2
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantRule());
					}
					set(
						$current,
						"innerexpression",
						lv_innerexpression_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpressionOnlyWithAttributeAndConstant2");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantAccess().getRightattributeAttributeWithoutAliasDefinitionParserRuleCall_3_0_0());
					}
					lv_rightattribute_4_0=ruleAttributeWithoutAliasDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantRule());
						}
						set(
							$current,
							"rightattribute",
							lv_rightattribute_4_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantAccess().getRightconstantAtomicWithoutAttributeRefParserRuleCall_3_1_0());
					}
					lv_rightconstant_5_0=ruleAtomicWithoutAttributeRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstantRule());
						}
						set(
							$current,
							"rightconstant",
							lv_rightconstant_5_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AtomicWithoutAttributeRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSelectExpressionOnlyWithAttributeAndConstant2
entryRuleSelectExpressionOnlyWithAttributeAndConstant2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Rule()); }
	iv_ruleSelectExpressionOnlyWithAttributeAndConstant2=ruleSelectExpressionOnlyWithAttributeAndConstant2
	{ $current=$iv_ruleSelectExpressionOnlyWithAttributeAndConstant2.current; }
	EOF;

// Rule SelectExpressionOnlyWithAttributeAndConstant2
ruleSelectExpressionOnlyWithAttributeAndConstant2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Access().getLeftattributeAttributeWithoutAliasDefinitionParserRuleCall_0_0_0());
					}
					lv_leftattribute_0_0=ruleAttributeWithoutAliasDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Rule());
						}
						set(
							$current,
							"leftattribute",
							lv_leftattribute_0_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Access().getLeftconstantAtomicWithoutAttributeRefParserRuleCall_0_1_0());
					}
					lv_leftconstant_1_0=ruleAtomicWithoutAttributeRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Rule());
						}
						set(
							$current,
							"leftconstant",
							lv_leftconstant_1_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AtomicWithoutAttributeRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					lv_operator_2_1='+'
					{
						newLeafNode(lv_operator_2_1, grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Access().getOperatorPlusSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Rule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_1, null);
					}
					    |
					lv_operator_2_2='-'
					{
						newLeafNode(lv_operator_2_2, grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Access().getOperatorHyphenMinusKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Rule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_2, null);
					}
					    |
					lv_operator_2_3='/'
					{
						newLeafNode(lv_operator_2_3, grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Access().getOperatorSolidusKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Rule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_3, null);
					}
					    |
					lv_operator_2_4='*'
					{
						newLeafNode(lv_operator_2_4, grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Access().getOperatorAsteriskKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Rule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_4, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Access().getInnerexpressionSelectExpressionOnlyWithAttributeAndConstant2ParserRuleCall_2_0());
				}
				lv_innerexpression_3_0=ruleSelectExpressionOnlyWithAttributeAndConstant2
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttributeAndConstant2Rule());
					}
					set(
						$current,
						"innerexpression",
						lv_innerexpression_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpressionOnlyWithAttributeAndConstant2");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSelectExpressionOnlyWithStringConstant2
entryRuleSelectExpressionOnlyWithStringConstant2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionOnlyWithStringConstant2Rule()); }
	iv_ruleSelectExpressionOnlyWithStringConstant2=ruleSelectExpressionOnlyWithStringConstant2
	{ $current=$iv_ruleSelectExpressionOnlyWithStringConstant2.current; }
	EOF;

// Rule SelectExpressionOnlyWithStringConstant2
ruleSelectExpressionOnlyWithStringConstant2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionOnlyWithStringConstant2Access().getLeftconstantAtomicWithOnlyStringConstantParserRuleCall_0_0());
				}
				lv_leftconstant_0_0=ruleAtomicWithOnlyStringConstant
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithStringConstant2Rule());
					}
					set(
						$current,
						"leftconstant",
						lv_leftconstant_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AtomicWithOnlyStringConstant");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_operator_1_1='+'
					{
						newLeafNode(lv_operator_1_1, grammarAccess.getSelectExpressionOnlyWithStringConstant2Access().getOperatorPlusSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithStringConstant2Rule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_1, null);
					}
					    |
					lv_operator_1_2='-'
					{
						newLeafNode(lv_operator_1_2, grammarAccess.getSelectExpressionOnlyWithStringConstant2Access().getOperatorHyphenMinusKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithStringConstant2Rule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionOnlyWithStringConstant2Access().getInnerexpressionSelectExpressionOnlyWithStringConstant2ParserRuleCall_2_0());
				}
				lv_innerexpression_2_0=ruleSelectExpressionOnlyWithStringConstant2
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithStringConstant2Rule());
					}
					set(
						$current,
						"innerexpression",
						lv_innerexpression_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpressionOnlyWithStringConstant2");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSelectExpressionOnlyWithAttribute
entryRuleSelectExpressionOnlyWithAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeRule()); }
	iv_ruleSelectExpressionOnlyWithAttribute=ruleSelectExpressionOnlyWithAttribute
	{ $current=$iv_ruleSelectExpressionOnlyWithAttribute.current; }
	EOF;

// Rule SelectExpressionOnlyWithAttribute
ruleSelectExpressionOnlyWithAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAccess().getLeftattributeAttributeWithoutAliasDefinitionParserRuleCall_0_0());
				}
				lv_leftattribute_0_0=ruleAttributeWithoutAliasDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttributeRule());
					}
					set(
						$current,
						"leftattribute",
						lv_leftattribute_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_operator_1_1='+'
					{
						newLeafNode(lv_operator_1_1, grammarAccess.getSelectExpressionOnlyWithAttributeAccess().getOperatorPlusSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttributeRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_1, null);
					}
					    |
					lv_operator_1_2='-'
					{
						newLeafNode(lv_operator_1_2, grammarAccess.getSelectExpressionOnlyWithAttributeAccess().getOperatorHyphenMinusKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttributeRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_2, null);
					}
					    |
					lv_operator_1_3='/'
					{
						newLeafNode(lv_operator_1_3, grammarAccess.getSelectExpressionOnlyWithAttributeAccess().getOperatorSolidusKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttributeRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_3, null);
					}
					    |
					lv_operator_1_4='*'
					{
						newLeafNode(lv_operator_1_4, grammarAccess.getSelectExpressionOnlyWithAttributeAccess().getOperatorAsteriskKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttributeRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_4, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAccess().getInnerexpressionSelectExpressionOnlyWithAttribute2ParserRuleCall_2_0());
				}
				lv_innerexpression_2_0=ruleSelectExpressionOnlyWithAttribute2
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttributeRule());
					}
					set(
						$current,
						"innerexpression",
						lv_innerexpression_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpressionOnlyWithAttribute2");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAccess().getRightatttriuteAttributeWithoutAliasDefinitionParserRuleCall_3_0());
				}
				lv_rightatttriute_3_0=ruleAttributeWithoutAliasDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttributeRule());
					}
					set(
						$current,
						"rightatttriute",
						lv_rightatttriute_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSelectExpressionOnlyWithAttribute2
entryRuleSelectExpressionOnlyWithAttribute2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttribute2Rule()); }
	iv_ruleSelectExpressionOnlyWithAttribute2=ruleSelectExpressionOnlyWithAttribute2
	{ $current=$iv_ruleSelectExpressionOnlyWithAttribute2.current; }
	EOF;

// Rule SelectExpressionOnlyWithAttribute2
ruleSelectExpressionOnlyWithAttribute2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttribute2Access().getLeftattributeAttributeWithoutAliasDefinitionParserRuleCall_0_0());
				}
				lv_leftattribute_0_0=ruleAttributeWithoutAliasDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttribute2Rule());
					}
					set(
						$current,
						"leftattribute",
						lv_leftattribute_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_operator_1_1='+'
					{
						newLeafNode(lv_operator_1_1, grammarAccess.getSelectExpressionOnlyWithAttribute2Access().getOperatorPlusSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttribute2Rule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_1, null);
					}
					    |
					lv_operator_1_2='-'
					{
						newLeafNode(lv_operator_1_2, grammarAccess.getSelectExpressionOnlyWithAttribute2Access().getOperatorHyphenMinusKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttribute2Rule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_2, null);
					}
					    |
					lv_operator_1_3='/'
					{
						newLeafNode(lv_operator_1_3, grammarAccess.getSelectExpressionOnlyWithAttribute2Access().getOperatorSolidusKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttribute2Rule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_3, null);
					}
					    |
					lv_operator_1_4='*'
					{
						newLeafNode(lv_operator_1_4, grammarAccess.getSelectExpressionOnlyWithAttribute2Access().getOperatorAsteriskKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectExpressionOnlyWithAttribute2Rule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_4, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttribute2Access().getInnerexpressionSelectExpressionOnlyWithAttribute2ParserRuleCall_2_0());
				}
				lv_innerexpression_2_0=ruleSelectExpressionOnlyWithAttribute2
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttribute2Rule());
					}
					set(
						$current,
						"innerexpression",
						lv_innerexpression_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpressionOnlyWithAttribute2");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleAlias
entryRuleAlias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasRule()); }
	iv_ruleAlias=ruleAlias
	{ $current=$iv_ruleAlias.current; }
	EOF;

// Rule Alias
ruleAlias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getAliasAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAliasRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
			}
		)
	)
;

// Entry rule entryRuleCreateParameters
entryRuleCreateParameters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateParametersRule()); }
	iv_ruleCreateParameters=ruleCreateParameters
	{ $current=$iv_ruleCreateParameters.current; }
	EOF;

// Rule CreateParameters
ruleCreateParameters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='WRAPPER'
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateParametersAccess().getWRAPPERKeyword_0());
		}
		(
			(
				lv_wrapper_1_0=RULE_STRING
				{
					newLeafNode(lv_wrapper_1_0, grammarAccess.getCreateParametersAccess().getWrapperSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateParametersRule());
					}
					setWithLastConsumed(
						$current,
						"wrapper",
						lv_wrapper_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='PROTOCOL'
		{
			newLeafNode(otherlv_2, grammarAccess.getCreateParametersAccess().getPROTOCOLKeyword_2());
		}
		(
			(
				lv_protocol_3_0=RULE_STRING
				{
					newLeafNode(lv_protocol_3_0, grammarAccess.getCreateParametersAccess().getProtocolSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateParametersRule());
					}
					setWithLastConsumed(
						$current,
						"protocol",
						lv_protocol_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='TRANSPORT'
		{
			newLeafNode(otherlv_4, grammarAccess.getCreateParametersAccess().getTRANSPORTKeyword_4());
		}
		(
			(
				lv_transport_5_0=RULE_STRING
				{
					newLeafNode(lv_transport_5_0, grammarAccess.getCreateParametersAccess().getTransportSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateParametersRule());
					}
					setWithLastConsumed(
						$current,
						"transport",
						lv_transport_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='DATAHANDLER'
		{
			newLeafNode(otherlv_6, grammarAccess.getCreateParametersAccess().getDATAHANDLERKeyword_6());
		}
		(
			(
				lv_datahandler_7_0=RULE_STRING
				{
					newLeafNode(lv_datahandler_7_0, grammarAccess.getCreateParametersAccess().getDatahandlerSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateParametersRule());
					}
					setWithLastConsumed(
						$current,
						"datahandler",
						lv_datahandler_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='OPTIONS'
		{
			newLeafNode(otherlv_8, grammarAccess.getCreateParametersAccess().getOPTIONSKeyword_8());
		}
		otherlv_9='('
		{
			newLeafNode(otherlv_9, grammarAccess.getCreateParametersAccess().getLeftParenthesisKeyword_9());
		}
		(
			(
				(
					lv_keys_10_0=RULE_STRING
					{
						newLeafNode(lv_keys_10_0, grammarAccess.getCreateParametersAccess().getKeysSTRINGTerminalRuleCall_10_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateParametersRule());
						}
						addWithLastConsumed(
							$current,
							"keys",
							lv_keys_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				(
					lv_values_11_0=RULE_STRING
					{
						newLeafNode(lv_values_11_0, grammarAccess.getCreateParametersAccess().getValuesSTRINGTerminalRuleCall_10_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateParametersRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_11_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)+
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getCreateParametersAccess().getCommaKeyword_11_0());
			}
			(
				(
					lv_keys_13_0=RULE_STRING
					{
						newLeafNode(lv_keys_13_0, grammarAccess.getCreateParametersAccess().getKeysSTRINGTerminalRuleCall_11_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateParametersRule());
						}
						addWithLastConsumed(
							$current,
							"keys",
							lv_keys_13_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				(
					lv_values_14_0=RULE_STRING
					{
						newLeafNode(lv_values_14_0, grammarAccess.getCreateParametersAccess().getValuesSTRINGTerminalRuleCall_11_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateParametersRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_14_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_15=')'
		{
			newLeafNode(otherlv_15, grammarAccess.getCreateParametersAccess().getRightParenthesisKeyword_12());
		}
	)
;

// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeDefinitionRule()); }
	iv_ruleAttributeDefinition=ruleAttributeDefinition
	{ $current=$iv_ruleAttributeDefinition.current; }
	EOF;

// Rule AttributeDefinition
ruleAttributeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAttributeDefinitionAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeDefinitionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getAttributesAttributeParserRuleCall_2_0());
				}
				lv_attributes_2_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getDatatypesDataTypeParserRuleCall_3_0());
				}
				lv_datatypes_3_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
					}
					add(
						$current,
						"datatypes",
						lv_datatypes_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getAttributeDefinitionAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getAttributesAttributeParserRuleCall_4_1_0());
					}
					lv_attributes_5_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_5_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getDatatypesDataTypeParserRuleCall_4_2_0());
					}
					lv_datatypes_6_0=ruleDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
						}
						add(
							$current,
							"datatypes",
							lv_datatypes_6_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.DataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getAttributeDefinitionAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleCreateStream1
entryRuleCreateStream1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateStream1Rule()); }
	iv_ruleCreateStream1=ruleCreateStream1
	{ $current=$iv_ruleCreateStream1.current; }
	EOF;

// Rule CreateStream1
ruleCreateStream1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStream1Access().getKeywordCreateKeywordEnumRuleCall_0_0());
				}
				lv_keyword_0_0=ruleCreateKeyword
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStream1Rule());
					}
					set(
						$current,
						"keyword",
						lv_keyword_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateKeyword");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='STREAM'
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateStream1Access().getSTREAMKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStream1Access().getAttributesAttributeDefinitionParserRuleCall_2_0());
				}
				lv_attributes_2_0=ruleAttributeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStream1Rule());
					}
					set(
						$current,
						"attributes",
						lv_attributes_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStream1Access().getParsCreateParametersParserRuleCall_3_0());
				}
				lv_pars_3_0=ruleCreateParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStream1Rule());
					}
					set(
						$current,
						"pars",
						lv_pars_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateParameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCreateSink1
entryRuleCreateSink1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateSink1Rule()); }
	iv_ruleCreateSink1=ruleCreateSink1
	{ $current=$iv_ruleCreateSink1.current; }
	EOF;

// Rule CreateSink1
ruleCreateSink1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateSink1Access().getKeywordCreateKeywordEnumRuleCall_0_0());
				}
				lv_keyword_0_0=ruleCreateKeyword
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateSink1Rule());
					}
					set(
						$current,
						"keyword",
						lv_keyword_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateKeyword");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='SINK'
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateSink1Access().getSINKKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateSink1Access().getAttributesAttributeDefinitionParserRuleCall_2_0());
				}
				lv_attributes_2_0=ruleAttributeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateSink1Rule());
					}
					set(
						$current,
						"attributes",
						lv_attributes_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateSink1Access().getParsCreateParametersParserRuleCall_3_0());
				}
				lv_pars_3_0=ruleCreateParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateSink1Rule());
					}
					set(
						$current,
						"pars",
						lv_pars_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateParameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCreateStreamChannel
entryRuleCreateStreamChannel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateStreamChannelRule()); }
	iv_ruleCreateStreamChannel=ruleCreateStreamChannel
	{ $current=$iv_ruleCreateStreamChannel.current; }
	EOF;

// Rule CreateStreamChannel
ruleCreateStreamChannel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStreamChannelAccess().getKeywordCreateKeywordEnumRuleCall_0_0());
				}
				lv_keyword_0_0=ruleCreateKeyword
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStreamChannelRule());
					}
					set(
						$current,
						"keyword",
						lv_keyword_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateKeyword");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='STREAM'
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateStreamChannelAccess().getSTREAMKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStreamChannelAccess().getAttributesAttributeDefinitionParserRuleCall_2_0());
				}
				lv_attributes_2_0=ruleAttributeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStreamChannelRule());
					}
					set(
						$current,
						"attributes",
						lv_attributes_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='CHANNEL'
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateStreamChannelAccess().getCHANNELKeyword_3());
		}
		(
			(
				lv_host_4_0=RULE_ID
				{
					newLeafNode(lv_host_4_0, grammarAccess.getCreateStreamChannelAccess().getHostIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateStreamChannelRule());
					}
					setWithLastConsumed(
						$current,
						"host",
						lv_host_4_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getCreateStreamChannelAccess().getColonKeyword_5());
		}
		(
			(
				lv_port_6_0=RULE_INT
				{
					newLeafNode(lv_port_6_0, grammarAccess.getCreateStreamChannelAccess().getPortINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateStreamChannelRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleCreateStreamFile
entryRuleCreateStreamFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateStreamFileRule()); }
	iv_ruleCreateStreamFile=ruleCreateStreamFile
	{ $current=$iv_ruleCreateStreamFile.current; }
	EOF;

// Rule CreateStreamFile
ruleCreateStreamFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStreamFileAccess().getKeywordCreateKeywordEnumRuleCall_0_0());
				}
				lv_keyword_0_0=ruleCreateKeyword
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStreamFileRule());
					}
					set(
						$current,
						"keyword",
						lv_keyword_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateKeyword");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='STREAM'
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateStreamFileAccess().getSTREAMKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStreamFileAccess().getAttributesAttributeDefinitionParserRuleCall_2_0());
				}
				lv_attributes_2_0=ruleAttributeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStreamFileRule());
					}
					set(
						$current,
						"attributes",
						lv_attributes_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='FILE'
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateStreamFileAccess().getFILEKeyword_3());
		}
		(
			(
				lv_filename_4_0=RULE_STRING
				{
					newLeafNode(lv_filename_4_0, grammarAccess.getCreateStreamFileAccess().getFilenameSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateStreamFileRule());
					}
					setWithLastConsumed(
						$current,
						"filename",
						lv_filename_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='AS'
		{
			newLeafNode(otherlv_5, grammarAccess.getCreateStreamFileAccess().getASKeyword_5());
		}
		(
			(
				lv_type_6_0=RULE_ID
				{
					newLeafNode(lv_type_6_0, grammarAccess.getCreateStreamFileAccess().getTypeIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateStreamFileRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_6_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCreateView
entryRuleCreateView returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateViewRule()); }
	iv_ruleCreateView=ruleCreateView
	{ $current=$iv_ruleCreateView.current; }
	EOF;

// Rule CreateView
ruleCreateView returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='VIEW'
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateViewAccess().getVIEWKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCreateViewAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateViewRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_2='FROM'
		{
			newLeafNode(otherlv_2, grammarAccess.getCreateViewAccess().getFROMKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateViewAccess().getSelectNestedStatementParserRuleCall_3_0());
				}
				lv_select_3_0=ruleNestedStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateViewRule());
					}
					set(
						$current,
						"select",
						lv_select_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.NestedStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStreamTo
entryRuleStreamTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStreamToRule()); }
	iv_ruleStreamTo=ruleStreamTo
	{ $current=$iv_ruleStreamTo.current; }
	EOF;

// Rule StreamTo
ruleStreamTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='STREAM'
		{
			newLeafNode(otherlv_0, grammarAccess.getStreamToAccess().getSTREAMKeyword_0());
		}
		otherlv_1='TO'
		{
			newLeafNode(otherlv_1, grammarAccess.getStreamToAccess().getTOKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getStreamToAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStreamToRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStreamToAccess().getStatementSelectParserRuleCall_3_0_0());
					}
					lv_statement_3_0=ruleSelect
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStreamToRule());
						}
						set(
							$current,
							"statement",
							lv_statement_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Select");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_inputname_4_0=RULE_ID
					{
						newLeafNode(lv_inputname_4_0, grammarAccess.getStreamToAccess().getInputnameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStreamToRule());
						}
						setWithLastConsumed(
							$current,
							"inputname",
							lv_inputname_4_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDrop
entryRuleDrop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDropRule()); }
	iv_ruleDrop=ruleDrop
	{ $current=$iv_ruleDrop.current; }
	EOF;

// Rule Drop
ruleDrop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_keyword1_0_0='DROP'
				{
					newLeafNode(lv_keyword1_0_0, grammarAccess.getDropAccess().getKeyword1DROPKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDropRule());
					}
					setWithLastConsumed($current, "keyword1", lv_keyword1_0_0, "DROP");
				}
			)
		)
		(
			(
				(
					lv_keyword2_1_1='SINK'
					{
						newLeafNode(lv_keyword2_1_1, grammarAccess.getDropAccess().getKeyword2SINKKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDropRule());
						}
						setWithLastConsumed($current, "keyword2", lv_keyword2_1_1, null);
					}
					    |
					lv_keyword2_1_2='STREAM'
					{
						newLeafNode(lv_keyword2_1_2, grammarAccess.getDropAccess().getKeyword2STREAMKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDropRule());
						}
						setWithLastConsumed($current, "keyword2", lv_keyword2_1_2, null);
					}
				)
			)
		)
		(
			(
				lv_value1_2_0=RULE_ID
				{
					newLeafNode(lv_value1_2_0, grammarAccess.getDropAccess().getValue1IDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDropRule());
					}
					setWithLastConsumed(
						$current,
						"value1",
						lv_value1_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			(
				lv_keyword3_3_0='IF EXISTS'
				{
					newLeafNode(lv_keyword3_3_0, grammarAccess.getDropAccess().getKeyword3IFEXISTSKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDropRule());
					}
					setWithLastConsumed($current, "keyword3", lv_keyword3_3_0, "IF EXISTS");
				}
			)
		)?
		(
			(
				lv_value2_4_0=RULE_ID
				{
					newLeafNode(lv_value2_4_0, grammarAccess.getDropAccess().getValue2IDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDropRule());
					}
					setWithLastConsumed(
						$current,
						"value2",
						lv_value2_4_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleWindow_Unbounded
entryRuleWindow_Unbounded returns [String current=null]:
	{ newCompositeNode(grammarAccess.getWindow_UnboundedRule()); }
	iv_ruleWindow_Unbounded=ruleWindow_Unbounded
	{ $current=$iv_ruleWindow_Unbounded.current.getText(); }
	EOF;

// Rule Window_Unbounded
ruleWindow_Unbounded returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='UNBOUNDED'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getWindow_UnboundedAccess().getUNBOUNDEDKeyword());
	}
;

// Entry rule entryRuleWindow_Timebased
entryRuleWindow_Timebased returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWindow_TimebasedRule()); }
	iv_ruleWindow_Timebased=ruleWindow_Timebased
	{ $current=$iv_ruleWindow_Timebased.current; }
	EOF;

// Rule Window_Timebased
ruleWindow_Timebased returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SIZE'
		{
			newLeafNode(otherlv_0, grammarAccess.getWindow_TimebasedAccess().getSIZEKeyword_0());
		}
		(
			(
				lv_size_1_0=RULE_INT
				{
					newLeafNode(lv_size_1_0, grammarAccess.getWindow_TimebasedAccess().getSizeINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWindow_TimebasedRule());
					}
					setWithLastConsumed(
						$current,
						"size",
						lv_size_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				lv_unit_2_0=RULE_ID
				{
					newLeafNode(lv_unit_2_0, grammarAccess.getWindow_TimebasedAccess().getUnitIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWindow_TimebasedRule());
					}
					setWithLastConsumed(
						$current,
						"unit",
						lv_unit_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			otherlv_3='ADVANCE'
			{
				newLeafNode(otherlv_3, grammarAccess.getWindow_TimebasedAccess().getADVANCEKeyword_3_0());
			}
			(
				(
					lv_advance_size_4_0=RULE_INT
					{
						newLeafNode(lv_advance_size_4_0, grammarAccess.getWindow_TimebasedAccess().getAdvance_sizeINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWindow_TimebasedRule());
						}
						setWithLastConsumed(
							$current,
							"advance_size",
							lv_advance_size_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					lv_advance_unit_5_0=RULE_ID
					{
						newLeafNode(lv_advance_unit_5_0, grammarAccess.getWindow_TimebasedAccess().getAdvance_unitIDTerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWindow_TimebasedRule());
						}
						setWithLastConsumed(
							$current,
							"advance_unit",
							lv_advance_unit_5_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
		)?
		otherlv_6='TIME'
		{
			newLeafNode(otherlv_6, grammarAccess.getWindow_TimebasedAccess().getTIMEKeyword_4());
		}
	)
;

// Entry rule entryRuleWindow_Tuplebased
entryRuleWindow_Tuplebased returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWindow_TuplebasedRule()); }
	iv_ruleWindow_Tuplebased=ruleWindow_Tuplebased
	{ $current=$iv_ruleWindow_Tuplebased.current; }
	EOF;

// Rule Window_Tuplebased
ruleWindow_Tuplebased returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SIZE'
		{
			newLeafNode(otherlv_0, grammarAccess.getWindow_TuplebasedAccess().getSIZEKeyword_0());
		}
		(
			(
				lv_size_1_0=RULE_INT
				{
					newLeafNode(lv_size_1_0, grammarAccess.getWindow_TuplebasedAccess().getSizeINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWindow_TuplebasedRule());
					}
					setWithLastConsumed(
						$current,
						"size",
						lv_size_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_2='ADVANCE'
			{
				newLeafNode(otherlv_2, grammarAccess.getWindow_TuplebasedAccess().getADVANCEKeyword_2_0());
			}
			(
				(
					lv_advance_size_3_0=RULE_INT
					{
						newLeafNode(lv_advance_size_3_0, grammarAccess.getWindow_TuplebasedAccess().getAdvance_sizeINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWindow_TuplebasedRule());
						}
						setWithLastConsumed(
							$current,
							"advance_size",
							lv_advance_size_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_4='TUPLE'
		{
			newLeafNode(otherlv_4, grammarAccess.getWindow_TuplebasedAccess().getTUPLEKeyword_3());
		}
		(
			otherlv_5='PARTITION'
			{
				newLeafNode(otherlv_5, grammarAccess.getWindow_TuplebasedAccess().getPARTITIONKeyword_4_0());
			}
			otherlv_6='BY'
			{
				newLeafNode(otherlv_6, grammarAccess.getWindow_TuplebasedAccess().getBYKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWindow_TuplebasedAccess().getPartition_attributeAttributeParserRuleCall_4_2_0());
					}
					lv_partition_attribute_7_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWindow_TuplebasedRule());
						}
						set(
							$current,
							"partition_attribute",
							lv_partition_attribute_7_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpressionsModel
entryRuleExpressionsModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionsModelRule()); }
	iv_ruleExpressionsModel=ruleExpressionsModel
	{ $current=$iv_ruleExpressionsModel.current; }
	EOF;

// Rule ExpressionsModel
ruleExpressionsModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpressionsModelAccess().getExpressionsModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionsModelAccess().getElementsExpressionParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionsModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getOrParserRuleCall());
	}
	this_Or_0=ruleOr
	{
		$current = $this_Or_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0());
		}
		this_And_0=ruleAnd
		{
			$current = $this_And_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrAccess().getOrLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='OR'
			{
				newLeafNode(otherlv_2, grammarAccess.getOrAccess().getORKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndAccess().getEqualitiyParserRuleCall_0());
		}
		this_Equalitiy_0=ruleEqualitiy
		{
			$current = $this_Equalitiy_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndAccess().getAndLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='AND'
			{
				newLeafNode(otherlv_2, grammarAccess.getAndAccess().getANDKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getRightEqualitiyParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEqualitiy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Equalitiy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualitiy
entryRuleEqualitiy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualitiyRule()); }
	iv_ruleEqualitiy=ruleEqualitiy
	{ $current=$iv_ruleEqualitiy.current; }
	EOF;

// Rule Equalitiy
ruleEqualitiy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualitiyAccess().getComparisonParserRuleCall_0());
		}
		this_Comparison_0=ruleComparison
		{
			$current = $this_Comparison_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualitiyAccess().getEqualityLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='='
						{
							newLeafNode(lv_op_2_1, grammarAccess.getEqualitiyAccess().getOpEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualitiyRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='!='
						{
							newLeafNode(lv_op_2_2, grammarAccess.getEqualitiyAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualitiyRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualitiyAccess().getRightComparisonParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleComparison
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualitiyRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Comparison");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current; }
	EOF;

// Rule Comparison
ruleComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0());
		}
		this_PlusOrMinus_0=rulePlusOrMinus
		{
			$current = $this_PlusOrMinus_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getComparisonAccess().getComparisionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='>='
						{
							newLeafNode(lv_op_2_1, grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='<='
						{
							newLeafNode(lv_op_2_2, grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3='<'
						{
							newLeafNode(lv_op_2_3, grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4='>'
						{
							newLeafNode(lv_op_2_4, grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePlusOrMinus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.PlusOrMinus");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusOrMinusRule()); }
	iv_rulePlusOrMinus=rulePlusOrMinus
	{ $current=$iv_rulePlusOrMinus.current; }
	EOF;

// Rule PlusOrMinus
rulePlusOrMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0());
		}
		this_MulOrDiv_0=ruleMulOrDiv
		{
			$current = $this_MulOrDiv_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleMulOrDiv
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlusOrMinusRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.MulOrDiv");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMulOrDivRule()); }
	iv_ruleMulOrDiv=ruleMulOrDiv
	{ $current=$iv_ruleMulOrDiv.current; }
	EOF;

// Rule MulOrDiv
ruleMulOrDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='*'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='/'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMulOrDivRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getBracketAction_0_0(),
						$current);
				}
			)
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getInnerExpressionParserRuleCall_0_2_0());
					}
					lv_inner_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"inner",
							lv_inner_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getNOTAction_1_0(),
						$current);
				}
			)
			otherlv_5='NOT'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryAccess().getNOTKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0());
					}
					lv_expression_6_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"expression",
							lv_expression_6_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2());
		}
		this_Atomic_7=ruleAtomic
		{
			$current = $this_Atomic_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAtomic
entryRuleAtomic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicRule()); }
	iv_ruleAtomic=ruleAtomic
	{ $current=$iv_ruleAtomic.current; }
	EOF;

// Rule Atomic
ruleAtomic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getFloatConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_FLOAT
					{
						newLeafNode(lv_value_3_0, grammarAccess.getAtomicAccess().getValueFLOATTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.FLOAT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getStringConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_value_5_0=RULE_STRING
					{
						newLeafNode(lv_value_5_0, grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getBoolConstantAction_3_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_7_1='TRUE'
						{
							newLeafNode(lv_value_7_1, grammarAccess.getAtomicAccess().getValueTRUEKeyword_3_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_7_1, null);
						}
						    |
						lv_value_7_2='FALSE'
						{
							newLeafNode(lv_value_7_2, grammarAccess.getAtomicAccess().getValueFALSEKeyword_3_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_7_2, null);
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getAttributeRefAction_4_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomicAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_4_1_0_0());
						}
						lv_value_9_0=ruleAttributeWithoutAliasDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomicRule());
							}
							set(
								$current,
								"value",
								lv_value_9_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomicAccess().getValueAttributeWithNestedStatementParserRuleCall_4_1_1_0());
						}
						lv_value_10_0=ruleAttributeWithNestedStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomicRule());
							}
							set(
								$current,
								"value",
								lv_value_10_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithNestedStatement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleAtomicWithoutAttributeRef
entryRuleAtomicWithoutAttributeRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicWithoutAttributeRefRule()); }
	iv_ruleAtomicWithoutAttributeRef=ruleAtomicWithoutAttributeRef
	{ $current=$iv_ruleAtomicWithoutAttributeRef.current; }
	EOF;

// Rule AtomicWithoutAttributeRef
ruleAtomicWithoutAttributeRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicWithoutAttributeRefAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomicWithoutAttributeRefAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicWithoutAttributeRefRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicWithoutAttributeRefAccess().getFloatConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_FLOAT
					{
						newLeafNode(lv_value_3_0, grammarAccess.getAtomicWithoutAttributeRefAccess().getValueFLOATTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicWithoutAttributeRefRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.FLOAT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicWithoutAttributeRefAccess().getStringConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_value_5_0=RULE_STRING
					{
						newLeafNode(lv_value_5_0, grammarAccess.getAtomicWithoutAttributeRefAccess().getValueSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicWithoutAttributeRefRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicWithoutAttributeRefAccess().getBoolConstantAction_3_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_7_1='TRUE'
						{
							newLeafNode(lv_value_7_1, grammarAccess.getAtomicWithoutAttributeRefAccess().getValueTRUEKeyword_3_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicWithoutAttributeRefRule());
							}
							setWithLastConsumed($current, "value", lv_value_7_1, null);
						}
						    |
						lv_value_7_2='FALSE'
						{
							newLeafNode(lv_value_7_2, grammarAccess.getAtomicWithoutAttributeRefAccess().getValueFALSEKeyword_3_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicWithoutAttributeRefRule());
							}
							setWithLastConsumed($current, "value", lv_value_7_2, null);
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleAtomicWithOnlyStringConstant
entryRuleAtomicWithOnlyStringConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicWithOnlyStringConstantRule()); }
	iv_ruleAtomicWithOnlyStringConstant=ruleAtomicWithOnlyStringConstant
	{ $current=$iv_ruleAtomicWithOnlyStringConstant.current; }
	EOF;

// Rule AtomicWithOnlyStringConstant
ruleAtomicWithOnlyStringConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAtomicWithOnlyStringConstantAccess().getStringConstantAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getAtomicWithOnlyStringConstantAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtomicWithOnlyStringConstantRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='INTEGER'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getDataTypeAccess().getValueINTEGERKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='DOUBLE'
				{
					newLeafNode(lv_value_0_2, grammarAccess.getDataTypeAccess().getValueDOUBLEKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
				    |
				lv_value_0_3='LONG'
				{
					newLeafNode(lv_value_0_3, grammarAccess.getDataTypeAccess().getValueLONGKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_3, null);
				}
				    |
				lv_value_0_4='FLOAT'
				{
					newLeafNode(lv_value_0_4, grammarAccess.getDataTypeAccess().getValueFLOATKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_4, null);
				}
				    |
				lv_value_0_5='STRING'
				{
					newLeafNode(lv_value_0_5, grammarAccess.getDataTypeAccess().getValueSTRINGKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_5, null);
				}
				    |
				lv_value_0_6='BOOLEAN'
				{
					newLeafNode(lv_value_0_6, grammarAccess.getDataTypeAccess().getValueBOOLEANKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_6, null);
				}
				    |
				lv_value_0_7='STARTTIMESTAMP'
				{
					newLeafNode(lv_value_0_7, grammarAccess.getDataTypeAccess().getValueSTARTTIMESTAMPKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_7, null);
				}
				    |
				lv_value_0_8='ENDTIMESTAMP'
				{
					newLeafNode(lv_value_0_8, grammarAccess.getDataTypeAccess().getValueENDTIMESTAMPKeyword_0_7());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_8, null);
				}
			)
		)
	)
;

// Rule CreateKeyword
ruleCreateKeyword returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='CREATE'
			{
				$current = grammarAccess.getCreateKeywordAccess().getCREATEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCreateKeywordAccess().getCREATEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ATTACH'
			{
				$current = grammarAccess.getCreateKeywordAccess().getATTACHEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCreateKeywordAccess().getATTACHEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|':'|'$'|'{'|'}') ('a'..'z'|'A'..'Z'|'_'|':'|'$'|'{'|'}'|'0'..'9')*;

RULE_FLOAT : RULE_INT '.' RULE_INT;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
