/**
 * generated by Xtext 2.10.0
 */
package de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl;

import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.AccessFramework;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CQLPackage;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.ChannelFormat;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Create;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Create</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.CreateImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.CreateImpl#getChannelformat <em>Channelformat</em>}</li>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.CreateImpl#getAccessframework <em>Accessframework</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class CreateImpl extends MinimalEObjectImpl.Container implements Create
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getChannelformat() <em>Channelformat</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChannelformat()
   * @generated
   * @ordered
   */
  protected ChannelFormat channelformat;

  /**
   * The cached value of the '{@link #getAccessframework() <em>Accessframework</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccessframework()
   * @generated
   * @ordered
   */
  protected AccessFramework accessframework;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CreateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CQLPackage.Literals.CREATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CQLPackage.CREATE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChannelFormat getChannelformat()
  {
    return channelformat;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetChannelformat(ChannelFormat newChannelformat, NotificationChain msgs)
  {
    ChannelFormat oldChannelformat = channelformat;
    channelformat = newChannelformat;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CQLPackage.CREATE__CHANNELFORMAT, oldChannelformat, newChannelformat);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setChannelformat(ChannelFormat newChannelformat)
  {
    if (newChannelformat != channelformat)
    {
      NotificationChain msgs = null;
      if (channelformat != null)
        msgs = ((InternalEObject)channelformat).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CQLPackage.CREATE__CHANNELFORMAT, null, msgs);
      if (newChannelformat != null)
        msgs = ((InternalEObject)newChannelformat).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CQLPackage.CREATE__CHANNELFORMAT, null, msgs);
      msgs = basicSetChannelformat(newChannelformat, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CQLPackage.CREATE__CHANNELFORMAT, newChannelformat, newChannelformat));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AccessFramework getAccessframework()
  {
    return accessframework;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAccessframework(AccessFramework newAccessframework, NotificationChain msgs)
  {
    AccessFramework oldAccessframework = accessframework;
    accessframework = newAccessframework;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CQLPackage.CREATE__ACCESSFRAMEWORK, oldAccessframework, newAccessframework);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAccessframework(AccessFramework newAccessframework)
  {
    if (newAccessframework != accessframework)
    {
      NotificationChain msgs = null;
      if (accessframework != null)
        msgs = ((InternalEObject)accessframework).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CQLPackage.CREATE__ACCESSFRAMEWORK, null, msgs);
      if (newAccessframework != null)
        msgs = ((InternalEObject)newAccessframework).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CQLPackage.CREATE__ACCESSFRAMEWORK, null, msgs);
      msgs = basicSetAccessframework(newAccessframework, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CQLPackage.CREATE__ACCESSFRAMEWORK, newAccessframework, newAccessframework));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CQLPackage.CREATE__CHANNELFORMAT:
        return basicSetChannelformat(null, msgs);
      case CQLPackage.CREATE__ACCESSFRAMEWORK:
        return basicSetAccessframework(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CQLPackage.CREATE__NAME:
        return getName();
      case CQLPackage.CREATE__CHANNELFORMAT:
        return getChannelformat();
      case CQLPackage.CREATE__ACCESSFRAMEWORK:
        return getAccessframework();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CQLPackage.CREATE__NAME:
        setName((String)newValue);
        return;
      case CQLPackage.CREATE__CHANNELFORMAT:
        setChannelformat((ChannelFormat)newValue);
        return;
      case CQLPackage.CREATE__ACCESSFRAMEWORK:
        setAccessframework((AccessFramework)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CQLPackage.CREATE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case CQLPackage.CREATE__CHANNELFORMAT:
        setChannelformat((ChannelFormat)null);
        return;
      case CQLPackage.CREATE__ACCESSFRAMEWORK:
        setAccessframework((AccessFramework)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CQLPackage.CREATE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case CQLPackage.CREATE__CHANNELFORMAT:
        return channelformat != null;
      case CQLPackage.CREATE__ACCESSFRAMEWORK:
        return accessframework != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //CreateImpl
