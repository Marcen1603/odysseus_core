/**
 * generated by Xtext 2.10.0
 */
package de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl;

import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Alias;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Attribute;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CQLPackage;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Function;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.FunctionExpression;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Function Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.FunctionExpressionImpl#getFunction <em>Function</em>}</li>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.FunctionExpressionImpl#getLeftattribute <em>Leftattribute</em>}</li>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.FunctionExpressionImpl#getLeftconstant <em>Leftconstant</em>}</li>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.FunctionExpressionImpl#getOperator <em>Operator</em>}</li>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.FunctionExpressionImpl#getInnerexpression <em>Innerexpression</em>}</li>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.FunctionExpressionImpl#getRightattribute <em>Rightattribute</em>}</li>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.FunctionExpressionImpl#getRightconstant <em>Rightconstant</em>}</li>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.FunctionExpressionImpl#getAlias <em>Alias</em>}</li>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.FunctionExpressionImpl#getAttribute <em>Attribute</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FunctionExpressionImpl extends MinimalEObjectImpl.Container implements FunctionExpression
{
  /**
   * The cached value of the '{@link #getFunction() <em>Function</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected Function function;

  /**
   * The cached value of the '{@link #getLeftattribute() <em>Leftattribute</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeftattribute()
   * @generated
   * @ordered
   */
  protected Attribute leftattribute;

  /**
   * The default value of the '{@link #getLeftconstant() <em>Leftconstant</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeftconstant()
   * @generated
   * @ordered
   */
  protected static final String LEFTCONSTANT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLeftconstant() <em>Leftconstant</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeftconstant()
   * @generated
   * @ordered
   */
  protected String leftconstant = LEFTCONSTANT_EDEFAULT;

  /**
   * The default value of the '{@link #getOperator() <em>Operator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperator()
   * @generated
   * @ordered
   */
  protected static final String OPERATOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOperator() <em>Operator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperator()
   * @generated
   * @ordered
   */
  protected String operator = OPERATOR_EDEFAULT;

  /**
   * The cached value of the '{@link #getInnerexpression() <em>Innerexpression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInnerexpression()
   * @generated
   * @ordered
   */
  protected FunctionExpression innerexpression;

  /**
   * The cached value of the '{@link #getRightattribute() <em>Rightattribute</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightattribute()
   * @generated
   * @ordered
   */
  protected Attribute rightattribute;

  /**
   * The default value of the '{@link #getRightconstant() <em>Rightconstant</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightconstant()
   * @generated
   * @ordered
   */
  protected static final String RIGHTCONSTANT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRightconstant() <em>Rightconstant</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightconstant()
   * @generated
   * @ordered
   */
  protected String rightconstant = RIGHTCONSTANT_EDEFAULT;

  /**
   * The cached value of the '{@link #getAlias() <em>Alias</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlias()
   * @generated
   * @ordered
   */
  protected Alias alias;

  /**
   * The cached value of the '{@link #getAttribute() <em>Attribute</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttribute()
   * @generated
   * @ordered
   */
  protected Attribute attribute;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FunctionExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CQLPackage.Literals.FUNCTION_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Function getFunction()
  {
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFunction(Function newFunction, NotificationChain msgs)
  {
    Function oldFunction = function;
    function = newFunction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__FUNCTION, oldFunction, newFunction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFunction(Function newFunction)
  {
    if (newFunction != function)
    {
      NotificationChain msgs = null;
      if (function != null)
        msgs = ((InternalEObject)function).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CQLPackage.FUNCTION_EXPRESSION__FUNCTION, null, msgs);
      if (newFunction != null)
        msgs = ((InternalEObject)newFunction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CQLPackage.FUNCTION_EXPRESSION__FUNCTION, null, msgs);
      msgs = basicSetFunction(newFunction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__FUNCTION, newFunction, newFunction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Attribute getLeftattribute()
  {
    return leftattribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLeftattribute(Attribute newLeftattribute, NotificationChain msgs)
  {
    Attribute oldLeftattribute = leftattribute;
    leftattribute = newLeftattribute;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__LEFTATTRIBUTE, oldLeftattribute, newLeftattribute);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeftattribute(Attribute newLeftattribute)
  {
    if (newLeftattribute != leftattribute)
    {
      NotificationChain msgs = null;
      if (leftattribute != null)
        msgs = ((InternalEObject)leftattribute).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CQLPackage.FUNCTION_EXPRESSION__LEFTATTRIBUTE, null, msgs);
      if (newLeftattribute != null)
        msgs = ((InternalEObject)newLeftattribute).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CQLPackage.FUNCTION_EXPRESSION__LEFTATTRIBUTE, null, msgs);
      msgs = basicSetLeftattribute(newLeftattribute, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__LEFTATTRIBUTE, newLeftattribute, newLeftattribute));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLeftconstant()
  {
    return leftconstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeftconstant(String newLeftconstant)
  {
    String oldLeftconstant = leftconstant;
    leftconstant = newLeftconstant;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__LEFTCONSTANT, oldLeftconstant, leftconstant));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOperator()
  {
    return operator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOperator(String newOperator)
  {
    String oldOperator = operator;
    operator = newOperator;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__OPERATOR, oldOperator, operator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionExpression getInnerexpression()
  {
    return innerexpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInnerexpression(FunctionExpression newInnerexpression, NotificationChain msgs)
  {
    FunctionExpression oldInnerexpression = innerexpression;
    innerexpression = newInnerexpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__INNEREXPRESSION, oldInnerexpression, newInnerexpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInnerexpression(FunctionExpression newInnerexpression)
  {
    if (newInnerexpression != innerexpression)
    {
      NotificationChain msgs = null;
      if (innerexpression != null)
        msgs = ((InternalEObject)innerexpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CQLPackage.FUNCTION_EXPRESSION__INNEREXPRESSION, null, msgs);
      if (newInnerexpression != null)
        msgs = ((InternalEObject)newInnerexpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CQLPackage.FUNCTION_EXPRESSION__INNEREXPRESSION, null, msgs);
      msgs = basicSetInnerexpression(newInnerexpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__INNEREXPRESSION, newInnerexpression, newInnerexpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Attribute getRightattribute()
  {
    return rightattribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRightattribute(Attribute newRightattribute, NotificationChain msgs)
  {
    Attribute oldRightattribute = rightattribute;
    rightattribute = newRightattribute;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__RIGHTATTRIBUTE, oldRightattribute, newRightattribute);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRightattribute(Attribute newRightattribute)
  {
    if (newRightattribute != rightattribute)
    {
      NotificationChain msgs = null;
      if (rightattribute != null)
        msgs = ((InternalEObject)rightattribute).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CQLPackage.FUNCTION_EXPRESSION__RIGHTATTRIBUTE, null, msgs);
      if (newRightattribute != null)
        msgs = ((InternalEObject)newRightattribute).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CQLPackage.FUNCTION_EXPRESSION__RIGHTATTRIBUTE, null, msgs);
      msgs = basicSetRightattribute(newRightattribute, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__RIGHTATTRIBUTE, newRightattribute, newRightattribute));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRightconstant()
  {
    return rightconstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRightconstant(String newRightconstant)
  {
    String oldRightconstant = rightconstant;
    rightconstant = newRightconstant;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__RIGHTCONSTANT, oldRightconstant, rightconstant));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Alias getAlias()
  {
    return alias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAlias(Alias newAlias, NotificationChain msgs)
  {
    Alias oldAlias = alias;
    alias = newAlias;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__ALIAS, oldAlias, newAlias);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAlias(Alias newAlias)
  {
    if (newAlias != alias)
    {
      NotificationChain msgs = null;
      if (alias != null)
        msgs = ((InternalEObject)alias).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CQLPackage.FUNCTION_EXPRESSION__ALIAS, null, msgs);
      if (newAlias != null)
        msgs = ((InternalEObject)newAlias).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CQLPackage.FUNCTION_EXPRESSION__ALIAS, null, msgs);
      msgs = basicSetAlias(newAlias, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__ALIAS, newAlias, newAlias));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Attribute getAttribute()
  {
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAttribute(Attribute newAttribute, NotificationChain msgs)
  {
    Attribute oldAttribute = attribute;
    attribute = newAttribute;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__ATTRIBUTE, oldAttribute, newAttribute);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAttribute(Attribute newAttribute)
  {
    if (newAttribute != attribute)
    {
      NotificationChain msgs = null;
      if (attribute != null)
        msgs = ((InternalEObject)attribute).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CQLPackage.FUNCTION_EXPRESSION__ATTRIBUTE, null, msgs);
      if (newAttribute != null)
        msgs = ((InternalEObject)newAttribute).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CQLPackage.FUNCTION_EXPRESSION__ATTRIBUTE, null, msgs);
      msgs = basicSetAttribute(newAttribute, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CQLPackage.FUNCTION_EXPRESSION__ATTRIBUTE, newAttribute, newAttribute));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CQLPackage.FUNCTION_EXPRESSION__FUNCTION:
        return basicSetFunction(null, msgs);
      case CQLPackage.FUNCTION_EXPRESSION__LEFTATTRIBUTE:
        return basicSetLeftattribute(null, msgs);
      case CQLPackage.FUNCTION_EXPRESSION__INNEREXPRESSION:
        return basicSetInnerexpression(null, msgs);
      case CQLPackage.FUNCTION_EXPRESSION__RIGHTATTRIBUTE:
        return basicSetRightattribute(null, msgs);
      case CQLPackage.FUNCTION_EXPRESSION__ALIAS:
        return basicSetAlias(null, msgs);
      case CQLPackage.FUNCTION_EXPRESSION__ATTRIBUTE:
        return basicSetAttribute(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CQLPackage.FUNCTION_EXPRESSION__FUNCTION:
        return getFunction();
      case CQLPackage.FUNCTION_EXPRESSION__LEFTATTRIBUTE:
        return getLeftattribute();
      case CQLPackage.FUNCTION_EXPRESSION__LEFTCONSTANT:
        return getLeftconstant();
      case CQLPackage.FUNCTION_EXPRESSION__OPERATOR:
        return getOperator();
      case CQLPackage.FUNCTION_EXPRESSION__INNEREXPRESSION:
        return getInnerexpression();
      case CQLPackage.FUNCTION_EXPRESSION__RIGHTATTRIBUTE:
        return getRightattribute();
      case CQLPackage.FUNCTION_EXPRESSION__RIGHTCONSTANT:
        return getRightconstant();
      case CQLPackage.FUNCTION_EXPRESSION__ALIAS:
        return getAlias();
      case CQLPackage.FUNCTION_EXPRESSION__ATTRIBUTE:
        return getAttribute();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CQLPackage.FUNCTION_EXPRESSION__FUNCTION:
        setFunction((Function)newValue);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__LEFTATTRIBUTE:
        setLeftattribute((Attribute)newValue);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__LEFTCONSTANT:
        setLeftconstant((String)newValue);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__OPERATOR:
        setOperator((String)newValue);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__INNEREXPRESSION:
        setInnerexpression((FunctionExpression)newValue);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__RIGHTATTRIBUTE:
        setRightattribute((Attribute)newValue);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__RIGHTCONSTANT:
        setRightconstant((String)newValue);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__ALIAS:
        setAlias((Alias)newValue);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__ATTRIBUTE:
        setAttribute((Attribute)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CQLPackage.FUNCTION_EXPRESSION__FUNCTION:
        setFunction((Function)null);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__LEFTATTRIBUTE:
        setLeftattribute((Attribute)null);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__LEFTCONSTANT:
        setLeftconstant(LEFTCONSTANT_EDEFAULT);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__OPERATOR:
        setOperator(OPERATOR_EDEFAULT);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__INNEREXPRESSION:
        setInnerexpression((FunctionExpression)null);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__RIGHTATTRIBUTE:
        setRightattribute((Attribute)null);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__RIGHTCONSTANT:
        setRightconstant(RIGHTCONSTANT_EDEFAULT);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__ALIAS:
        setAlias((Alias)null);
        return;
      case CQLPackage.FUNCTION_EXPRESSION__ATTRIBUTE:
        setAttribute((Attribute)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CQLPackage.FUNCTION_EXPRESSION__FUNCTION:
        return function != null;
      case CQLPackage.FUNCTION_EXPRESSION__LEFTATTRIBUTE:
        return leftattribute != null;
      case CQLPackage.FUNCTION_EXPRESSION__LEFTCONSTANT:
        return LEFTCONSTANT_EDEFAULT == null ? leftconstant != null : !LEFTCONSTANT_EDEFAULT.equals(leftconstant);
      case CQLPackage.FUNCTION_EXPRESSION__OPERATOR:
        return OPERATOR_EDEFAULT == null ? operator != null : !OPERATOR_EDEFAULT.equals(operator);
      case CQLPackage.FUNCTION_EXPRESSION__INNEREXPRESSION:
        return innerexpression != null;
      case CQLPackage.FUNCTION_EXPRESSION__RIGHTATTRIBUTE:
        return rightattribute != null;
      case CQLPackage.FUNCTION_EXPRESSION__RIGHTCONSTANT:
        return RIGHTCONSTANT_EDEFAULT == null ? rightconstant != null : !RIGHTCONSTANT_EDEFAULT.equals(rightconstant);
      case CQLPackage.FUNCTION_EXPRESSION__ALIAS:
        return alias != null;
      case CQLPackage.FUNCTION_EXPRESSION__ATTRIBUTE:
        return attribute != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (leftconstant: ");
    result.append(leftconstant);
    result.append(", operator: ");
    result.append(operator);
    result.append(", rightconstant: ");
    result.append(rightconstant);
    result.append(')');
    return result.toString();
  }

} //FunctionExpressionImpl
