/**
 * generated by Xtext 2.10.0
 */
package de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl;

import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.AccessFramework;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Alias;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.AndPredicate;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Attribute;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.AttributeRef;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.AttributeWithNestedStatement;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.BoolConstant;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Bracket;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CQLFactory;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CQLPackage;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Command;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Comparision;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.ComplexSelect;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.ContextStoreType;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Create;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CreateAccessFramework;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CreateChannelFormatViaFile;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CreateChannelFrameworkViaPort;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CreateContextStore;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CreateDataBaseConnectionGeneric;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CreateDataBaseConnectionJDBC;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CreateDatabaseSink;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CreateDatabaseStream;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CreateView;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.DropContextStore;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.DropDatabaseConnection;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.DropStream;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Equality;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Expression;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.ExpressionComponent;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.ExpressionComponentAsAttribute;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.ExpressionsModel;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.FloatConstant;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Function;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.InnerSelect;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.InnerSelect2;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.IntConstant;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Matrix;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Minus;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Model;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.MulOrDiv;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.NestedSource;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.OrPredicate;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Plus;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.RightsManagement;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.RoleManagement;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.SchemaDefinition;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.SelectArgument;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.SelectExpression;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.SimpleSelect;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.SimpleSource;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Source;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Star;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.StarExpression;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Starthing;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Statement;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.StreamTo;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.StringConstant;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.TimebasedWindow;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.TuplebasedWindow;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.UndboundedWindow;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.UserManagement;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.Vector;
import de.uniol.inf.is.odysseus.parser.novel.cql.cQL.WindowOperator;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class CQLPackageImpl extends EPackageImpl implements CQLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commandEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simpleSelectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass complexSelectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass innerSelectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass innerSelect2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectArgumentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sourceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass attributeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass attributeWithNestedStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionComponentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass starthingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aliasEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass accessFrameworkEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass schemaDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass createEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass createAccessFrameworkEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass createChannelFrameworkViaPortEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass createChannelFormatViaFileEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass createDatabaseStreamEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass createDatabaseSinkEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass createViewEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contextStoreTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass streamToEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass windowOperatorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionsModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simpleSourceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nestedSourceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass functionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass starExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass starEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionComponentAsAttributeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass createDataBaseConnectionJDBCEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass createDataBaseConnectionGenericEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dropDatabaseConnectionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass createContextStoreEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dropContextStoreEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dropStreamEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass userManagementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rightsManagementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass roleManagementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass undboundedWindowEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass timebasedWindowEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tuplebasedWindowEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass orPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass andPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass equalityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass comparisionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass plusEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass minusEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mulOrDivEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bracketEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass notEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass intConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass floatConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass boolConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass attributeRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass matrixEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass vectorEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CQLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private CQLPackageImpl()
  {
    super(eNS_URI, CQLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link CQLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static CQLPackage init()
  {
    if (isInited) return (CQLPackage)EPackage.Registry.INSTANCE.getEPackage(CQLPackage.eNS_URI);

    // Obtain or create and register package
    CQLPackageImpl theCQLPackage = (CQLPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof CQLPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new CQLPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theCQLPackage.createPackageContents();

    // Initialize created meta-data
    theCQLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theCQLPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(CQLPackage.eNS_URI, theCQLPackage);
    return theCQLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_Components()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStatement()
  {
    return statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getStatement_Type()
  {
    return (EReference)statementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCommand()
  {
    return commandEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCommand_Type()
  {
    return (EReference)commandEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSimpleSelect()
  {
    return simpleSelectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSimpleSelect_Distinct()
  {
    return (EAttribute)simpleSelectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSimpleSelect_Arguments()
  {
    return (EReference)simpleSelectEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSimpleSelect_Sources()
  {
    return (EReference)simpleSelectEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSimpleSelect_Predicates()
  {
    return (EReference)simpleSelectEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSimpleSelect_Order()
  {
    return (EReference)simpleSelectEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSimpleSelect_Having()
  {
    return (EReference)simpleSelectEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getComplexSelect()
  {
    return complexSelectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getComplexSelect_Left()
  {
    return (EReference)complexSelectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getComplexSelect_Operation()
  {
    return (EAttribute)complexSelectEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getComplexSelect_Right()
  {
    return (EReference)complexSelectEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInnerSelect()
  {
    return innerSelectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getInnerSelect_Select()
  {
    return (EReference)innerSelectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInnerSelect2()
  {
    return innerSelect2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getInnerSelect2_Select()
  {
    return (EReference)innerSelect2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSelectArgument()
  {
    return selectArgumentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSelectArgument_Attribute()
  {
    return (EReference)selectArgumentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSelectArgument_Expression()
  {
    return (EReference)selectArgumentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSource()
  {
    return sourceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSource_Alias()
  {
    return (EReference)sourceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAttribute()
  {
    return attributeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAttribute_Name()
  {
    return (EAttribute)attributeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAttribute_Alias()
  {
    return (EReference)attributeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAttributeWithNestedStatement()
  {
    return attributeWithNestedStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAttributeWithNestedStatement_Value()
  {
    return (EReference)attributeWithNestedStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAttributeWithNestedStatement_Nested()
  {
    return (EReference)attributeWithNestedStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSelectExpression()
  {
    return selectExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSelectExpression_Expressions()
  {
    return (EReference)selectExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSelectExpression_Operators()
  {
    return (EAttribute)selectExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSelectExpression_Alias()
  {
    return (EReference)selectExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExpressionComponent()
  {
    return expressionComponentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getExpressionComponent_Value()
  {
    return (EReference)expressionComponentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStarthing()
  {
    return starthingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAlias()
  {
    return aliasEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAlias_Name()
  {
    return (EAttribute)aliasEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAccessFramework()
  {
    return accessFrameworkEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAccessFramework_Wrapper()
  {
    return (EAttribute)accessFrameworkEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAccessFramework_Protocol()
  {
    return (EAttribute)accessFrameworkEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAccessFramework_Transport()
  {
    return (EAttribute)accessFrameworkEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAccessFramework_Datahandler()
  {
    return (EAttribute)accessFrameworkEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAccessFramework_Keys()
  {
    return (EAttribute)accessFrameworkEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAccessFramework_Values()
  {
    return (EAttribute)accessFrameworkEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSchemaDefinition()
  {
    return schemaDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSchemaDefinition_Name()
  {
    return (EAttribute)schemaDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSchemaDefinition_Arguments()
  {
    return (EAttribute)schemaDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCreate()
  {
    return createEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreate_Type()
  {
    return (EAttribute)createEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCreate_Create()
  {
    return (EReference)createEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCreateAccessFramework()
  {
    return createAccessFrameworkEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCreateAccessFramework_Attributes()
  {
    return (EReference)createAccessFrameworkEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCreateAccessFramework_Pars()
  {
    return (EReference)createAccessFrameworkEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCreateChannelFrameworkViaPort()
  {
    return createChannelFrameworkViaPortEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCreateChannelFrameworkViaPort_Attributes()
  {
    return (EReference)createChannelFrameworkViaPortEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateChannelFrameworkViaPort_Host()
  {
    return (EAttribute)createChannelFrameworkViaPortEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateChannelFrameworkViaPort_Port()
  {
    return (EAttribute)createChannelFrameworkViaPortEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCreateChannelFormatViaFile()
  {
    return createChannelFormatViaFileEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCreateChannelFormatViaFile_Attributes()
  {
    return (EReference)createChannelFormatViaFileEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateChannelFormatViaFile_Filename()
  {
    return (EAttribute)createChannelFormatViaFileEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateChannelFormatViaFile_Type()
  {
    return (EAttribute)createChannelFormatViaFileEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCreateDatabaseStream()
  {
    return createDatabaseStreamEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCreateDatabaseStream_Attributes()
  {
    return (EReference)createDatabaseStreamEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDatabaseStream_Database()
  {
    return (EAttribute)createDatabaseStreamEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDatabaseStream_Table()
  {
    return (EAttribute)createDatabaseStreamEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDatabaseStream_Size()
  {
    return (EAttribute)createDatabaseStreamEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDatabaseStream_Unit()
  {
    return (EAttribute)createDatabaseStreamEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCreateDatabaseSink()
  {
    return createDatabaseSinkEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDatabaseSink_Name()
  {
    return (EAttribute)createDatabaseSinkEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDatabaseSink_Database()
  {
    return (EAttribute)createDatabaseSinkEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDatabaseSink_Table()
  {
    return (EAttribute)createDatabaseSinkEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDatabaseSink_Option()
  {
    return (EAttribute)createDatabaseSinkEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCreateView()
  {
    return createViewEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateView_Name()
  {
    return (EAttribute)createViewEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCreateView_Select()
  {
    return (EReference)createViewEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getContextStoreType()
  {
    return contextStoreTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getContextStoreType_Type()
  {
    return (EAttribute)contextStoreTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getContextStoreType_Size()
  {
    return (EAttribute)contextStoreTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getContextStoreType_Partition()
  {
    return (EAttribute)contextStoreTypeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStreamTo()
  {
    return streamToEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getStreamTo_Name()
  {
    return (EAttribute)streamToEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getStreamTo_Statement()
  {
    return (EReference)streamToEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getStreamTo_Inputname()
  {
    return (EAttribute)streamToEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getWindowOperator()
  {
    return windowOperatorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExpressionsModel()
  {
    return expressionsModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getExpressionsModel_Elements()
  {
    return (EReference)expressionsModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExpression()
  {
    return expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSimpleSource()
  {
    return simpleSourceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSimpleSource_Name()
  {
    return (EAttribute)simpleSourceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSimpleSource_Window()
  {
    return (EReference)simpleSourceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNestedSource()
  {
    return nestedSourceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNestedSource_Statement()
  {
    return (EReference)nestedSourceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFunction()
  {
    return functionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFunction_Name()
  {
    return (EAttribute)functionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStarExpression()
  {
    return starExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStar()
  {
    return starEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExpressionComponentAsAttribute()
  {
    return expressionComponentAsAttributeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCreateDataBaseConnectionJDBC()
  {
    return createDataBaseConnectionJDBCEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDataBaseConnectionJDBC_Name()
  {
    return (EAttribute)createDataBaseConnectionJDBCEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDataBaseConnectionJDBC_Server()
  {
    return (EAttribute)createDataBaseConnectionJDBCEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDataBaseConnectionJDBC_User()
  {
    return (EAttribute)createDataBaseConnectionJDBCEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDataBaseConnectionJDBC_Password()
  {
    return (EAttribute)createDataBaseConnectionJDBCEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDataBaseConnectionJDBC_Lazy()
  {
    return (EAttribute)createDataBaseConnectionJDBCEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCreateDataBaseConnectionGeneric()
  {
    return createDataBaseConnectionGenericEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDataBaseConnectionGeneric_Name()
  {
    return (EAttribute)createDataBaseConnectionGenericEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDataBaseConnectionGeneric_Driver()
  {
    return (EAttribute)createDataBaseConnectionGenericEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDataBaseConnectionGeneric_Source()
  {
    return (EAttribute)createDataBaseConnectionGenericEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDataBaseConnectionGeneric_Host()
  {
    return (EAttribute)createDataBaseConnectionGenericEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDataBaseConnectionGeneric_Port()
  {
    return (EAttribute)createDataBaseConnectionGenericEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDataBaseConnectionGeneric_User()
  {
    return (EAttribute)createDataBaseConnectionGenericEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDataBaseConnectionGeneric_Password()
  {
    return (EAttribute)createDataBaseConnectionGenericEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreateDataBaseConnectionGeneric_Lazy()
  {
    return (EAttribute)createDataBaseConnectionGenericEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDropDatabaseConnection()
  {
    return dropDatabaseConnectionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDropDatabaseConnection_Name()
  {
    return (EAttribute)dropDatabaseConnectionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCreateContextStore()
  {
    return createContextStoreEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCreateContextStore_Attributes()
  {
    return (EReference)createContextStoreEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCreateContextStore_ContextType()
  {
    return (EReference)createContextStoreEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDropContextStore()
  {
    return dropContextStoreEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDropContextStore_Name()
  {
    return (EAttribute)dropContextStoreEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDropContextStore_Exists()
  {
    return (EAttribute)dropContextStoreEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDropStream()
  {
    return dropStreamEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDropStream_Name()
  {
    return (EAttribute)dropStreamEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDropStream_Stream()
  {
    return (EAttribute)dropStreamEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDropStream_Exists()
  {
    return (EAttribute)dropStreamEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getUserManagement()
  {
    return userManagementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getUserManagement_Name()
  {
    return (EAttribute)userManagementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getUserManagement_Subject()
  {
    return (EAttribute)userManagementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getUserManagement_SubjectName()
  {
    return (EAttribute)userManagementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getUserManagement_Password()
  {
    return (EAttribute)userManagementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRightsManagement()
  {
    return rightsManagementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRightsManagement_Name()
  {
    return (EAttribute)rightsManagementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRightsManagement_Operations()
  {
    return (EAttribute)rightsManagementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRightsManagement_Operations2()
  {
    return (EAttribute)rightsManagementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRightsManagement_User()
  {
    return (EAttribute)rightsManagementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRoleManagement()
  {
    return roleManagementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRoleManagement_Name()
  {
    return (EAttribute)roleManagementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRoleManagement_Operations()
  {
    return (EAttribute)roleManagementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRoleManagement_User()
  {
    return (EAttribute)roleManagementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getUndboundedWindow()
  {
    return undboundedWindowEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTimebasedWindow()
  {
    return timebasedWindowEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTimebasedWindow_Size()
  {
    return (EAttribute)timebasedWindowEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTimebasedWindow_Unit()
  {
    return (EAttribute)timebasedWindowEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTimebasedWindow_Advance_size()
  {
    return (EAttribute)timebasedWindowEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTimebasedWindow_Advance_unit()
  {
    return (EAttribute)timebasedWindowEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTuplebasedWindow()
  {
    return tuplebasedWindowEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTuplebasedWindow_Size()
  {
    return (EAttribute)tuplebasedWindowEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTuplebasedWindow_Advance_size()
  {
    return (EAttribute)tuplebasedWindowEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTuplebasedWindow_Partition_attribute()
  {
    return (EReference)tuplebasedWindowEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOrPredicate()
  {
    return orPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOrPredicate_Left()
  {
    return (EReference)orPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOrPredicate_Right()
  {
    return (EReference)orPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAndPredicate()
  {
    return andPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAndPredicate_Left()
  {
    return (EReference)andPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAndPredicate_Right()
  {
    return (EReference)andPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEquality()
  {
    return equalityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEquality_Left()
  {
    return (EReference)equalityEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEquality_Op()
  {
    return (EAttribute)equalityEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEquality_Right()
  {
    return (EReference)equalityEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getComparision()
  {
    return comparisionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getComparision_Left()
  {
    return (EReference)comparisionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getComparision_Op()
  {
    return (EAttribute)comparisionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getComparision_Right()
  {
    return (EReference)comparisionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPlus()
  {
    return plusEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPlus_Left()
  {
    return (EReference)plusEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPlus_Right()
  {
    return (EReference)plusEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMinus()
  {
    return minusEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMinus_Left()
  {
    return (EReference)minusEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMinus_Right()
  {
    return (EReference)minusEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMulOrDiv()
  {
    return mulOrDivEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMulOrDiv_Left()
  {
    return (EReference)mulOrDivEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMulOrDiv_Op()
  {
    return (EAttribute)mulOrDivEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMulOrDiv_Right()
  {
    return (EReference)mulOrDivEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBracket()
  {
    return bracketEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBracket_Inner()
  {
    return (EReference)bracketEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNOT()
  {
    return notEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNOT_Expression()
  {
    return (EReference)notEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getIntConstant()
  {
    return intConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getIntConstant_Value()
  {
    return (EAttribute)intConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFloatConstant()
  {
    return floatConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFloatConstant_Value()
  {
    return (EAttribute)floatConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStringConstant()
  {
    return stringConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getStringConstant_Value()
  {
    return (EAttribute)stringConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBoolConstant()
  {
    return boolConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getBoolConstant_Value()
  {
    return (EAttribute)boolConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAttributeRef()
  {
    return attributeRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAttributeRef_Value()
  {
    return (EReference)attributeRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMatrix()
  {
    return matrixEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMatrix_Value()
  {
    return (EAttribute)matrixEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getVector()
  {
    return vectorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getVector_Value()
  {
    return (EAttribute)vectorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CQLFactory getCQLFactory()
  {
    return (CQLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__COMPONENTS);

    statementEClass = createEClass(STATEMENT);
    createEReference(statementEClass, STATEMENT__TYPE);

    commandEClass = createEClass(COMMAND);
    createEReference(commandEClass, COMMAND__TYPE);

    simpleSelectEClass = createEClass(SIMPLE_SELECT);
    createEAttribute(simpleSelectEClass, SIMPLE_SELECT__DISTINCT);
    createEReference(simpleSelectEClass, SIMPLE_SELECT__ARGUMENTS);
    createEReference(simpleSelectEClass, SIMPLE_SELECT__SOURCES);
    createEReference(simpleSelectEClass, SIMPLE_SELECT__PREDICATES);
    createEReference(simpleSelectEClass, SIMPLE_SELECT__ORDER);
    createEReference(simpleSelectEClass, SIMPLE_SELECT__HAVING);

    complexSelectEClass = createEClass(COMPLEX_SELECT);
    createEReference(complexSelectEClass, COMPLEX_SELECT__LEFT);
    createEAttribute(complexSelectEClass, COMPLEX_SELECT__OPERATION);
    createEReference(complexSelectEClass, COMPLEX_SELECT__RIGHT);

    innerSelectEClass = createEClass(INNER_SELECT);
    createEReference(innerSelectEClass, INNER_SELECT__SELECT);

    innerSelect2EClass = createEClass(INNER_SELECT2);
    createEReference(innerSelect2EClass, INNER_SELECT2__SELECT);

    selectArgumentEClass = createEClass(SELECT_ARGUMENT);
    createEReference(selectArgumentEClass, SELECT_ARGUMENT__ATTRIBUTE);
    createEReference(selectArgumentEClass, SELECT_ARGUMENT__EXPRESSION);

    sourceEClass = createEClass(SOURCE);
    createEReference(sourceEClass, SOURCE__ALIAS);

    attributeEClass = createEClass(ATTRIBUTE);
    createEAttribute(attributeEClass, ATTRIBUTE__NAME);
    createEReference(attributeEClass, ATTRIBUTE__ALIAS);

    attributeWithNestedStatementEClass = createEClass(ATTRIBUTE_WITH_NESTED_STATEMENT);
    createEReference(attributeWithNestedStatementEClass, ATTRIBUTE_WITH_NESTED_STATEMENT__VALUE);
    createEReference(attributeWithNestedStatementEClass, ATTRIBUTE_WITH_NESTED_STATEMENT__NESTED);

    selectExpressionEClass = createEClass(SELECT_EXPRESSION);
    createEReference(selectExpressionEClass, SELECT_EXPRESSION__EXPRESSIONS);
    createEAttribute(selectExpressionEClass, SELECT_EXPRESSION__OPERATORS);
    createEReference(selectExpressionEClass, SELECT_EXPRESSION__ALIAS);

    expressionComponentEClass = createEClass(EXPRESSION_COMPONENT);
    createEReference(expressionComponentEClass, EXPRESSION_COMPONENT__VALUE);

    starthingEClass = createEClass(STARTHING);

    aliasEClass = createEClass(ALIAS);
    createEAttribute(aliasEClass, ALIAS__NAME);

    accessFrameworkEClass = createEClass(ACCESS_FRAMEWORK);
    createEAttribute(accessFrameworkEClass, ACCESS_FRAMEWORK__WRAPPER);
    createEAttribute(accessFrameworkEClass, ACCESS_FRAMEWORK__PROTOCOL);
    createEAttribute(accessFrameworkEClass, ACCESS_FRAMEWORK__TRANSPORT);
    createEAttribute(accessFrameworkEClass, ACCESS_FRAMEWORK__DATAHANDLER);
    createEAttribute(accessFrameworkEClass, ACCESS_FRAMEWORK__KEYS);
    createEAttribute(accessFrameworkEClass, ACCESS_FRAMEWORK__VALUES);

    schemaDefinitionEClass = createEClass(SCHEMA_DEFINITION);
    createEAttribute(schemaDefinitionEClass, SCHEMA_DEFINITION__NAME);
    createEAttribute(schemaDefinitionEClass, SCHEMA_DEFINITION__ARGUMENTS);

    createEClass = createEClass(CREATE);
    createEAttribute(createEClass, CREATE__TYPE);
    createEReference(createEClass, CREATE__CREATE);

    createAccessFrameworkEClass = createEClass(CREATE_ACCESS_FRAMEWORK);
    createEReference(createAccessFrameworkEClass, CREATE_ACCESS_FRAMEWORK__ATTRIBUTES);
    createEReference(createAccessFrameworkEClass, CREATE_ACCESS_FRAMEWORK__PARS);

    createChannelFrameworkViaPortEClass = createEClass(CREATE_CHANNEL_FRAMEWORK_VIA_PORT);
    createEReference(createChannelFrameworkViaPortEClass, CREATE_CHANNEL_FRAMEWORK_VIA_PORT__ATTRIBUTES);
    createEAttribute(createChannelFrameworkViaPortEClass, CREATE_CHANNEL_FRAMEWORK_VIA_PORT__HOST);
    createEAttribute(createChannelFrameworkViaPortEClass, CREATE_CHANNEL_FRAMEWORK_VIA_PORT__PORT);

    createChannelFormatViaFileEClass = createEClass(CREATE_CHANNEL_FORMAT_VIA_FILE);
    createEReference(createChannelFormatViaFileEClass, CREATE_CHANNEL_FORMAT_VIA_FILE__ATTRIBUTES);
    createEAttribute(createChannelFormatViaFileEClass, CREATE_CHANNEL_FORMAT_VIA_FILE__FILENAME);
    createEAttribute(createChannelFormatViaFileEClass, CREATE_CHANNEL_FORMAT_VIA_FILE__TYPE);

    createDatabaseStreamEClass = createEClass(CREATE_DATABASE_STREAM);
    createEReference(createDatabaseStreamEClass, CREATE_DATABASE_STREAM__ATTRIBUTES);
    createEAttribute(createDatabaseStreamEClass, CREATE_DATABASE_STREAM__DATABASE);
    createEAttribute(createDatabaseStreamEClass, CREATE_DATABASE_STREAM__TABLE);
    createEAttribute(createDatabaseStreamEClass, CREATE_DATABASE_STREAM__SIZE);
    createEAttribute(createDatabaseStreamEClass, CREATE_DATABASE_STREAM__UNIT);

    createDatabaseSinkEClass = createEClass(CREATE_DATABASE_SINK);
    createEAttribute(createDatabaseSinkEClass, CREATE_DATABASE_SINK__NAME);
    createEAttribute(createDatabaseSinkEClass, CREATE_DATABASE_SINK__DATABASE);
    createEAttribute(createDatabaseSinkEClass, CREATE_DATABASE_SINK__TABLE);
    createEAttribute(createDatabaseSinkEClass, CREATE_DATABASE_SINK__OPTION);

    createViewEClass = createEClass(CREATE_VIEW);
    createEAttribute(createViewEClass, CREATE_VIEW__NAME);
    createEReference(createViewEClass, CREATE_VIEW__SELECT);

    contextStoreTypeEClass = createEClass(CONTEXT_STORE_TYPE);
    createEAttribute(contextStoreTypeEClass, CONTEXT_STORE_TYPE__TYPE);
    createEAttribute(contextStoreTypeEClass, CONTEXT_STORE_TYPE__SIZE);
    createEAttribute(contextStoreTypeEClass, CONTEXT_STORE_TYPE__PARTITION);

    streamToEClass = createEClass(STREAM_TO);
    createEAttribute(streamToEClass, STREAM_TO__NAME);
    createEReference(streamToEClass, STREAM_TO__STATEMENT);
    createEAttribute(streamToEClass, STREAM_TO__INPUTNAME);

    windowOperatorEClass = createEClass(WINDOW_OPERATOR);

    expressionsModelEClass = createEClass(EXPRESSIONS_MODEL);
    createEReference(expressionsModelEClass, EXPRESSIONS_MODEL__ELEMENTS);

    expressionEClass = createEClass(EXPRESSION);

    simpleSourceEClass = createEClass(SIMPLE_SOURCE);
    createEAttribute(simpleSourceEClass, SIMPLE_SOURCE__NAME);
    createEReference(simpleSourceEClass, SIMPLE_SOURCE__WINDOW);

    nestedSourceEClass = createEClass(NESTED_SOURCE);
    createEReference(nestedSourceEClass, NESTED_SOURCE__STATEMENT);

    functionEClass = createEClass(FUNCTION);
    createEAttribute(functionEClass, FUNCTION__NAME);

    starExpressionEClass = createEClass(STAR_EXPRESSION);

    starEClass = createEClass(STAR);

    expressionComponentAsAttributeEClass = createEClass(EXPRESSION_COMPONENT_AS_ATTRIBUTE);

    createDataBaseConnectionJDBCEClass = createEClass(CREATE_DATA_BASE_CONNECTION_JDBC);
    createEAttribute(createDataBaseConnectionJDBCEClass, CREATE_DATA_BASE_CONNECTION_JDBC__NAME);
    createEAttribute(createDataBaseConnectionJDBCEClass, CREATE_DATA_BASE_CONNECTION_JDBC__SERVER);
    createEAttribute(createDataBaseConnectionJDBCEClass, CREATE_DATA_BASE_CONNECTION_JDBC__USER);
    createEAttribute(createDataBaseConnectionJDBCEClass, CREATE_DATA_BASE_CONNECTION_JDBC__PASSWORD);
    createEAttribute(createDataBaseConnectionJDBCEClass, CREATE_DATA_BASE_CONNECTION_JDBC__LAZY);

    createDataBaseConnectionGenericEClass = createEClass(CREATE_DATA_BASE_CONNECTION_GENERIC);
    createEAttribute(createDataBaseConnectionGenericEClass, CREATE_DATA_BASE_CONNECTION_GENERIC__NAME);
    createEAttribute(createDataBaseConnectionGenericEClass, CREATE_DATA_BASE_CONNECTION_GENERIC__DRIVER);
    createEAttribute(createDataBaseConnectionGenericEClass, CREATE_DATA_BASE_CONNECTION_GENERIC__SOURCE);
    createEAttribute(createDataBaseConnectionGenericEClass, CREATE_DATA_BASE_CONNECTION_GENERIC__HOST);
    createEAttribute(createDataBaseConnectionGenericEClass, CREATE_DATA_BASE_CONNECTION_GENERIC__PORT);
    createEAttribute(createDataBaseConnectionGenericEClass, CREATE_DATA_BASE_CONNECTION_GENERIC__USER);
    createEAttribute(createDataBaseConnectionGenericEClass, CREATE_DATA_BASE_CONNECTION_GENERIC__PASSWORD);
    createEAttribute(createDataBaseConnectionGenericEClass, CREATE_DATA_BASE_CONNECTION_GENERIC__LAZY);

    dropDatabaseConnectionEClass = createEClass(DROP_DATABASE_CONNECTION);
    createEAttribute(dropDatabaseConnectionEClass, DROP_DATABASE_CONNECTION__NAME);

    createContextStoreEClass = createEClass(CREATE_CONTEXT_STORE);
    createEReference(createContextStoreEClass, CREATE_CONTEXT_STORE__ATTRIBUTES);
    createEReference(createContextStoreEClass, CREATE_CONTEXT_STORE__CONTEXT_TYPE);

    dropContextStoreEClass = createEClass(DROP_CONTEXT_STORE);
    createEAttribute(dropContextStoreEClass, DROP_CONTEXT_STORE__NAME);
    createEAttribute(dropContextStoreEClass, DROP_CONTEXT_STORE__EXISTS);

    dropStreamEClass = createEClass(DROP_STREAM);
    createEAttribute(dropStreamEClass, DROP_STREAM__NAME);
    createEAttribute(dropStreamEClass, DROP_STREAM__STREAM);
    createEAttribute(dropStreamEClass, DROP_STREAM__EXISTS);

    userManagementEClass = createEClass(USER_MANAGEMENT);
    createEAttribute(userManagementEClass, USER_MANAGEMENT__NAME);
    createEAttribute(userManagementEClass, USER_MANAGEMENT__SUBJECT);
    createEAttribute(userManagementEClass, USER_MANAGEMENT__SUBJECT_NAME);
    createEAttribute(userManagementEClass, USER_MANAGEMENT__PASSWORD);

    rightsManagementEClass = createEClass(RIGHTS_MANAGEMENT);
    createEAttribute(rightsManagementEClass, RIGHTS_MANAGEMENT__NAME);
    createEAttribute(rightsManagementEClass, RIGHTS_MANAGEMENT__OPERATIONS);
    createEAttribute(rightsManagementEClass, RIGHTS_MANAGEMENT__OPERATIONS2);
    createEAttribute(rightsManagementEClass, RIGHTS_MANAGEMENT__USER);

    roleManagementEClass = createEClass(ROLE_MANAGEMENT);
    createEAttribute(roleManagementEClass, ROLE_MANAGEMENT__NAME);
    createEAttribute(roleManagementEClass, ROLE_MANAGEMENT__OPERATIONS);
    createEAttribute(roleManagementEClass, ROLE_MANAGEMENT__USER);

    undboundedWindowEClass = createEClass(UNDBOUNDED_WINDOW);

    timebasedWindowEClass = createEClass(TIMEBASED_WINDOW);
    createEAttribute(timebasedWindowEClass, TIMEBASED_WINDOW__SIZE);
    createEAttribute(timebasedWindowEClass, TIMEBASED_WINDOW__UNIT);
    createEAttribute(timebasedWindowEClass, TIMEBASED_WINDOW__ADVANCE_SIZE);
    createEAttribute(timebasedWindowEClass, TIMEBASED_WINDOW__ADVANCE_UNIT);

    tuplebasedWindowEClass = createEClass(TUPLEBASED_WINDOW);
    createEAttribute(tuplebasedWindowEClass, TUPLEBASED_WINDOW__SIZE);
    createEAttribute(tuplebasedWindowEClass, TUPLEBASED_WINDOW__ADVANCE_SIZE);
    createEReference(tuplebasedWindowEClass, TUPLEBASED_WINDOW__PARTITION_ATTRIBUTE);

    orPredicateEClass = createEClass(OR_PREDICATE);
    createEReference(orPredicateEClass, OR_PREDICATE__LEFT);
    createEReference(orPredicateEClass, OR_PREDICATE__RIGHT);

    andPredicateEClass = createEClass(AND_PREDICATE);
    createEReference(andPredicateEClass, AND_PREDICATE__LEFT);
    createEReference(andPredicateEClass, AND_PREDICATE__RIGHT);

    equalityEClass = createEClass(EQUALITY);
    createEReference(equalityEClass, EQUALITY__LEFT);
    createEAttribute(equalityEClass, EQUALITY__OP);
    createEReference(equalityEClass, EQUALITY__RIGHT);

    comparisionEClass = createEClass(COMPARISION);
    createEReference(comparisionEClass, COMPARISION__LEFT);
    createEAttribute(comparisionEClass, COMPARISION__OP);
    createEReference(comparisionEClass, COMPARISION__RIGHT);

    plusEClass = createEClass(PLUS);
    createEReference(plusEClass, PLUS__LEFT);
    createEReference(plusEClass, PLUS__RIGHT);

    minusEClass = createEClass(MINUS);
    createEReference(minusEClass, MINUS__LEFT);
    createEReference(minusEClass, MINUS__RIGHT);

    mulOrDivEClass = createEClass(MUL_OR_DIV);
    createEReference(mulOrDivEClass, MUL_OR_DIV__LEFT);
    createEAttribute(mulOrDivEClass, MUL_OR_DIV__OP);
    createEReference(mulOrDivEClass, MUL_OR_DIV__RIGHT);

    bracketEClass = createEClass(BRACKET);
    createEReference(bracketEClass, BRACKET__INNER);

    notEClass = createEClass(NOT);
    createEReference(notEClass, NOT__EXPRESSION);

    intConstantEClass = createEClass(INT_CONSTANT);
    createEAttribute(intConstantEClass, INT_CONSTANT__VALUE);

    floatConstantEClass = createEClass(FLOAT_CONSTANT);
    createEAttribute(floatConstantEClass, FLOAT_CONSTANT__VALUE);

    stringConstantEClass = createEClass(STRING_CONSTANT);
    createEAttribute(stringConstantEClass, STRING_CONSTANT__VALUE);

    boolConstantEClass = createEClass(BOOL_CONSTANT);
    createEAttribute(boolConstantEClass, BOOL_CONSTANT__VALUE);

    attributeRefEClass = createEClass(ATTRIBUTE_REF);
    createEReference(attributeRefEClass, ATTRIBUTE_REF__VALUE);

    matrixEClass = createEClass(MATRIX);
    createEAttribute(matrixEClass, MATRIX__VALUE);

    vectorEClass = createEClass(VECTOR);
    createEAttribute(vectorEClass, VECTOR__VALUE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    simpleSourceEClass.getESuperTypes().add(this.getSource());
    nestedSourceEClass.getESuperTypes().add(this.getSource());
    functionEClass.getESuperTypes().add(this.getExpressionComponent());
    starExpressionEClass.getESuperTypes().add(this.getSelectExpression());
    starEClass.getESuperTypes().add(this.getExpressionComponent());
    expressionComponentAsAttributeEClass.getESuperTypes().add(this.getExpressionComponent());
    createDataBaseConnectionJDBCEClass.getESuperTypes().add(this.getCommand());
    createDataBaseConnectionGenericEClass.getESuperTypes().add(this.getCommand());
    dropDatabaseConnectionEClass.getESuperTypes().add(this.getCommand());
    createContextStoreEClass.getESuperTypes().add(this.getCommand());
    dropContextStoreEClass.getESuperTypes().add(this.getCommand());
    dropStreamEClass.getESuperTypes().add(this.getCommand());
    userManagementEClass.getESuperTypes().add(this.getCommand());
    rightsManagementEClass.getESuperTypes().add(this.getCommand());
    roleManagementEClass.getESuperTypes().add(this.getCommand());
    undboundedWindowEClass.getESuperTypes().add(this.getWindowOperator());
    timebasedWindowEClass.getESuperTypes().add(this.getWindowOperator());
    tuplebasedWindowEClass.getESuperTypes().add(this.getWindowOperator());
    orPredicateEClass.getESuperTypes().add(this.getExpression());
    andPredicateEClass.getESuperTypes().add(this.getExpression());
    equalityEClass.getESuperTypes().add(this.getExpression());
    comparisionEClass.getESuperTypes().add(this.getExpression());
    plusEClass.getESuperTypes().add(this.getExpression());
    minusEClass.getESuperTypes().add(this.getExpression());
    mulOrDivEClass.getESuperTypes().add(this.getExpression());
    bracketEClass.getESuperTypes().add(this.getExpression());
    notEClass.getESuperTypes().add(this.getExpression());
    intConstantEClass.getESuperTypes().add(this.getExpression());
    floatConstantEClass.getESuperTypes().add(this.getExpression());
    stringConstantEClass.getESuperTypes().add(this.getExpression());
    boolConstantEClass.getESuperTypes().add(this.getExpression());
    attributeRefEClass.getESuperTypes().add(this.getExpression());
    matrixEClass.getESuperTypes().add(this.getExpression());
    vectorEClass.getESuperTypes().add(this.getExpression());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Components(), ecorePackage.getEObject(), null, "components", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(statementEClass, Statement.class, "Statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getStatement_Type(), ecorePackage.getEObject(), null, "type", null, 0, 1, Statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commandEClass, Command.class, "Command", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCommand_Type(), this.getCommand(), null, "type", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(simpleSelectEClass, SimpleSelect.class, "SimpleSelect", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSimpleSelect_Distinct(), ecorePackage.getEString(), "distinct", null, 0, 1, SimpleSelect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleSelect_Arguments(), this.getSelectArgument(), null, "arguments", null, 0, -1, SimpleSelect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleSelect_Sources(), this.getSource(), null, "sources", null, 0, -1, SimpleSelect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleSelect_Predicates(), this.getExpressionsModel(), null, "predicates", null, 0, 1, SimpleSelect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleSelect_Order(), this.getAttribute(), null, "order", null, 0, -1, SimpleSelect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleSelect_Having(), this.getExpressionsModel(), null, "having", null, 0, 1, SimpleSelect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(complexSelectEClass, ComplexSelect.class, "ComplexSelect", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getComplexSelect_Left(), this.getSimpleSelect(), null, "left", null, 0, 1, ComplexSelect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getComplexSelect_Operation(), ecorePackage.getEString(), "operation", null, 0, 1, ComplexSelect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComplexSelect_Right(), this.getSimpleSelect(), null, "right", null, 0, 1, ComplexSelect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(innerSelectEClass, InnerSelect.class, "InnerSelect", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInnerSelect_Select(), this.getSimpleSelect(), null, "select", null, 0, 1, InnerSelect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(innerSelect2EClass, InnerSelect2.class, "InnerSelect2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInnerSelect2_Select(), this.getSimpleSelect(), null, "select", null, 0, 1, InnerSelect2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectArgumentEClass, SelectArgument.class, "SelectArgument", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSelectArgument_Attribute(), this.getAttribute(), null, "attribute", null, 0, 1, SelectArgument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelectArgument_Expression(), this.getSelectExpression(), null, "expression", null, 0, 1, SelectArgument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sourceEClass, Source.class, "Source", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSource_Alias(), this.getAlias(), null, "alias", null, 0, 1, Source.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(attributeEClass, Attribute.class, "Attribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAttribute_Name(), ecorePackage.getEString(), "name", null, 0, 1, Attribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAttribute_Alias(), this.getAlias(), null, "alias", null, 0, 1, Attribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(attributeWithNestedStatementEClass, AttributeWithNestedStatement.class, "AttributeWithNestedStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAttributeWithNestedStatement_Value(), this.getAttribute(), null, "value", null, 0, 1, AttributeWithNestedStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAttributeWithNestedStatement_Nested(), this.getInnerSelect(), null, "nested", null, 0, 1, AttributeWithNestedStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectExpressionEClass, SelectExpression.class, "SelectExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSelectExpression_Expressions(), this.getExpressionComponent(), null, "expressions", null, 0, -1, SelectExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSelectExpression_Operators(), ecorePackage.getEString(), "operators", null, 0, -1, SelectExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelectExpression_Alias(), this.getAlias(), null, "alias", null, 0, 1, SelectExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expressionComponentEClass, ExpressionComponent.class, "ExpressionComponent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExpressionComponent_Value(), ecorePackage.getEObject(), null, "value", null, 0, 1, ExpressionComponent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(starthingEClass, Starthing.class, "Starthing", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(aliasEClass, Alias.class, "Alias", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAlias_Name(), ecorePackage.getEString(), "name", null, 0, 1, Alias.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(accessFrameworkEClass, AccessFramework.class, "AccessFramework", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAccessFramework_Wrapper(), ecorePackage.getEString(), "wrapper", null, 0, 1, AccessFramework.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAccessFramework_Protocol(), ecorePackage.getEString(), "protocol", null, 0, 1, AccessFramework.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAccessFramework_Transport(), ecorePackage.getEString(), "transport", null, 0, 1, AccessFramework.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAccessFramework_Datahandler(), ecorePackage.getEString(), "datahandler", null, 0, 1, AccessFramework.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAccessFramework_Keys(), ecorePackage.getEString(), "keys", null, 0, -1, AccessFramework.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAccessFramework_Values(), ecorePackage.getEString(), "values", null, 0, -1, AccessFramework.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(schemaDefinitionEClass, SchemaDefinition.class, "SchemaDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSchemaDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, SchemaDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchemaDefinition_Arguments(), ecorePackage.getEString(), "arguments", null, 0, -1, SchemaDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(createEClass, Create.class, "Create", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCreate_Type(), ecorePackage.getEString(), "type", null, 0, 1, Create.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCreate_Create(), ecorePackage.getEObject(), null, "create", null, 0, 1, Create.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(createAccessFrameworkEClass, CreateAccessFramework.class, "CreateAccessFramework", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCreateAccessFramework_Attributes(), this.getSchemaDefinition(), null, "attributes", null, 0, 1, CreateAccessFramework.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCreateAccessFramework_Pars(), this.getAccessFramework(), null, "pars", null, 0, 1, CreateAccessFramework.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(createChannelFrameworkViaPortEClass, CreateChannelFrameworkViaPort.class, "CreateChannelFrameworkViaPort", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCreateChannelFrameworkViaPort_Attributes(), this.getSchemaDefinition(), null, "attributes", null, 0, 1, CreateChannelFrameworkViaPort.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateChannelFrameworkViaPort_Host(), ecorePackage.getEString(), "host", null, 0, 1, CreateChannelFrameworkViaPort.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateChannelFrameworkViaPort_Port(), ecorePackage.getEInt(), "port", null, 0, 1, CreateChannelFrameworkViaPort.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(createChannelFormatViaFileEClass, CreateChannelFormatViaFile.class, "CreateChannelFormatViaFile", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCreateChannelFormatViaFile_Attributes(), this.getSchemaDefinition(), null, "attributes", null, 0, 1, CreateChannelFormatViaFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateChannelFormatViaFile_Filename(), ecorePackage.getEString(), "filename", null, 0, 1, CreateChannelFormatViaFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateChannelFormatViaFile_Type(), ecorePackage.getEString(), "type", null, 0, 1, CreateChannelFormatViaFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(createDatabaseStreamEClass, CreateDatabaseStream.class, "CreateDatabaseStream", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCreateDatabaseStream_Attributes(), this.getSchemaDefinition(), null, "attributes", null, 0, 1, CreateDatabaseStream.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDatabaseStream_Database(), ecorePackage.getEString(), "database", null, 0, 1, CreateDatabaseStream.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDatabaseStream_Table(), ecorePackage.getEString(), "table", null, 0, 1, CreateDatabaseStream.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDatabaseStream_Size(), ecorePackage.getEInt(), "size", null, 0, 1, CreateDatabaseStream.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDatabaseStream_Unit(), ecorePackage.getEString(), "unit", null, 0, 1, CreateDatabaseStream.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(createDatabaseSinkEClass, CreateDatabaseSink.class, "CreateDatabaseSink", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCreateDatabaseSink_Name(), ecorePackage.getEString(), "name", null, 0, 1, CreateDatabaseSink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDatabaseSink_Database(), ecorePackage.getEString(), "database", null, 0, 1, CreateDatabaseSink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDatabaseSink_Table(), ecorePackage.getEString(), "table", null, 0, 1, CreateDatabaseSink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDatabaseSink_Option(), ecorePackage.getEString(), "option", null, 0, 1, CreateDatabaseSink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(createViewEClass, CreateView.class, "CreateView", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCreateView_Name(), ecorePackage.getEString(), "name", null, 0, 1, CreateView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCreateView_Select(), this.getInnerSelect(), null, "select", null, 0, 1, CreateView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(contextStoreTypeEClass, ContextStoreType.class, "ContextStoreType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getContextStoreType_Type(), ecorePackage.getEString(), "type", null, 0, 1, ContextStoreType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getContextStoreType_Size(), ecorePackage.getEInt(), "size", null, 0, 1, ContextStoreType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getContextStoreType_Partition(), ecorePackage.getEInt(), "partition", null, 0, 1, ContextStoreType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(streamToEClass, StreamTo.class, "StreamTo", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStreamTo_Name(), ecorePackage.getEString(), "name", null, 0, 1, StreamTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStreamTo_Statement(), this.getInnerSelect2(), null, "statement", null, 0, 1, StreamTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStreamTo_Inputname(), ecorePackage.getEString(), "inputname", null, 0, 1, StreamTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(windowOperatorEClass, WindowOperator.class, "WindowOperator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(expressionsModelEClass, ExpressionsModel.class, "ExpressionsModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExpressionsModel_Elements(), this.getExpression(), null, "elements", null, 0, -1, ExpressionsModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expressionEClass, Expression.class, "Expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(simpleSourceEClass, SimpleSource.class, "SimpleSource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSimpleSource_Name(), ecorePackage.getEString(), "name", null, 0, 1, SimpleSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleSource_Window(), this.getWindowOperator(), null, "window", null, 0, 1, SimpleSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(nestedSourceEClass, NestedSource.class, "NestedSource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getNestedSource_Statement(), this.getInnerSelect(), null, "statement", null, 0, 1, NestedSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(functionEClass, Function.class, "Function", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFunction_Name(), ecorePackage.getEString(), "name", null, 0, 1, Function.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(starExpressionEClass, StarExpression.class, "StarExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(starEClass, Star.class, "Star", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(expressionComponentAsAttributeEClass, ExpressionComponentAsAttribute.class, "ExpressionComponentAsAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(createDataBaseConnectionJDBCEClass, CreateDataBaseConnectionJDBC.class, "CreateDataBaseConnectionJDBC", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCreateDataBaseConnectionJDBC_Name(), ecorePackage.getEString(), "name", null, 0, 1, CreateDataBaseConnectionJDBC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDataBaseConnectionJDBC_Server(), ecorePackage.getEString(), "server", null, 0, 1, CreateDataBaseConnectionJDBC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDataBaseConnectionJDBC_User(), ecorePackage.getEString(), "user", null, 0, 1, CreateDataBaseConnectionJDBC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDataBaseConnectionJDBC_Password(), ecorePackage.getEString(), "password", null, 0, 1, CreateDataBaseConnectionJDBC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDataBaseConnectionJDBC_Lazy(), ecorePackage.getEString(), "lazy", null, 0, 1, CreateDataBaseConnectionJDBC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(createDataBaseConnectionGenericEClass, CreateDataBaseConnectionGeneric.class, "CreateDataBaseConnectionGeneric", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCreateDataBaseConnectionGeneric_Name(), ecorePackage.getEString(), "name", null, 0, 1, CreateDataBaseConnectionGeneric.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDataBaseConnectionGeneric_Driver(), ecorePackage.getEString(), "driver", null, 0, 1, CreateDataBaseConnectionGeneric.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDataBaseConnectionGeneric_Source(), ecorePackage.getEString(), "source", null, 0, 1, CreateDataBaseConnectionGeneric.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDataBaseConnectionGeneric_Host(), ecorePackage.getEString(), "host", null, 0, 1, CreateDataBaseConnectionGeneric.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDataBaseConnectionGeneric_Port(), ecorePackage.getEInt(), "port", null, 0, 1, CreateDataBaseConnectionGeneric.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDataBaseConnectionGeneric_User(), ecorePackage.getEString(), "user", null, 0, 1, CreateDataBaseConnectionGeneric.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDataBaseConnectionGeneric_Password(), ecorePackage.getEString(), "password", null, 0, 1, CreateDataBaseConnectionGeneric.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateDataBaseConnectionGeneric_Lazy(), ecorePackage.getEString(), "lazy", null, 0, 1, CreateDataBaseConnectionGeneric.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dropDatabaseConnectionEClass, DropDatabaseConnection.class, "DropDatabaseConnection", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDropDatabaseConnection_Name(), ecorePackage.getEString(), "name", null, 0, 1, DropDatabaseConnection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(createContextStoreEClass, CreateContextStore.class, "CreateContextStore", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCreateContextStore_Attributes(), this.getSchemaDefinition(), null, "attributes", null, 0, 1, CreateContextStore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCreateContextStore_ContextType(), this.getContextStoreType(), null, "contextType", null, 0, 1, CreateContextStore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dropContextStoreEClass, DropContextStore.class, "DropContextStore", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDropContextStore_Name(), ecorePackage.getEString(), "name", null, 0, 1, DropContextStore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDropContextStore_Exists(), ecorePackage.getEString(), "exists", null, 0, 1, DropContextStore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dropStreamEClass, DropStream.class, "DropStream", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDropStream_Name(), ecorePackage.getEString(), "name", null, 0, 1, DropStream.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDropStream_Stream(), ecorePackage.getEString(), "stream", null, 0, 1, DropStream.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDropStream_Exists(), ecorePackage.getEString(), "exists", null, 0, 1, DropStream.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(userManagementEClass, UserManagement.class, "UserManagement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUserManagement_Name(), ecorePackage.getEString(), "name", null, 0, 1, UserManagement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getUserManagement_Subject(), ecorePackage.getEString(), "subject", null, 0, 1, UserManagement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getUserManagement_SubjectName(), ecorePackage.getEString(), "subjectName", null, 0, 1, UserManagement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getUserManagement_Password(), ecorePackage.getEString(), "password", null, 0, 1, UserManagement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rightsManagementEClass, RightsManagement.class, "RightsManagement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRightsManagement_Name(), ecorePackage.getEString(), "name", null, 0, 1, RightsManagement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRightsManagement_Operations(), ecorePackage.getEString(), "operations", null, 0, -1, RightsManagement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRightsManagement_Operations2(), ecorePackage.getEString(), "operations2", null, 0, -1, RightsManagement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRightsManagement_User(), ecorePackage.getEString(), "user", null, 0, 1, RightsManagement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(roleManagementEClass, RoleManagement.class, "RoleManagement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRoleManagement_Name(), ecorePackage.getEString(), "name", null, 0, 1, RoleManagement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRoleManagement_Operations(), ecorePackage.getEString(), "operations", null, 0, -1, RoleManagement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRoleManagement_User(), ecorePackage.getEString(), "user", null, 0, 1, RoleManagement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(undboundedWindowEClass, UndboundedWindow.class, "UndboundedWindow", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(timebasedWindowEClass, TimebasedWindow.class, "TimebasedWindow", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTimebasedWindow_Size(), ecorePackage.getEInt(), "size", null, 0, 1, TimebasedWindow.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTimebasedWindow_Unit(), ecorePackage.getEString(), "unit", null, 0, 1, TimebasedWindow.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTimebasedWindow_Advance_size(), ecorePackage.getEInt(), "advance_size", null, 0, 1, TimebasedWindow.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTimebasedWindow_Advance_unit(), ecorePackage.getEString(), "advance_unit", null, 0, 1, TimebasedWindow.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tuplebasedWindowEClass, TuplebasedWindow.class, "TuplebasedWindow", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTuplebasedWindow_Size(), ecorePackage.getEInt(), "size", null, 0, 1, TuplebasedWindow.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTuplebasedWindow_Advance_size(), ecorePackage.getEInt(), "advance_size", null, 0, 1, TuplebasedWindow.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTuplebasedWindow_Partition_attribute(), this.getAttribute(), null, "partition_attribute", null, 0, 1, TuplebasedWindow.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(orPredicateEClass, OrPredicate.class, "OrPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOrPredicate_Left(), this.getExpression(), null, "left", null, 0, 1, OrPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOrPredicate_Right(), this.getExpression(), null, "right", null, 0, 1, OrPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(andPredicateEClass, AndPredicate.class, "AndPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAndPredicate_Left(), this.getExpression(), null, "left", null, 0, 1, AndPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAndPredicate_Right(), this.getExpression(), null, "right", null, 0, 1, AndPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(equalityEClass, Equality.class, "Equality", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEquality_Left(), this.getExpression(), null, "left", null, 0, 1, Equality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEquality_Op(), ecorePackage.getEString(), "op", null, 0, 1, Equality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEquality_Right(), this.getExpression(), null, "right", null, 0, 1, Equality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(comparisionEClass, Comparision.class, "Comparision", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getComparision_Left(), this.getExpression(), null, "left", null, 0, 1, Comparision.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getComparision_Op(), ecorePackage.getEString(), "op", null, 0, 1, Comparision.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparision_Right(), this.getExpression(), null, "right", null, 0, 1, Comparision.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(plusEClass, Plus.class, "Plus", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlus_Left(), this.getExpression(), null, "left", null, 0, 1, Plus.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlus_Right(), this.getExpression(), null, "right", null, 0, 1, Plus.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(minusEClass, Minus.class, "Minus", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMinus_Left(), this.getExpression(), null, "left", null, 0, 1, Minus.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMinus_Right(), this.getExpression(), null, "right", null, 0, 1, Minus.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mulOrDivEClass, MulOrDiv.class, "MulOrDiv", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMulOrDiv_Left(), this.getExpression(), null, "left", null, 0, 1, MulOrDiv.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMulOrDiv_Op(), ecorePackage.getEString(), "op", null, 0, 1, MulOrDiv.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMulOrDiv_Right(), this.getExpression(), null, "right", null, 0, 1, MulOrDiv.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bracketEClass, Bracket.class, "Bracket", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBracket_Inner(), this.getExpression(), null, "inner", null, 0, 1, Bracket.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(notEClass, de.uniol.inf.is.odysseus.parser.novel.cql.cQL.NOT.class, "NOT", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getNOT_Expression(), this.getExpression(), null, "expression", null, 0, 1, de.uniol.inf.is.odysseus.parser.novel.cql.cQL.NOT.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(intConstantEClass, IntConstant.class, "IntConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getIntConstant_Value(), ecorePackage.getEInt(), "value", null, 0, 1, IntConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(floatConstantEClass, FloatConstant.class, "FloatConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFloatConstant_Value(), ecorePackage.getEString(), "value", null, 0, 1, FloatConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stringConstantEClass, StringConstant.class, "StringConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStringConstant_Value(), ecorePackage.getEString(), "value", null, 0, 1, StringConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(boolConstantEClass, BoolConstant.class, "BoolConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBoolConstant_Value(), ecorePackage.getEString(), "value", null, 0, 1, BoolConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(attributeRefEClass, AttributeRef.class, "AttributeRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAttributeRef_Value(), ecorePackage.getEObject(), null, "value", null, 0, 1, AttributeRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(matrixEClass, Matrix.class, "Matrix", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMatrix_Value(), ecorePackage.getEString(), "value", null, 0, 1, Matrix.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(vectorEClass, Vector.class, "Vector", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVector_Value(), ecorePackage.getEString(), "value", null, 0, 1, Vector.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //CQLPackageImpl
