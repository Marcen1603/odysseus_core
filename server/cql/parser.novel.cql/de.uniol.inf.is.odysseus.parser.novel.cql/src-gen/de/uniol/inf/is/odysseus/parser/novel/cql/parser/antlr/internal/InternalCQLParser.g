/*
 * generated by Xtext 2.10.0
 */
parser grammar InternalCQLParser;

options {
	tokenVocab=InternalCQLLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package de.uniol.inf.is.odysseus.parser.novel.cql.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.uniol.inf.is.odysseus.parser.novel.cql.services.CQLGrammarAccess;

}

@members {

 	private CQLGrammarAccess grammarAccess;

    public InternalCQLParser(TokenStream input, CQLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected CQLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getComponentsStatementParserRuleCall_0_0_0());
					}
					lv_components_0_1=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"components",
							lv_components_0_1,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Statement");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getModelAccess().getComponentsCommandParserRuleCall_0_0_1());
					}
					lv_components_0_2=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"components",
							lv_components_0_2,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_1=Semicolon
			{
				newLeafNode(otherlv_1, grammarAccess.getModelAccess().getSemicolonKeyword_1());
			}
		)?
	)*
;

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBOOLEANRule()); }
	iv_ruleBOOLEAN=ruleBOOLEAN
	{ $current=$iv_ruleBOOLEAN.current.getText(); }
	EOF;

// Rule BOOLEAN
ruleBOOLEAN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=FALSE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getFALSEKeyword_0());
		}
		    |
		kw=TRUE
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getTRUEKeyword_1());
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getTypeSelectParserRuleCall_0_0());
				}
				lv_type_0_1=ruleSelect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"type",
						lv_type_0_1,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Select");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getTypeCreateParserRuleCall_0_1());
				}
				lv_type_0_2=ruleCreate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"type",
						lv_type_0_2,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Create");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getTypeStreamToParserRuleCall_0_2());
				}
				lv_type_0_3=ruleStreamTo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"type",
						lv_type_0_3,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.StreamTo");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandAccess().getTypeDropStreamParserRuleCall_0_0());
				}
				lv_type_0_1=ruleDropStream
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandRule());
					}
					set(
						$current,
						"type",
						lv_type_0_1,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.DropStream");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getCommandAccess().getTypeUserManagementParserRuleCall_0_1());
				}
				lv_type_0_2=ruleUserManagement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandRule());
					}
					set(
						$current,
						"type",
						lv_type_0_2,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.UserManagement");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getCommandAccess().getTypeRightsManagementParserRuleCall_0_2());
				}
				lv_type_0_3=ruleRightsManagement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandRule());
					}
					set(
						$current,
						"type",
						lv_type_0_3,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.RightsManagement");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getCommandAccess().getTypeRoleManagementParserRuleCall_0_3());
				}
				lv_type_0_4=ruleRoleManagement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandRule());
					}
					set(
						$current,
						"type",
						lv_type_0_4,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.RoleManagement");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getCommandAccess().getTypeCreateDataBaseGenericConnectionParserRuleCall_0_4());
				}
				lv_type_0_5=ruleCreateDataBaseGenericConnection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandRule());
					}
					set(
						$current,
						"type",
						lv_type_0_5,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateDataBaseGenericConnection");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getCommandAccess().getTypeCreateDataBaseJDBCConnectionParserRuleCall_0_5());
				}
				lv_type_0_6=ruleCreateDataBaseJDBCConnection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandRule());
					}
					set(
						$current,
						"type",
						lv_type_0_6,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateDataBaseJDBCConnection");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getCommandAccess().getTypeDropDatabaseConnectionParserRuleCall_0_6());
				}
				lv_type_0_7=ruleDropDatabaseConnection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandRule());
					}
					set(
						$current,
						"type",
						lv_type_0_7,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.DropDatabaseConnection");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSelect
entryRuleSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectRule()); }
	iv_ruleSelect=ruleSelect
	{ $current=$iv_ruleSelect.current; }
	EOF;

// Rule Select
ruleSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSelectAccess().getSelectAction_0(),
					$current);
			}
		)
		otherlv_1=SELECT
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectAccess().getSELECTKeyword_1());
		}
		(
			(
				lv_distinct_2_0=DISTINCT
				{
					newLeafNode(lv_distinct_2_0, grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectRule());
					}
					setWithLastConsumed($current, "distinct", lv_distinct_2_0, "DISTINCT");
				}
			)
		)?
		(
			otherlv_3=Asterisk
			{
				newLeafNode(otherlv_3, grammarAccess.getSelectAccess().getAsteriskKeyword_3_0());
			}
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectAccess().getArgumentsSelectArgumentParserRuleCall_3_1_0_0());
						}
						lv_arguments_4_0=ruleSelectArgument
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_4_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectArgument");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					otherlv_5=Comma
					{
						newLeafNode(otherlv_5, grammarAccess.getSelectAccess().getCommaKeyword_3_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectAccess().getArgumentsSelectArgumentParserRuleCall_3_1_1_1_0());
							}
							lv_arguments_6_0=ruleSelectArgument
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectRule());
								}
								add(
									$current,
									"arguments",
									lv_arguments_6_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectArgument");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
		(
			otherlv_7=FROM
			{
				newLeafNode(otherlv_7, grammarAccess.getSelectAccess().getFROMKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_4_1_0());
					}
					lv_sources_8_0=ruleSource
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						add(
							$current,
							"sources",
							lv_sources_8_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Source");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			(
				otherlv_9=Comma
				{
					newLeafNode(otherlv_9, grammarAccess.getSelectAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_4_2_1_0());
						}
						lv_sources_10_0=ruleSource
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectRule());
							}
							add(
								$current,
								"sources",
								lv_sources_10_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Source");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		(
			otherlv_11=WHERE
			{
				newLeafNode(otherlv_11, grammarAccess.getSelectAccess().getWHEREKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getPredicatesExpressionsModelParserRuleCall_5_1_0());
					}
					lv_predicates_12_0=ruleExpressionsModel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						set(
							$current,
							"predicates",
							lv_predicates_12_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionsModel");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_13=GROUP
			{
				newLeafNode(otherlv_13, grammarAccess.getSelectAccess().getGROUPKeyword_6_0());
			}
			otherlv_14=BY
			{
				newLeafNode(otherlv_14, grammarAccess.getSelectAccess().getBYKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_6_2_0());
					}
					lv_order_15_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						add(
							$current,
							"order",
							lv_order_15_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			(
				otherlv_16=Comma
				{
					newLeafNode(otherlv_16, grammarAccess.getSelectAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_6_3_1_0());
						}
						lv_order_17_0=ruleAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectRule());
							}
							add(
								$current,
								"order",
								lv_order_17_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_18=HAVING
			{
				newLeafNode(otherlv_18, grammarAccess.getSelectAccess().getHAVINGKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getHavingExpressionsModelParserRuleCall_7_1_0());
					}
					lv_having_19_0=ruleExpressionsModel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						set(
							$current,
							"having",
							lv_having_19_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionsModel");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleInnerSelect
entryRuleInnerSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInnerSelectRule()); }
	iv_ruleInnerSelect=ruleInnerSelect
	{ $current=$iv_ruleInnerSelect.current; }
	EOF;

// Rule InnerSelect
ruleInnerSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftParenthesis
		{
			newLeafNode(otherlv_0, grammarAccess.getInnerSelectAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInnerSelectAccess().getSelectSelectParserRuleCall_1_0());
				}
				lv_select_1_0=ruleSelect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInnerSelectRule());
					}
					set(
						$current,
						"select",
						lv_select_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Select");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=RightParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getInnerSelectAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleInnerSelect2
entryRuleInnerSelect2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInnerSelect2Rule()); }
	iv_ruleInnerSelect2=ruleInnerSelect2
	{ $current=$iv_ruleInnerSelect2.current; }
	EOF;

// Rule InnerSelect2
ruleInnerSelect2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInnerSelect2Access().getSelectSelectParserRuleCall_0());
			}
			lv_select_0_0=ruleSelect
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getInnerSelect2Rule());
				}
				set(
					$current,
					"select",
					lv_select_0_0,
					"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Select");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSelectArgument
entryRuleSelectArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectArgumentRule()); }
	iv_ruleSelectArgument=ruleSelectArgument
	{ $current=$iv_ruleSelectArgument.current; }
	EOF;

// Rule SelectArgument
ruleSelectArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectArgumentAccess().getAttributeAttributeParserRuleCall_0_0());
				}
				lv_attribute_0_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectArgumentRule());
					}
					set(
						$current,
						"attribute",
						lv_attribute_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectArgumentAccess().getExpressionSelectExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleSelectExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectArgumentRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSource
entryRuleSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceRule()); }
	iv_ruleSource=ruleSource
	{ $current=$iv_ruleSource.current; }
	EOF;

// Rule Source
ruleSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSourceAccess().getSimpleSourceParserRuleCall_0());
		}
		this_SimpleSource_0=ruleSimpleSource
		{
			$current = $this_SimpleSource_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSourceAccess().getNestedSourceParserRuleCall_1());
		}
		this_NestedSource_1=ruleNestedSource
		{
			$current = $this_NestedSource_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleSource
entryRuleSimpleSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleSourceRule()); }
	iv_ruleSimpleSource=ruleSimpleSource
	{ $current=$iv_ruleSimpleSource.current; }
	EOF;

// Rule SimpleSource
ruleSimpleSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimpleSourceAccess().getSimpleSourceAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleSourceAccess().getNameQualifiedSourcenameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedSourcename
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleSourceRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.QualifiedSourcename");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleSourceAccess().getWindowWindowOperatorParserRuleCall_2_0());
				}
				lv_window_2_0=ruleWindowOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleSourceRule());
					}
					set(
						$current,
						"window",
						lv_window_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.WindowOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_3=AS
			{
				newLeafNode(otherlv_3, grammarAccess.getSimpleSourceAccess().getASKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleSourceAccess().getAliasAliasParserRuleCall_3_1_0());
					}
					lv_alias_4_0=ruleAlias
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleSourceRule());
						}
						set(
							$current,
							"alias",
							lv_alias_4_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Alias");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNestedSource
entryRuleNestedSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNestedSourceRule()); }
	iv_ruleNestedSource=ruleNestedSource
	{ $current=$iv_ruleNestedSource.current; }
	EOF;

// Rule NestedSource
ruleNestedSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNestedSourceAccess().getNestedSourceAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNestedSourceAccess().getStatementInnerSelectParserRuleCall_1_0());
				}
				lv_statement_1_0=ruleInnerSelect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNestedSourceRule());
					}
					set(
						$current,
						"statement",
						lv_statement_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.InnerSelect");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=AS
		{
			newLeafNode(otherlv_2, grammarAccess.getNestedSourceAccess().getASKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNestedSourceAccess().getAliasAliasParserRuleCall_3_0());
				}
				lv_alias_3_0=ruleAlias
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNestedSourceRule());
					}
					set(
						$current,
						"alias",
						lv_alias_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Alias");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedSourcename
entryRuleQualifiedSourcename returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedSourcenameRule()); }
	iv_ruleQualifiedSourcename=ruleQualifiedSourcename
	{ $current=$iv_ruleQualifiedSourcename.current.getText(); }
	EOF;

// Rule QualifiedSourcename
ruleQualifiedSourcename returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getQualifiedSourcenameAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getNameQualifiedAttributenameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleQualifiedAttributename
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.QualifiedAttributename");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=AS
			{
				newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getASKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getAliasAliasParserRuleCall_1_1_0());
					}
					lv_alias_2_0=ruleAlias
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"alias",
							lv_alias_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Alias");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAttributeWithoutAliasDefinition
entryRuleAttributeWithoutAliasDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeWithoutAliasDefinitionRule()); }
	iv_ruleAttributeWithoutAliasDefinition=ruleAttributeWithoutAliasDefinition
	{ $current=$iv_ruleAttributeWithoutAliasDefinition.current; }
	EOF;

// Rule AttributeWithoutAliasDefinition
ruleAttributeWithoutAliasDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAttributeWithoutAliasDefinitionAccess().getNameQualifiedAttributenameParserRuleCall_0());
			}
			lv_name_0_0=ruleQualifiedAttributename
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getAttributeWithoutAliasDefinitionRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.QualifiedAttributename");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleQualifiedAttributename
entryRuleQualifiedAttributename returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedAttributenameRule()); }
	iv_ruleQualifiedAttributename=ruleQualifiedAttributename
	{ $current=$iv_ruleQualifiedAttributename.current.getText(); }
	EOF;

// Rule QualifiedAttributename
ruleQualifiedAttributename returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedAttributenameAccess().getIDTerminalRuleCall_0());
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getQualifiedAttributenameAccess().getQualifiedSourcenameParserRuleCall_1_0());
			}
			this_QualifiedSourcename_1=ruleQualifiedSourcename
			{
				$current.merge(this_QualifiedSourcename_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=FullStop
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedAttributenameAccess().getFullStopKeyword_1_1());
			}
			this_ID_3=RULE_ID
			{
				$current.merge(this_ID_3);
			}
			{
				newLeafNode(this_ID_3, grammarAccess.getQualifiedAttributenameAccess().getIDTerminalRuleCall_1_2());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getQualifiedAttributenameAccess().getQualifiedSourcenameParserRuleCall_2_0());
			}
			this_QualifiedSourcename_4=ruleQualifiedSourcename
			{
				$current.merge(this_QualifiedSourcename_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=FullStop
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedAttributenameAccess().getFullStopKeyword_2_1());
			}
			kw=Asterisk
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedAttributenameAccess().getAsteriskKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleAttributeWithNestedStatement
entryRuleAttributeWithNestedStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeWithNestedStatementRule()); }
	iv_ruleAttributeWithNestedStatement=ruleAttributeWithNestedStatement
	{ $current=$iv_ruleAttributeWithNestedStatement.current; }
	EOF;

// Rule AttributeWithNestedStatement
ruleAttributeWithNestedStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeWithNestedStatementAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_0_0());
				}
				lv_value_0_0=ruleAttributeWithoutAliasDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeWithNestedStatementRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=IN
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeWithNestedStatementAccess().getINKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeWithNestedStatementAccess().getNestedInnerSelectParserRuleCall_2_0());
				}
				lv_nested_2_0=ruleInnerSelect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeWithNestedStatementRule());
					}
					set(
						$current,
						"nested",
						lv_nested_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.InnerSelect");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAndOperator
entryRuleAndOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAndOperatorRule()); }
	iv_ruleAndOperator=ruleAndOperator
	{ $current=$iv_ruleAndOperator.current.getText(); }
	EOF;

// Rule AndOperator
ruleAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=AND
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getAndOperatorAccess().getANDKeyword());
	}
;

// Entry rule entryRuleOrOperator
entryRuleOrOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOrOperatorRule()); }
	iv_ruleOrOperator=ruleOrOperator
	{ $current=$iv_ruleOrOperator.current.getText(); }
	EOF;

// Rule OrOperator
ruleOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=OR
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOrOperatorAccess().getORKeyword());
	}
;

// Entry rule entryRuleEQUALITIY_OPERATOR
entryRuleEQUALITIY_OPERATOR returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEQUALITIY_OPERATORRule()); }
	iv_ruleEQUALITIY_OPERATOR=ruleEQUALITIY_OPERATOR
	{ $current=$iv_ruleEQUALITIY_OPERATOR.current.getText(); }
	EOF;

// Rule EQUALITIY_OPERATOR
ruleEQUALITIY_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=EqualsSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEQUALITIY_OPERATORAccess().getEqualsSignKeyword_0());
		}
		    |
		kw=ExclamationMarkEqualsSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEQUALITIY_OPERATORAccess().getExclamationMarkEqualsSignKeyword_1());
		}
	)
;

// Entry rule entryRuleCOMPARE_OPERATOR
entryRuleCOMPARE_OPERATOR returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCOMPARE_OPERATORRule()); }
	iv_ruleCOMPARE_OPERATOR=ruleCOMPARE_OPERATOR
	{ $current=$iv_ruleCOMPARE_OPERATOR.current.getText(); }
	EOF;

// Rule COMPARE_OPERATOR
ruleCOMPARE_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=GreaterThanSignEqualsSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCOMPARE_OPERATORAccess().getGreaterThanSignEqualsSignKeyword_0());
		}
		    |
		kw=LessThanSignEqualsSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCOMPARE_OPERATORAccess().getLessThanSignEqualsSignKeyword_1());
		}
		    |
		kw=LessThanSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCOMPARE_OPERATORAccess().getLessThanSignKeyword_2());
		}
		    |
		kw=GreaterThanSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCOMPARE_OPERATORAccess().getGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleARITHMETIC_OPERATOR
entryRuleARITHMETIC_OPERATOR returns [String current=null]:
	{ newCompositeNode(grammarAccess.getARITHMETIC_OPERATORRule()); }
	iv_ruleARITHMETIC_OPERATOR=ruleARITHMETIC_OPERATOR
	{ $current=$iv_ruleARITHMETIC_OPERATOR.current.getText(); }
	EOF;

// Rule ARITHMETIC_OPERATOR
ruleARITHMETIC_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getARITHMETIC_OPERATORAccess().getADD_OPERATORParserRuleCall_0());
		}
		this_ADD_OPERATOR_0=ruleADD_OPERATOR
		{
			$current.merge(this_ADD_OPERATOR_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getARITHMETIC_OPERATORAccess().getMINUS_OPERATORParserRuleCall_1());
		}
		this_MINUS_OPERATOR_1=ruleMINUS_OPERATOR
		{
			$current.merge(this_MINUS_OPERATOR_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getARITHMETIC_OPERATORAccess().getMUL_OR_DIV_OPERATORParserRuleCall_2());
		}
		this_MUL_OR_DIV_OPERATOR_2=ruleMUL_OR_DIV_OPERATOR
		{
			$current.merge(this_MUL_OR_DIV_OPERATOR_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getARITHMETIC_OPERATORAccess().getEXPONENT_OPERATORParserRuleCall_3());
		}
		this_EXPONENT_OPERATOR_3=ruleEXPONENT_OPERATOR
		{
			$current.merge(this_EXPONENT_OPERATOR_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEXPONENT_OPERATOR
entryRuleEXPONENT_OPERATOR returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEXPONENT_OPERATORRule()); }
	iv_ruleEXPONENT_OPERATOR=ruleEXPONENT_OPERATOR
	{ $current=$iv_ruleEXPONENT_OPERATOR.current.getText(); }
	EOF;

// Rule EXPONENT_OPERATOR
ruleEXPONENT_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=CircumflexAccent
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getEXPONENT_OPERATORAccess().getCircumflexAccentKeyword());
	}
;

// Entry rule entryRuleMUL_OR_DIV_OPERATOR
entryRuleMUL_OR_DIV_OPERATOR returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMUL_OR_DIV_OPERATORRule()); }
	iv_ruleMUL_OR_DIV_OPERATOR=ruleMUL_OR_DIV_OPERATOR
	{ $current=$iv_ruleMUL_OR_DIV_OPERATOR.current.getText(); }
	EOF;

// Rule MUL_OR_DIV_OPERATOR
ruleMUL_OR_DIV_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=Asterisk
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMUL_OR_DIV_OPERATORAccess().getAsteriskKeyword_0());
		}
		    |
		kw=Solidus
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMUL_OR_DIV_OPERATORAccess().getSolidusKeyword_1());
		}
	)
;

// Entry rule entryRuleADD_OPERATOR
entryRuleADD_OPERATOR returns [String current=null]:
	{ newCompositeNode(grammarAccess.getADD_OPERATORRule()); }
	iv_ruleADD_OPERATOR=ruleADD_OPERATOR
	{ $current=$iv_ruleADD_OPERATOR.current.getText(); }
	EOF;

// Rule ADD_OPERATOR
ruleADD_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=PlusSign
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getADD_OPERATORAccess().getPlusSignKeyword());
	}
;

// Entry rule entryRuleMINUS_OPERATOR
entryRuleMINUS_OPERATOR returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMINUS_OPERATORRule()); }
	iv_ruleMINUS_OPERATOR=ruleMINUS_OPERATOR
	{ $current=$iv_ruleMINUS_OPERATOR.current.getText(); }
	EOF;

// Rule MINUS_OPERATOR
ruleMINUS_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=HyphenMinus
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getMINUS_OPERATORAccess().getHyphenMinusKeyword());
	}
;

// Entry rule entryRuleSelectExpression
entryRuleSelectExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionRule()); }
	iv_ruleSelectExpression=ruleSelectExpression
	{ $current=$iv_ruleSelectExpression.current; }
	EOF;

// Rule SelectExpression
ruleSelectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentParserRuleCall_0_0_0_0());
						}
						lv_expressions_0_0=ruleExpressionComponent
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
							}
							add(
								$current,
								"expressions",
								lv_expressions_0_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponent");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOperatorsARITHMETIC_OPERATORParserRuleCall_0_0_1_0_0());
							}
							lv_operators_1_0=ruleARITHMETIC_OPERATOR
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
								}
								add(
									$current,
									"operators",
									lv_operators_1_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ARITHMETIC_OPERATOR");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentParserRuleCall_0_0_1_1_0_0());
								}
								lv_expressions_2_1=ruleExpressionComponent
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
									}
									add(
										$current,
										"expressions",
										lv_expressions_2_1,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponent");
									afterParserOrEnumRuleCall();
								}
								    |
								{
									newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentAsAttributeParserRuleCall_0_0_1_1_0_1());
								}
								lv_expressions_2_2=ruleExpressionComponentAsAttribute
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
									}
									add(
										$current,
										"expressions",
										lv_expressions_2_2,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentAsAttribute");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)*
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentAsAttributeParserRuleCall_0_1_0_0());
						}
						lv_expressions_3_0=ruleExpressionComponentAsAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
							}
							add(
								$current,
								"expressions",
								lv_expressions_3_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentAsAttribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOperatorsARITHMETIC_OPERATORParserRuleCall_0_1_1_0_0());
							}
							lv_operators_4_0=ruleARITHMETIC_OPERATOR
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
								}
								add(
									$current,
									"operators",
									lv_operators_4_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ARITHMETIC_OPERATOR");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentParserRuleCall_0_1_1_1_0_0());
								}
								lv_expressions_5_1=ruleExpressionComponent
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
									}
									add(
										$current,
										"expressions",
										lv_expressions_5_1,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponent");
									afterParserOrEnumRuleCall();
								}
								    |
								{
									newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentAsAttributeParserRuleCall_0_1_1_1_0_1());
								}
								lv_expressions_5_2=ruleExpressionComponentAsAttribute
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
									}
									add(
										$current,
										"expressions",
										lv_expressions_5_2,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentAsAttribute");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)+
			)
		)
		(
			otherlv_6=AS
			{
				newLeafNode(otherlv_6, grammarAccess.getSelectExpressionAccess().getASKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionAccess().getAliasAliasParserRuleCall_1_1_0());
					}
					lv_alias_7_0=ruleAlias
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
						}
						set(
							$current,
							"alias",
							lv_alias_7_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Alias");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSelectExpressionOnlyWithAttribute
entryRuleSelectExpressionOnlyWithAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeRule()); }
	iv_ruleSelectExpressionOnlyWithAttribute=ruleSelectExpressionOnlyWithAttribute
	{ $current=$iv_ruleSelectExpressionOnlyWithAttribute.current; }
	EOF;

// Rule SelectExpressionOnlyWithAttribute
ruleSelectExpressionOnlyWithAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSelectExpressionOnlyWithAttributeAccess().getExpressionsExpressionComponentAsAttributeParserRuleCall_0());
			}
			lv_expressions_0_0=ruleExpressionComponentAsAttribute
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSelectExpressionOnlyWithAttributeRule());
				}
				add(
					$current,
					"expressions",
					lv_expressions_0_0,
					"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentAsAttribute");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionAccess().getFunctionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getValueSelectExpressionParserRuleCall_3_0_0());
					}
					lv_value_3_1=ruleSelectExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						set(
							$current,
							"value",
							lv_value_3_1,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getValueSelectExpressionOnlyWithAttributeParserRuleCall_3_0_1());
					}
					lv_value_3_2=ruleSelectExpressionOnlyWithAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						set(
							$current,
							"value",
							lv_value_3_2,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpressionOnlyWithAttribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_4=RightParenthesis
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleExpressionComponent
entryRuleExpressionComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionComponentRule()); }
	iv_ruleExpressionComponent=ruleExpressionComponent
	{ $current=$iv_ruleExpressionComponent.current; }
	EOF;

// Rule ExpressionComponent
ruleExpressionComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionComponentAccess().getValueFunctionParserRuleCall_0_0());
				}
				lv_value_0_1=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionComponentRule());
					}
					set(
						$current,
						"value",
						lv_value_0_1,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Function");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getExpressionComponentAccess().getValueAtomicWithoutAttributeRefParserRuleCall_0_1());
				}
				lv_value_0_2=ruleAtomicWithoutAttributeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionComponentRule());
					}
					set(
						$current,
						"value",
						lv_value_0_2,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AtomicWithoutAttributeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpressionComponentAsAttribute
entryRuleExpressionComponentAsAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionComponentAsAttributeRule()); }
	iv_ruleExpressionComponentAsAttribute=ruleExpressionComponentAsAttribute
	{ $current=$iv_ruleExpressionComponentAsAttribute.current; }
	EOF;

// Rule ExpressionComponentAsAttribute
ruleExpressionComponentAsAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpressionComponentAsAttributeAccess().getExpressionComponentAsAttributeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionComponentAsAttributeAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_1_0());
				}
				lv_value_1_0=ruleAttributeWithoutAliasDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionComponentAsAttributeRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAlias
entryRuleAlias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasRule()); }
	iv_ruleAlias=ruleAlias
	{ $current=$iv_ruleAlias.current; }
	EOF;

// Rule Alias
ruleAlias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getAliasAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAliasRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
			}
		)
	)
;

// Entry rule entryRuleAccessFramework
entryRuleAccessFramework returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAccessFrameworkRule()); }
	iv_ruleAccessFramework=ruleAccessFramework
	{ $current=$iv_ruleAccessFramework.current; }
	EOF;

// Rule AccessFramework
ruleAccessFramework returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=WRAPPER
		{
			newLeafNode(otherlv_0, grammarAccess.getAccessFrameworkAccess().getWRAPPERKeyword_0());
		}
		(
			(
				lv_wrapper_1_0=RULE_STRING
				{
					newLeafNode(lv_wrapper_1_0, grammarAccess.getAccessFrameworkAccess().getWrapperSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAccessFrameworkRule());
					}
					setWithLastConsumed(
						$current,
						"wrapper",
						lv_wrapper_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=PROTOCOL
		{
			newLeafNode(otherlv_2, grammarAccess.getAccessFrameworkAccess().getPROTOCOLKeyword_2());
		}
		(
			(
				lv_protocol_3_0=RULE_STRING
				{
					newLeafNode(lv_protocol_3_0, grammarAccess.getAccessFrameworkAccess().getProtocolSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAccessFrameworkRule());
					}
					setWithLastConsumed(
						$current,
						"protocol",
						lv_protocol_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=TRANSPORT
		{
			newLeafNode(otherlv_4, grammarAccess.getAccessFrameworkAccess().getTRANSPORTKeyword_4());
		}
		(
			(
				lv_transport_5_0=RULE_STRING
				{
					newLeafNode(lv_transport_5_0, grammarAccess.getAccessFrameworkAccess().getTransportSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAccessFrameworkRule());
					}
					setWithLastConsumed(
						$current,
						"transport",
						lv_transport_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6=DATAHANDLER
		{
			newLeafNode(otherlv_6, grammarAccess.getAccessFrameworkAccess().getDATAHANDLERKeyword_6());
		}
		(
			(
				lv_datahandler_7_0=RULE_STRING
				{
					newLeafNode(lv_datahandler_7_0, grammarAccess.getAccessFrameworkAccess().getDatahandlerSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAccessFrameworkRule());
					}
					setWithLastConsumed(
						$current,
						"datahandler",
						lv_datahandler_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8=OPTIONS
		{
			newLeafNode(otherlv_8, grammarAccess.getAccessFrameworkAccess().getOPTIONSKeyword_8());
		}
		otherlv_9=LeftParenthesis
		{
			newLeafNode(otherlv_9, grammarAccess.getAccessFrameworkAccess().getLeftParenthesisKeyword_9());
		}
		(
			(
				(
					lv_keys_10_0=RULE_STRING
					{
						newLeafNode(lv_keys_10_0, grammarAccess.getAccessFrameworkAccess().getKeysSTRINGTerminalRuleCall_10_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAccessFrameworkRule());
						}
						addWithLastConsumed(
							$current,
							"keys",
							lv_keys_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				(
					lv_values_11_0=RULE_STRING
					{
						newLeafNode(lv_values_11_0, grammarAccess.getAccessFrameworkAccess().getValuesSTRINGTerminalRuleCall_10_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAccessFrameworkRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_11_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)+
		(
			otherlv_12=Comma
			{
				newLeafNode(otherlv_12, grammarAccess.getAccessFrameworkAccess().getCommaKeyword_11_0());
			}
			(
				(
					lv_keys_13_0=RULE_STRING
					{
						newLeafNode(lv_keys_13_0, grammarAccess.getAccessFrameworkAccess().getKeysSTRINGTerminalRuleCall_11_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAccessFrameworkRule());
						}
						addWithLastConsumed(
							$current,
							"keys",
							lv_keys_13_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				(
					lv_values_14_0=RULE_STRING
					{
						newLeafNode(lv_values_14_0, grammarAccess.getAccessFrameworkAccess().getValuesSTRINGTerminalRuleCall_11_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAccessFrameworkRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_14_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_15=RightParenthesis
		{
			newLeafNode(otherlv_15, grammarAccess.getAccessFrameworkAccess().getRightParenthesisKeyword_12());
		}
	)
;

// Entry rule entryRuleSchemaDefinition
entryRuleSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchemaDefinitionRule()); }
	iv_ruleSchemaDefinition=ruleSchemaDefinition
	{ $current=$iv_ruleSchemaDefinition.current; }
	EOF;

// Rule SchemaDefinition
ruleSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSchemaDefinitionAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSchemaDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getSchemaDefinitionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_arguments_2_0=RULE_ID
				{
					newLeafNode(lv_arguments_2_0, grammarAccess.getSchemaDefinitionAccess().getArgumentsIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSchemaDefinitionRule());
					}
					addWithLastConsumed(
						$current,
						"arguments",
						lv_arguments_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			(
				lv_arguments_3_0=RULE_ID
				{
					newLeafNode(lv_arguments_3_0, grammarAccess.getSchemaDefinitionAccess().getArgumentsIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSchemaDefinitionRule());
					}
					addWithLastConsumed(
						$current,
						"arguments",
						lv_arguments_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			otherlv_4=Comma
			{
				newLeafNode(otherlv_4, grammarAccess.getSchemaDefinitionAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_arguments_5_0=RULE_ID
					{
						newLeafNode(lv_arguments_5_0, grammarAccess.getSchemaDefinitionAccess().getArgumentsIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSchemaDefinitionRule());
						}
						addWithLastConsumed(
							$current,
							"arguments",
							lv_arguments_5_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
			(
				(
					lv_arguments_6_0=RULE_ID
					{
						newLeafNode(lv_arguments_6_0, grammarAccess.getSchemaDefinitionAccess().getArgumentsIDTerminalRuleCall_4_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSchemaDefinitionRule());
						}
						addWithLastConsumed(
							$current,
							"arguments",
							lv_arguments_6_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
		)*
		otherlv_7=RightParenthesis
		{
			newLeafNode(otherlv_7, grammarAccess.getSchemaDefinitionAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleCreate
entryRuleCreate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateRule()); }
	iv_ruleCreate=ruleCreate
	{ $current=$iv_ruleCreate.current; }
	EOF;

// Rule Create
ruleCreate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCreateAccess().getCreateAction_0(),
					$current);
			}
		)
		(
			otherlv_1=CREATE
			{
				newLeafNode(otherlv_1, grammarAccess.getCreateAccess().getCREATEKeyword_1_0());
			}
			    |
			otherlv_2=ATTACH
			{
				newLeafNode(otherlv_2, grammarAccess.getCreateAccess().getATTACHKeyword_1_1());
			}
		)
		(
			(
				(
					lv_type_3_1=STREAM
					{
						newLeafNode(lv_type_3_1, grammarAccess.getCreateAccess().getTypeSTREAMKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateRule());
						}
						setWithLastConsumed($current, "type", lv_type_3_1, null);
					}
					    |
					lv_type_3_2=SINK
					{
						newLeafNode(lv_type_3_2, grammarAccess.getCreateAccess().getTypeSINKKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateRule());
						}
						setWithLastConsumed($current, "type", lv_type_3_2, null);
					}
					    |
					lv_type_3_3=VIEW
					{
						newLeafNode(lv_type_3_3, grammarAccess.getCreateAccess().getTypeVIEWKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateRule());
						}
						setWithLastConsumed($current, "type", lv_type_3_3, null);
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCreateAccess().getCreateCreateAccessFrameworkParserRuleCall_3_0_0());
					}
					lv_create_4_1=ruleCreateAccessFramework
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateRule());
						}
						set(
							$current,
							"create",
							lv_create_4_1,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateAccessFramework");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCreateAccess().getCreateCreateChannelFrameworkViaPortParserRuleCall_3_0_1());
					}
					lv_create_4_2=ruleCreateChannelFrameworkViaPort
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateRule());
						}
						set(
							$current,
							"create",
							lv_create_4_2,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateChannelFrameworkViaPort");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCreateAccess().getCreateCreateChannelFormatViaFileParserRuleCall_3_0_2());
					}
					lv_create_4_3=ruleCreateChannelFormatViaFile
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateRule());
						}
						set(
							$current,
							"create",
							lv_create_4_3,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateChannelFormatViaFile");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCreateAccess().getCreateCreateDatabaseStreamParserRuleCall_3_0_3());
					}
					lv_create_4_4=ruleCreateDatabaseStream
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateRule());
						}
						set(
							$current,
							"create",
							lv_create_4_4,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateDatabaseStream");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCreateAccess().getCreateCreateDatabaseSinkParserRuleCall_3_0_4());
					}
					lv_create_4_5=ruleCreateDatabaseSink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateRule());
						}
						set(
							$current,
							"create",
							lv_create_4_5,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateDatabaseSink");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCreateAccess().getCreateCreateViewParserRuleCall_3_0_5());
					}
					lv_create_4_6=ruleCreateView
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateRule());
						}
						set(
							$current,
							"create",
							lv_create_4_6,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateView");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCreateAccessFramework
entryRuleCreateAccessFramework returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateAccessFrameworkRule()); }
	iv_ruleCreateAccessFramework=ruleCreateAccessFramework
	{ $current=$iv_ruleCreateAccessFramework.current; }
	EOF;

// Rule CreateAccessFramework
ruleCreateAccessFramework returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateAccessFrameworkAccess().getAttributesSchemaDefinitionParserRuleCall_0_0());
				}
				lv_attributes_0_0=ruleSchemaDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateAccessFrameworkRule());
					}
					set(
						$current,
						"attributes",
						lv_attributes_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SchemaDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateAccessFrameworkAccess().getParsAccessFrameworkParserRuleCall_1_0());
				}
				lv_pars_1_0=ruleAccessFramework
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateAccessFrameworkRule());
					}
					set(
						$current,
						"pars",
						lv_pars_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AccessFramework");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCreateChannelFrameworkViaPort
entryRuleCreateChannelFrameworkViaPort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateChannelFrameworkViaPortRule()); }
	iv_ruleCreateChannelFrameworkViaPort=ruleCreateChannelFrameworkViaPort
	{ $current=$iv_ruleCreateChannelFrameworkViaPort.current; }
	EOF;

// Rule CreateChannelFrameworkViaPort
ruleCreateChannelFrameworkViaPort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateChannelFrameworkViaPortAccess().getAttributesSchemaDefinitionParserRuleCall_0_0());
				}
				lv_attributes_0_0=ruleSchemaDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateChannelFrameworkViaPortRule());
					}
					set(
						$current,
						"attributes",
						lv_attributes_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SchemaDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=CHANNEL
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateChannelFrameworkViaPortAccess().getCHANNELKeyword_1());
		}
		(
			(
				lv_host_2_0=RULE_ID
				{
					newLeafNode(lv_host_2_0, grammarAccess.getCreateChannelFrameworkViaPortAccess().getHostIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateChannelFrameworkViaPortRule());
					}
					setWithLastConsumed(
						$current,
						"host",
						lv_host_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_3=Colon
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateChannelFrameworkViaPortAccess().getColonKeyword_3());
		}
		(
			(
				lv_port_4_0=RULE_INT
				{
					newLeafNode(lv_port_4_0, grammarAccess.getCreateChannelFrameworkViaPortAccess().getPortINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateChannelFrameworkViaPortRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleCreateChannelFormatViaFile
entryRuleCreateChannelFormatViaFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateChannelFormatViaFileRule()); }
	iv_ruleCreateChannelFormatViaFile=ruleCreateChannelFormatViaFile
	{ $current=$iv_ruleCreateChannelFormatViaFile.current; }
	EOF;

// Rule CreateChannelFormatViaFile
ruleCreateChannelFormatViaFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateChannelFormatViaFileAccess().getAttributesSchemaDefinitionParserRuleCall_0_0());
				}
				lv_attributes_0_0=ruleSchemaDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateChannelFormatViaFileRule());
					}
					set(
						$current,
						"attributes",
						lv_attributes_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SchemaDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=FILE
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateChannelFormatViaFileAccess().getFILEKeyword_1());
		}
		(
			(
				lv_filename_2_0=RULE_STRING
				{
					newLeafNode(lv_filename_2_0, grammarAccess.getCreateChannelFormatViaFileAccess().getFilenameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateChannelFormatViaFileRule());
					}
					setWithLastConsumed(
						$current,
						"filename",
						lv_filename_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=AS
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateChannelFormatViaFileAccess().getASKeyword_3());
		}
		(
			(
				lv_type_4_0=RULE_ID
				{
					newLeafNode(lv_type_4_0, grammarAccess.getCreateChannelFormatViaFileAccess().getTypeIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateChannelFormatViaFileRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_4_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCreateDatabaseStream
entryRuleCreateDatabaseStream returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateDatabaseStreamRule()); }
	iv_ruleCreateDatabaseStream=ruleCreateDatabaseStream
	{ $current=$iv_ruleCreateDatabaseStream.current; }
	EOF;

// Rule CreateDatabaseStream
ruleCreateDatabaseStream returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateDatabaseStreamAccess().getAttributesSchemaDefinitionParserRuleCall_0_0());
				}
				lv_attributes_0_0=ruleSchemaDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateDatabaseStreamRule());
					}
					set(
						$current,
						"attributes",
						lv_attributes_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SchemaDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=DATABASE
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateDatabaseStreamAccess().getDATABASEKeyword_1());
		}
		(
			(
				lv_database_2_0=RULE_ID
				{
					newLeafNode(lv_database_2_0, grammarAccess.getCreateDatabaseStreamAccess().getDatabaseIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateDatabaseStreamRule());
					}
					setWithLastConsumed(
						$current,
						"database",
						lv_database_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_3=TABLE
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateDatabaseStreamAccess().getTABLEKeyword_3());
		}
		(
			(
				lv_table_4_0=RULE_ID
				{
					newLeafNode(lv_table_4_0, grammarAccess.getCreateDatabaseStreamAccess().getTableIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateDatabaseStreamRule());
					}
					setWithLastConsumed(
						$current,
						"table",
						lv_table_4_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			otherlv_5=EACH
			{
				newLeafNode(otherlv_5, grammarAccess.getCreateDatabaseStreamAccess().getEACHKeyword_5_0());
			}
			(
				(
					lv_size_6_0=RULE_INT
					{
						newLeafNode(lv_size_6_0, grammarAccess.getCreateDatabaseStreamAccess().getSizeINTTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateDatabaseStreamRule());
						}
						setWithLastConsumed(
							$current,
							"size",
							lv_size_6_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					lv_unit_7_0=RULE_ID
					{
						newLeafNode(lv_unit_7_0, grammarAccess.getCreateDatabaseStreamAccess().getUnitIDTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateDatabaseStreamRule());
						}
						setWithLastConsumed(
							$current,
							"unit",
							lv_unit_7_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCreateDatabaseSink
entryRuleCreateDatabaseSink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateDatabaseSinkRule()); }
	iv_ruleCreateDatabaseSink=ruleCreateDatabaseSink
	{ $current=$iv_ruleCreateDatabaseSink.current; }
	EOF;

// Rule CreateDatabaseSink
ruleCreateDatabaseSink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCreateDatabaseSinkAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateDatabaseSinkRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_1=AS
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateDatabaseSinkAccess().getASKeyword_1());
		}
		otherlv_2=DATABASE
		{
			newLeafNode(otherlv_2, grammarAccess.getCreateDatabaseSinkAccess().getDATABASEKeyword_2());
		}
		(
			(
				lv_database_3_0=RULE_ID
				{
					newLeafNode(lv_database_3_0, grammarAccess.getCreateDatabaseSinkAccess().getDatabaseIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateDatabaseSinkRule());
					}
					setWithLastConsumed(
						$current,
						"database",
						lv_database_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_4=TABLE
		{
			newLeafNode(otherlv_4, grammarAccess.getCreateDatabaseSinkAccess().getTABLEKeyword_4());
		}
		(
			(
				lv_table_5_0=RULE_ID
				{
					newLeafNode(lv_table_5_0, grammarAccess.getCreateDatabaseSinkAccess().getTableIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateDatabaseSinkRule());
					}
					setWithLastConsumed(
						$current,
						"table",
						lv_table_5_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			otherlv_6=AND
			{
				newLeafNode(otherlv_6, grammarAccess.getCreateDatabaseSinkAccess().getANDKeyword_6_0());
			}
			(
				(
					(
						lv_option_7_1=DROP
						{
							newLeafNode(lv_option_7_1, grammarAccess.getCreateDatabaseSinkAccess().getOptionDROPKeyword_6_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCreateDatabaseSinkRule());
							}
							setWithLastConsumed($current, "option", lv_option_7_1, null);
						}
						    |
						lv_option_7_2=TRUNCATE
						{
							newLeafNode(lv_option_7_2, grammarAccess.getCreateDatabaseSinkAccess().getOptionTRUNCATEKeyword_6_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCreateDatabaseSinkRule());
							}
							setWithLastConsumed($current, "option", lv_option_7_2, null);
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleCreateView
entryRuleCreateView returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateViewRule()); }
	iv_ruleCreateView=ruleCreateView
	{ $current=$iv_ruleCreateView.current; }
	EOF;

// Rule CreateView
ruleCreateView returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCreateViewAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateViewRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_1=FROM
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateViewAccess().getFROMKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateViewAccess().getSelectInnerSelectParserRuleCall_2_0());
				}
				lv_select_2_0=ruleInnerSelect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateViewRule());
					}
					set(
						$current,
						"select",
						lv_select_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.InnerSelect");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCreateDataBaseJDBCConnection
entryRuleCreateDataBaseJDBCConnection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateDataBaseJDBCConnectionRule()); }
	iv_ruleCreateDataBaseJDBCConnection=ruleCreateDataBaseJDBCConnection
	{ $current=$iv_ruleCreateDataBaseJDBCConnection.current; }
	EOF;

// Rule CreateDataBaseJDBCConnection
ruleCreateDataBaseJDBCConnection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCreateDataBaseJDBCConnectionAccess().getCreateDataBaseConnectionJDBCAction_0(),
					$current);
			}
		)
		otherlv_1=CREATE
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateDataBaseJDBCConnectionAccess().getCREATEKeyword_1());
		}
		otherlv_2=DATABASE
		{
			newLeafNode(otherlv_2, grammarAccess.getCreateDataBaseJDBCConnectionAccess().getDATABASEKeyword_2());
		}
		otherlv_3=CONNECTION
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateDataBaseJDBCConnectionAccess().getCONNECTIONKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getCreateDataBaseJDBCConnectionAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateDataBaseJDBCConnectionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_5=JDBC
		{
			newLeafNode(otherlv_5, grammarAccess.getCreateDataBaseJDBCConnectionAccess().getJDBCKeyword_5());
		}
		(
			(
				lv_server_6_0=RULE_ID
				{
					newLeafNode(lv_server_6_0, grammarAccess.getCreateDataBaseJDBCConnectionAccess().getServerIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateDataBaseJDBCConnectionRule());
					}
					setWithLastConsumed(
						$current,
						"server",
						lv_server_6_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			otherlv_7=WITH
			{
				newLeafNode(otherlv_7, grammarAccess.getCreateDataBaseJDBCConnectionAccess().getWITHKeyword_7_0());
			}
			otherlv_8=USER
			{
				newLeafNode(otherlv_8, grammarAccess.getCreateDataBaseJDBCConnectionAccess().getUSERKeyword_7_1());
			}
			(
				(
					lv_user_9_0=RULE_ID
					{
						newLeafNode(lv_user_9_0, grammarAccess.getCreateDataBaseJDBCConnectionAccess().getUserIDTerminalRuleCall_7_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateDataBaseJDBCConnectionRule());
						}
						setWithLastConsumed(
							$current,
							"user",
							lv_user_9_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
			otherlv_10=PASSWORD
			{
				newLeafNode(otherlv_10, grammarAccess.getCreateDataBaseJDBCConnectionAccess().getPASSWORDKeyword_7_3());
			}
			(
				(
					lv_password_11_0=RULE_ID
					{
						newLeafNode(lv_password_11_0, grammarAccess.getCreateDataBaseJDBCConnectionAccess().getPasswordIDTerminalRuleCall_7_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateDataBaseJDBCConnectionRule());
						}
						setWithLastConsumed(
							$current,
							"password",
							lv_password_11_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
			(
				(
					lv_lazy_12_0=NO_LAZY_CONNECTION_CHECK
					{
						newLeafNode(lv_lazy_12_0, grammarAccess.getCreateDataBaseJDBCConnectionAccess().getLazyNO_LAZY_CONNECTION_CHECKKeyword_7_5_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateDataBaseJDBCConnectionRule());
						}
						setWithLastConsumed($current, "lazy", lv_lazy_12_0, "NO_LAZY_CONNECTION_CHECK");
					}
				)
			)?
		)?
	)
;

// Entry rule entryRuleCreateDataBaseGenericConnection
entryRuleCreateDataBaseGenericConnection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateDataBaseGenericConnectionRule()); }
	iv_ruleCreateDataBaseGenericConnection=ruleCreateDataBaseGenericConnection
	{ $current=$iv_ruleCreateDataBaseGenericConnection.current; }
	EOF;

// Rule CreateDataBaseGenericConnection
ruleCreateDataBaseGenericConnection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCreateDataBaseGenericConnectionAccess().getCreateDataBaseConnectionGenericAction_0(),
					$current);
			}
		)
		otherlv_1=CREATE
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateDataBaseGenericConnectionAccess().getCREATEKeyword_1());
		}
		otherlv_2=DATABASE
		{
			newLeafNode(otherlv_2, grammarAccess.getCreateDataBaseGenericConnectionAccess().getDATABASEKeyword_2());
		}
		otherlv_3=CONNECTION
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateDataBaseGenericConnectionAccess().getCONNECTIONKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getCreateDataBaseGenericConnectionAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateDataBaseGenericConnectionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_5=AS
		{
			newLeafNode(otherlv_5, grammarAccess.getCreateDataBaseGenericConnectionAccess().getASKeyword_5());
		}
		(
			(
				lv_driver_6_0=RULE_ID
				{
					newLeafNode(lv_driver_6_0, grammarAccess.getCreateDataBaseGenericConnectionAccess().getDriverIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateDataBaseGenericConnectionRule());
					}
					setWithLastConsumed(
						$current,
						"driver",
						lv_driver_6_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_7=TO
		{
			newLeafNode(otherlv_7, grammarAccess.getCreateDataBaseGenericConnectionAccess().getTOKeyword_7());
		}
		(
			(
				lv_source_8_0=RULE_ID
				{
					newLeafNode(lv_source_8_0, grammarAccess.getCreateDataBaseGenericConnectionAccess().getSourceIDTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateDataBaseGenericConnectionRule());
					}
					setWithLastConsumed(
						$current,
						"source",
						lv_source_8_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			otherlv_9=AT
			{
				newLeafNode(otherlv_9, grammarAccess.getCreateDataBaseGenericConnectionAccess().getATKeyword_9_0());
			}
			(
				(
					lv_host_10_0=RULE_ID
					{
						newLeafNode(lv_host_10_0, grammarAccess.getCreateDataBaseGenericConnectionAccess().getHostIDTerminalRuleCall_9_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateDataBaseGenericConnectionRule());
						}
						setWithLastConsumed(
							$current,
							"host",
							lv_host_10_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
			otherlv_11=Colon
			{
				newLeafNode(otherlv_11, grammarAccess.getCreateDataBaseGenericConnectionAccess().getColonKeyword_9_2());
			}
			(
				(
					lv_port_12_0=RULE_INT
					{
						newLeafNode(lv_port_12_0, grammarAccess.getCreateDataBaseGenericConnectionAccess().getPortINTTerminalRuleCall_9_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateDataBaseGenericConnectionRule());
						}
						setWithLastConsumed(
							$current,
							"port",
							lv_port_12_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_13=WITH
			{
				newLeafNode(otherlv_13, grammarAccess.getCreateDataBaseGenericConnectionAccess().getWITHKeyword_10_0());
			}
			otherlv_14=USER
			{
				newLeafNode(otherlv_14, grammarAccess.getCreateDataBaseGenericConnectionAccess().getUSERKeyword_10_1());
			}
			(
				(
					lv_user_15_0=RULE_ID
					{
						newLeafNode(lv_user_15_0, grammarAccess.getCreateDataBaseGenericConnectionAccess().getUserIDTerminalRuleCall_10_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateDataBaseGenericConnectionRule());
						}
						setWithLastConsumed(
							$current,
							"user",
							lv_user_15_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
			otherlv_16=PASSWORD
			{
				newLeafNode(otherlv_16, grammarAccess.getCreateDataBaseGenericConnectionAccess().getPASSWORDKeyword_10_3());
			}
			(
				(
					lv_password_17_0=RULE_ID
					{
						newLeafNode(lv_password_17_0, grammarAccess.getCreateDataBaseGenericConnectionAccess().getPasswordIDTerminalRuleCall_10_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateDataBaseGenericConnectionRule());
						}
						setWithLastConsumed(
							$current,
							"password",
							lv_password_17_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
			(
				(
					lv_lazy_18_0=NO_LAZY_CONNECTION_CHECK
					{
						newLeafNode(lv_lazy_18_0, grammarAccess.getCreateDataBaseGenericConnectionAccess().getLazyNO_LAZY_CONNECTION_CHECKKeyword_10_5_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateDataBaseGenericConnectionRule());
						}
						setWithLastConsumed($current, "lazy", lv_lazy_18_0, "NO_LAZY_CONNECTION_CHECK");
					}
				)
			)?
		)?
	)
;

// Entry rule entryRuleDropDatabaseConnection
entryRuleDropDatabaseConnection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDropDatabaseConnectionRule()); }
	iv_ruleDropDatabaseConnection=ruleDropDatabaseConnection
	{ $current=$iv_ruleDropDatabaseConnection.current; }
	EOF;

// Rule DropDatabaseConnection
ruleDropDatabaseConnection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDropDatabaseConnectionAccess().getDropDatabaseConnectionAction_0(),
					$current);
			}
		)
		otherlv_1=DROP
		{
			newLeafNode(otherlv_1, grammarAccess.getDropDatabaseConnectionAccess().getDROPKeyword_1());
		}
		otherlv_2=DATABASE
		{
			newLeafNode(otherlv_2, grammarAccess.getDropDatabaseConnectionAccess().getDATABASEKeyword_2());
		}
		otherlv_3=CONNECTION
		{
			newLeafNode(otherlv_3, grammarAccess.getDropDatabaseConnectionAccess().getCONNECTIONKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getDropDatabaseConnectionAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDropDatabaseConnectionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleStreamTo
entryRuleStreamTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStreamToRule()); }
	iv_ruleStreamTo=ruleStreamTo
	{ $current=$iv_ruleStreamTo.current; }
	EOF;

// Rule StreamTo
ruleStreamTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStreamToAccess().getStreamToAction_0(),
					$current);
			}
		)
		otherlv_1=STREAM
		{
			newLeafNode(otherlv_1, grammarAccess.getStreamToAccess().getSTREAMKeyword_1());
		}
		otherlv_2=TO
		{
			newLeafNode(otherlv_2, grammarAccess.getStreamToAccess().getTOKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getStreamToAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStreamToRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStreamToAccess().getStatementInnerSelect2ParserRuleCall_4_0_0());
					}
					lv_statement_4_0=ruleInnerSelect2
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStreamToRule());
						}
						set(
							$current,
							"statement",
							lv_statement_4_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.InnerSelect2");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_inputname_5_0=RULE_ID
					{
						newLeafNode(lv_inputname_5_0, grammarAccess.getStreamToAccess().getInputnameIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStreamToRule());
						}
						setWithLastConsumed(
							$current,
							"inputname",
							lv_inputname_5_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDropStream
entryRuleDropStream returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDropStreamRule()); }
	iv_ruleDropStream=ruleDropStream
	{ $current=$iv_ruleDropStream.current; }
	EOF;

// Rule DropStream
ruleDropStream returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDropStreamAccess().getDropStreamAction_0(),
					$current);
			}
		)
		otherlv_1=DROP
		{
			newLeafNode(otherlv_1, grammarAccess.getDropStreamAccess().getDROPKeyword_1());
		}
		(
			(
				(
					lv_name_2_1=SINK
					{
						newLeafNode(lv_name_2_1, grammarAccess.getDropStreamAccess().getNameSINKKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDropStreamRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_1, null);
					}
					    |
					lv_name_2_2=STREAM
					{
						newLeafNode(lv_name_2_2, grammarAccess.getDropStreamAccess().getNameSTREAMKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDropStreamRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_2, null);
					}
					    |
					lv_name_2_3=VIEW
					{
						newLeafNode(lv_name_2_3, grammarAccess.getDropStreamAccess().getNameVIEWKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDropStreamRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_3, null);
					}
				)
			)
		)
		(
			(
				lv_stream_3_0=RULE_ID
				{
					newLeafNode(lv_stream_3_0, grammarAccess.getDropStreamAccess().getStreamIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDropStreamRule());
					}
					setWithLastConsumed(
						$current,
						"stream",
						lv_stream_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			(
				(
					lv_exists_4_0=IF
					{
						newLeafNode(lv_exists_4_0, grammarAccess.getDropStreamAccess().getExistsIFKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDropStreamRule());
						}
						setWithLastConsumed($current, "exists", lv_exists_4_0, "IF");
					}
				)
			)
			otherlv_5=EXISTS
			{
				newLeafNode(otherlv_5, grammarAccess.getDropStreamAccess().getEXISTSKeyword_4_1());
			}
		)?
	)
;

// Entry rule entryRuleUserManagement
entryRuleUserManagement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserManagementRule()); }
	iv_ruleUserManagement=ruleUserManagement
	{ $current=$iv_ruleUserManagement.current; }
	EOF;

// Rule UserManagement
ruleUserManagement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUserManagementAccess().getUserManagementAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_name_1_1=CREATE
					{
						newLeafNode(lv_name_1_1, grammarAccess.getUserManagementAccess().getNameCREATEKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserManagementRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_1, null);
					}
					    |
					lv_name_1_2=ALTER
					{
						newLeafNode(lv_name_1_2, grammarAccess.getUserManagementAccess().getNameALTERKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserManagementRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_2, null);
					}
					    |
					lv_name_1_3=DROP
					{
						newLeafNode(lv_name_1_3, grammarAccess.getUserManagementAccess().getNameDROPKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserManagementRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_3, null);
					}
				)
			)
		)
		(
			(
				(
					lv_subject_2_1=USER
					{
						newLeafNode(lv_subject_2_1, grammarAccess.getUserManagementAccess().getSubjectUSERKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserManagementRule());
						}
						setWithLastConsumed($current, "subject", lv_subject_2_1, null);
					}
					    |
					lv_subject_2_2=ROLE
					{
						newLeafNode(lv_subject_2_2, grammarAccess.getUserManagementAccess().getSubjectROLEKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserManagementRule());
						}
						setWithLastConsumed($current, "subject", lv_subject_2_2, null);
					}
					    |
					lv_subject_2_3=TENANT
					{
						newLeafNode(lv_subject_2_3, grammarAccess.getUserManagementAccess().getSubjectTENANTKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserManagementRule());
						}
						setWithLastConsumed($current, "subject", lv_subject_2_3, null);
					}
				)
			)
		)
		(
			(
				lv_subjectName_3_0=RULE_ID
				{
					newLeafNode(lv_subjectName_3_0, grammarAccess.getUserManagementAccess().getSubjectNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserManagementRule());
					}
					setWithLastConsumed(
						$current,
						"subjectName",
						lv_subjectName_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			otherlv_4=IDENTIFIED
			{
				newLeafNode(otherlv_4, grammarAccess.getUserManagementAccess().getIDENTIFIEDKeyword_4_0());
			}
			otherlv_5=BY
			{
				newLeafNode(otherlv_5, grammarAccess.getUserManagementAccess().getBYKeyword_4_1());
			}
			(
				(
					lv_password_6_0=RULE_STRING
					{
						newLeafNode(lv_password_6_0, grammarAccess.getUserManagementAccess().getPasswordSTRINGTerminalRuleCall_4_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserManagementRule());
						}
						setWithLastConsumed(
							$current,
							"password",
							lv_password_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRightsManagement
entryRuleRightsManagement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRightsManagementRule()); }
	iv_ruleRightsManagement=ruleRightsManagement
	{ $current=$iv_ruleRightsManagement.current; }
	EOF;

// Rule RightsManagement
ruleRightsManagement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getRightsManagementAccess().getRightsManagementAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_name_1_0=GRANT
					{
						newLeafNode(lv_name_1_0, grammarAccess.getRightsManagementAccess().getNameGRANTKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRightsManagementRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_0, "GRANT");
					}
				)
			)
			(
				(
					lv_operations_2_0=RULE_ID
					{
						newLeafNode(lv_operations_2_0, grammarAccess.getRightsManagementAccess().getOperationsIDTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRightsManagementRule());
						}
						addWithLastConsumed(
							$current,
							"operations",
							lv_operations_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getRightsManagementAccess().getCommaKeyword_0_3_0());
				}
				(
					(
						lv_operations_4_0=RULE_ID
						{
							newLeafNode(lv_operations_4_0, grammarAccess.getRightsManagementAccess().getOperationsIDTerminalRuleCall_0_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRightsManagementRule());
							}
							addWithLastConsumed(
								$current,
								"operations",
								lv_operations_4_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
						}
					)
				)
			)*
			(
				otherlv_5=ON
				{
					newLeafNode(otherlv_5, grammarAccess.getRightsManagementAccess().getONKeyword_0_4_0());
				}
				(
					(
						lv_operations2_6_0=RULE_ID
						{
							newLeafNode(lv_operations2_6_0, grammarAccess.getRightsManagementAccess().getOperations2IDTerminalRuleCall_0_4_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRightsManagementRule());
							}
							addWithLastConsumed(
								$current,
								"operations2",
								lv_operations2_6_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
						}
					)
				)
				(
					otherlv_7=Comma
					{
						newLeafNode(otherlv_7, grammarAccess.getRightsManagementAccess().getCommaKeyword_0_4_2_0());
					}
					(
						(
							lv_operations2_8_0=RULE_ID
							{
								newLeafNode(lv_operations2_8_0, grammarAccess.getRightsManagementAccess().getOperations2IDTerminalRuleCall_0_4_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getRightsManagementRule());
								}
								addWithLastConsumed(
									$current,
									"operations2",
									lv_operations2_8_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
							}
						)
					)
				)*
			)?
			otherlv_9=TO
			{
				newLeafNode(otherlv_9, grammarAccess.getRightsManagementAccess().getTOKeyword_0_5());
			}
			(
				(
					lv_user_10_0=RULE_ID
					{
						newLeafNode(lv_user_10_0, grammarAccess.getRightsManagementAccess().getUserIDTerminalRuleCall_0_6_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRightsManagementRule());
						}
						setWithLastConsumed(
							$current,
							"user",
							lv_user_10_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getRightsManagementAccess().getRightsManagementAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_name_12_0=REVOKE
					{
						newLeafNode(lv_name_12_0, grammarAccess.getRightsManagementAccess().getNameREVOKEKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRightsManagementRule());
						}
						setWithLastConsumed($current, "name", lv_name_12_0, "REVOKE");
					}
				)
			)
			(
				(
					lv_operations_13_0=RULE_ID
					{
						newLeafNode(lv_operations_13_0, grammarAccess.getRightsManagementAccess().getOperationsIDTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRightsManagementRule());
						}
						addWithLastConsumed(
							$current,
							"operations",
							lv_operations_13_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
			(
				otherlv_14=Comma
				{
					newLeafNode(otherlv_14, grammarAccess.getRightsManagementAccess().getCommaKeyword_1_3_0());
				}
				(
					(
						lv_operations_15_0=RULE_ID
						{
							newLeafNode(lv_operations_15_0, grammarAccess.getRightsManagementAccess().getOperationsIDTerminalRuleCall_1_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRightsManagementRule());
							}
							addWithLastConsumed(
								$current,
								"operations",
								lv_operations_15_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
						}
					)
				)
			)*
			(
				otherlv_16=ON
				{
					newLeafNode(otherlv_16, grammarAccess.getRightsManagementAccess().getONKeyword_1_4_0());
				}
				(
					(
						lv_operations2_17_0=RULE_ID
						{
							newLeafNode(lv_operations2_17_0, grammarAccess.getRightsManagementAccess().getOperations2IDTerminalRuleCall_1_4_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRightsManagementRule());
							}
							addWithLastConsumed(
								$current,
								"operations2",
								lv_operations2_17_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
						}
					)
				)
				(
					otherlv_18=Comma
					{
						newLeafNode(otherlv_18, grammarAccess.getRightsManagementAccess().getCommaKeyword_1_4_2_0());
					}
					(
						(
							lv_operations2_19_0=RULE_ID
							{
								newLeafNode(lv_operations2_19_0, grammarAccess.getRightsManagementAccess().getOperations2IDTerminalRuleCall_1_4_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getRightsManagementRule());
								}
								addWithLastConsumed(
									$current,
									"operations2",
									lv_operations2_19_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
							}
						)
					)
				)*
			)?
			otherlv_20=FROM
			{
				newLeafNode(otherlv_20, grammarAccess.getRightsManagementAccess().getFROMKeyword_1_5());
			}
			(
				(
					lv_user_21_0=RULE_ID
					{
						newLeafNode(lv_user_21_0, grammarAccess.getRightsManagementAccess().getUserIDTerminalRuleCall_1_6_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRightsManagementRule());
						}
						setWithLastConsumed(
							$current,
							"user",
							lv_user_21_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleRoleManagement
entryRuleRoleManagement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoleManagementRule()); }
	iv_ruleRoleManagement=ruleRoleManagement
	{ $current=$iv_ruleRoleManagement.current; }
	EOF;

// Rule RoleManagement
ruleRoleManagement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getRoleManagementAccess().getRoleManagementAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_name_1_0=GRANT
					{
						newLeafNode(lv_name_1_0, grammarAccess.getRoleManagementAccess().getNameGRANTKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRoleManagementRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_0, "GRANT");
					}
				)
			)
			otherlv_2=ROLE
			{
				newLeafNode(otherlv_2, grammarAccess.getRoleManagementAccess().getROLEKeyword_0_2());
			}
			(
				(
					lv_operations_3_0=RULE_ID
					{
						newLeafNode(lv_operations_3_0, grammarAccess.getRoleManagementAccess().getOperationsIDTerminalRuleCall_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRoleManagementRule());
						}
						addWithLastConsumed(
							$current,
							"operations",
							lv_operations_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
			(
				otherlv_4=Comma
				{
					newLeafNode(otherlv_4, grammarAccess.getRoleManagementAccess().getCommaKeyword_0_4_0());
				}
				(
					(
						lv_operations_5_0=RULE_ID
						{
							newLeafNode(lv_operations_5_0, grammarAccess.getRoleManagementAccess().getOperationsIDTerminalRuleCall_0_4_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRoleManagementRule());
							}
							addWithLastConsumed(
								$current,
								"operations",
								lv_operations_5_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
						}
					)
				)
			)*
			otherlv_6=TO
			{
				newLeafNode(otherlv_6, grammarAccess.getRoleManagementAccess().getTOKeyword_0_5());
			}
			(
				(
					lv_user_7_0=RULE_ID
					{
						newLeafNode(lv_user_7_0, grammarAccess.getRoleManagementAccess().getUserIDTerminalRuleCall_0_6_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRoleManagementRule());
						}
						setWithLastConsumed(
							$current,
							"user",
							lv_user_7_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getRoleManagementAccess().getRoleManagementAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_name_9_0=REVOKE
					{
						newLeafNode(lv_name_9_0, grammarAccess.getRoleManagementAccess().getNameREVOKEKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRoleManagementRule());
						}
						setWithLastConsumed($current, "name", lv_name_9_0, "REVOKE");
					}
				)
			)
			otherlv_10=ROLE
			{
				newLeafNode(otherlv_10, grammarAccess.getRoleManagementAccess().getROLEKeyword_1_2());
			}
			(
				(
					lv_operations_11_0=RULE_ID
					{
						newLeafNode(lv_operations_11_0, grammarAccess.getRoleManagementAccess().getOperationsIDTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRoleManagementRule());
						}
						addWithLastConsumed(
							$current,
							"operations",
							lv_operations_11_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
			(
				otherlv_12=Comma
				{
					newLeafNode(otherlv_12, grammarAccess.getRoleManagementAccess().getCommaKeyword_1_4_0());
				}
				(
					(
						lv_operations_13_0=RULE_ID
						{
							newLeafNode(lv_operations_13_0, grammarAccess.getRoleManagementAccess().getOperationsIDTerminalRuleCall_1_4_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRoleManagementRule());
							}
							addWithLastConsumed(
								$current,
								"operations",
								lv_operations_13_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
						}
					)
				)
			)*
			otherlv_14=FROM
			{
				newLeafNode(otherlv_14, grammarAccess.getRoleManagementAccess().getFROMKeyword_1_5());
			}
			(
				(
					lv_user_15_0=RULE_ID
					{
						newLeafNode(lv_user_15_0, grammarAccess.getRoleManagementAccess().getUserIDTerminalRuleCall_1_6_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRoleManagementRule());
						}
						setWithLastConsumed(
							$current,
							"user",
							lv_user_15_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleWindowOperator
entryRuleWindowOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWindowOperatorRule()); }
	iv_ruleWindowOperator=ruleWindowOperator
	{ $current=$iv_ruleWindowOperator.current; }
	EOF;

// Rule WindowOperator
ruleWindowOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftSquareBracket
		{
			newLeafNode(otherlv_0, grammarAccess.getWindowOperatorAccess().getLeftSquareBracketKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getWindowOperatorAccess().getUnboundedWindowParserRuleCall_1_0());
			}
			this_UnboundedWindow_1=ruleUnboundedWindow
			{
				$current = $this_UnboundedWindow_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getWindowOperatorAccess().getTimebasedWindowParserRuleCall_1_1());
			}
			this_TimebasedWindow_2=ruleTimebasedWindow
			{
				$current = $this_TimebasedWindow_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getWindowOperatorAccess().getTuplebasedWindowParserRuleCall_1_2());
			}
			this_TuplebasedWindow_3=ruleTuplebasedWindow
			{
				$current = $this_TuplebasedWindow_3.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_4=RightSquareBracket
		{
			newLeafNode(otherlv_4, grammarAccess.getWindowOperatorAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleUnboundedWindow
entryRuleUnboundedWindow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnboundedWindowRule()); }
	iv_ruleUnboundedWindow=ruleUnboundedWindow
	{ $current=$iv_ruleUnboundedWindow.current; }
	EOF;

// Rule UnboundedWindow
ruleUnboundedWindow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnboundedWindowAccess().getUndboundedWindowAction_0(),
					$current);
			}
		)
		otherlv_1=UNBOUNDED
		{
			newLeafNode(otherlv_1, grammarAccess.getUnboundedWindowAccess().getUNBOUNDEDKeyword_1());
		}
	)
;

// Entry rule entryRuleTimebasedWindow
entryRuleTimebasedWindow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimebasedWindowRule()); }
	iv_ruleTimebasedWindow=ruleTimebasedWindow
	{ $current=$iv_ruleTimebasedWindow.current; }
	EOF;

// Rule TimebasedWindow
ruleTimebasedWindow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTimebasedWindowAccess().getTimebasedWindowAction_0(),
					$current);
			}
		)
		otherlv_1=SIZE
		{
			newLeafNode(otherlv_1, grammarAccess.getTimebasedWindowAccess().getSIZEKeyword_1());
		}
		(
			(
				lv_size_2_0=RULE_INT
				{
					newLeafNode(lv_size_2_0, grammarAccess.getTimebasedWindowAccess().getSizeINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimebasedWindowRule());
					}
					setWithLastConsumed(
						$current,
						"size",
						lv_size_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				lv_unit_3_0=RULE_ID
				{
					newLeafNode(lv_unit_3_0, grammarAccess.getTimebasedWindowAccess().getUnitIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimebasedWindowRule());
					}
					setWithLastConsumed(
						$current,
						"unit",
						lv_unit_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			otherlv_4=ADVANCE
			{
				newLeafNode(otherlv_4, grammarAccess.getTimebasedWindowAccess().getADVANCEKeyword_4_0());
			}
			(
				(
					lv_advance_size_5_0=RULE_INT
					{
						newLeafNode(lv_advance_size_5_0, grammarAccess.getTimebasedWindowAccess().getAdvance_sizeINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimebasedWindowRule());
						}
						setWithLastConsumed(
							$current,
							"advance_size",
							lv_advance_size_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					lv_advance_unit_6_0=RULE_ID
					{
						newLeafNode(lv_advance_unit_6_0, grammarAccess.getTimebasedWindowAccess().getAdvance_unitIDTerminalRuleCall_4_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimebasedWindowRule());
						}
						setWithLastConsumed(
							$current,
							"advance_unit",
							lv_advance_unit_6_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
		)?
		otherlv_7=TIME
		{
			newLeafNode(otherlv_7, grammarAccess.getTimebasedWindowAccess().getTIMEKeyword_5());
		}
	)
;

// Entry rule entryRuleTuplebasedWindow
entryRuleTuplebasedWindow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTuplebasedWindowRule()); }
	iv_ruleTuplebasedWindow=ruleTuplebasedWindow
	{ $current=$iv_ruleTuplebasedWindow.current; }
	EOF;

// Rule TuplebasedWindow
ruleTuplebasedWindow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTuplebasedWindowAccess().getTuplebasedWindowAction_0(),
					$current);
			}
		)
		otherlv_1=SIZE
		{
			newLeafNode(otherlv_1, grammarAccess.getTuplebasedWindowAccess().getSIZEKeyword_1());
		}
		(
			(
				lv_size_2_0=RULE_INT
				{
					newLeafNode(lv_size_2_0, grammarAccess.getTuplebasedWindowAccess().getSizeINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTuplebasedWindowRule());
					}
					setWithLastConsumed(
						$current,
						"size",
						lv_size_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_3=ADVANCE
			{
				newLeafNode(otherlv_3, grammarAccess.getTuplebasedWindowAccess().getADVANCEKeyword_3_0());
			}
			(
				(
					lv_advance_size_4_0=RULE_INT
					{
						newLeafNode(lv_advance_size_4_0, grammarAccess.getTuplebasedWindowAccess().getAdvance_sizeINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTuplebasedWindowRule());
						}
						setWithLastConsumed(
							$current,
							"advance_size",
							lv_advance_size_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_5=TUPLE
		{
			newLeafNode(otherlv_5, grammarAccess.getTuplebasedWindowAccess().getTUPLEKeyword_4());
		}
		(
			otherlv_6=PARTITION
			{
				newLeafNode(otherlv_6, grammarAccess.getTuplebasedWindowAccess().getPARTITIONKeyword_5_0());
			}
			otherlv_7=BY
			{
				newLeafNode(otherlv_7, grammarAccess.getTuplebasedWindowAccess().getBYKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTuplebasedWindowAccess().getPartition_attributeAttributeParserRuleCall_5_2_0());
					}
					lv_partition_attribute_8_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTuplebasedWindowRule());
						}
						set(
							$current,
							"partition_attribute",
							lv_partition_attribute_8_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpressionsModel
entryRuleExpressionsModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionsModelRule()); }
	iv_ruleExpressionsModel=ruleExpressionsModel
	{ $current=$iv_ruleExpressionsModel.current; }
	EOF;

// Rule ExpressionsModel
ruleExpressionsModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpressionsModelAccess().getExpressionsModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionsModelAccess().getElementsExpressionParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionsModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getOrPredicateParserRuleCall());
	}
	this_OrPredicate_0=ruleOrPredicate
	{
		$current = $this_OrPredicate_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOrPredicate
entryRuleOrPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrPredicateRule()); }
	iv_ruleOrPredicate=ruleOrPredicate
	{ $current=$iv_ruleOrPredicate.current; }
	EOF;

// Rule OrPredicate
ruleOrPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrPredicateAccess().getAndPredicateParserRuleCall_0());
		}
		this_AndPredicate_0=ruleAndPredicate
		{
			$current = $this_AndPredicate_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrPredicateAccess().getOrPredicateLeftAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getOrPredicateAccess().getOrOperatorParserRuleCall_1_1());
			}
			ruleOrOperator
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrPredicateAccess().getRightAndPredicateParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrPredicateRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AndPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndPredicate
entryRuleAndPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndPredicateRule()); }
	iv_ruleAndPredicate=ruleAndPredicate
	{ $current=$iv_ruleAndPredicate.current; }
	EOF;

// Rule AndPredicate
ruleAndPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndPredicateAccess().getEqualitiyParserRuleCall_0());
		}
		this_Equalitiy_0=ruleEqualitiy
		{
			$current = $this_Equalitiy_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndPredicateAccess().getAndPredicateLeftAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getAndPredicateAccess().getAndOperatorParserRuleCall_1_1());
			}
			ruleAndOperator
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndPredicateAccess().getRightEqualitiyParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEqualitiy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndPredicateRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Equalitiy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualitiy
entryRuleEqualitiy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualitiyRule()); }
	iv_ruleEqualitiy=ruleEqualitiy
	{ $current=$iv_ruleEqualitiy.current; }
	EOF;

// Rule Equalitiy
ruleEqualitiy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualitiyAccess().getComparisonParserRuleCall_0());
		}
		this_Comparison_0=ruleComparison
		{
			$current = $this_Comparison_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualitiyAccess().getEqualityLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualitiyAccess().getOpEQUALITIY_OPERATORParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleEQUALITIY_OPERATOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualitiyRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.EQUALITIY_OPERATOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualitiyAccess().getRightComparisonParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleComparison
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualitiyRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Comparison");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current; }
	EOF;

// Rule Comparison
ruleComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0());
		}
		this_PlusOrMinus_0=rulePlusOrMinus
		{
			$current = $this_PlusOrMinus_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getComparisonAccess().getComparisionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonAccess().getOpCOMPARE_OPERATORParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleCOMPARE_OPERATOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.COMPARE_OPERATOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePlusOrMinus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.PlusOrMinus");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusOrMinusRule()); }
	iv_rulePlusOrMinus=rulePlusOrMinus
	{ $current=$iv_rulePlusOrMinus.current; }
	EOF;

// Rule PlusOrMinus
rulePlusOrMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0());
		}
		this_MulOrDiv_0=ruleMulOrDiv
		{
			$current = $this_MulOrDiv_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2=PlusSign
					{
						newLeafNode(otherlv_2, grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4=HyphenMinus
					{
						newLeafNode(otherlv_4, grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleMulOrDiv
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlusOrMinusRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.MulOrDiv");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMulOrDivRule()); }
	iv_ruleMulOrDiv=ruleMulOrDiv
	{ $current=$iv_ruleMulOrDiv.current; }
	EOF;

// Rule MulOrDiv
ruleMulOrDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=Solidus
						{
							newLeafNode(lv_op_2_1, grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=Asterisk
						{
							newLeafNode(lv_op_2_2, grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMulOrDivRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getBracketAction_0_0(),
						$current);
				}
			)
			otherlv_1=LeftParenthesis
			{
				newLeafNode(otherlv_1, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getInnerExpressionParserRuleCall_0_2_0());
					}
					lv_inner_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"inner",
							lv_inner_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=RightParenthesis
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getNOTAction_1_0(),
						$current);
				}
			)
			otherlv_5=NOT
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryAccess().getNOTKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0());
					}
					lv_expression_6_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"expression",
							lv_expression_6_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2());
		}
		this_Atomic_7=ruleAtomic
		{
			$current = $this_Atomic_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAtomic
entryRuleAtomic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicRule()); }
	iv_ruleAtomic=ruleAtomic
	{ $current=$iv_ruleAtomic.current; }
	EOF;

// Rule Atomic
ruleAtomic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getFloatConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_FLOAT
					{
						newLeafNode(lv_value_3_0, grammarAccess.getAtomicAccess().getValueFLOATTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.FLOAT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getStringConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_value_5_0=RULE_STRING
					{
						newLeafNode(lv_value_5_0, grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getBoolConstantAction_3_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getValueBOOLEANParserRuleCall_3_1_0());
					}
					lv_value_7_0=ruleBOOLEAN
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"value",
							lv_value_7_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.BOOLEAN");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getAttributeRefAction_4_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomicAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_4_1_0_0());
						}
						lv_value_9_0=ruleAttributeWithoutAliasDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomicRule());
							}
							set(
								$current,
								"value",
								lv_value_9_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomicAccess().getValueAttributeWithNestedStatementParserRuleCall_4_1_1_0());
						}
						lv_value_10_0=ruleAttributeWithNestedStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomicRule());
							}
							set(
								$current,
								"value",
								lv_value_10_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithNestedStatement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleAtomicWithoutAttributeRef
entryRuleAtomicWithoutAttributeRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicWithoutAttributeRefRule()); }
	iv_ruleAtomicWithoutAttributeRef=ruleAtomicWithoutAttributeRef
	{ $current=$iv_ruleAtomicWithoutAttributeRef.current; }
	EOF;

// Rule AtomicWithoutAttributeRef
ruleAtomicWithoutAttributeRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicWithoutAttributeRefAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomicWithoutAttributeRefAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicWithoutAttributeRefRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicWithoutAttributeRefAccess().getFloatConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_FLOAT
					{
						newLeafNode(lv_value_3_0, grammarAccess.getAtomicWithoutAttributeRefAccess().getValueFLOATTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicWithoutAttributeRefRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.FLOAT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicWithoutAttributeRefAccess().getStringConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_value_5_0=RULE_STRING
					{
						newLeafNode(lv_value_5_0, grammarAccess.getAtomicWithoutAttributeRefAccess().getValueSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicWithoutAttributeRefRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicWithoutAttributeRefAccess().getBoolConstantAction_3_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicWithoutAttributeRefAccess().getValueBOOLEANParserRuleCall_3_1_0());
					}
					lv_value_7_0=ruleBOOLEAN
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicWithoutAttributeRefRule());
						}
						set(
							$current,
							"value",
							lv_value_7_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.BOOLEAN");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;
