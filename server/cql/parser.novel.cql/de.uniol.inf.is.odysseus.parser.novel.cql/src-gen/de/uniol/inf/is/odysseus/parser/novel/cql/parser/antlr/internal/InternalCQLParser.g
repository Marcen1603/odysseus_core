/*
 * generated by Xtext 2.10.0
 */
parser grammar InternalCQLParser;

options {
	tokenVocab=InternalCQLLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package de.uniol.inf.is.odysseus.parser.novel.cql.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.uniol.inf.is.odysseus.parser.novel.cql.services.CQLGrammarAccess;

}

@members {

 	private CQLGrammarAccess grammarAccess;

    public InternalCQLParser(TokenStream input, CQLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected CQLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_0());
			}
			lv_statements_0_0=ruleStatement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"statements",
					lv_statements_0_0,
					"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Statement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeSelectParserRuleCall_0_0_0());
					}
					lv_type_0_0=ruleSelect
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_0_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Select");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeStreamToParserRuleCall_0_1_0());
					}
					lv_type_1_0=ruleStreamTo
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_1_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.StreamTo");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeDropParserRuleCall_0_2_0());
					}
					lv_type_2_0=ruleDrop
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Drop");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeCreateStream1ParserRuleCall_0_3_0());
					}
					lv_type_3_0=ruleCreateStream1
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateStream1");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeCreateSink1ParserRuleCall_0_4_0());
					}
					lv_type_4_0=ruleCreateSink1
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateSink1");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeCreateStreamChannelParserRuleCall_0_5_0());
					}
					lv_type_5_0=ruleCreateStreamChannel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_5_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateStreamChannel");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeCreateStreamFileParserRuleCall_0_6_0());
					}
					lv_type_6_0=ruleCreateStreamFile
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_6_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateStreamFile");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getTypeCreateViewParserRuleCall_0_7_0());
					}
					lv_type_7_0=ruleCreateView
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"type",
							lv_type_7_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateView");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_8=Semicolon
			{
				newLeafNode(otherlv_8, grammarAccess.getStatementAccess().getSemicolonKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleSelect
entryRuleSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectRule()); }
	iv_ruleSelect=ruleSelect
	{ $current=$iv_ruleSelect.current; }
	EOF;

// Rule Select
ruleSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=SELECT
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSelectAccess().getNameSELECTKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "SELECT");
				}
			)
		)
		(
			(
				lv_distinct_1_0=DISTINCT
				{
					newLeafNode(lv_distinct_1_0, grammarAccess.getSelectAccess().getDistinctDISTINCTKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectRule());
					}
					setWithLastConsumed($current, "distinct", lv_distinct_1_0, "DISTINCT");
				}
			)
		)?
		(
			otherlv_2=Asterisk
			{
				newLeafNode(otherlv_2, grammarAccess.getSelectAccess().getAsteriskKeyword_2_0());
			}
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectAccess().getArgumentsArgumentParserRuleCall_2_1_0_0());
						}
						lv_arguments_3_0=ruleArgument
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_3_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Argument");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					otherlv_4=Comma
					{
						newLeafNode(otherlv_4, grammarAccess.getSelectAccess().getCommaKeyword_2_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectAccess().getArgumentsArgumentParserRuleCall_2_1_1_1_0());
							}
							lv_arguments_5_0=ruleArgument
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectRule());
								}
								add(
									$current,
									"arguments",
									lv_arguments_5_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Argument");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
		(
			otherlv_6=FROM
			{
				newLeafNode(otherlv_6, grammarAccess.getSelectAccess().getFROMKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_3_1_0());
					}
					lv_sources_7_0=ruleSource
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						add(
							$current,
							"sources",
							lv_sources_7_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Source");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			(
				otherlv_8=Comma
				{
					newLeafNode(otherlv_8, grammarAccess.getSelectAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectAccess().getSourcesSourceParserRuleCall_3_2_1_0());
						}
						lv_sources_9_0=ruleSource
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectRule());
							}
							add(
								$current,
								"sources",
								lv_sources_9_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Source");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		(
			otherlv_10=WHERE
			{
				newLeafNode(otherlv_10, grammarAccess.getSelectAccess().getWHEREKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getPredicatesExpressionsModelParserRuleCall_4_1_0());
					}
					lv_predicates_11_0=ruleExpressionsModel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						set(
							$current,
							"predicates",
							lv_predicates_11_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionsModel");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12=GROUP
			{
				newLeafNode(otherlv_12, grammarAccess.getSelectAccess().getGROUPKeyword_5_0());
			}
			otherlv_13=BY
			{
				newLeafNode(otherlv_13, grammarAccess.getSelectAccess().getBYKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_5_2_0());
					}
					lv_order_14_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						add(
							$current,
							"order",
							lv_order_14_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			(
				otherlv_15=Comma
				{
					newLeafNode(otherlv_15, grammarAccess.getSelectAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectAccess().getOrderAttributeParserRuleCall_5_3_1_0());
						}
						lv_order_16_0=ruleAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectRule());
							}
							add(
								$current,
								"order",
								lv_order_16_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_17=HAVING
			{
				newLeafNode(otherlv_17, grammarAccess.getSelectAccess().getHAVINGKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getHavingExpressionsModelParserRuleCall_6_1_0());
					}
					lv_having_18_0=ruleExpressionsModel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						set(
							$current,
							"having",
							lv_having_18_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionsModel");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNestedStatement
entryRuleNestedStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNestedStatementRule()); }
	iv_ruleNestedStatement=ruleNestedStatement
	{ $current=$iv_ruleNestedStatement.current; }
	EOF;

// Rule NestedStatement
ruleNestedStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftParenthesis
		{
			newLeafNode(otherlv_0, grammarAccess.getNestedStatementAccess().getLeftParenthesisKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getNestedStatementAccess().getSelectParserRuleCall_1());
		}
		this_Select_1=ruleSelect
		{
			$current = $this_Select_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=RightParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getNestedStatementAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	iv_ruleArgument=ruleArgument
	{ $current=$iv_ruleArgument.current; }
	EOF;

// Rule Argument
ruleArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentAccess().getAttributeAttributeParserRuleCall_0_0());
				}
				lv_attribute_0_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentRule());
					}
					set(
						$current,
						"attribute",
						lv_attribute_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentAccess().getExpressionSelectExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleSelectExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSource
entryRuleSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceRule()); }
	iv_ruleSource=ruleSource
	{ $current=$iv_ruleSource.current; }
	EOF;

// Rule Source
ruleSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSourceAccess().getNameSourceNameParserRuleCall_0_0_0());
					}
					lv_name_0_0=ruleSourceName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSourceRule());
						}
						set(
							$current,
							"name",
							lv_name_0_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SourceName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1=LeftSquareBracket
				{
					newLeafNode(otherlv_1, grammarAccess.getSourceAccess().getLeftSquareBracketKeyword_0_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getSourceAccess().getUnboundedWindow_UnboundedParserRuleCall_0_1_1_0_0());
							}
							lv_unbounded_2_0=ruleWindow_Unbounded
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSourceRule());
								}
								set(
									$current,
									"unbounded",
									lv_unbounded_2_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Window_Unbounded");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getSourceAccess().getTimeWindow_TimebasedParserRuleCall_0_1_1_1_0());
							}
							lv_time_3_0=ruleWindow_Timebased
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSourceRule());
								}
								set(
									$current,
									"time",
									lv_time_3_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Window_Timebased");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getSourceAccess().getTupleWindow_TuplebasedParserRuleCall_0_1_1_2_0());
							}
							lv_tuple_4_0=ruleWindow_Tuplebased
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSourceRule());
								}
								set(
									$current,
									"tuple",
									lv_tuple_4_0,
									"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Window_Tuplebased");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				otherlv_5=RightSquareBracket
				{
					newLeafNode(otherlv_5, grammarAccess.getSourceAccess().getRightSquareBracketKeyword_0_1_2());
				}
			)?
			(
				otherlv_6=AS
				{
					newLeafNode(otherlv_6, grammarAccess.getSourceAccess().getASKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSourceAccess().getAliasAliasParserRuleCall_0_2_1_0());
						}
						lv_alias_7_0=ruleAlias
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSourceRule());
							}
							set(
								$current,
								"alias",
								lv_alias_7_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Alias");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSourceAccess().getNestedNestedStatementParserRuleCall_1_0_0());
					}
					lv_nested_8_0=ruleNestedStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSourceRule());
						}
						set(
							$current,
							"nested",
							lv_nested_8_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.NestedStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=AS
			{
				newLeafNode(otherlv_9, grammarAccess.getSourceAccess().getASKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSourceAccess().getAliasAliasParserRuleCall_1_2_0());
					}
					lv_alias_10_0=ruleAlias
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSourceRule());
						}
						set(
							$current,
							"alias",
							lv_alias_10_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Alias");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSourceName
entryRuleSourceName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSourceNameRule()); }
	iv_ruleSourceName=ruleSourceName
	{ $current=$iv_ruleSourceName.current.getText(); }
	EOF;

// Rule SourceName
ruleSourceName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getSourceNameAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getNameAttributeNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleAttributeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=AS
			{
				newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getASKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getAliasAliasParserRuleCall_1_1_0());
					}
					lv_alias_2_0=ruleAlias
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"alias",
							lv_alias_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Alias");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAttributeWithoutAliasDefinition
entryRuleAttributeWithoutAliasDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeWithoutAliasDefinitionRule()); }
	iv_ruleAttributeWithoutAliasDefinition=ruleAttributeWithoutAliasDefinition
	{ $current=$iv_ruleAttributeWithoutAliasDefinition.current; }
	EOF;

// Rule AttributeWithoutAliasDefinition
ruleAttributeWithoutAliasDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAttributeWithoutAliasDefinitionAccess().getNameAttributeNameParserRuleCall_0());
			}
			lv_name_0_0=ruleAttributeName
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getAttributeWithoutAliasDefinitionRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeName");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleAttributeName
entryRuleAttributeName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAttributeNameRule()); }
	iv_ruleAttributeName=ruleAttributeName
	{ $current=$iv_ruleAttributeName.current.getText(); }
	EOF;

// Rule AttributeName
ruleAttributeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getAttributeNameAccess().getIDTerminalRuleCall_0());
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getAttributeNameAccess().getSourceNameParserRuleCall_1_0());
			}
			this_SourceName_1=ruleSourceName
			{
				$current.merge(this_SourceName_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=FullStop
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getAttributeNameAccess().getFullStopKeyword_1_1());
			}
			this_ID_3=RULE_ID
			{
				$current.merge(this_ID_3);
			}
			{
				newLeafNode(this_ID_3, grammarAccess.getAttributeNameAccess().getIDTerminalRuleCall_1_2());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getAttributeNameAccess().getSourceNameParserRuleCall_2_0());
			}
			this_SourceName_4=ruleSourceName
			{
				$current.merge(this_SourceName_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=FullStop
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getAttributeNameAccess().getFullStopKeyword_2_1());
			}
			kw=Asterisk
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getAttributeNameAccess().getAsteriskKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleAttributeWithNestedStatement
entryRuleAttributeWithNestedStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeWithNestedStatementRule()); }
	iv_ruleAttributeWithNestedStatement=ruleAttributeWithNestedStatement
	{ $current=$iv_ruleAttributeWithNestedStatement.current; }
	EOF;

// Rule AttributeWithNestedStatement
ruleAttributeWithNestedStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeWithNestedStatementAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_0_0());
				}
				lv_value_0_0=ruleAttributeWithoutAliasDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeWithNestedStatementRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=IN
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeWithNestedStatementAccess().getINKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeWithNestedStatementAccess().getNestedNestedStatementParserRuleCall_2_0());
				}
				lv_nested_2_0=ruleNestedStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeWithNestedStatementRule());
					}
					set(
						$current,
						"nested",
						lv_nested_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.NestedStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSelectExpression
entryRuleSelectExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionRule()); }
	iv_ruleSelectExpression=ruleSelectExpression
	{ $current=$iv_ruleSelectExpression.current; }
	EOF;

// Rule SelectExpression
ruleSelectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentFunctionOrConstantParserRuleCall_0_0_0_0());
						}
						lv_expressions_0_0=ruleExpressionComponentFunctionOrConstant
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
							}
							add(
								$current,
								"expressions",
								lv_expressions_0_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentFunctionOrConstant");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							(
								lv_operators_1_1=PlusSign
								{
									newLeafNode(lv_operators_1_1, grammarAccess.getSelectExpressionAccess().getOperatorsPlusSignKeyword_0_0_1_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_1_1, null);
								}
								    |
								lv_operators_1_2=HyphenMinus
								{
									newLeafNode(lv_operators_1_2, grammarAccess.getSelectExpressionAccess().getOperatorsHyphenMinusKeyword_0_0_1_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_1_2, null);
								}
								    |
								lv_operators_1_3=Asterisk
								{
									newLeafNode(lv_operators_1_3, grammarAccess.getSelectExpressionAccess().getOperatorsAsteriskKeyword_0_0_1_0_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_1_3, null);
								}
								    |
								lv_operators_1_4=Solidus
								{
									newLeafNode(lv_operators_1_4, grammarAccess.getSelectExpressionAccess().getOperatorsSolidusKeyword_0_0_1_0_0_3());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_1_4, null);
								}
							)
						)
					)
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_0_0_1_1_0_0());
								}
								lv_expressions_2_1=ruleExpressionComponentConstantOrAttribute
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
									}
									add(
										$current,
										"expressions",
										lv_expressions_2_1,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentConstantOrAttribute");
									afterParserOrEnumRuleCall();
								}
								    |
								{
									newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentOnlyWithFunctionParserRuleCall_0_0_1_1_0_1());
								}
								lv_expressions_2_2=ruleExpressionComponentOnlyWithFunction
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
									}
									add(
										$current,
										"expressions",
										lv_expressions_2_2,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentOnlyWithFunction");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)*
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentOnlyWithAttributeParserRuleCall_0_1_0_0());
						}
						lv_expressions_3_0=ruleExpressionComponentOnlyWithAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
							}
							add(
								$current,
								"expressions",
								lv_expressions_3_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentOnlyWithAttribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							(
								lv_operators_4_1=PlusSign
								{
									newLeafNode(lv_operators_4_1, grammarAccess.getSelectExpressionAccess().getOperatorsPlusSignKeyword_0_1_1_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_4_1, null);
								}
								    |
								lv_operators_4_2=HyphenMinus
								{
									newLeafNode(lv_operators_4_2, grammarAccess.getSelectExpressionAccess().getOperatorsHyphenMinusKeyword_0_1_1_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_4_2, null);
								}
								    |
								lv_operators_4_3=Asterisk
								{
									newLeafNode(lv_operators_4_3, grammarAccess.getSelectExpressionAccess().getOperatorsAsteriskKeyword_0_1_1_0_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_4_3, null);
								}
								    |
								lv_operators_4_4=Solidus
								{
									newLeafNode(lv_operators_4_4, grammarAccess.getSelectExpressionAccess().getOperatorsSolidusKeyword_0_1_1_0_0_3());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_4_4, null);
								}
							)
						)
					)
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_0_1_1_1_0_0());
								}
								lv_expressions_5_1=ruleExpressionComponentConstantOrAttribute
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
									}
									add(
										$current,
										"expressions",
										lv_expressions_5_1,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentConstantOrAttribute");
									afterParserOrEnumRuleCall();
								}
								    |
								{
									newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionsExpressionComponentOnlyWithFunctionParserRuleCall_0_1_1_1_0_1());
								}
								lv_expressions_5_2=ruleExpressionComponentOnlyWithFunction
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
									}
									add(
										$current,
										"expressions",
										lv_expressions_5_2,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentOnlyWithFunction");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)+
			)
		)
		(
			otherlv_6=AS
			{
				newLeafNode(otherlv_6, grammarAccess.getSelectExpressionAccess().getASKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionAccess().getAliasAliasParserRuleCall_1_1_0());
					}
					lv_alias_7_0=ruleAlias
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
						}
						set(
							$current,
							"alias",
							lv_alias_7_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Alias");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSelectExpressionWithoutAliasDefinition
entryRuleSelectExpressionWithoutAliasDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule()); }
	iv_ruleSelectExpressionWithoutAliasDefinition=ruleSelectExpressionWithoutAliasDefinition
	{ $current=$iv_ruleSelectExpressionWithoutAliasDefinition.current; }
	EOF;

// Rule SelectExpressionWithoutAliasDefinition
ruleSelectExpressionWithoutAliasDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getSelectExpressionWithOnlyAttributeOrConstantParserRuleCall_0());
		}
		this_SelectExpressionWithOnlyAttributeOrConstant_0=ruleSelectExpressionWithOnlyAttributeOrConstant
		{
			$current = $this_SelectExpressionWithOnlyAttributeOrConstant_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentFunctionOrConstantParserRuleCall_1_0_0_0());
						}
						lv_expressions_1_0=ruleExpressionComponentFunctionOrConstant
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
							}
							add(
								$current,
								"expressions",
								lv_expressions_1_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentFunctionOrConstant");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							(
								lv_operators_2_1=PlusSign
								{
									newLeafNode(lv_operators_2_1, grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsPlusSignKeyword_1_0_1_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_2_1, null);
								}
								    |
								lv_operators_2_2=HyphenMinus
								{
									newLeafNode(lv_operators_2_2, grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsHyphenMinusKeyword_1_0_1_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_2_2, null);
								}
								    |
								lv_operators_2_3=Asterisk
								{
									newLeafNode(lv_operators_2_3, grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAsteriskKeyword_1_0_1_0_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_2_3, null);
								}
								    |
								lv_operators_2_4=Solidus
								{
									newLeafNode(lv_operators_2_4, grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsSolidusKeyword_1_0_1_0_0_3());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_2_4, null);
								}
							)
						)
					)
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_1_0_1_1_0_0());
								}
								lv_expressions_3_1=ruleExpressionComponentConstantOrAttribute
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
									}
									add(
										$current,
										"expressions",
										lv_expressions_3_1,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentConstantOrAttribute");
									afterParserOrEnumRuleCall();
								}
								    |
								{
									newCompositeNode(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentOnlyWithFunctionParserRuleCall_1_0_1_1_0_1());
								}
								lv_expressions_3_2=ruleExpressionComponentOnlyWithFunction
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
									}
									add(
										$current,
										"expressions",
										lv_expressions_3_2,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentOnlyWithFunction");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)*
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentOnlyWithAttributeParserRuleCall_1_1_0_0());
						}
						lv_expressions_4_0=ruleExpressionComponentOnlyWithAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
							}
							add(
								$current,
								"expressions",
								lv_expressions_4_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentOnlyWithAttribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							(
								lv_operators_5_1=PlusSign
								{
									newLeafNode(lv_operators_5_1, grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsPlusSignKeyword_1_1_1_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_5_1, null);
								}
								    |
								lv_operators_5_2=HyphenMinus
								{
									newLeafNode(lv_operators_5_2, grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsHyphenMinusKeyword_1_1_1_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_5_2, null);
								}
								    |
								lv_operators_5_3=Asterisk
								{
									newLeafNode(lv_operators_5_3, grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsAsteriskKeyword_1_1_1_0_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_5_3, null);
								}
								    |
								lv_operators_5_4=Solidus
								{
									newLeafNode(lv_operators_5_4, grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getOperatorsSolidusKeyword_1_1_1_0_0_3());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_5_4, null);
								}
							)
						)
					)
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_1_1_1_1_0_0());
								}
								lv_expressions_6_1=ruleExpressionComponentConstantOrAttribute
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
									}
									add(
										$current,
										"expressions",
										lv_expressions_6_1,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentConstantOrAttribute");
									afterParserOrEnumRuleCall();
								}
								    |
								{
									newCompositeNode(grammarAccess.getSelectExpressionWithoutAliasDefinitionAccess().getExpressionsExpressionComponentOnlyWithFunctionParserRuleCall_1_1_1_1_0_1());
								}
								lv_expressions_6_2=ruleExpressionComponentOnlyWithFunction
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionWithoutAliasDefinitionRule());
									}
									add(
										$current,
										"expressions",
										lv_expressions_6_2,
										"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentOnlyWithFunction");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)+
			)
		)
	)
;

// Entry rule entryRuleSelectExpressionWithOnlyAttributeOrConstant
entryRuleSelectExpressionWithOnlyAttributeOrConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantRule()); }
	iv_ruleSelectExpressionWithOnlyAttributeOrConstant=ruleSelectExpressionWithOnlyAttributeOrConstant
	{ $current=$iv_ruleSelectExpressionWithOnlyAttributeOrConstant.current; }
	EOF;

// Rule SelectExpressionWithOnlyAttributeOrConstant
ruleSelectExpressionWithOnlyAttributeOrConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_0_0());
				}
				lv_expressions_0_0=ruleExpressionComponentConstantOrAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantRule());
					}
					add(
						$current,
						"expressions",
						lv_expressions_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentConstantOrAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						lv_operators_1_1=PlusSign
						{
							newLeafNode(lv_operators_1_1, grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsPlusSignKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_1, null);
						}
						    |
						lv_operators_1_2=HyphenMinus
						{
							newLeafNode(lv_operators_1_2, grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsHyphenMinusKeyword_1_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_2, null);
						}
						    |
						lv_operators_1_3=Asterisk
						{
							newLeafNode(lv_operators_1_3, grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsAsteriskKeyword_1_0_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_3, null);
						}
						    |
						lv_operators_1_4=Solidus
						{
							newLeafNode(lv_operators_1_4, grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getOperatorsSolidusKeyword_1_0_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantAccess().getExpressionsExpressionComponentConstantOrAttributeParserRuleCall_1_1_0());
					}
					lv_expressions_2_0=ruleExpressionComponentConstantOrAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectExpressionWithOnlyAttributeOrConstantRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ExpressionComponentConstantOrAttribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionAccess().getFunctionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getValueSelectExpressionWithoutAliasDefinitionParserRuleCall_3_0());
				}
				lv_value_3_0=ruleSelectExpressionWithoutAliasDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.SelectExpressionWithoutAliasDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=RightParenthesis
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleExpressionComponentConstantOrAttribute
entryRuleExpressionComponentConstantOrAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionComponentConstantOrAttributeRule()); }
	iv_ruleExpressionComponentConstantOrAttribute=ruleExpressionComponentConstantOrAttribute
	{ $current=$iv_ruleExpressionComponentConstantOrAttribute.current; }
	EOF;

// Rule ExpressionComponentConstantOrAttribute
ruleExpressionComponentConstantOrAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionComponentConstantOrAttributeAccess().getValueAtomicWithoutAttributeRefParserRuleCall_0_0());
				}
				lv_value_0_0=ruleAtomicWithoutAttributeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionComponentConstantOrAttributeRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AtomicWithoutAttributeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionComponentConstantOrAttributeAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_1_0());
				}
				lv_value_1_0=ruleAttributeWithoutAliasDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionComponentConstantOrAttributeRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpressionComponentFunctionOrConstant
entryRuleExpressionComponentFunctionOrConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionComponentFunctionOrConstantRule()); }
	iv_ruleExpressionComponentFunctionOrConstant=ruleExpressionComponentFunctionOrConstant
	{ $current=$iv_ruleExpressionComponentFunctionOrConstant.current; }
	EOF;

// Rule ExpressionComponentFunctionOrConstant
ruleExpressionComponentFunctionOrConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getFunctionParserRuleCall_0_0());
			}
			this_Function_0=ruleFunction
			{
				$current = $this_Function_0.current;
				afterParserOrEnumRuleCall();
			}
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpressionComponentFunctionOrConstantAccess().getExpressionComponentValueAction_0_1(),
						$current);
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionComponentFunctionOrConstantAccess().getValueAtomicWithoutAttributeRefParserRuleCall_1_0());
				}
				lv_value_2_0=ruleAtomicWithoutAttributeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionComponentFunctionOrConstantRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AtomicWithoutAttributeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpressionComponentOnlyWithAttribute
entryRuleExpressionComponentOnlyWithAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionComponentOnlyWithAttributeRule()); }
	iv_ruleExpressionComponentOnlyWithAttribute=ruleExpressionComponentOnlyWithAttribute
	{ $current=$iv_ruleExpressionComponentOnlyWithAttribute.current; }
	EOF;

// Rule ExpressionComponentOnlyWithAttribute
ruleExpressionComponentOnlyWithAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getExpressionComponentOnlyWithAttributeAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_0());
			}
			lv_value_0_0=ruleAttributeWithoutAliasDefinition
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getExpressionComponentOnlyWithAttributeRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleExpressionComponentOnlyWithFunction
entryRuleExpressionComponentOnlyWithFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionComponentOnlyWithFunctionRule()); }
	iv_ruleExpressionComponentOnlyWithFunction=ruleExpressionComponentOnlyWithFunction
	{ $current=$iv_ruleExpressionComponentOnlyWithFunction.current; }
	EOF;

// Rule ExpressionComponentOnlyWithFunction
ruleExpressionComponentOnlyWithFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionComponentOnlyWithFunctionAccess().getFunctionParserRuleCall_0());
		}
		this_Function_0=ruleFunction
		{
			$current = $this_Function_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			{
				$current = forceCreateModelElementAndSet(
					grammarAccess.getExpressionComponentOnlyWithFunctionAccess().getExpressionComponentValueAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleAlias
entryRuleAlias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasRule()); }
	iv_ruleAlias=ruleAlias
	{ $current=$iv_ruleAlias.current; }
	EOF;

// Rule Alias
ruleAlias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getAliasAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAliasRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
			}
		)
	)
;

// Entry rule entryRuleCreateParameters
entryRuleCreateParameters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateParametersRule()); }
	iv_ruleCreateParameters=ruleCreateParameters
	{ $current=$iv_ruleCreateParameters.current; }
	EOF;

// Rule CreateParameters
ruleCreateParameters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=WRAPPER
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateParametersAccess().getWRAPPERKeyword_0());
		}
		(
			(
				lv_wrapper_1_0=RULE_STRING
				{
					newLeafNode(lv_wrapper_1_0, grammarAccess.getCreateParametersAccess().getWrapperSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateParametersRule());
					}
					setWithLastConsumed(
						$current,
						"wrapper",
						lv_wrapper_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=PROTOCOL
		{
			newLeafNode(otherlv_2, grammarAccess.getCreateParametersAccess().getPROTOCOLKeyword_2());
		}
		(
			(
				lv_protocol_3_0=RULE_STRING
				{
					newLeafNode(lv_protocol_3_0, grammarAccess.getCreateParametersAccess().getProtocolSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateParametersRule());
					}
					setWithLastConsumed(
						$current,
						"protocol",
						lv_protocol_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=TRANSPORT
		{
			newLeafNode(otherlv_4, grammarAccess.getCreateParametersAccess().getTRANSPORTKeyword_4());
		}
		(
			(
				lv_transport_5_0=RULE_STRING
				{
					newLeafNode(lv_transport_5_0, grammarAccess.getCreateParametersAccess().getTransportSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateParametersRule());
					}
					setWithLastConsumed(
						$current,
						"transport",
						lv_transport_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6=DATAHANDLER
		{
			newLeafNode(otherlv_6, grammarAccess.getCreateParametersAccess().getDATAHANDLERKeyword_6());
		}
		(
			(
				lv_datahandler_7_0=RULE_STRING
				{
					newLeafNode(lv_datahandler_7_0, grammarAccess.getCreateParametersAccess().getDatahandlerSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateParametersRule());
					}
					setWithLastConsumed(
						$current,
						"datahandler",
						lv_datahandler_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8=OPTIONS
		{
			newLeafNode(otherlv_8, grammarAccess.getCreateParametersAccess().getOPTIONSKeyword_8());
		}
		otherlv_9=LeftParenthesis
		{
			newLeafNode(otherlv_9, grammarAccess.getCreateParametersAccess().getLeftParenthesisKeyword_9());
		}
		(
			(
				(
					lv_keys_10_0=RULE_STRING
					{
						newLeafNode(lv_keys_10_0, grammarAccess.getCreateParametersAccess().getKeysSTRINGTerminalRuleCall_10_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateParametersRule());
						}
						addWithLastConsumed(
							$current,
							"keys",
							lv_keys_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				(
					lv_values_11_0=RULE_STRING
					{
						newLeafNode(lv_values_11_0, grammarAccess.getCreateParametersAccess().getValuesSTRINGTerminalRuleCall_10_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateParametersRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_11_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)+
		(
			otherlv_12=Comma
			{
				newLeafNode(otherlv_12, grammarAccess.getCreateParametersAccess().getCommaKeyword_11_0());
			}
			(
				(
					lv_keys_13_0=RULE_STRING
					{
						newLeafNode(lv_keys_13_0, grammarAccess.getCreateParametersAccess().getKeysSTRINGTerminalRuleCall_11_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateParametersRule());
						}
						addWithLastConsumed(
							$current,
							"keys",
							lv_keys_13_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				(
					lv_values_14_0=RULE_STRING
					{
						newLeafNode(lv_values_14_0, grammarAccess.getCreateParametersAccess().getValuesSTRINGTerminalRuleCall_11_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCreateParametersRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_14_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_15=RightParenthesis
		{
			newLeafNode(otherlv_15, grammarAccess.getCreateParametersAccess().getRightParenthesisKeyword_12());
		}
	)
;

// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeDefinitionRule()); }
	iv_ruleAttributeDefinition=ruleAttributeDefinition
	{ $current=$iv_ruleAttributeDefinition.current; }
	EOF;

// Rule AttributeDefinition
ruleAttributeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAttributeDefinitionAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeDefinitionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getAttributesAttributeParserRuleCall_2_0());
				}
				lv_attributes_2_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getDatatypesDataTypeParserRuleCall_3_0());
				}
				lv_datatypes_3_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
					}
					add(
						$current,
						"datatypes",
						lv_datatypes_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			otherlv_4=Comma
			{
				newLeafNode(otherlv_4, grammarAccess.getAttributeDefinitionAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getAttributesAttributeParserRuleCall_4_1_0());
					}
					lv_attributes_5_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_5_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getDatatypesDataTypeParserRuleCall_4_2_0());
					}
					lv_datatypes_6_0=ruleDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
						}
						add(
							$current,
							"datatypes",
							lv_datatypes_6_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.DataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7=RightParenthesis
		{
			newLeafNode(otherlv_7, grammarAccess.getAttributeDefinitionAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleCreateStream1
entryRuleCreateStream1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateStream1Rule()); }
	iv_ruleCreateStream1=ruleCreateStream1
	{ $current=$iv_ruleCreateStream1.current; }
	EOF;

// Rule CreateStream1
ruleCreateStream1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStream1Access().getKeywordCreateKeywordEnumRuleCall_0_0());
				}
				lv_keyword_0_0=ruleCreateKeyword
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStream1Rule());
					}
					set(
						$current,
						"keyword",
						lv_keyword_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateKeyword");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=STREAM
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateStream1Access().getSTREAMKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStream1Access().getAttributesAttributeDefinitionParserRuleCall_2_0());
				}
				lv_attributes_2_0=ruleAttributeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStream1Rule());
					}
					set(
						$current,
						"attributes",
						lv_attributes_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStream1Access().getParsCreateParametersParserRuleCall_3_0());
				}
				lv_pars_3_0=ruleCreateParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStream1Rule());
					}
					set(
						$current,
						"pars",
						lv_pars_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateParameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCreateSink1
entryRuleCreateSink1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateSink1Rule()); }
	iv_ruleCreateSink1=ruleCreateSink1
	{ $current=$iv_ruleCreateSink1.current; }
	EOF;

// Rule CreateSink1
ruleCreateSink1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateSink1Access().getKeywordCreateKeywordEnumRuleCall_0_0());
				}
				lv_keyword_0_0=ruleCreateKeyword
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateSink1Rule());
					}
					set(
						$current,
						"keyword",
						lv_keyword_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateKeyword");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=SINK
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateSink1Access().getSINKKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateSink1Access().getAttributesAttributeDefinitionParserRuleCall_2_0());
				}
				lv_attributes_2_0=ruleAttributeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateSink1Rule());
					}
					set(
						$current,
						"attributes",
						lv_attributes_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateSink1Access().getParsCreateParametersParserRuleCall_3_0());
				}
				lv_pars_3_0=ruleCreateParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateSink1Rule());
					}
					set(
						$current,
						"pars",
						lv_pars_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateParameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCreateStreamChannel
entryRuleCreateStreamChannel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateStreamChannelRule()); }
	iv_ruleCreateStreamChannel=ruleCreateStreamChannel
	{ $current=$iv_ruleCreateStreamChannel.current; }
	EOF;

// Rule CreateStreamChannel
ruleCreateStreamChannel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStreamChannelAccess().getKeywordCreateKeywordEnumRuleCall_0_0());
				}
				lv_keyword_0_0=ruleCreateKeyword
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStreamChannelRule());
					}
					set(
						$current,
						"keyword",
						lv_keyword_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateKeyword");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=STREAM
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateStreamChannelAccess().getSTREAMKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStreamChannelAccess().getAttributesAttributeDefinitionParserRuleCall_2_0());
				}
				lv_attributes_2_0=ruleAttributeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStreamChannelRule());
					}
					set(
						$current,
						"attributes",
						lv_attributes_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=CHANNEL
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateStreamChannelAccess().getCHANNELKeyword_3());
		}
		(
			(
				lv_host_4_0=RULE_ID
				{
					newLeafNode(lv_host_4_0, grammarAccess.getCreateStreamChannelAccess().getHostIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateStreamChannelRule());
					}
					setWithLastConsumed(
						$current,
						"host",
						lv_host_4_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_5=Colon
		{
			newLeafNode(otherlv_5, grammarAccess.getCreateStreamChannelAccess().getColonKeyword_5());
		}
		(
			(
				lv_port_6_0=RULE_INT
				{
					newLeafNode(lv_port_6_0, grammarAccess.getCreateStreamChannelAccess().getPortINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateStreamChannelRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleCreateStreamFile
entryRuleCreateStreamFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateStreamFileRule()); }
	iv_ruleCreateStreamFile=ruleCreateStreamFile
	{ $current=$iv_ruleCreateStreamFile.current; }
	EOF;

// Rule CreateStreamFile
ruleCreateStreamFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStreamFileAccess().getKeywordCreateKeywordEnumRuleCall_0_0());
				}
				lv_keyword_0_0=ruleCreateKeyword
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStreamFileRule());
					}
					set(
						$current,
						"keyword",
						lv_keyword_0_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.CreateKeyword");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=STREAM
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateStreamFileAccess().getSTREAMKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateStreamFileAccess().getAttributesAttributeDefinitionParserRuleCall_2_0());
				}
				lv_attributes_2_0=ruleAttributeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateStreamFileRule());
					}
					set(
						$current,
						"attributes",
						lv_attributes_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=FILE
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateStreamFileAccess().getFILEKeyword_3());
		}
		(
			(
				lv_filename_4_0=RULE_STRING
				{
					newLeafNode(lv_filename_4_0, grammarAccess.getCreateStreamFileAccess().getFilenameSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateStreamFileRule());
					}
					setWithLastConsumed(
						$current,
						"filename",
						lv_filename_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=AS
		{
			newLeafNode(otherlv_5, grammarAccess.getCreateStreamFileAccess().getASKeyword_5());
		}
		(
			(
				lv_type_6_0=RULE_ID
				{
					newLeafNode(lv_type_6_0, grammarAccess.getCreateStreamFileAccess().getTypeIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateStreamFileRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_6_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCreateView
entryRuleCreateView returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateViewRule()); }
	iv_ruleCreateView=ruleCreateView
	{ $current=$iv_ruleCreateView.current; }
	EOF;

// Rule CreateView
ruleCreateView returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=VIEW
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateViewAccess().getVIEWKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCreateViewAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateViewRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		otherlv_2=FROM
		{
			newLeafNode(otherlv_2, grammarAccess.getCreateViewAccess().getFROMKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateViewAccess().getSelectNestedStatementParserRuleCall_3_0());
				}
				lv_select_3_0=ruleNestedStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateViewRule());
					}
					set(
						$current,
						"select",
						lv_select_3_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.NestedStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStreamTo
entryRuleStreamTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStreamToRule()); }
	iv_ruleStreamTo=ruleStreamTo
	{ $current=$iv_ruleStreamTo.current; }
	EOF;

// Rule StreamTo
ruleStreamTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=STREAM
		{
			newLeafNode(otherlv_0, grammarAccess.getStreamToAccess().getSTREAMKeyword_0());
		}
		otherlv_1=TO
		{
			newLeafNode(otherlv_1, grammarAccess.getStreamToAccess().getTOKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getStreamToAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStreamToRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStreamToAccess().getStatementSelectParserRuleCall_3_0_0());
					}
					lv_statement_3_0=ruleSelect
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStreamToRule());
						}
						set(
							$current,
							"statement",
							lv_statement_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Select");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_inputname_4_0=RULE_ID
					{
						newLeafNode(lv_inputname_4_0, grammarAccess.getStreamToAccess().getInputnameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStreamToRule());
						}
						setWithLastConsumed(
							$current,
							"inputname",
							lv_inputname_4_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDrop
entryRuleDrop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDropRule()); }
	iv_ruleDrop=ruleDrop
	{ $current=$iv_ruleDrop.current; }
	EOF;

// Rule Drop
ruleDrop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_keyword1_0_0=DROP
				{
					newLeafNode(lv_keyword1_0_0, grammarAccess.getDropAccess().getKeyword1DROPKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDropRule());
					}
					setWithLastConsumed($current, "keyword1", lv_keyword1_0_0, "DROP");
				}
			)
		)
		(
			(
				(
					lv_keyword2_1_1=SINK
					{
						newLeafNode(lv_keyword2_1_1, grammarAccess.getDropAccess().getKeyword2SINKKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDropRule());
						}
						setWithLastConsumed($current, "keyword2", lv_keyword2_1_1, null);
					}
					    |
					lv_keyword2_1_2=STREAM
					{
						newLeafNode(lv_keyword2_1_2, grammarAccess.getDropAccess().getKeyword2STREAMKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDropRule());
						}
						setWithLastConsumed($current, "keyword2", lv_keyword2_1_2, null);
					}
				)
			)
		)
		(
			(
				lv_value1_2_0=RULE_ID
				{
					newLeafNode(lv_value1_2_0, grammarAccess.getDropAccess().getValue1IDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDropRule());
					}
					setWithLastConsumed(
						$current,
						"value1",
						lv_value1_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			(
				(
					lv_keyword3_3_0=IF
					{
						newLeafNode(lv_keyword3_3_0, grammarAccess.getDropAccess().getKeyword3IFKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDropRule());
						}
						setWithLastConsumed($current, "keyword3", lv_keyword3_3_0, "IF");
					}
				)
			)
			otherlv_4=EXISTS
			{
				newLeafNode(otherlv_4, grammarAccess.getDropAccess().getEXISTSKeyword_3_1());
			}
		)?
	)
;

// Entry rule entryRuleWindow_Unbounded
entryRuleWindow_Unbounded returns [String current=null]:
	{ newCompositeNode(grammarAccess.getWindow_UnboundedRule()); }
	iv_ruleWindow_Unbounded=ruleWindow_Unbounded
	{ $current=$iv_ruleWindow_Unbounded.current.getText(); }
	EOF;

// Rule Window_Unbounded
ruleWindow_Unbounded returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=UNBOUNDED
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getWindow_UnboundedAccess().getUNBOUNDEDKeyword());
	}
;

// Entry rule entryRuleWindow_Timebased
entryRuleWindow_Timebased returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWindow_TimebasedRule()); }
	iv_ruleWindow_Timebased=ruleWindow_Timebased
	{ $current=$iv_ruleWindow_Timebased.current; }
	EOF;

// Rule Window_Timebased
ruleWindow_Timebased returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=SIZE
		{
			newLeafNode(otherlv_0, grammarAccess.getWindow_TimebasedAccess().getSIZEKeyword_0());
		}
		(
			(
				lv_size_1_0=RULE_INT
				{
					newLeafNode(lv_size_1_0, grammarAccess.getWindow_TimebasedAccess().getSizeINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWindow_TimebasedRule());
					}
					setWithLastConsumed(
						$current,
						"size",
						lv_size_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				lv_unit_2_0=RULE_ID
				{
					newLeafNode(lv_unit_2_0, grammarAccess.getWindow_TimebasedAccess().getUnitIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWindow_TimebasedRule());
					}
					setWithLastConsumed(
						$current,
						"unit",
						lv_unit_2_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
				}
			)
		)
		(
			otherlv_3=ADVANCE
			{
				newLeafNode(otherlv_3, grammarAccess.getWindow_TimebasedAccess().getADVANCEKeyword_3_0());
			}
			(
				(
					lv_advance_size_4_0=RULE_INT
					{
						newLeafNode(lv_advance_size_4_0, grammarAccess.getWindow_TimebasedAccess().getAdvance_sizeINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWindow_TimebasedRule());
						}
						setWithLastConsumed(
							$current,
							"advance_size",
							lv_advance_size_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					lv_advance_unit_5_0=RULE_ID
					{
						newLeafNode(lv_advance_unit_5_0, grammarAccess.getWindow_TimebasedAccess().getAdvance_unitIDTerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWindow_TimebasedRule());
						}
						setWithLastConsumed(
							$current,
							"advance_unit",
							lv_advance_unit_5_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.ID");
					}
				)
			)
		)?
		otherlv_6=TIME
		{
			newLeafNode(otherlv_6, grammarAccess.getWindow_TimebasedAccess().getTIMEKeyword_4());
		}
	)
;

// Entry rule entryRuleWindow_Tuplebased
entryRuleWindow_Tuplebased returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWindow_TuplebasedRule()); }
	iv_ruleWindow_Tuplebased=ruleWindow_Tuplebased
	{ $current=$iv_ruleWindow_Tuplebased.current; }
	EOF;

// Rule Window_Tuplebased
ruleWindow_Tuplebased returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=SIZE
		{
			newLeafNode(otherlv_0, grammarAccess.getWindow_TuplebasedAccess().getSIZEKeyword_0());
		}
		(
			(
				lv_size_1_0=RULE_INT
				{
					newLeafNode(lv_size_1_0, grammarAccess.getWindow_TuplebasedAccess().getSizeINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWindow_TuplebasedRule());
					}
					setWithLastConsumed(
						$current,
						"size",
						lv_size_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_2=ADVANCE
			{
				newLeafNode(otherlv_2, grammarAccess.getWindow_TuplebasedAccess().getADVANCEKeyword_2_0());
			}
			(
				(
					lv_advance_size_3_0=RULE_INT
					{
						newLeafNode(lv_advance_size_3_0, grammarAccess.getWindow_TuplebasedAccess().getAdvance_sizeINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWindow_TuplebasedRule());
						}
						setWithLastConsumed(
							$current,
							"advance_size",
							lv_advance_size_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_4=TUPLE
		{
			newLeafNode(otherlv_4, grammarAccess.getWindow_TuplebasedAccess().getTUPLEKeyword_3());
		}
		(
			otherlv_5=PARTITION
			{
				newLeafNode(otherlv_5, grammarAccess.getWindow_TuplebasedAccess().getPARTITIONKeyword_4_0());
			}
			otherlv_6=BY
			{
				newLeafNode(otherlv_6, grammarAccess.getWindow_TuplebasedAccess().getBYKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWindow_TuplebasedAccess().getPartition_attributeAttributeParserRuleCall_4_2_0());
					}
					lv_partition_attribute_7_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWindow_TuplebasedRule());
						}
						set(
							$current,
							"partition_attribute",
							lv_partition_attribute_7_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpressionsModel
entryRuleExpressionsModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionsModelRule()); }
	iv_ruleExpressionsModel=ruleExpressionsModel
	{ $current=$iv_ruleExpressionsModel.current; }
	EOF;

// Rule ExpressionsModel
ruleExpressionsModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpressionsModelAccess().getExpressionsModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionsModelAccess().getElementsExpressionParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionsModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getOrParserRuleCall());
	}
	this_Or_0=ruleOr
	{
		$current = $this_Or_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0());
		}
		this_And_0=ruleAnd
		{
			$current = $this_And_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrAccess().getOrLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2=OR
			{
				newLeafNode(otherlv_2, grammarAccess.getOrAccess().getORKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndAccess().getEqualitiyParserRuleCall_0());
		}
		this_Equalitiy_0=ruleEqualitiy
		{
			$current = $this_Equalitiy_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndAccess().getAndLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2=AND
			{
				newLeafNode(otherlv_2, grammarAccess.getAndAccess().getANDKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getRightEqualitiyParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEqualitiy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Equalitiy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualitiy
entryRuleEqualitiy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualitiyRule()); }
	iv_ruleEqualitiy=ruleEqualitiy
	{ $current=$iv_ruleEqualitiy.current; }
	EOF;

// Rule Equalitiy
ruleEqualitiy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualitiyAccess().getComparisonParserRuleCall_0());
		}
		this_Comparison_0=ruleComparison
		{
			$current = $this_Comparison_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualitiyAccess().getEqualityLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=EqualsSign
						{
							newLeafNode(lv_op_2_1, grammarAccess.getEqualitiyAccess().getOpEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualitiyRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=ExclamationMarkEqualsSign
						{
							newLeafNode(lv_op_2_2, grammarAccess.getEqualitiyAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualitiyRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualitiyAccess().getRightComparisonParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleComparison
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualitiyRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Comparison");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current; }
	EOF;

// Rule Comparison
ruleComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0());
		}
		this_PlusOrMinus_0=rulePlusOrMinus
		{
			$current = $this_PlusOrMinus_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getComparisonAccess().getComparisionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=GreaterThanSignEqualsSign
						{
							newLeafNode(lv_op_2_1, grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=LessThanSignEqualsSign
						{
							newLeafNode(lv_op_2_2, grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3=LessThanSign
						{
							newLeafNode(lv_op_2_3, grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4=GreaterThanSign
						{
							newLeafNode(lv_op_2_4, grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePlusOrMinus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.PlusOrMinus");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusOrMinusRule()); }
	iv_rulePlusOrMinus=rulePlusOrMinus
	{ $current=$iv_rulePlusOrMinus.current; }
	EOF;

// Rule PlusOrMinus
rulePlusOrMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0());
		}
		this_MulOrDiv_0=ruleMulOrDiv
		{
			$current = $this_MulOrDiv_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2=PlusSign
					{
						newLeafNode(otherlv_2, grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4=HyphenMinus
					{
						newLeafNode(otherlv_4, grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleMulOrDiv
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlusOrMinusRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.MulOrDiv");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMulOrDivRule()); }
	iv_ruleMulOrDiv=ruleMulOrDiv
	{ $current=$iv_ruleMulOrDiv.current; }
	EOF;

// Rule MulOrDiv
ruleMulOrDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=Asterisk
						{
							newLeafNode(lv_op_2_1, grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=Solidus
						{
							newLeafNode(lv_op_2_2, grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMulOrDivRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getBracketAction_0_0(),
						$current);
				}
			)
			otherlv_1=LeftParenthesis
			{
				newLeafNode(otherlv_1, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getInnerExpressionParserRuleCall_0_2_0());
					}
					lv_inner_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"inner",
							lv_inner_2_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=RightParenthesis
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getNOTAction_1_0(),
						$current);
				}
			)
			otherlv_5=NOT
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryAccess().getNOTKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0());
					}
					lv_expression_6_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"expression",
							lv_expression_6_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2());
		}
		this_Atomic_7=ruleAtomic
		{
			$current = $this_Atomic_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAtomic
entryRuleAtomic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicRule()); }
	iv_ruleAtomic=ruleAtomic
	{ $current=$iv_ruleAtomic.current; }
	EOF;

// Rule Atomic
ruleAtomic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getFloatConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_FLOAT
					{
						newLeafNode(lv_value_3_0, grammarAccess.getAtomicAccess().getValueFLOATTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.FLOAT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getStringConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_value_5_0=RULE_STRING
					{
						newLeafNode(lv_value_5_0, grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getBoolConstantAction_3_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_7_1=TRUE
						{
							newLeafNode(lv_value_7_1, grammarAccess.getAtomicAccess().getValueTRUEKeyword_3_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_7_1, null);
						}
						    |
						lv_value_7_2=FALSE
						{
							newLeafNode(lv_value_7_2, grammarAccess.getAtomicAccess().getValueFALSEKeyword_3_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_7_2, null);
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getAttributeRefAction_4_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomicAccess().getValueAttributeWithoutAliasDefinitionParserRuleCall_4_1_0_0());
						}
						lv_value_9_0=ruleAttributeWithoutAliasDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomicRule());
							}
							set(
								$current,
								"value",
								lv_value_9_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithoutAliasDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomicAccess().getValueAttributeWithNestedStatementParserRuleCall_4_1_1_0());
						}
						lv_value_10_0=ruleAttributeWithNestedStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomicRule());
							}
							set(
								$current,
								"value",
								lv_value_10_0,
								"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.AttributeWithNestedStatement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleAtomicWithoutAttributeRef
entryRuleAtomicWithoutAttributeRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicWithoutAttributeRefRule()); }
	iv_ruleAtomicWithoutAttributeRef=ruleAtomicWithoutAttributeRef
	{ $current=$iv_ruleAtomicWithoutAttributeRef.current; }
	EOF;

// Rule AtomicWithoutAttributeRef
ruleAtomicWithoutAttributeRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicWithoutAttributeRefAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomicWithoutAttributeRefAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicWithoutAttributeRefRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicWithoutAttributeRefAccess().getFloatConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_FLOAT
					{
						newLeafNode(lv_value_3_0, grammarAccess.getAtomicWithoutAttributeRefAccess().getValueFLOATTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicWithoutAttributeRefRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"de.uniol.inf.is.odysseus.parser.novel.cql.CQL.FLOAT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicWithoutAttributeRefAccess().getStringConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_value_5_0=RULE_STRING
					{
						newLeafNode(lv_value_5_0, grammarAccess.getAtomicWithoutAttributeRefAccess().getValueSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicWithoutAttributeRefRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicWithoutAttributeRefAccess().getBoolConstantAction_3_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_7_1=TRUE
						{
							newLeafNode(lv_value_7_1, grammarAccess.getAtomicWithoutAttributeRefAccess().getValueTRUEKeyword_3_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicWithoutAttributeRefRule());
							}
							setWithLastConsumed($current, "value", lv_value_7_1, null);
						}
						    |
						lv_value_7_2=FALSE
						{
							newLeafNode(lv_value_7_2, grammarAccess.getAtomicWithoutAttributeRefAccess().getValueFALSEKeyword_3_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicWithoutAttributeRefRule());
							}
							setWithLastConsumed($current, "value", lv_value_7_2, null);
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1=INTEGER
				{
					newLeafNode(lv_value_0_1, grammarAccess.getDataTypeAccess().getValueINTEGERKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2=DOUBLE
				{
					newLeafNode(lv_value_0_2, grammarAccess.getDataTypeAccess().getValueDOUBLEKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
				    |
				lv_value_0_3=LONG
				{
					newLeafNode(lv_value_0_3, grammarAccess.getDataTypeAccess().getValueLONGKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_3, null);
				}
				    |
				lv_value_0_4=FLOAT
				{
					newLeafNode(lv_value_0_4, grammarAccess.getDataTypeAccess().getValueFLOATKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_4, null);
				}
				    |
				lv_value_0_5=STRING
				{
					newLeafNode(lv_value_0_5, grammarAccess.getDataTypeAccess().getValueSTRINGKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_5, null);
				}
				    |
				lv_value_0_6=BOOLEAN
				{
					newLeafNode(lv_value_0_6, grammarAccess.getDataTypeAccess().getValueBOOLEANKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_6, null);
				}
				    |
				lv_value_0_7=STARTTIMESTAMP
				{
					newLeafNode(lv_value_0_7, grammarAccess.getDataTypeAccess().getValueSTARTTIMESTAMPKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_7, null);
				}
				    |
				lv_value_0_8=ENDTIMESTAMP
				{
					newLeafNode(lv_value_0_8, grammarAccess.getDataTypeAccess().getValueENDTIMESTAMPKeyword_0_7());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_8, null);
				}
			)
		)
	)
;

// Rule CreateKeyword
ruleCreateKeyword returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=CREATE
			{
				$current = grammarAccess.getCreateKeywordAccess().getCREATEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCreateKeywordAccess().getCREATEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=ATTACH
			{
				$current = grammarAccess.getCreateKeywordAccess().getATTACHEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCreateKeywordAccess().getATTACHEnumLiteralDeclaration_1());
			}
		)
	)
;
