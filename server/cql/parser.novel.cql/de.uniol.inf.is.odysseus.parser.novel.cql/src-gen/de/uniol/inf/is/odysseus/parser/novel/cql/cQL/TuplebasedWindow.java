/**
 * generated by Xtext 2.10.0
 */
package de.uniol.inf.is.odysseus.parser.novel.cql.cQL;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Tuplebased Window</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.TuplebasedWindow#getSize <em>Size</em>}</li>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.TuplebasedWindow#getAdvance_size <em>Advance size</em>}</li>
 *   <li>{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.TuplebasedWindow#getPartition_attribute <em>Partition attribute</em>}</li>
 * </ul>
 *
 * @see de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CQLPackage#getTuplebasedWindow()
 * @model
 * @generated
 */
public interface TuplebasedWindow extends WindowOperator
{
  /**
   * Returns the value of the '<em><b>Size</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Size</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Size</em>' attribute.
   * @see #setSize(int)
   * @see de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CQLPackage#getTuplebasedWindow_Size()
   * @model
   * @generated
   */
  int getSize();

  /**
   * Sets the value of the '{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.TuplebasedWindow#getSize <em>Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Size</em>' attribute.
   * @see #getSize()
   * @generated
   */
  void setSize(int value);

  /**
   * Returns the value of the '<em><b>Advance size</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Advance size</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Advance size</em>' attribute.
   * @see #setAdvance_size(int)
   * @see de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CQLPackage#getTuplebasedWindow_Advance_size()
   * @model
   * @generated
   */
  int getAdvance_size();

  /**
   * Sets the value of the '{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.TuplebasedWindow#getAdvance_size <em>Advance size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Advance size</em>' attribute.
   * @see #getAdvance_size()
   * @generated
   */
  void setAdvance_size(int value);

  /**
   * Returns the value of the '<em><b>Partition attribute</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Partition attribute</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Partition attribute</em>' containment reference.
   * @see #setPartition_attribute(Attribute)
   * @see de.uniol.inf.is.odysseus.parser.novel.cql.cQL.CQLPackage#getTuplebasedWindow_Partition_attribute()
   * @model containment="true"
   * @generated
   */
  Attribute getPartition_attribute();

  /**
   * Sets the value of the '{@link de.uniol.inf.is.odysseus.parser.novel.cql.cQL.TuplebasedWindow#getPartition_attribute <em>Partition attribute</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Partition attribute</em>' containment reference.
   * @see #getPartition_attribute()
   * @generated
   */
  void setPartition_attribute(Attribute value);

} // TuplebasedWindow
