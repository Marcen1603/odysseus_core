Configuration location:
    file:/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/
Configuration file:
    file:/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/config.ini loaded
Install location:
    file:/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/
Framework located:
    file:/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/plugins/org.eclipse.osgi_3.10.101.v20150820-1432.jar
Framework classpath:
    file:/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/plugins/org.eclipse.osgi_3.10.101.v20150820-1432.jar
Splash location:
    null
Debug options:
    file:/Applications/Eclipse.app/Contents/MacOS/.options not found
Time to load bundles: 11
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [bundleresource://404.fwk231202600:2/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [bundleresource://404.fwk231202600:6/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
0    DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@432a81fc - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
4    DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@432a81fc - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
5    DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@15fa47ce - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
5    DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@15fa47ce - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
!SESSION 2017-04-01 14:26:16.035 -----------------------------------------------
eclipse.buildId=unknown
java.version=1.8.0_112
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en
Framework arguments:  -product de.uniol.inf.is.odysseus.test.odysseustestproduct System manager
Command-line arguments:  -product de.uniol.inf.is.odysseus.test.odysseustestproduct -data /Users/jp/workspace/eclipse_odysseus/../runtime-TestRunnerProduct.product -dev file:/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/dev.properties -os macosx -ws cocoa -arch x86_64 -consoleLog -debug .options System manager -console

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:17.028
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.cql. The reference is: Reference[name = IVisitor, interface = de.uniol.inf.is.odysseus.parser.cql.IVisitor, policy = dynamic, cardinality = 0..n, target = null, bind = addVisitor, unbind = removeVisitor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:17.039
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.report.ReportProviderBinder. The reference is: Reference[name = IReportProvider, interface = de.uniol.inf.is.odysseus.report.IReportProvider, policy = dynamic, cardinality = 0..n, target = null, bind = bindReportProvider, unbind = unbindReportProvider]
36   DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@2599de7d - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
36   DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@2599de7d - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
187  DEBUG CommandProviderBinder  - Binding command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@67f0a6fc - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
188  DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@67f0a6fc - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
osgi> 510  DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.app.AppCommands@23c83034 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
512  DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.app.AppCommands@23c83034 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
631  INFO  Core  - Current size of heap: 	1.0 GB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:61) 
633  INFO  Core  - Maximum size of heap: 	1.9 GB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:64) 
633  INFO  Core  - Free memory of the heap: 	943.3 MB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:67) 
633  INFO  Core  - Running VM with: 	x86_64 - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:70) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:17.934
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.core.server.operatorbuilder. The reference is: Reference[name = IOperatorBuilder, interface = de.uniol.inf.is.odysseus.core.server.logicaloperator.builder.IOperatorBuilder, policy = dynamic, cardinality = 0..n, target = null, bind = addOperatorBuilder, unbind = removeOperatorBuilder]
1106 DEBUG FileUtils  - Read from file /Users/jp/.odysseus/odysseus.conf - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 
1122 INFO  OdysseusConfiguration  - Read config file from /Users/jp/.odysseus/odysseus.conf - de.uniol.inf.is.odysseus.core.server.OdysseusConfiguration.loadProperties(OdysseusConfiguration.java:86) 
1156 DEBUG FileUtils  - Read from file /Users/jp/.odysseus/store/tenants.store - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:19.662
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLStatementGenerator. The reference is: Reference[name = IPQLStatementGenerator, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLStatementGenerator, policy = dynamic, cardinality = 0..n, target = null, bind = bindPQLStatementGenerator, unbind = unbindPQLStatementGenerator]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:19.742
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.relational_interval.ReplacementRegistry. The reference is: Reference[name = IReplacement, interface = de.uniol.inf.is.odysseus.relational_interval.replacement.IReplacement, policy = dynamic, cardinality = 0..n, target = null, bind = addReplacement, unbind = removeReplacement]
2753 DEBUG ruleengine  - Rewrite - Group added to workflow: PREPARE. New workflow is: [PREPARE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2754 DEBUG ruleengine  - Rewrite - Group added to workflow: DELETE. New workflow is: [PREPARE, DELETE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2754 DEBUG ruleengine  - Rewrite - Group added to workflow: SPLIT. New workflow is: [PREPARE, DELETE, SPLIT] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2755 DEBUG ruleengine  - Rewrite - Group added to workflow: PREGROUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2755 DEBUG ruleengine  - Rewrite - Group added to workflow: SWITCH. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2755 DEBUG ruleengine  - Rewrite - Group added to workflow: GROUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH, GROUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2755 DEBUG ruleengine  - Rewrite - Group added to workflow: CLEANUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH, GROUP, CLEANUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:19.800
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.Config. The reference is: Reference[name = IOdysseusScriptConfigSetting, interface = de.uniol.inf.is.odysseus.script.parser.IOdysseusScriptConfigSetting, policy = dynamic, cardinality = 0..n, target = null, bind = bindConfigSetting, unbind = unbindConfigSetting]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:19.817
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.ReplacementProviderManager. The reference is: Reference[name = IReplacementProvider, interface = de.uniol.inf.is.odysseus.script.parser.IReplacementProvider, policy = dynamic, cardinality = 0..n, target = null, bind = bindReplacementProvider, unbind = unbindReplacementProvider]
2816 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@7bdba377 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
2817 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@7bdba377 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:19.834
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.RecoveryConfigKeyword. The reference is: Reference[name = IRecoveryExecutor, interface = de.uniol.inf.is.odysseus.core.server.recovery.IRecoveryExecutor, policy = dynamic, cardinality = 0..n, target = null, bind = bindRecoveryExecutor, unbind = unbindRecoveryExecutor]
3055 DEBUG ruleengine  - Transform - Group added to workflow: SUBSTITUTION. New workflow is: [SUBSTITUTION] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
3055 DEBUG ruleengine  - Transform - Group added to workflow: INIT. New workflow is: [SUBSTITUTION, INIT] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
3056 DEBUG ruleengine  - Transform - Group added to workflow: ACCESS. New workflow is: [SUBSTITUTION, INIT, ACCESS] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
3056 DEBUG ruleengine  - Transform - Group added to workflow: CREATE_METADATA. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
3056 DEBUG ruleengine  - Transform - Group added to workflow: TRANSFORMATION. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
3057 DEBUG ruleengine  - Transform - Group added to workflow: SENDER. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
3057 DEBUG ruleengine  - Transform - Group added to workflow: SECURITY. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
3057 DEBUG ruleengine  - Transform - Group added to workflow: METAOBJECTS. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
3057 DEBUG ruleengine  - Transform - Group added to workflow: VALIDATE. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS, VALIDATE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
3058 DEBUG ruleengine  - Transform - Group added to workflow: CLEANUP. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS, VALIDATE, CLEANUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
3237 DEBUG ruleengine  - Transform - Loading rule - TAggregationAORule: "TAggregationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3240 DEBUG ruleengine  - Transform - Loading rule - TAggregationAORule: "TAggregationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3242 DEBUG UserManagementProvider  - Bound UserManagementService Memorystore - de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.bindUserManagement(UserManagementProvider.java:120) 
3265 DEBUG ruleengine  - Transform - Loading rule - TSaseAOToPatternDetectAORule: "SASEAO --> PATTERNDETECTAO" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3268 DEBUG ruleengine  - Transform - Loading rule - TSaseAOToPatternDetectAORule: "SASEAO --> PATTERNDETECTAO" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3275 DEBUG ruleengine  - Transform - Loading rule - TPatternDetectAORule: "CepAO --> CepOperator (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3276 DEBUG ruleengine  - Transform - Loading rule - TPatternDetectAORule: "CepAO --> CepOperator (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3483 DEBUG ruleengine  - Transform - Loading rule - TLatencyCalculationRule: "LatencyCalculationAO -> LatencyCalculationPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3486 DEBUG ruleengine  - Transform - Loading rule - TLatencyCalculationRule: "LatencyCalculationAO -> LatencyCalculationPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3490 DEBUG ruleengine  - Transform - Loading rule - TLatencyToPayloadAORule: "TLatencyToPayloadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3491 DEBUG ruleengine  - Transform - Loading rule - TLatencyToPayloadAORule: "TLatencyToPayloadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3677 DEBUG ruleengine  - Transform - Loading rule - TPatternMatchingAORule: "PatternMatchingAO -> PatternMatchingPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3680 DEBUG ruleengine  - Transform - Loading rule - TPatternMatchingAORule: "PatternMatchingAO -> PatternMatchingPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3755 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionAORule: "LinearRegressionAO -> LinearRegressionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3758 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionMergeAORule: "LinearRegressionMergeAO -> LinearRegressionMergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3761 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAOInsertLinearRegressionRule: "JoinAO -> Insert linear regression for Equi-Join" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3764 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAORule: "JoinAO -> Continuous probabilistic Equi-Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3771 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetDMRule: "Insert DataMergeFunction (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3774 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3775 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO -> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3777 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3781 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteUnNestAORule: "UnNestAO -> ProbabilisticDiscreteUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3783 DEBUG ruleengine  - Transform - Loading rule - TAssignDistributionAORule: "AssignDistributionAO -> AssignDistributionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3785 DEBUG ruleengine  - Transform - Loading rule - TEMAORule: "EMAO -> EMPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3786 DEBUG ruleengine  - Transform - Loading rule - TKalmanFilterAORule: "KalmanFilterAO -> KalmanFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3788 DEBUG ruleengine  - Transform - Loading rule - TKDEAORule: "KDEAO -> KDEPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3803 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAggregateAORule: "AggregateTIPO use probabilistic aggregations (IProbabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3806 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAORule: "ProbabilisticAO -> MetadataUpdatePO(IProbabilistic)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3885 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticApplicationTimestampRule: "TProbabilisticApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3893 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAORule: "JoinAO -> probabilistic Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3896 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetDMRule: "Insert DataMergeFunction JoinTIPO (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3898 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3901 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticMapAORule: "MapAO -> ProbabilisticMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3902 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3905 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3908 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3909 DEBUG ruleengine  - Transform - Loading rule - TRelationalExistenceToPayloadRule: "ExistenceToPayloadAO --> RelationalExistenceToPayloadPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3911 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionAORule: "LinearRegressionAO -> LinearRegressionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3911 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionMergeAORule: "LinearRegressionMergeAO -> LinearRegressionMergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3911 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAOInsertLinearRegressionRule: "JoinAO -> Insert linear regression for Equi-Join" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3911 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAORule: "JoinAO -> Continuous probabilistic Equi-Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3912 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetDMRule: "Insert DataMergeFunction (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3912 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3912 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO -> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3912 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3913 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteUnNestAORule: "UnNestAO -> ProbabilisticDiscreteUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3913 DEBUG ruleengine  - Transform - Loading rule - TAssignDistributionAORule: "AssignDistributionAO -> AssignDistributionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3913 DEBUG ruleengine  - Transform - Loading rule - TEMAORule: "EMAO -> EMPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3914 DEBUG ruleengine  - Transform - Loading rule - TKalmanFilterAORule: "KalmanFilterAO -> KalmanFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3914 DEBUG ruleengine  - Transform - Loading rule - TKDEAORule: "KDEAO -> KDEPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3914 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAggregateAORule: "AggregateTIPO use probabilistic aggregations (IProbabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3914 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAORule: "ProbabilisticAO -> MetadataUpdatePO(IProbabilistic)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3915 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticApplicationTimestampRule: "TProbabilisticApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3915 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAORule: "JoinAO -> probabilistic Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3915 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetDMRule: "Insert DataMergeFunction JoinTIPO (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3915 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3916 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticMapAORule: "MapAO -> ProbabilisticMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3916 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3916 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3916 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3917 DEBUG ruleengine  - Transform - Loading rule - TRelationalExistenceToPayloadRule: "ExistenceToPayloadAO --> RelationalExistenceToPayloadPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3953 DEBUG ruleengine  - Transform - Loading rule - TAggregateAORule: "TAggregateAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3953 DEBUG ruleengine  - Transform - Loading rule - TAggregatePORule: "Insert RelationalTupleGroupingHelper" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3955 DEBUG ruleengine  - Transform - Loading rule - TAssociativeStorageAORule: "AssociativeStorageAO -> AssociativeStoragePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3955 DEBUG ruleengine  - Transform - Loading rule - TBloomFilterAORule: "BloomFilterAO -> RelationalBloomFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3956 DEBUG ruleengine  - Transform - Loading rule - TConvolutionFilterAORule: "ConvolutionFilterAO -> ConvolutionFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3959 DEBUG ruleengine  - Transform - Loading rule - TEnrichAddDataMergeFunctionRule: "Insert DataMerge Function Enrich (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3960 DEBUG ruleengine  - Transform - Loading rule - TGroupSplitFileWriter: "TGroupSplitFileWriter" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3961 DEBUG ruleengine  - Transform - Loading rule - TInitPredicateRule: "Init Predicates" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3961 DEBUG ruleengine  - Transform - Loading rule - TMapAORule: "MapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3962 DEBUG ruleengine  - Transform - Loading rule - TProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3963 DEBUG ruleengine  - Transform - Loading rule - TRelationalSocketSinkAORule: "SocketSinkAO -> SocketSinkPO (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3965 DEBUG ruleengine  - Transform - Loading rule - TStateMapAORule: "StateMapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3968 DEBUG ruleengine  - Transform - Loading rule - TToTupleAORule: "TToTupleAORule" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3968 DEBUG ruleengine  - Transform - Loading rule - TUnnestAORule: "UnNestAO -> RelationalUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3973 DEBUG ruleengine  - Transform - Loading rule - TAggregateAORule: "TAggregateAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3974 DEBUG ruleengine  - Transform - Loading rule - TAggregatePORule: "Insert RelationalTupleGroupingHelper" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3974 DEBUG ruleengine  - Transform - Loading rule - TAssociativeStorageAORule: "AssociativeStorageAO -> AssociativeStoragePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3974 DEBUG ruleengine  - Transform - Loading rule - TBloomFilterAORule: "BloomFilterAO -> RelationalBloomFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3974 DEBUG ruleengine  - Transform - Loading rule - TConvolutionFilterAORule: "ConvolutionFilterAO -> ConvolutionFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3975 DEBUG ruleengine  - Transform - Loading rule - TEnrichAddDataMergeFunctionRule: "Insert DataMerge Function Enrich (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3975 DEBUG ruleengine  - Transform - Loading rule - TGroupSplitFileWriter: "TGroupSplitFileWriter" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3975 DEBUG ruleengine  - Transform - Loading rule - TInitPredicateRule: "Init Predicates" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3976 DEBUG ruleengine  - Transform - Loading rule - TMapAORule: "MapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3976 DEBUG ruleengine  - Transform - Loading rule - TProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3976 DEBUG ruleengine  - Transform - Loading rule - TRelationalSocketSinkAORule: "SocketSinkAO -> SocketSinkPO (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3977 DEBUG ruleengine  - Transform - Loading rule - TStateMapAORule: "StateMapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3977 DEBUG ruleengine  - Transform - Loading rule - TToTupleAORule: "TToTupleAORule" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3977 DEBUG ruleengine  - Transform - Loading rule - TUnnestAORule: "UnNestAO -> RelationalUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3983 DEBUG ruleengine  - Transform - Loading rule - TApplicationTimestampRule: "TApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3985 DEBUG ruleengine  - Transform - Loading rule - TBufferedFilterAORule: "TBufferedFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3986 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateInsertDataMergeFunctionRule: "Insert DataMergeFunction ChangeCorrelate (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3987 DEBUG ruleengine  - Transform - Loading rule - TCombineAORule: "CombineAO -> CombinePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3988 DEBUG ruleengine  - Transform - Loading rule - TCompareSinkAO: "TCompareSinkAO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3990 DEBUG ruleengine  - Transform - Loading rule - TGeneratorAORule: "TGeneratorAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4002 DEBUG ruleengine  - Transform - Loading rule - TJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4003 DEBUG ruleengine  - Transform - Loading rule - TJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction JoinTIPO (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4007 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4009 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4014 INFO  WebServicePublisher  - Webservice published at http://0:0:0:0:0:0:0:0:9669/odysseus - de.uniol.inf.is.odysseus.planmanagement.executor.webservice.server.WebServicePublisher.publish(WebServicePublisher.java:106) 
4029 DEBUG ruleengine  - Transform - Loading rule - TRelationalChangeDetectAORule: "TRelationalChangeDetectAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4030 DEBUG ruleengine  - Transform - Loading rule - TRelationalCreateNewFilenamePunctuationRule: "TRelationalCreateNewFilenamePunctuationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4032 DEBUG ruleengine  - Transform - Loading rule - TRelationalDistinctAORule: "TRelationalDistinctAORule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4044 DEBUG ruleengine  - Transform - Loading rule - TRelationalFastMedianAORule: "TRelationalFastMedianAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4045 DEBUG ruleengine  - Transform - Loading rule - TRelationalInsertGroupProcessorTIPORule: "TRelationalInsertGroupProcessorTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4046 DEBUG ruleengine  - Transform - Loading rule - TRelationalJoinAORule: "TRelationalJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4047 DEBUG ruleengine  - Transform - Loading rule - TRelationalTimestampToPayloadRule: "TRelationalTimestampToPayloadRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4049 DEBUG ruleengine  - Transform - Loading rule - TRelationalTupleAggregateTransformationRule: "TRelationalTupleAggregateTransformationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4051 DEBUG ruleengine  - Transform - Loading rule - TReplacementAORule: "TReplacementAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4052 DEBUG ruleengine  - Transform - Loading rule - TSetTransferAreaConvolutionFilterPO: "TSetTransferAreaConvolutionFilterPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4053 DEBUG ruleengine  - Transform - Loading rule - TSortAddComparatorRule: "TSortAddComparatorRule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4060 DEBUG ruleengine  - Transform - Loading rule - TTopKAORule: "TTopKAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4063 DEBUG ruleengine  - Transform - Loading rule - TApplicationTimestampRule: "TApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4063 DEBUG ruleengine  - Transform - Loading rule - TBufferedFilterAORule: "TBufferedFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4064 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateInsertDataMergeFunctionRule: "Insert DataMergeFunction ChangeCorrelate (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4064 DEBUG ruleengine  - Transform - Loading rule - TCombineAORule: "CombineAO -> CombinePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4064 DEBUG ruleengine  - Transform - Loading rule - TCompareSinkAO: "TCompareSinkAO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4064 DEBUG ruleengine  - Transform - Loading rule - TGeneratorAORule: "TGeneratorAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4064 DEBUG ruleengine  - Transform - Loading rule - TJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4065 DEBUG ruleengine  - Transform - Loading rule - TJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction JoinTIPO (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4065 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4065 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4066 DEBUG ruleengine  - Transform - Loading rule - TRelationalChangeDetectAORule: "TRelationalChangeDetectAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4066 DEBUG ruleengine  - Transform - Loading rule - TRelationalCreateNewFilenamePunctuationRule: "TRelationalCreateNewFilenamePunctuationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4066 DEBUG ruleengine  - Transform - Loading rule - TRelationalDistinctAORule: "TRelationalDistinctAORule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4067 DEBUG ruleengine  - Transform - Loading rule - TRelationalFastMedianAORule: "TRelationalFastMedianAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4067 DEBUG ruleengine  - Transform - Loading rule - TRelationalInsertGroupProcessorTIPORule: "TRelationalInsertGroupProcessorTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4067 DEBUG ruleengine  - Transform - Loading rule - TRelationalJoinAORule: "TRelationalJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4068 DEBUG ruleengine  - Transform - Loading rule - TRelationalTimestampToPayloadRule: "TRelationalTimestampToPayloadRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4068 DEBUG ruleengine  - Transform - Loading rule - TRelationalTupleAggregateTransformationRule: "TRelationalTupleAggregateTransformationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4068 DEBUG ruleengine  - Transform - Loading rule - TReplacementAORule: "TReplacementAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4069 DEBUG ruleengine  - Transform - Loading rule - TSetTransferAreaConvolutionFilterPO: "TSetTransferAreaConvolutionFilterPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4069 DEBUG ruleengine  - Transform - Loading rule - TSortAddComparatorRule: "TSortAddComparatorRule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4069 DEBUG ruleengine  - Transform - Loading rule - TTopKAORule: "TTopKAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4128 DEBUG ruleengine  - Transform - Loading rule - TJoinAONoIntervalRule: "TJoinAONoIntervalRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4129 DEBUG ruleengine  - Transform - Loading rule - TJoinAORule: "TJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4130 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAORule: "JoinAO -> JoinTIPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4140 DEBUG ruleengine  - Transform - Loading rule - TAggregationTIPORule: "TAggregationTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4141 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateAORule: "ChangeCorrelateAO -> ChangeCorrelatePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4142 DEBUG ruleengine  - Transform - Loading rule - TCoalesceAORule: "TCoalesceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4143 DEBUG ruleengine  - Transform - Loading rule - TDifferenceAORule: "TDifferenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4144 DEBUG ruleengine  - Transform - Loading rule - TDistinctAORule: "TDistinctAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4145 DEBUG ruleengine  - Transform - Loading rule - TDuplicateEliminationAORule: "TDuplicateEliminationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4147 DEBUG ruleengine  - Transform - Loading rule - TExistenceAORule: "TExistenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4148 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "TFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4149 DEBUG ruleengine  - Transform - Loading rule - THeartbeatAORule: "THeartbeatAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4151 DEBUG ruleengine  - Transform - Loading rule - TReOrderAORule: "ReOrderAO -> AssureOrderPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4152 DEBUG ruleengine  - Transform - Loading rule - TSameTimestampRule: "TSameTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4153 DEBUG ruleengine  - Transform - Loading rule - TSelectAddHeartbeatGenerationRule: "Insert HeartbeatGenerationStrategy in SelectPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4154 DEBUG ruleengine  - Transform - Loading rule - TSortAORule: "TSortAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4155 DEBUG ruleengine  - Transform - Loading rule - TSyncWithSystemTimeAORule: "TSyncWithSystemTimeAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4156 DEBUG ruleengine  - Transform - Loading rule - TSystemTimestampRule: "TimestampAO -> MetadataUpdatePO(system timestamp)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4157 DEBUG ruleengine  - Transform - Loading rule - TTimeStampOrderValdiatorRule: "TTimeStampOrderValdiatorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4158 DEBUG ruleengine  - Transform - Loading rule - TUnionTIPORule: "TUnionTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4159 DEBUG ruleengine  - Transform - Loading rule - TWatermarkAORule: "TWatermarkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4160 DEBUG ruleengine  - Transform - Loading rule - TWindowAORule: "TWindowAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4164 DEBUG ruleengine  - Transform - Loading rule - TJoinAONoIntervalRule: "TJoinAONoIntervalRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4164 DEBUG ruleengine  - Transform - Loading rule - TJoinAORule: "TJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4165 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAORule: "JoinAO -> JoinTIPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4165 DEBUG ruleengine  - Transform - Loading rule - TAggregationTIPORule: "TAggregationTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4165 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateAORule: "ChangeCorrelateAO -> ChangeCorrelatePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4166 DEBUG ruleengine  - Transform - Loading rule - TCoalesceAORule: "TCoalesceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4166 DEBUG ruleengine  - Transform - Loading rule - TDifferenceAORule: "TDifferenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4166 DEBUG ruleengine  - Transform - Loading rule - TDistinctAORule: "TDistinctAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4166 DEBUG ruleengine  - Transform - Loading rule - TDuplicateEliminationAORule: "TDuplicateEliminationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4167 DEBUG ruleengine  - Transform - Loading rule - TExistenceAORule: "TExistenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4167 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "TFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4167 DEBUG ruleengine  - Transform - Loading rule - THeartbeatAORule: "THeartbeatAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4168 DEBUG ruleengine  - Transform - Loading rule - TReOrderAORule: "ReOrderAO -> AssureOrderPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4168 DEBUG ruleengine  - Transform - Loading rule - TSameTimestampRule: "TSameTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4168 DEBUG ruleengine  - Transform - Loading rule - TSelectAddHeartbeatGenerationRule: "Insert HeartbeatGenerationStrategy in SelectPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4168 DEBUG ruleengine  - Transform - Loading rule - TSortAORule: "TSortAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4169 DEBUG ruleengine  - Transform - Loading rule - TSyncWithSystemTimeAORule: "TSyncWithSystemTimeAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4169 DEBUG ruleengine  - Transform - Loading rule - TSystemTimestampRule: "TimestampAO -> MetadataUpdatePO(system timestamp)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4169 DEBUG ruleengine  - Transform - Loading rule - TTimeStampOrderValdiatorRule: "TTimeStampOrderValdiatorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4170 DEBUG ruleengine  - Transform - Loading rule - TUnionTIPORule: "TUnionTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4170 DEBUG ruleengine  - Transform - Loading rule - TWatermarkAORule: "TWatermarkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4170 DEBUG ruleengine  - Transform - Loading rule - TWindowAORule: "TWindowAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4175 DEBUG ruleengine  - Transform - Loading rule - TJoinAOErrorRule: "TJoinAOErrorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4177 DEBUG ruleengine  - Transform - Loading rule - TKeyValueApplicationTimestampRule: "TKeyValueApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4178 DEBUG ruleengine  - Transform - Loading rule - TKeyValueMapRule: "MapAO --> KeyValueMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4179 DEBUG ruleengine  - Transform - Loading rule - TKeyValueProjectRule: "ProjectAO --> KeyValueProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4180 DEBUG ruleengine  - Transform - Loading rule - TKeyValueRenameRule: "RenameAO --> KeyValueRenamePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4181 DEBUG ruleengine  - Transform - Loading rule - TKeyValueSelectRule: "TKeyValueSelectRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4184 DEBUG ruleengine  - Transform - Loading rule - TKeyValueToTupleRule: "ToTupleAO --> KeyValueToTuplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4185 DEBUG ruleengine  - Transform - Loading rule - TKeyValueUnnestAORule: "TKeyValueUnnestAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4186 DEBUG ruleengine  - Transform - Loading rule - TTupleToKeyValueRule: "TTupleToKeyValueRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4188 DEBUG ruleengine  - Transform - Loading rule - TJoinAOErrorRule: "TJoinAOErrorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4188 DEBUG ruleengine  - Transform - Loading rule - TKeyValueApplicationTimestampRule: "TKeyValueApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4189 DEBUG ruleengine  - Transform - Loading rule - TKeyValueMapRule: "MapAO --> KeyValueMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4189 DEBUG ruleengine  - Transform - Loading rule - TKeyValueProjectRule: "ProjectAO --> KeyValueProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4189 DEBUG ruleengine  - Transform - Loading rule - TKeyValueRenameRule: "RenameAO --> KeyValueRenamePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4189 DEBUG ruleengine  - Transform - Loading rule - TKeyValueSelectRule: "TKeyValueSelectRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4190 DEBUG ruleengine  - Transform - Loading rule - TKeyValueToTupleRule: "ToTupleAO --> KeyValueToTuplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4190 DEBUG ruleengine  - Transform - Loading rule - TKeyValueUnnestAORule: "TKeyValueUnnestAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4191 DEBUG ruleengine  - Transform - Loading rule - TTupleToKeyValueRule: "TTupleToKeyValueRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4197 DEBUG ruleengine  - Transform - Loading rule - TReplicationMergeAORule: "ReplicationMergeAO -> ReplicationMergePO | ReplicationMergeWithTrustPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4198 DEBUG ruleengine  - Transform - Loading rule - TReplicationMergeAORule: "ReplicationMergeAO -> ReplicationMergePO | ReplicationMergeWithTrustPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4267 DEBUG AbstractExecutor  - Initializing Executor. - de.uniol.inf.is.odysseus.core.server.planmanagement.executor.AbstractExecutor.initialize(AbstractExecutor.java:270) 
4267 DEBUG AbstractExecutor  - Initializing Executor done. - de.uniol.inf.is.odysseus.core.server.planmanagement.executor.AbstractExecutor.initialize(AbstractExecutor.java:280) 
6733 DEBUG ruleengine  - Rewrite - Loading rules for... de.uniol.inf.is.odysseus.relational.rewrite.RuleProvider@4e3c904c - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.bindRuleProvider(AbstractInventory.java:208) 
6736 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteProjectionWithoutFunctionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteProjectionWithoutFunctionRule" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6737 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteSelectionWithoutPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteSelectionWithoutPredicate" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6737 DEBUG ruleengine  - Rewrite - Loading rule - RMergeSelectionJoinRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RMergeSelectionJoinRule" for group: "GROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6737 DEBUG ruleengine  - Rewrite - Loading rule - RMergeSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RMergeSelectionRule" for group: "GROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6738 DEBUG ruleengine  - Rewrite - Loading rule - RSplitSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSplitSelectionRule" for group: "SPLIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6738 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionRenameRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionRenameRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6738 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionUnionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionUnionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6739 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionWindowRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionWindowRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6739 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionJoinRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionJoinRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6739 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionDifferenceRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionDifferenceRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6740 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionProjectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionProjectionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6740 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionRenameRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionRenameRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6740 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionUnionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionUnionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6741 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionWindowRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionWindowRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6741 DEBUG ruleengine  - Rewrite - Loading rule - RPrepareSelectionCNF: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPrepareSelectionCNF" for group: "PREPARE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6742 DEBUG ruleengine  - Rewrite - Loading rule - RPrepareJoinCNF: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPrepareJoinCNF" for group: "PREPARE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6742 DEBUG ruleengine  - Rewrite - Loading rule - ROptimizeSelectionPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.ROptimizeSelectionPredicate" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6742 DEBUG ruleengine  - Rewrite - Loading rule - ROptimizeJoinPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.ROptimizeJoinPredicate" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6743 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteRenameAORule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteRenameAORule" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6743 DEBUG ruleengine  - Rewrite - Loading rule - RPregroupJoinSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPregroupJoinSelectionRule" for group: "PREGROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6745 DEBUG ruleengine  - Rewrite - Loading rules for... de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RewriteRuleProvider@29c57cc7 - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.bindRuleProvider(AbstractInventory.java:208) 
6746 DEBUG ruleengine  - Rewrite - Loading rule - RIntersectionAORule: "de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RIntersectionAORule" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:23.757
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.compiler.standardcompiler. The reference is: Reference[name = IPlanGenerator, interface = de.uniol.inf.is.odysseus.core.server.plangeneration.IPlanGenerator, policy = dynamic, cardinality = 0..1, target = null, bind = bindPlanGenerator, unbind = unbindPlanGenerator]
6784 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6786 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6787 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6792 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6792 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6794 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6798 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6799 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6799 DEBUG FileUtils  - Read from file /Users/jp/.odysseus/scheduling.conf - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 
6800 DEBUG SingleSchedulerManager  - Set active Scheduler Single Thread Scheduler RR Multi Source (Biggest Queue) - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.setActiveScheduler(SingleSchedulerManager.java:202) 
6808 INFO  SingleSchedulerManager  - Active scheduler. class de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SimpleThreadSchedulerMSLimitSourcesPerThread - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.activate(SingleSchedulerManager.java:141) 
6809 DEBUG SingleSchedulerManager  - Start scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:286) 
6811 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
6811 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
6811 DEBUG AbstractSimpleThreadScheduler  - Starting Scheduler with 4 thread(s). - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.startScheduling(AbstractSimpleThreadScheduler.java:119) 
6811 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
6811 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
6812 DEBUG SingleSchedulerManager  - Scheduling started. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:288) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:23.834
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.optimization.standardoptimizer. The reference is: Reference[name = IPostOptimizationAction, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.optimization.IPostOptimizationAction, policy = dynamic, cardinality = 0..n, target = null, bind = bindPostOptimizationAction, unbind = unbindPostOptimizationAction]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:23.843
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.optimization.standardoptimizer. The reference is: Reference[name = IElementCloningUpdater, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.optimization.elementcloning.IElementCloningUpdater, policy = dynamic, cardinality = 0..n, target = null, bind = bindElementCloningUpdater, unbind = unbindElementCloningUpdater]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:23.844
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = ISystemMonitorFactory, interface = de.uniol.inf.is.odysseus.core.server.monitoring.ISystemMonitorFactory, policy = dynamic, cardinality = 0..1, target = null, bind = bindSystemMonitorFactory, unbind = unbindSystemMonitorFactory]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:23.854
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IQueryDistributor, interface = de.uniol.inf.is.odysseus.core.server.distribution.IQueryDistributor, policy = dynamic, cardinality = 0..1, target = null, bind = bindQueryDistributor, unbind = unbindQueryDistributor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:23.855
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IPreTransformationHandler, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.executor.IPreTransformationHandler, policy = dynamic, cardinality = 0..n, target = null, bind = bindPreTransformationHandler, unbind = unbindPreTransformationHandler]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:23.855
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IRecoveryExecutor, interface = de.uniol.inf.is.odysseus.core.server.recovery.IRecoveryExecutor, policy = dynamic, cardinality = 0..n, target = null, bind = bindRecoveryExecutor, unbind = unbindRecoveryExecutor]
6862 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@767348e9 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
6862 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@767348e9 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:23.877
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLGenerator. The reference is: Reference[name = IPQLGeneratorPreProcessor, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLGeneratorPreProcessor, policy = dynamic, cardinality = 0..n, target = null, bind = bindPreProcessor, unbind = unbindPreProcessor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-01 14:26:23.877
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLGenerator. The reference is: Reference[name = IPQLGeneratorPostProcessor, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLGeneratorPostProcessor, policy = dynamic, cardinality = 0..n, target = null, bind = bindPostProcessor, unbind = unbindPostProcessor]
6868 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@3793a76a - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
6869 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@3793a76a - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
6881 DEBUG ruleengine  - Transform - Loading rule - TAccessAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6891 DEBUG ruleengine  - Transform - Loading rule - TAppendQueryAORule: "TAppendQueryAORule" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6892 DEBUG ruleengine  - Transform - Loading rule - TAppendToPhysicalAORule: "AppendToPhysical" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6893 DEBUG ruleengine  - Transform - Loading rule - TBufferAORule: "BufferAO -> BufferedPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6895 DEBUG ruleengine  - Transform - Loading rule - TCacheAORule: "CacheAO --> CachePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6896 DEBUG ruleengine  - Transform - Loading rule - TChangeDetectAORule: "ChangeDetectAO -> ChangeDetectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6897 DEBUG ruleengine  - Transform - Loading rule - TCloseStreamAORule: "TCloseStreamAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6898 DEBUG ruleengine  - Transform - Loading rule - TCommandAORule: "CommandAO --> CommandPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6899 DEBUG ruleengine  - Transform - Loading rule - TConsoleSinkAORule: "TConsoleSinkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6901 DEBUG ruleengine  - Transform - Loading rule - TConverterAORule: "ConverterAO --> ConverterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6902 DEBUG ruleengine  - Transform - Loading rule - TCSVFileSourceAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6904 DEBUG ruleengine  - Transform - Loading rule - TDeleteRenameAORule: "Delete Rename" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6910 DEBUG ruleengine  - Transform - Loading rule - TEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6911 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "FilterAO -> FilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6912 DEBUG ruleengine  - Transform - Loading rule - TMemStoreReadAORule: "TMemStoreReadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6913 DEBUG ruleengine  - Transform - Loading rule - TMemStoreWriteAORule: "TMemStoreWriteAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6914 DEBUG ruleengine  - Transform - Loading rule - TMergeAORule: "MergeAO --> MergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6915 DEBUG ruleengine  - Transform - Loading rule - TMetadataAOTransformation: "TMetadataAOTransformation" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6916 DEBUG ruleengine  - Transform - Loading rule - TPlanModificationActionAORule: "TPlanModificationActionAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6917 DEBUG ruleengine  - Transform - Loading rule - TRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6917 DEBUG ruleengine  - Transform - Loading rule - TRouteAORule: "RouteAO -> RoutePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6918 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO --> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6919 DEBUG ruleengine  - Transform - Loading rule - TSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6919 DEBUG ruleengine  - Transform - Loading rule - TSenderAOExistsRule: "Transform to existing SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6921 DEBUG ruleengine  - Transform - Loading rule - TSenderAOGenericRule: "AbstractSenderAO (generic) --> SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6922 DEBUG ruleengine  - Transform - Loading rule - TSenderAOViewRule: "Transform Sender View" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6923 DEBUG ruleengine  - Transform - Loading rule - TSetSystemTimeAORule: "SetSystemTimeAO -> SetSystemTimePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6924 DEBUG ruleengine  - Transform - Loading rule - TSetTimeProgressMarker: "TSetTimeProgressMarker" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6926 DEBUG ruleengine  - Transform - Loading rule - TSinkAORule: "SinkAO -> SinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6927 DEBUG ruleengine  - Transform - Loading rule - TSocketSinkAORule: "SocketSinkAO -> SocketSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6929 DEBUG ruleengine  - Transform - Loading rule - TStreamAORule: "Transform View or Stream" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6930 DEBUG ruleengine  - Transform - Loading rule - TTimeshiftAORule: "TimeshiftAO -> TimeshiftPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6932 DEBUG ruleengine  - Transform - Loading rule - TUserDefinedOperatorPO: "UdoAO -> UdoPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6933 DEBUG ruleengine  - Transform - Loading rule - TAccessAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6933 DEBUG ruleengine  - Transform - Loading rule - TAppendQueryAORule: "TAppendQueryAORule" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6933 DEBUG ruleengine  - Transform - Loading rule - TAppendToPhysicalAORule: "AppendToPhysical" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6934 DEBUG ruleengine  - Transform - Loading rule - TBufferAORule: "BufferAO -> BufferedPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6934 DEBUG ruleengine  - Transform - Loading rule - TCacheAORule: "CacheAO --> CachePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6934 DEBUG ruleengine  - Transform - Loading rule - TChangeDetectAORule: "ChangeDetectAO -> ChangeDetectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6934 DEBUG ruleengine  - Transform - Loading rule - TCloseStreamAORule: "TCloseStreamAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6934 DEBUG ruleengine  - Transform - Loading rule - TCommandAORule: "CommandAO --> CommandPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6935 DEBUG ruleengine  - Transform - Loading rule - TConsoleSinkAORule: "TConsoleSinkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6935 DEBUG ruleengine  - Transform - Loading rule - TConverterAORule: "ConverterAO --> ConverterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6935 DEBUG ruleengine  - Transform - Loading rule - TCSVFileSourceAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6935 DEBUG ruleengine  - Transform - Loading rule - TDeleteRenameAORule: "Delete Rename" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6935 DEBUG ruleengine  - Transform - Loading rule - TEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6935 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "FilterAO -> FilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6936 DEBUG ruleengine  - Transform - Loading rule - TMemStoreReadAORule: "TMemStoreReadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6936 DEBUG ruleengine  - Transform - Loading rule - TMemStoreWriteAORule: "TMemStoreWriteAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6936 DEBUG ruleengine  - Transform - Loading rule - TMergeAORule: "MergeAO --> MergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6936 DEBUG ruleengine  - Transform - Loading rule - TMetadataAOTransformation: "TMetadataAOTransformation" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6936 DEBUG ruleengine  - Transform - Loading rule - TPlanModificationActionAORule: "TPlanModificationActionAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6937 DEBUG ruleengine  - Transform - Loading rule - TRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6937 DEBUG ruleengine  - Transform - Loading rule - TRouteAORule: "RouteAO -> RoutePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6937 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO --> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6937 DEBUG ruleengine  - Transform - Loading rule - TSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6937 DEBUG ruleengine  - Transform - Loading rule - TSenderAOExistsRule: "Transform to existing SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6937 DEBUG ruleengine  - Transform - Loading rule - TSenderAOGenericRule: "AbstractSenderAO (generic) --> SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6937 DEBUG ruleengine  - Transform - Loading rule - TSenderAOViewRule: "Transform Sender View" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6937 DEBUG ruleengine  - Transform - Loading rule - TSetSystemTimeAORule: "SetSystemTimeAO -> SetSystemTimePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6938 DEBUG ruleengine  - Transform - Loading rule - TSetTimeProgressMarker: "TSetTimeProgressMarker" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6938 DEBUG ruleengine  - Transform - Loading rule - TSinkAORule: "SinkAO -> SinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6938 DEBUG ruleengine  - Transform - Loading rule - TSocketSinkAORule: "SocketSinkAO -> SocketSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6938 DEBUG ruleengine  - Transform - Loading rule - TStreamAORule: "Transform View or Stream" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6938 DEBUG ruleengine  - Transform - Loading rule - TTimeshiftAORule: "TimeshiftAO -> TimeshiftPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6938 DEBUG ruleengine  - Transform - Loading rule - TUserDefinedOperatorPO: "UdoAO -> UdoPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 

!ENTRY org.eclipse.osgi 4 0 2017-04-01 14:26:23.951
!MESSAGE Could not find bundle: unknown
!STACK 0
org.osgi.framework.BundleException: Could not find bundle: unknown
	at org.eclipse.core.runtime.internal.adaptor.ConsoleManager.checkForConsoleBundle(ConsoleManager.java:58)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:331)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1488)
Starting application: 7920
6946 DEBUG TestRunnerApplication  - Starting Odysseus... - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:57) 
6949 DEBUG TestRunnerApplication  - Odysseus is up and running! - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:60) 
6949 DEBUG TestRunnerApplication  - Starting component tests... - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:71) 
6961 DEBUG TestRunnerApplication  - Starting a new component test: Compile Test Component - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:100) 
6961 DEBUG TestRunnerApplication  - ####################################################################################### - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:101) 
6961 DEBUG TestComponentRunner  - Start Testcomponent 'Compile Test Component' - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:52) 
6961 DEBUG AbstractTestComponent  - Starting executor... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStartExecutor(AbstractTestComponent.java:94) 
6962 DEBUG AbstractTestComponent  - Sat Apr 01 14:26:23 CEST 2017Running sub test 1 of 1: "ProjectMapRename-Test.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
6963 DEBUG AbstractTestComponent  - /// THIS IS A TEST FOR PROJECT, MAP AND RENAME
/// ALL PROVIDED EXAMPLE SHOULD WORK
#PARSER CQL
#TRANSCFG Standard
#DOREWRITE false
#DROPALLQUERIES
#QUERY
DROP STREAM bid IF EXISTS
#QUERY
ATTACH STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) CHANNEL localhost : 65442
#QUERY
DROP STREAM person IF EXISTS
#QUERY
ATTACH STREAM person (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) CHANNEL localhost : 65440

/// SIMPLE PROJECTS
#QUERY 
SELECT * FROM bid
#QUERY
SELECT bid.* FROM bid
#QUERY
SELECT price FROM bid
#QUERY
SELECT bidder, price FROM bid
#QUERY
SELECT timestamp, auction, bidder, datetime, price FROM bid

/// PROJECTS WITH RENAMED SOURCE BUT NO USE IN PROJECT
#QUERY 
SELECT * FROM bid AS b
#QUERY
SELECT bid.* FROM bid AS b
#QUERY
SELECT price FROM bid AS b
#QUERY
SELECT bidder, price FROM bid AS b
#QUERY
SELECT timestamp, auction, bidder, datetime, price FROM bid AS b


/// PROJECTS WITH RENAMED SOURCE WITH USE IN PROJECT
#QUERY 
SELECT * FROM bid AS b
#QUERY
SELECT b.* FROM bid AS b
#QUERY
SELECT b.price FROM bid AS b
#QUERY
SELECT b.bidder, b.price FROM bid AS b
#QUERY
SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b

/// PROJECTS WITH RENAMED ATTRIBUTES
#QUERY
SELECT price AS p FROM bid
#QUERY
SELECT price AS p, bidder FROM bid
#QUERY
SELECT price AS p, bidder AS b FROM bid

/// PROJECTS WITH RENAMED ATTRIBUTES AND SOURCES
#QUERY
SELECT price AS p FROM bid AS b
#QUERY
SELECT b.price AS p FROM bid AS b
#QUERY
SELECT b.price AS p, b.bidder FROM bid AS b
#QUERY
SELECT b.price AS p, b.bidder AS b FROM bid AS b


/// PROJECTS WITH CONSTANTS, FUNCTIONS AND EXPRESSIONS
#QUERY
SELECT bidder + price AS d FROM bid
#QUERY
SELECT 123.4 * price AS d FROM bid
#QUERY
SELECT 123.4 AS d FROM bid
#QUERY
SELECT 123.4 AS d, price FROM bid
#QUERY
SELECT DolToEur(price) AS d FROM bid
#QUERY
SELECT DolToEur(price) AS d, price FROM bid
#QUERY
SELECT DolToEur(price) * auction AS d FROM bid
#QUERY
SELECT DolToEur(price) * price AS d FROM bid
#QUERY
SELECT DolToEur(price) * auction AS d, price FROM bid
#QUERY
SELECT DolToEur(123.4) AS d FROM bid
#QUERY
SELECT 'test' AS s FROM bid
#QUERY
SELECT 'test' AS s, 123.4 AS d FROM bid
#QUERY
SELECT 'test' AS s, 123.4 AS d, price FROM bid


/// PROJECTS AND SELECTS WITH RENAMED SOURCE WITH USE IN SELECT
#QUERY 
SELECT * FROM bid AS b WHERE b.bidder > 10
#QUERY
SELECT b.* FROM bid AS b WHERE b.bidder > 10
#QUERY
SELECT b.price FROM bid AS b WHERE b.price < 150.0
#QUERY
SELECT b.bidder, b.price FROM bid AS b WHERE b.bidder =  1
#QUERY
SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b WHERE b.price > 100.0

/// PROJECTS WITH RENAMED ATTRIBUTES
#QUERY
SELECT price AS p FROM bid WHERE p < 100
#QUERY
SELECT price AS p, bidder FROM bid WHERE p > 100
#QUERY
SELECT price AS p, bidder AS b FROM bid WHERE b=1 AND p <100


/// AGGREGATES ARE NOT HANDLED LIKE FUNCTIONS AND MAY HAVE A GROUPING ETC.
#QUERY
SELECT AVG(price) AS aprice FROM bid
#QUERY
SELECT AVG(price) AS aprice FROM bid GROUP BY auction
#QUERY
SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction
#QUERY
SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction HAVING aprice<100.0


/// JOINS AND SELFJOINS
#QUERY
SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id
#QUERY
SELECT auction FROM bid AS b, person AS p WHERE b.bidder = p.id
#QUERY
SELECT auction AS a, bidder AS b FROM bid, person WHERE a = b
#QUERY
SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id
#QUERY
SELECT left.* FROM bid AS left, bid AS right WHERE left.bidder = right.bidder
#QUERY
SELECT a.auction AS aid FROM bid AS a, bid AS b WHERE aid=b.auction
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
6963 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
6963 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
6963 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6964 DEBUG StandardExecutor  - Adding following query: /// THIS IS A TEST FOR PROJECT, MAP AND RENAME
/// ALL PROVIDED EXAMPLE SHOULD WORK
#PARSER CQL
#TRANSCFG Standard
#DOREWRITE false
#DROPALLQUERIES
#QUERY
DROP STREAM bid IF EXISTS
#QUERY
ATTACH STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) CHANNEL localhost : 65442
#QUERY
DROP STREAM person IF EXISTS
#QUERY
ATTACH STREAM person (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) CHANNEL localhost : 65440

/// SIMPLE PROJECTS
#QUERY 
SELECT * FROM bid
#QUERY
SELECT bid.* FROM bid
#QUERY
SELECT price FROM bid
#QUERY
SELECT bidder, price FROM bid
#QUERY
SELECT timestamp, auction, bidder, datetime, price FROM bid

/// PROJECTS WITH RENAMED SOURCE BUT NO USE IN PROJECT
#QUERY 
SELECT * FROM bid AS b
#QUERY
SELECT bid.* FROM bid AS b
#QUERY
SELECT price FROM bid AS b
#QUERY
SELECT bidder, price FROM bid AS b
#QUERY
SELECT timestamp, auction, bidder, datetime, price FROM bid AS b


/// PROJECTS WITH RENAMED SOURCE WITH USE IN PROJECT
#QUERY 
SELECT * FROM bid AS b
#QUERY
SELECT b.* FROM bid AS b
#QUERY
SELECT b.price FROM bid AS b
#QUERY
SELECT b.bidder, b.price FROM bid AS b
#QUERY
SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b

/// PROJECTS WITH RENAMED ATTRIBUTES
#QUERY
SELECT price AS p FROM bid
#QUERY
SELECT price AS p, bidder FROM bid
#QUERY
SELECT price AS p, bidder AS b FROM bid

/// PROJECTS WITH RENAMED ATTRIBUTES AND SOURCES
#QUERY
SELECT price AS p FROM bid AS b
#QUERY
SELECT b.price AS p FROM bid AS b
#QUERY
SELECT b.price AS p, b.bidder FROM bid AS b
#QUERY
SELECT b.price AS p, b.bidder AS b FROM bid AS b


/// PROJECTS WITH CONSTANTS, FUNCTIONS AND EXPRESSIONS
#QUERY
SELECT bidder + price AS d FROM bid
#QUERY
SELECT 123.4 * price AS d FROM bid
#QUERY
SELECT 123.4 AS d FROM bid
#QUERY
SELECT 123.4 AS d, price FROM bid
#QUERY
SELECT DolToEur(price) AS d FROM bid
#QUERY
SELECT DolToEur(price) AS d, price FROM bid
#QUERY
SELECT DolToEur(price) * auction AS d FROM bid
#QUERY
SELECT DolToEur(price) * price AS d FROM bid
#QUERY
SELECT DolToEur(price) * auction AS d, price FROM bid
#QUERY
SELECT DolToEur(123.4) AS d FROM bid
#QUERY
SELECT 'test' AS s FROM bid
#QUERY
SELECT 'test' AS s, 123.4 AS d FROM bid
#QUERY
SELECT 'test' AS s, 123.4 AS d, price FROM bid


/// PROJECTS AND SELECTS WITH RENAMED SOURCE WITH USE IN SELECT
#QUERY 
SELECT * FROM bid AS b WHERE b.bidder > 10
#QUERY
SELECT b.* FROM bid AS b WHERE b.bidder > 10
#QUERY
SELECT b.price FROM bid AS b WHERE b.price < 150.0
#QUERY
SELECT b.bidder, b.price FROM bid AS b WHERE b.bidder =  1
#QUERY
SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b WHERE b.price > 100.0

/// PROJECTS WITH RENAMED ATTRIBUTES
#QUERY
SELECT price AS p FROM bid WHERE p < 100
#QUERY
SELECT price AS p, bidder FROM bid WHERE p > 100
#QUERY
SELECT price AS p, bidder AS b FROM bid WHERE b=1 AND p <100


/// AGGREGATES ARE NOT HANDLED LIKE FUNCTIONS AND MAY HAVE A GROUPING ETC.
#QUERY
SELECT AVG(price) AS aprice FROM bid
#QUERY
SELECT AVG(price) AS aprice FROM bid GROUP BY auction
#QUERY
SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction
#QUERY
SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction HAVING aprice<100.0


/// JOINS AND SELFJOINS
#QUERY
SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id
#QUERY
SELECT auction FROM bid AS b, person AS p WHERE b.bidder = p.id
#QUERY
SELECT auction AS a, bidder AS b FROM bid, person WHERE a = b
#QUERY
SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id
#QUERY
SELECT left.* FROM bid AS left, bid AS right WHERE left.bidder = right.bidder
#QUERY
SELECT a.auction AS aid FROM bid AS a, bid AS b WHERE aid=b.auction
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6969 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
6984 ERROR PreParserStatement  - PreParserKeyword TRANSCFG is deprecated - de.uniol.inf.is.odysseus.script.parser.PreParserStatement.logDeprecation(PreParserStatement.java:74) 
6991 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6993 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
6994 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.query.RemoveAllQueriesCommand@68f4865 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6994 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4816278d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6995 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6995 DEBUG StandardExecutor  - Adding following query: DROP STREAM bid IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6995 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
log4j:WARN No appenders could be found for logger (org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser).
log4j:WARN Please initialize the log4j system properly.
7238 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7238 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7239 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@27d4a09 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7239 DEBUG ReloadLog  - Query added to log: DROP STREAM bid IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7244 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7244 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7245 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7e4204e2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7245 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7245 DEBUG StandardExecutor  - Adding following query: ATTACH STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) CHANNEL localhost : 65442 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7245 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7262 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7262 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7262 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@30af5b6b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7262 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7262 DEBUG StandardExecutor  - Adding following query: bid := ACCESS({source='bid',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['port','65442'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7263 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7291 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7291 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7291 DEBUG StandardExecutor  - Executing Create VIEW bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7301 DEBUG ReloadLog  - Query added to log: bid := ACCESS({source='bid',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['port','65442'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7301 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7301 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7301 DEBUG ReloadLog  - Query added to log: ATTACH STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) CHANNEL localhost : 65442 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7301 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7302 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7302 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@33308786 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7302 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7302 DEBUG StandardExecutor  - Adding following query: DROP STREAM person IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7302 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7305 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7306 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7306 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@a87f8ec - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7306 DEBUG ReloadLog  - Query added to log: DROP STREAM person IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7306 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7306 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7307 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5443d039 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7307 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7307 DEBUG StandardExecutor  - Adding following query: ATTACH STREAM person (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) CHANNEL localhost : 65440 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7307 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7311 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7312 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7312 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7d1cfb8b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7312 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7312 DEBUG StandardExecutor  - Adding following query: person := ACCESS({source='person',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['name','STRING'],['email','STRING'],['creditcard','STRING'],['city','STRING'],['state','STRING']],options=[['port','65440'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7312 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7314 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7314 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7314 DEBUG StandardExecutor  - Executing Create VIEW person - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7315 DEBUG ReloadLog  - Query added to log: person := ACCESS({source='person',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['name','STRING'],['email','STRING'],['creditcard','STRING'],['city','STRING'],['state','STRING']],options=[['port','65440'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7315 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7316 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7316 DEBUG ReloadLog  - Query added to log: ATTACH STREAM person (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) CHANNEL localhost : 65440 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7316 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7316 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7316 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@22356acd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7316 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7316 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7317 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: []
map={bid=[timestamp, auction, bidder, datetime, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@344f4dea (name: bid)
selfJoin:: 0
true
getAttributename:: timestamp, bid
getAttributename:: auction, bid
getAttributename:: bidder, bid
getAttributename:: datetime, bid
getAttributename:: price, bid
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
7330 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7330 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7330 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@71812481 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7330 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7331 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7331 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7350 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7354 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7354 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7357 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7357 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7365 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7365 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7365 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7365 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7365 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7366 INFO  transform  - Starting transformation of Top@230526532 OwnerIDs: 0... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7368 DEBUG transform  - Before transformation: 
TopAO (230526532) Owner: 0
0 <- 0 MapAO (1370283822) Owner: 0
       0 <- 0 AccessAO (1783966110) Owner: 0
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7414 DEBUG ruleengine  - Ruleengine needed 45 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7414 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7416 INFO  transform  - Transformation of Top@230526532 OwnerIDs: 0 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7418 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7422 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7423 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7423 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7424 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7424 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7424 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7425 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7425 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7426 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7426 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7426 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@e19bb76 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7427 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7427 DEBUG StandardExecutor  - Adding following query: SELECT bid.* FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7427 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@7241a47d (name: bid.*)]
map={bid=[timestamp, auction, bidder, datetime, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@70f59913 (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
orderedAttributes:: [timestamp, auction, bidder, datetime, price]
ARGUMENT:: 'timestamp','auction','bidder','datetime','price'
7435 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7435 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7436 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@77258e59 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7437 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7437 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7437 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7447 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7447 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7447 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7448 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7448 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7449 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7449 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7449 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7449 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7449 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7450 INFO  transform  - Starting transformation of Top@1574029810 OwnerIDs: 1... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7450 DEBUG transform  - Before transformation: 
TopAO (1574029810) Owner: 1
0 <- 0 MapAO (1504937617) Owner: 1
       0 <- 0 AccessAO (774895395) Owner: 1
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7458 DEBUG ruleengine  - Ruleengine needed 7 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7458 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7458 INFO  transform  - Transformation of Top@1574029810 OwnerIDs: 1 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7459 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7459 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7460 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7460 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7460 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7460 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7461 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7461 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7462 DEBUG ReloadLog  - Query added to log: SELECT bid.* FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7463 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7463 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7464 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2dc995f4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7464 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7464 DEBUG StandardExecutor  - Adding following query: SELECT price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7465 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@64b73e7a (name: price)]
prefix= bid
map={bid=[price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@12ed9db6 (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@12ed9db6 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@12ed9db6 (name: bid)]
orderedAttributes:: [bid.price]
ARGUMENT:: 'bid.price'
7475 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7476 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7476 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4ff4357f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7476 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7476 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7477 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7480 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7481 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7482 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7483 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7483 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7485 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7485 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7486 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7487 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7487 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7488 INFO  transform  - Starting transformation of Top@891461509 OwnerIDs: 2... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7488 DEBUG transform  - Before transformation: 
TopAO (891461509) Owner: 2
0 <- 0 MapAO (1832669781) Owner: 2
       0 <- 0 AccessAO (186061555) Owner: 2
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7507 DEBUG ruleengine  - Ruleengine needed 16 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7507 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7508 INFO  transform  - Transformation of Top@891461509 OwnerIDs: 2 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7508 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7510 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7510 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7510 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7511 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7511 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7511 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7512 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7515 DEBUG ReloadLog  - Query added to log: SELECT price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7516 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7518 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7519 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@15dcfae7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7520 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7522 DEBUG StandardExecutor  - Adding following query: SELECT bidder, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7523 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@1e636ea3 (name: bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@115667d (name: price)]
prefix= bid
prefix= bid
map={bid=[bidder, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@736caf7a (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@736caf7a (name: bid)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@736caf7a (name: bid)]
ATTRIBUTE:: price
ATTRIBUTE:: bidder
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@736caf7a (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@736caf7a (name: bid)]
orderedAttributes:: [bid.bidder, bid.price]
ARGUMENT:: 'bid.bidder','bid.price'
7559 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7561 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7561 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4ce7fffa - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7562 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7566 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.bidder','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7567 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7573 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7573 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7573 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7574 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7574 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7575 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7575 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7575 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7575 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7575 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7576 INFO  transform  - Starting transformation of Top@2048537720 OwnerIDs: 3... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7576 DEBUG transform  - Before transformation: 
TopAO (2048537720) Owner: 3
0 <- 0 MapAO (1230701703) Owner: 3
       0 <- 0 AccessAO (90045638) Owner: 3
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7582 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7582 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7583 INFO  transform  - Transformation of Top@2048537720 OwnerIDs: 3 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7583 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7584 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7584 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7584 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7584 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7585 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.bidder','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7585 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7585 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7586 DEBUG ReloadLog  - Query added to log: SELECT bidder, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7586 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7587 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7587 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2d6764b2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7587 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7587 DEBUG StandardExecutor  - Adding following query: SELECT timestamp, auction, bidder, datetime, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7587 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@49c6c24f (name: timestamp), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@6fe1b4fb (name: auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@79351f41 (name: bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@1c32386d (name: datetime), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@6399551e (name: price)]
prefix= bid
prefix= bid
prefix= bid
prefix= bid
prefix= bid
map={bid=[timestamp, auction, bidder, datetime, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@13d73fa (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: timestamp
getAttributename:: timestamp, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@13d73fa (name: bid)]
getAttributename:: timestamp, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@13d73fa (name: bid)]
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@13d73fa (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@13d73fa (name: bid)]
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@13d73fa (name: bid)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@13d73fa (name: bid)]
ATTRIBUTE:: datetime
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
getAttributename:: datetime, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@13d73fa (name: bid)]
getAttributename:: datetime, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@13d73fa (name: bid)]
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@13d73fa (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@13d73fa (name: bid)]
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
7599 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7599 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7599 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5023bb8b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7599 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7600 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7600 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7605 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7605 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7606 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7606 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7607 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7607 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7608 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7608 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7608 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7608 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7609 INFO  transform  - Starting transformation of Top@1632497828 OwnerIDs: 4... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7609 DEBUG transform  - Before transformation: 
TopAO (1632497828) Owner: 4
0 <- 0 MapAO (33419717) Owner: 4
       0 <- 0 AccessAO (764826684) Owner: 4
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7613 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7613 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7614 INFO  transform  - Transformation of Top@1632497828 OwnerIDs: 4 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7614 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7615 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7615 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7615 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7615 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7615 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7615 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7616 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7616 DEBUG ReloadLog  - Query added to log: SELECT timestamp, auction, bidder, datetime, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7616 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7617 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7617 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@550a1967 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7617 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7617 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7618 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: []
map={bid=[timestamp, auction, bidder, datetime, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@584f54e6 (name: bid)
selfJoin:: 0
timestamp.b
auction.b
bidder.b
datetime.b
price.b
true
getAttributename:: timestamp, bid
getAttributename:: auction, bid
getAttributename:: bidder, bid
getAttributename:: datetime, bid
getAttributename:: price, bid
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
7623 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7623 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7623 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5d8bafa9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7623 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7624 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7624 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7629 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7630 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7630 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7630 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7630 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7631 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7631 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7631 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7631 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7631 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7632 INFO  transform  - Starting transformation of Top@512549200 OwnerIDs: 5... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7632 DEBUG transform  - Before transformation: 
TopAO (512549200) Owner: 5
0 <- 0 MapAO (1615801298) Owner: 5
       0 <- 0 AccessAO (490391704) Owner: 5
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7635 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7635 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7635 INFO  transform  - Transformation of Top@512549200 OwnerIDs: 5 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7636 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7636 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7636 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7636 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7637 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7637 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7637 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7637 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7638 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7638 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7638 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7638 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@10b9db7b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7638 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7638 DEBUG StandardExecutor  - Adding following query: SELECT bid.* FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7639 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@34cdeda2 (name: bid.*)]
map={bid=[timestamp, auction, bidder, datetime, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6ee660fb (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
orderedAttributes:: [timestamp, auction, bidder, datetime, price]
ARGUMENT:: 'timestamp','auction','bidder','datetime','price'
7643 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7643 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7643 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@305a0c5f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7644 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7644 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7644 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7649 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7649 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7649 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7649 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7650 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7650 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7651 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7651 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7651 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7651 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7651 INFO  transform  - Starting transformation of Top@1718906711 OwnerIDs: 6... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7651 DEBUG transform  - Before transformation: 
TopAO (1718906711) Owner: 6
0 <- 0 MapAO (71802912) Owner: 6
       0 <- 0 AccessAO (2134271532) Owner: 6
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7675 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7675 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7675 INFO  transform  - Transformation of Top@1718906711 OwnerIDs: 6 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7676 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7676 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7676 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7676 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7677 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7677 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7677 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7677 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7677 DEBUG ReloadLog  - Query added to log: SELECT bid.* FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7677 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7678 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7678 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2320fa6f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7678 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7678 DEBUG StandardExecutor  - Adding following query: SELECT price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7678 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@77a7cf58 (name: price)]
prefix= bid
map={bid=[price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3d97a632 (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3d97a632 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3d97a632 (name: bid)]
orderedAttributes:: [bid.price]
ARGUMENT:: 'bid.price'
7684 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7684 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7684 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@616fe72b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7684 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7684 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7685 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7689 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7690 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7690 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7690 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7690 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7691 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7691 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7691 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7691 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7691 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7692 INFO  transform  - Starting transformation of Top@1088417975 OwnerIDs: 7... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7692 DEBUG transform  - Before transformation: 
TopAO (1088417975) Owner: 7
0 <- 0 MapAO (2036775591) Owner: 7
       0 <- 0 AccessAO (1620529408) Owner: 7
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7695 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7695 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7696 INFO  transform  - Transformation of Top@1088417975 OwnerIDs: 7 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7696 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7696 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7696 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7697 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7697 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7697 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7697 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7697 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7698 DEBUG ReloadLog  - Query added to log: SELECT price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7698 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7698 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7698 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1b2c4efb - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7698 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7699 DEBUG StandardExecutor  - Adding following query: SELECT bidder, price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7699 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@c2db68f (name: bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@3cc41abc (name: price)]
prefix= bid
prefix= bid
map={bid=[bidder, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4566d049 (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4566d049 (name: bid)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4566d049 (name: bid)]
ATTRIBUTE:: price
ATTRIBUTE:: bidder
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4566d049 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4566d049 (name: bid)]
orderedAttributes:: [bid.bidder, bid.price]
ARGUMENT:: 'bid.bidder','bid.price'
7704 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7705 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7705 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@61ce23ac - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7705 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7705 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.bidder','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7705 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7708 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7708 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7709 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7709 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7709 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7710 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7710 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7710 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7710 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7710 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7711 INFO  transform  - Starting transformation of Top@1389774257 OwnerIDs: 8... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7712 DEBUG transform  - Before transformation: 
TopAO (1389774257) Owner: 8
0 <- 0 MapAO (553759818) Owner: 8
       0 <- 0 AccessAO (751021317) Owner: 8
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7715 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7715 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7715 INFO  transform  - Transformation of Top@1389774257 OwnerIDs: 8 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7715 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7716 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7716 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7716 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7717 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7717 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.bidder','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7717 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7717 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7718 DEBUG ReloadLog  - Query added to log: SELECT bidder, price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7718 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7718 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7718 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3c9bfddc - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7719 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7719 DEBUG StandardExecutor  - Adding following query: SELECT timestamp, auction, bidder, datetime, price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7719 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@4c5474f5 (name: timestamp), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@2f4205be (name: auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@54e22bdd (name: bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@3bd418e4 (name: datetime), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@544820b7 (name: price)]
prefix= bid
prefix= bid
prefix= bid
prefix= bid
prefix= bid
map={bid=[timestamp, auction, bidder, datetime, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6b98a075 (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: timestamp
getAttributename:: timestamp, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6b98a075 (name: bid)]
getAttributename:: timestamp, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6b98a075 (name: bid)]
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6b98a075 (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6b98a075 (name: bid)]
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6b98a075 (name: bid)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6b98a075 (name: bid)]
ATTRIBUTE:: datetime
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
getAttributename:: datetime, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6b98a075 (name: bid)]
getAttributename:: datetime, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6b98a075 (name: bid)]
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6b98a075 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6b98a075 (name: bid)]
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
7727 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7727 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7728 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2e61d218 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7728 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7729 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7729 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7734 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7735 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7735 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7735 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7735 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7736 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7736 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7736 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7736 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7736 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7737 INFO  transform  - Starting transformation of Top@1591916281 OwnerIDs: 9... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7737 DEBUG transform  - Before transformation: 
TopAO (1591916281) Owner: 9
0 <- 0 MapAO (600958416) Owner: 9
       0 <- 0 AccessAO (1884231057) Owner: 9
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7741 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7741 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7741 INFO  transform  - Transformation of Top@1591916281 OwnerIDs: 9 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7742 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7742 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7742 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7742 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7743 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7743 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7743 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7744 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7744 DEBUG ReloadLog  - Query added to log: SELECT timestamp, auction, bidder, datetime, price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7744 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7745 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7745 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@68044f4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7745 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7745 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7746 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: []
map={bid=[timestamp, auction, bidder, datetime, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@315f43d5 (name: bid)
selfJoin:: 0
timestamp.b
auction.b
bidder.b
datetime.b
price.b
true
getAttributename:: timestamp, bid
getAttributename:: auction, bid
getAttributename:: bidder, bid
getAttributename:: datetime, bid
getAttributename:: price, bid
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
7751 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7751 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7752 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@68fa0ba8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7752 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7752 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7752 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7760 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7760 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7760 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7760 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7761 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7761 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7761 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7762 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7762 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7762 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7762 INFO  transform  - Starting transformation of Top@1756207614 OwnerIDs: 10... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7762 DEBUG transform  - Before transformation: 
TopAO (1756207614) Owner: 10
0 <- 0 MapAO (1214133948) Owner: 10
       0 <- 0 AccessAO (2015301874) Owner: 10
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7766 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7766 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7766 INFO  transform  - Transformation of Top@1756207614 OwnerIDs: 10 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7767 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7767 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7767 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7767 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7768 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7768 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7768 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7768 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7769 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7769 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7769 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7770 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@47a5b70d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7770 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7770 DEBUG StandardExecutor  - Adding following query: SELECT b.* FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7770 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@6e6d5d29 (name: b.*)]
map={bid=[timestamp, auction, bidder, datetime, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@5c530d1e (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
orderedAttributes:: [timestamp, auction, bidder, datetime, price]
ARGUMENT:: 'timestamp','auction','bidder','datetime','price'
7776 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7777 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7777 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6c25e6c4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7777 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7777 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7777 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7783 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7783 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7783 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7784 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7784 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7785 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7785 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7785 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7785 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7785 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7785 INFO  transform  - Starting transformation of Top@1768882706 OwnerIDs: 11... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7785 DEBUG transform  - Before transformation: 
TopAO (1768882706) Owner: 11
0 <- 0 MapAO (1463022229) Owner: 11
       0 <- 0 AccessAO (472991420) Owner: 11
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7789 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7789 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7789 INFO  transform  - Transformation of Top@1768882706 OwnerIDs: 11 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7789 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7790 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7790 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7790 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7790 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7790 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7790 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7791 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7791 DEBUG ReloadLog  - Query added to log: SELECT b.* FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7791 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7792 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7792 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5c8504fd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7792 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7792 DEBUG StandardExecutor  - Adding following query: SELECT b.price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7792 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@6475472c (name: b.price)]
prefix= b
map={bid=[b.price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3f07b12c (name: bid)
selfJoin:: 0
b.price
aliasses::[price, b.price]
true
ATTRIBUTE:: b.price
orderedAttributes:: [b.price]
ARGUMENT:: 'b.price'
7801 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7801 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7801 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4bd1f8dd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7801 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7802 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7802 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7804 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7805 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7806 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7806 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7806 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7807 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7807 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7808 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7808 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7808 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7808 INFO  transform  - Starting transformation of Top@1268974304 OwnerIDs: 12... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7809 DEBUG transform  - Before transformation: 
TopAO (1268974304) Owner: 12
0 <- 0 MapAO (244872973) Owner: 12
       0 <- 0 AccessAO (451312813) Owner: 12
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7813 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7813 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7814 INFO  transform  - Transformation of Top@1268974304 OwnerIDs: 12 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7814 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7815 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7815 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7815 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7815 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7815 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7815 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7816 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7816 DEBUG ReloadLog  - Query added to log: SELECT b.price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7816 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7817 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7817 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@312ab28e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7817 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7817 DEBUG StandardExecutor  - Adding following query: SELECT b.bidder, b.price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7817 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@246f8b8b (name: b.bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@278bb07e (name: b.price)]
prefix= b
prefix= b
map={bid=[b.bidder, b.price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4351c8c3 (name: bid)
selfJoin:: 0
b.bidder
aliasses::[bidder, b.bidder]
b.price
aliasses::[bidder, b.bidder, price, b.price]
true
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.price
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.price
orderedAttributes:: [b.bidder, b.price]
ARGUMENT:: 'b.bidder','b.price'
7822 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7822 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7822 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3381b4fc - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7822 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7822 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b.bidder','price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.bidder','b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7823 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7826 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7826 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7826 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7827 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7827 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7828 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7828 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7828 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7828 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7828 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7828 INFO  transform  - Starting transformation of Top@707531688 OwnerIDs: 13... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7829 DEBUG transform  - Before transformation: 
TopAO (707531688) Owner: 13
0 <- 0 MapAO (191568263) Owner: 13
       0 <- 0 AccessAO (1799635803) Owner: 13
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7832 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7832 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7833 INFO  transform  - Transformation of Top@707531688 OwnerIDs: 13 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7833 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7833 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7833 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7834 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7834 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7834 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b.bidder','price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.bidder','b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7834 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7834 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7835 DEBUG ReloadLog  - Query added to log: SELECT b.bidder, b.price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7835 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7835 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7836 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@20a14b55 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7836 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7836 DEBUG StandardExecutor  - Adding following query: SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7836 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@6da00fb9 (name: b.timestamp), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@a202ccb (name: b.auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@20f12539 (name: b.bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@75b25825 (name: b.datetime), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@18025ced (name: b.price)]
prefix= b
prefix= b
prefix= b
prefix= b
prefix= b
map={bid=[b.timestamp, b.auction, b.bidder, b.datetime, b.price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@13cf7d52 (name: bid)
selfJoin:: 0
b.timestamp
aliasses::[timestamp, b.timestamp]
b.auction
aliasses::[timestamp, b.timestamp, auction, b.auction]
b.bidder
aliasses::[timestamp, b.timestamp, auction, b.auction, bidder, b.bidder]
b.datetime
aliasses::[timestamp, b.timestamp, auction, b.auction, bidder, b.bidder, datetime, b.datetime]
b.price
aliasses::[timestamp, b.timestamp, auction, b.auction, bidder, b.bidder, datetime, b.datetime, price, b.price]
true
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
orderedAttributes:: [b.timestamp, b.auction, b.bidder, b.datetime, b.price]
ARGUMENT:: 'b.timestamp','b.auction','b.bidder','b.datetime','b.price'
7842 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7842 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7842 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3a3e4aff - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7842 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7842 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','b.timestamp','auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.timestamp','b.auction','b.bidder','b.datetime','b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7842 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7847 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7847 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7847 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7848 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7848 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7849 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7849 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7849 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7849 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7849 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7849 INFO  transform  - Starting transformation of Top@1964434661 OwnerIDs: 14... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7850 DEBUG transform  - Before transformation: 
TopAO (1964434661) Owner: 14
0 <- 0 MapAO (1217312754) Owner: 14
       0 <- 0 AccessAO (1585571244) Owner: 14
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7853 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7853 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7853 INFO  transform  - Transformation of Top@1964434661 OwnerIDs: 14 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7853 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7854 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7854 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7854 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7854 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7854 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','b.timestamp','auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.timestamp','b.auction','b.bidder','b.datetime','b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7854 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7855 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7855 DEBUG ReloadLog  - Query added to log: SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7855 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7856 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7856 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5c00384f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7856 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7856 DEBUG StandardExecutor  - Adding following query: SELECT price AS p FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7856 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@1bb564e2 (name: price)]
prefix= bid
map={bid=[p]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@62e6b5c8 (name: bid)
selfJoin:: 0
p
true
ATTRIBUTE:: p
orderedAttributes:: [p]
ARGUMENT:: 'p'
7860 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7860 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7860 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3f792b9b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7860 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7860 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7860 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7863 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7863 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7863 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7864 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7864 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7869 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7869 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7869 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7869 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7869 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7869 INFO  transform  - Starting transformation of Top@641882263 OwnerIDs: 15... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7870 DEBUG transform  - Before transformation: 
TopAO (641882263) Owner: 15
0 <- 0 MapAO (1930837320) Owner: 15
       0 <- 0 AccessAO (1489193907) Owner: 15
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7872 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7873 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7873 INFO  transform  - Transformation of Top@641882263 OwnerIDs: 15 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7873 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7874 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7874 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7874 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7874 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7874 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7874 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7875 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7875 DEBUG ReloadLog  - Query added to log: SELECT price AS p FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7875 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7876 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7876 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@788fcafb - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7876 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7876 DEBUG StandardExecutor  - Adding following query: SELECT price AS p, bidder FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7876 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@25e2a451 (name: price), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@1698ee84 (name: bidder)]
prefix= bid
prefix= bid
map={bid=[p, bidder]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@10c626be (name: bid)
selfJoin:: 0
p
true
ATTRIBUTE:: p
ATTRIBUTE:: bidder
ATTRIBUTE:: p
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@10c626be (name: bid)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@10c626be (name: bid)]
orderedAttributes:: [p, bid.bidder]
ARGUMENT:: 'p','bid.bidder'
7882 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7882 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7882 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2fc0cc3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7883 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7883 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7883 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7887 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7887 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7887 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7888 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7888 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7889 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7889 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7889 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7889 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7889 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7890 INFO  transform  - Starting transformation of Top@1531200408 OwnerIDs: 16... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7890 DEBUG transform  - Before transformation: 
TopAO (1531200408) Owner: 16
0 <- 0 MapAO (212963786) Owner: 16
       0 <- 0 AccessAO (1123321137) Owner: 16
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7894 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7894 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7894 INFO  transform  - Transformation of Top@1531200408 OwnerIDs: 16 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7895 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7895 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7895 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7895 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7896 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7896 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7896 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7896 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7897 DEBUG ReloadLog  - Query added to log: SELECT price AS p, bidder FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7897 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7897 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7898 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4ee37ca3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7898 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7898 DEBUG StandardExecutor  - Adding following query: SELECT price AS p, bidder AS b FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7898 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@53812a9b (name: price), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@14b030a0 (name: bidder)]
prefix= bid
prefix= bid
map={bid=[p, b]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@41e350f1 (name: bid)
selfJoin:: 0
b
p
true
ATTRIBUTE:: p
ATTRIBUTE:: b
ATTRIBUTE:: p
ATTRIBUTE:: b
orderedAttributes:: [p, b]
ARGUMENT:: 'p','b'
7903 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7904 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7904 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@422c3c7a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7904 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7904 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7905 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7908 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7908 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7908 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7909 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7909 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7909 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7910 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7910 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7910 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7910 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7910 INFO  transform  - Starting transformation of Top@235370598 OwnerIDs: 17... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7910 DEBUG transform  - Before transformation: 
TopAO (235370598) Owner: 17
0 <- 0 MapAO (248710794) Owner: 17
       0 <- 0 AccessAO (2083217543) Owner: 17
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7915 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7919 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7919 INFO  transform  - Transformation of Top@235370598 OwnerIDs: 17 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7920 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7922 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7922 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7923 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7923 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7923 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7923 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7924 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7924 DEBUG ReloadLog  - Query added to log: SELECT price AS p, bidder AS b FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7924 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7924 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7924 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@75f5fd58 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7925 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7925 DEBUG StandardExecutor  - Adding following query: SELECT price AS p FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7925 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@306851c7 (name: price)]
prefix= bid
map={bid=[p]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@12bcd0c0 (name: bid)
selfJoin:: 0
p
aliasses::[price, p]
true
ATTRIBUTE:: p
orderedAttributes:: [p]
ARGUMENT:: 'p'
7941 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7941 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7941 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4879f0f2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7941 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7941 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7942 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7943 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7943 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7944 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7944 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7944 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7945 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7945 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7945 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7945 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7946 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7946 INFO  transform  - Starting transformation of Top@1552400354 OwnerIDs: 18... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7946 DEBUG transform  - Before transformation: 
TopAO (1552400354) Owner: 18
0 <- 0 MapAO (803893384) Owner: 18
       0 <- 0 AccessAO (1078566479) Owner: 18
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7949 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7949 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7950 INFO  transform  - Transformation of Top@1552400354 OwnerIDs: 18 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7950 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7950 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7951 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7951 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7951 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7951 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7951 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7952 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7952 DEBUG ReloadLog  - Query added to log: SELECT price AS p FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7952 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7953 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7953 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@62ea3440 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7953 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7953 DEBUG StandardExecutor  - Adding following query: SELECT b.price AS p FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7954 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@556d0826 (name: b.price)]
prefix= b
map={bid=[p]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@66ce957f (name: bid)
selfJoin:: 0
p
aliasses::[price, p]
true
ATTRIBUTE:: p
orderedAttributes:: [p]
ARGUMENT:: 'p'
7958 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7958 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7958 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@55b5f5d2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7958 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7958 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7959 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7960 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7961 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7961 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7961 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7961 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7962 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7963 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7963 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7963 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7963 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7964 INFO  transform  - Starting transformation of Top@1394010463 OwnerIDs: 19... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7964 DEBUG transform  - Before transformation: 
TopAO (1394010463) Owner: 19
0 <- 0 MapAO (1057307776) Owner: 19
       0 <- 0 AccessAO (1819038759) Owner: 19
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7967 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7967 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7967 INFO  transform  - Transformation of Top@1394010463 OwnerIDs: 19 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7968 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7968 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7968 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7968 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7969 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7969 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7969 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7969 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7970 DEBUG ReloadLog  - Query added to log: SELECT b.price AS p FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7970 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7970 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7971 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6111ba37 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7971 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7971 DEBUG StandardExecutor  - Adding following query: SELECT b.price AS p, b.bidder FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7971 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@242aa8d9 (name: b.price), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@5b11a194 (name: b.bidder)]
prefix= b
prefix= b
map={bid=[p, b.bidder]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@37bd68c3 (name: bid)
selfJoin:: 0
b.bidder
aliasses::[bidder, b.bidder]
p
aliasses::[bidder, b.bidder, price, p]
true
ATTRIBUTE:: p
ATTRIBUTE:: b.bidder
ATTRIBUTE:: p
ATTRIBUTE:: b.bidder
orderedAttributes:: [p, b.bidder]
ARGUMENT:: 'p','b.bidder'
7978 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7979 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7979 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@60f7cc1d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7979 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7979 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b.bidder','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7979 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7982 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7982 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7983 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7983 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7983 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7984 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7984 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7984 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7984 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7984 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7984 INFO  transform  - Starting transformation of Top@351656492 OwnerIDs: 20... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7984 DEBUG transform  - Before transformation: 
TopAO (351656492) Owner: 20
0 <- 0 MapAO (316335490) Owner: 20
       0 <- 0 AccessAO (597364637) Owner: 20
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7989 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7990 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7990 INFO  transform  - Transformation of Top@351656492 OwnerIDs: 20 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7990 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7991 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7991 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7991 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7991 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7991 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b.bidder','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7992 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7992 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7992 DEBUG ReloadLog  - Query added to log: SELECT b.price AS p, b.bidder FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7993 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7993 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7993 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@150ab4ed - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7993 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7993 DEBUG StandardExecutor  - Adding following query: SELECT b.price AS p, b.bidder AS b FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7994 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@50fe837a (name: b.price), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@3a62c01e (name: b.bidder)]
prefix= b
prefix= b
map={bid=[p, b]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7a8fa663 (name: bid)
selfJoin:: 0
b
aliasses::[bidder, b]
p
aliasses::[bidder, b, price, p]
true
ATTRIBUTE:: p
ATTRIBUTE:: b
ATTRIBUTE:: p
ATTRIBUTE:: b
orderedAttributes:: [p, b]
ARGUMENT:: 'p','b'
7998 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7998 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7998 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5ce33a58 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7998 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7998 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7999 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8001 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8001 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8001 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8001 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8001 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8002 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8003 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8003 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8003 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8003 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8004 INFO  transform  - Starting transformation of Top@1977618945 OwnerIDs: 21... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8004 DEBUG transform  - Before transformation: 
TopAO (1977618945) Owner: 21
0 <- 0 MapAO (662925691) Owner: 21
       0 <- 0 AccessAO (1995952705) Owner: 21
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8010 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8010 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8010 INFO  transform  - Transformation of Top@1977618945 OwnerIDs: 21 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8010 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8011 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8011 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8011 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8011 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8011 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8011 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8014 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8014 DEBUG ReloadLog  - Query added to log: SELECT b.price AS p, b.bidder AS b FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8015 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8015 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8015 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@47404bea - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8016 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8016 DEBUG StandardExecutor  - Adding following query: SELECT bidder + price AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8016 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@3234f74e (name: bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@7bc10d84 (name: price)]
prefix= bid
prefix= bid
map={bid=[bidder, price]}
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@275fe372 (operators: [+])
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@40e10ff8 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@40e10ff8 (name: bid)]
{bid=[bidder, price], =[d]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@40e10ff8 (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: bidder
ATTRIBUTE:: price
ATTRIBUTE:: d
orderedAttributes:: [['bid.bidder+bid.price','d']]
ARGUMENT:: ['bid.bidder+bid.price','d']
8027 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8027 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8028 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7e38a7fe - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8028 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8028 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['bid.bidder+bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8028 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8037 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8037 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8037 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8037 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8038 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8038 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8039 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8039 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8040 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8040 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8040 INFO  transform  - Starting transformation of Top@1411543296 OwnerIDs: 22... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8040 DEBUG transform  - Before transformation: 
TopAO (1411543296) Owner: 22
0 <- 0 MapAO (1800967368) Owner: 22
       0 <- 0 AccessAO (338887787) Owner: 22
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8043 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8044 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8044 INFO  transform  - Transformation of Top@1411543296 OwnerIDs: 22 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8044 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8045 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8045 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8045 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8045 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8045 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['bid.bidder+bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8045 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8046 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8046 DEBUG ReloadLog  - Query added to log: SELECT bidder + price AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8046 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8049 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8049 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@20b5f2ac - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8049 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8049 DEBUG StandardExecutor  - Adding following query: SELECT 123.4 * price AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8049 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@62fad19 (name: price)]
prefix= bid
map={bid=[price]}
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@47dbb1e2 (operators: [*])
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@74cadd41 (name: bid)]
{bid=[price], =[d]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@74cadd41 (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: price
ATTRIBUTE:: d
orderedAttributes:: [['123.4*bid.price','d']]
ARGUMENT:: ['123.4*bid.price','d']
8056 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8056 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8056 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2e54db99 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8056 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8056 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['123.4*bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8057 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8063 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8063 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8063 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8063 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8063 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8064 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8064 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8064 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8064 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8064 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8065 INFO  transform  - Starting transformation of Top@2000469839 OwnerIDs: 23... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8065 DEBUG transform  - Before transformation: 
TopAO (2000469839) Owner: 23
0 <- 0 MapAO (1800693087) Owner: 23
       0 <- 0 AccessAO (1717473929) Owner: 23
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8069 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8069 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8069 INFO  transform  - Transformation of Top@2000469839 OwnerIDs: 23 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8070 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8070 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8070 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8071 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8071 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8071 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['123.4*bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8071 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8071 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8072 DEBUG ReloadLog  - Query added to log: SELECT 123.4 * price AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8072 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8072 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8073 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@63192798 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8073 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8073 DEBUG StandardExecutor  - Adding following query: SELECT 123.4 AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8073 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: []
map={}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@58e6d4b8 (name: bid)
selfJoin:: 0
true
getAttributename:: timestamp, bid
getAttributename:: auction, bid
getAttributename:: bidder, bid
getAttributename:: datetime, bid
getAttributename:: price, bid
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
8077 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8077 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8078 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1de5f0ef - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8078 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8078 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8078 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8083 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8083 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8086 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8086 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8087 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8087 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8087 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8087 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8087 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8088 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8088 INFO  transform  - Starting transformation of Top@883521348 OwnerIDs: 24... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8090 DEBUG transform  - Before transformation: 
TopAO (883521348) Owner: 24
0 <- 0 MapAO (1115013644) Owner: 24
       0 <- 0 AccessAO (2086068243) Owner: 24
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8093 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8093 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8093 INFO  transform  - Transformation of Top@883521348 OwnerIDs: 24 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8093 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8094 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8094 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8094 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8094 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8094 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8094 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8095 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8095 DEBUG ReloadLog  - Query added to log: SELECT 123.4 AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8095 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8096 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8096 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1d7f7be7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8096 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8096 DEBUG StandardExecutor  - Adding following query: SELECT 123.4 AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8096 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@1ddae9b5 (name: price)]
prefix= bid
map={bid=[price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@427b5f92 (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: price
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@427b5f92 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@427b5f92 (name: bid)]
orderedAttributes:: [bid.price]
ARGUMENT:: 'bid.price'
8106 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8106 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8106 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@24bdb479 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8106 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8106 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8107 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8109 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8110 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8110 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8111 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8111 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8111 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8112 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8112 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8112 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8112 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8112 INFO  transform  - Starting transformation of Top@879311295 OwnerIDs: 25... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8113 DEBUG transform  - Before transformation: 
TopAO (879311295) Owner: 25
0 <- 0 MapAO (1274247563) Owner: 25
       0 <- 0 AccessAO (1483145520) Owner: 25
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8115 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8116 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8116 INFO  transform  - Transformation of Top@879311295 OwnerIDs: 25 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8116 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8117 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8117 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8117 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8117 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8118 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8118 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8118 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8119 DEBUG ReloadLog  - Query added to log: SELECT 123.4 AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8119 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8119 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8120 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7db82169 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8120 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8120 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price) AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8120 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3276732 (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3f28bd56 (operators: null)
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@31e3250d (name: bid)]
FUNCTIONSTORES:: [DolToEur()]
TYPE:: Double
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@19fe4644 (name: price)]
prefix= bid
map={bid=[price]}
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3276732 (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3f28bd56 (operators: null)
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@31e3250d (name: bid)]
{bid=[price], =[d]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@31e3250d (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: d
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
orderedAttributes:: [['DolToEur(bid.price)','d']]
ARGUMENT:: ['DolToEur(bid.price)','d']
8134 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8134 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8134 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@21d8bcbe - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8135 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8135 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price)','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8135 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8137 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8137 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8137 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8137 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8137 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8138 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8138 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8138 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8138 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8138 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8139 INFO  transform  - Starting transformation of Top@188791662 OwnerIDs: 26... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8139 DEBUG transform  - Before transformation: 
TopAO (188791662) Owner: 26
0 <- 0 MapAO (61426020) Owner: 26
       0 <- 0 AccessAO (1347016882) Owner: 26
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8141 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8141 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8144 INFO  transform  - Transformation of Top@188791662 OwnerIDs: 26 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8144 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8146 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8146 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8146 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8146 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8146 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8147 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8147 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8147 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price) AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8147 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8148 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8148 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@62e70ea3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8148 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8148 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price) AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8149 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@675d8c96 (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@741b3bc3 (operators: null)
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2ed3b1f5 (name: bid)]
FUNCTIONSTORES:: [DolToEur()]
TYPE:: Double
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@63648ee9 (name: price)]
prefix= bid
map={bid=[price]}
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@675d8c96 (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@741b3bc3 (operators: null)
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2ed3b1f5 (name: bid)]
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2ed3b1f5 (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: d
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2ed3b1f5 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2ed3b1f5 (name: bid)]
ATTRIBUTE:: d
orderedAttributes:: [['DolToEur(bid.price)','d'], bid.price]
ARGUMENT:: ['DolToEur(bid.price)','d'],'bid.price'
8156 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8156 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8157 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@68d6972f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8157 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8157 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price)','d'],'bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8157 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8160 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8161 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8161 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8161 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8161 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8162 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8162 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8162 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8162 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8162 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8163 INFO  transform  - Starting transformation of Top@1415439780 OwnerIDs: 27... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8163 DEBUG transform  - Before transformation: 
TopAO (1415439780) Owner: 27
0 <- 0 MapAO (703555670) Owner: 27
       0 <- 0 AccessAO (179808568) Owner: 27
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8166 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8167 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8168 INFO  transform  - Transformation of Top@1415439780 OwnerIDs: 27 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8171 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8172 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8173 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8173 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8173 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8174 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','d'],'bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8174 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8174 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8175 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price) AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8175 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8175 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8176 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@592e843a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8176 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8176 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price) * auction AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8176 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@423e4cbb (name: price), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@6e16b8b5 (name: auction)]
prefix= bid
prefix= bid
map={bid=[price, auction]}
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@43b4fe19 (operators: [*])
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@25ddbbbb (operators: null)
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@1536602f (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@1536602f (name: bid)]
{bid=[price, auction], =[d]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@1536602f (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: price
ATTRIBUTE:: auction
ATTRIBUTE:: d
orderedAttributes:: [['DolToEur(bid.price)*bid.auction','d']]
ARGUMENT:: ['DolToEur(bid.price)*bid.auction','d']
8183 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8183 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8183 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4ebea12c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8184 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8184 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.auction','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8184 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8187 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8188 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8188 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8188 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8188 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8189 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8189 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8189 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8189 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8189 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8190 INFO  transform  - Starting transformation of Top@1276544608 OwnerIDs: 28... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8190 DEBUG transform  - Before transformation: 
TopAO (1276544608) Owner: 28
0 <- 0 MapAO (1387620926) Owner: 28
       0 <- 0 AccessAO (265348534) Owner: 28
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8193 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8193 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8194 INFO  transform  - Transformation of Top@1276544608 OwnerIDs: 28 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8194 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8195 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8195 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8195 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8195 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8196 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.auction','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8196 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8196 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8197 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price) * auction AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8197 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8197 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8198 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@119f1f2a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8198 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8198 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price) * price AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8198 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@5b970f7 (name: price)]
prefix= bid
map={bid=[price]}
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7fd4acee (operators: [*])
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@165b8a71 (operators: null)
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6175619b (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6175619b (name: bid)]
{bid=[price], =[d]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6175619b (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: price
ATTRIBUTE:: d
orderedAttributes:: [['DolToEur(bid.price)*bid.price','d']]
ARGUMENT:: ['DolToEur(bid.price)*bid.price','d']
8227 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8228 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8228 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2f058b8a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8228 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8228 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8228 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8236 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8238 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8238 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8238 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8238 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8239 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8239 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8240 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8240 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8240 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8240 INFO  transform  - Starting transformation of Top@1335061928 OwnerIDs: 29... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8240 DEBUG transform  - Before transformation: 
TopAO (1335061928) Owner: 29
0 <- 0 MapAO (1108706191) Owner: 29
       0 <- 0 AccessAO (1160487387) Owner: 29
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8243 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8243 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8244 INFO  transform  - Transformation of Top@1335061928 OwnerIDs: 29 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8244 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8245 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8245 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8245 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8245 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8245 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8245 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8246 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8246 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price) * price AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8246 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8247 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8247 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2d10e0b1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8248 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8248 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price) * auction AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8248 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@172ca72b (name: price), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@5bda80bf (name: auction)]
prefix= bid
prefix= bid
map={bid=[price, auction]}
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@71e5f61d (operators: [*])
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@2ce86164 (operators: null)
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@5e8f9e2d (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@5e8f9e2d (name: bid)]
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@5e8f9e2d (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: price
ATTRIBUTE:: auction
ATTRIBUTE:: d
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@5e8f9e2d (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@5e8f9e2d (name: bid)]
ATTRIBUTE:: auction
ATTRIBUTE:: d
orderedAttributes:: [['DolToEur(bid.price)*bid.auction','d'], bid.price]
ARGUMENT:: ['DolToEur(bid.price)*bid.auction','d'],'bid.price'
8254 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8254 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8254 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@51df223b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8254 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8254 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.auction','d'],'bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8255 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8258 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8258 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8258 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8259 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8259 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8259 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8259 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8259 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8259 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8260 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8260 INFO  transform  - Starting transformation of Top@480402503 OwnerIDs: 30... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8260 DEBUG transform  - Before transformation: 
TopAO (480402503) Owner: 30
0 <- 0 MapAO (100445376) Owner: 30
       0 <- 0 AccessAO (1396385390) Owner: 30
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8263 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8264 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8264 INFO  transform  - Transformation of Top@480402503 OwnerIDs: 30 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8264 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8265 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8265 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8265 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8265 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8266 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.auction','d'],'bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8266 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8266 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8267 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price) * auction AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8267 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8267 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8267 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@34645867 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8268 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8268 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(123.4) AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8268 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@60b71e8f (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@1255b1d1 (operators: null)
FUNCTIONSTORES:: [DolToEur()]
TYPE:: Double
attributes.: []
map={}
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@60b71e8f (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@1255b1d1 (operators: null)
{=[d]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@464649c (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: d
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
orderedAttributes:: [['DolToEur(123.4)','d']]
ARGUMENT:: ['DolToEur(123.4)','d']
8277 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8278 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8278 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7c22d4f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8278 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8278 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(123.4)','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8278 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8280 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8281 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8281 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8281 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8281 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8282 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8282 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8282 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8282 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8282 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8282 INFO  transform  - Starting transformation of Top@665137804 OwnerIDs: 31... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8282 DEBUG transform  - Before transformation: 
TopAO (665137804) Owner: 31
0 <- 0 MapAO (509559152) Owner: 31
       0 <- 0 AccessAO (1815370847) Owner: 31
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8285 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8285 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8286 INFO  transform  - Transformation of Top@665137804 OwnerIDs: 31 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8286 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8288 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8288 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8288 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8288 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8288 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(123.4)','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8289 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8289 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8290 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(123.4) AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8290 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8290 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8291 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@674c583e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8291 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8291 DEBUG StandardExecutor  - Adding following query: SELECT 'test' AS s FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8291 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: []
map={}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@5ab14cb9 (name: bid)
selfJoin:: 0
true
getAttributename:: timestamp, bid
getAttributename:: auction, bid
getAttributename:: bidder, bid
getAttributename:: datetime, bid
getAttributename:: price, bid
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
8296 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8297 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8299 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5fb97279 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8299 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8299 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8299 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8303 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8304 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8304 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8304 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8304 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8304 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8304 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8305 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8305 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8305 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8305 INFO  transform  - Starting transformation of Top@1878992188 OwnerIDs: 32... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8305 DEBUG transform  - Before transformation: 
TopAO (1878992188) Owner: 32
0 <- 0 MapAO (1818449913) Owner: 32
       0 <- 0 AccessAO (1495161082) Owner: 32
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8307 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8307 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8308 INFO  transform  - Transformation of Top@1878992188 OwnerIDs: 32 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8308 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8308 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8309 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8309 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8309 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8309 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8309 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8309 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8310 DEBUG ReloadLog  - Query added to log: SELECT 'test' AS s FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8310 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8310 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8310 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2cab9998 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8311 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8311 DEBUG StandardExecutor  - Adding following query: SELECT 'test' AS s, 123.4 AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8311 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: []
map={}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@669513d8 (name: bid)
selfJoin:: 0
true
getAttributename:: timestamp, bid
getAttributename:: auction, bid
getAttributename:: bidder, bid
getAttributename:: datetime, bid
getAttributename:: price, bid
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
8315 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8315 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8315 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3a1d593e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8315 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8315 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8315 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8318 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8318 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8319 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8319 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8319 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8319 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8319 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8320 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8320 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8320 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8320 INFO  transform  - Starting transformation of Top@118555812 OwnerIDs: 33... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8320 DEBUG transform  - Before transformation: 
TopAO (118555812) Owner: 33
0 <- 0 MapAO (1233505227) Owner: 33
       0 <- 0 AccessAO (1928621590) Owner: 33
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8324 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8324 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8324 INFO  transform  - Transformation of Top@118555812 OwnerIDs: 33 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8325 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8325 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8326 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8326 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8326 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8326 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8326 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8327 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8327 DEBUG ReloadLog  - Query added to log: SELECT 'test' AS s, 123.4 AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8327 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8328 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8328 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@33617539 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8328 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8329 DEBUG StandardExecutor  - Adding following query: SELECT 'test' AS s, 123.4 AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8329 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@5db4c359 (name: price)]
prefix= bid
map={bid=[price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@209775a9 (name: bid)
selfJoin:: 0
true
ATTRIBUTE:: price
ATTRIBUTE:: price
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@209775a9 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@209775a9 (name: bid)]
orderedAttributes:: [bid.price]
ARGUMENT:: 'bid.price'
8342 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8342 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8342 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@18e7143f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8342 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8342 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8343 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8344 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8344 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8344 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8344 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8344 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8345 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8345 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8345 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8345 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8346 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8346 INFO  transform  - Starting transformation of Top@247515192 OwnerIDs: 34... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8346 DEBUG transform  - Before transformation: 
TopAO (247515192) Owner: 34
0 <- 0 MapAO (1850137076) Owner: 34
       0 <- 0 AccessAO (1556520190) Owner: 34
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8350 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8351 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8351 INFO  transform  - Transformation of Top@247515192 OwnerIDs: 34 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8351 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8352 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8352 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8352 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8353 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8353 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8353 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8354 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8354 DEBUG ReloadLog  - Query added to log: SELECT 'test' AS s, 123.4 AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8354 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8355 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8355 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7f811d00 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8355 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8355 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid AS b WHERE b.bidder > 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8356 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@754777cd (name: b.bidder)]
prefix= b
map={bid=[b.bidder]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2b52c0d6 (name: bid)
selfJoin:: 0
b.bidder
aliasses::[bidder, b.bidder]
true
getAttributename:: b.bidder, null
8369 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8369 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8369 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@372ea2bc - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8369 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8369 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder>10'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8369 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8372 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8372 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8372 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8372 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8373 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8389 DEBUG ruleengine  - Ruleengine needed 16 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8389 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8389 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8389 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8389 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8390 INFO  transform  - Starting transformation of Top@1367068823 OwnerIDs: 35... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8390 DEBUG transform  - Before transformation: 
TopAO (1367068823) Owner: 35
0 <- 0 RenameAO (338620258) Owner: 35
       0 <- 0 SelectAO (1251788491) Owner: 35
              0 <- 0 AccessAO (1502668485) Owner: 35
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8398 DEBUG ruleengine  - Ruleengine needed 7 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8398 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8399 INFO  transform  - Transformation of Top@1367068823 OwnerIDs: 35 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8399 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8400 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8400 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8401 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8401 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8401 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder>10'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8401 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8401 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8403 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid AS b WHERE b.bidder > 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8403 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8403 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8403 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@64712be - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8403 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8404 DEBUG StandardExecutor  - Adding following query: SELECT b.* FROM bid AS b WHERE b.bidder > 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8404 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@30ed9c6c (name: b.*), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@782a4fff (name: b.bidder)]
prefix= b
map={bid=[timestamp, auction, bidder, datetime, price, b.bidder]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@46c670a6 (name: bid)
selfJoin:: 0
b.bidder
aliasses::[bidder, b.bidder]
true
getAttributename:: b.bidder, null
8414 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8415 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8415 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@59fc684e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8415 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8415 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder>10'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8415 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8418 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8418 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8418 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8418 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8419 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8419 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8420 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8420 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8420 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8420 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8420 INFO  transform  - Starting transformation of Top@515520300 OwnerIDs: 36... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8420 DEBUG transform  - Before transformation: 
TopAO (515520300) Owner: 36
0 <- 0 RenameAO (569138567) Owner: 36
       0 <- 0 SelectAO (637091966) Owner: 36
              0 <- 0 AccessAO (1428494531) Owner: 36
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8425 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8426 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8426 INFO  transform  - Transformation of Top@515520300 OwnerIDs: 36 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8426 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8427 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8427 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8427 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8427 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8428 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder>10'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8428 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8428 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8428 DEBUG ReloadLog  - Query added to log: SELECT b.* FROM bid AS b WHERE b.bidder > 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8429 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8429 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8429 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@61d9efe0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8429 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8429 DEBUG StandardExecutor  - Adding following query: SELECT b.price FROM bid AS b WHERE b.price < 150.0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8430 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@e6516e (name: b.price)]
prefix= b
map={bid=[b.price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6de54b40 (name: bid)
selfJoin:: 0
b.price
aliasses::[price, b.price]
true
getAttributename:: b.price, null
ATTRIBUTE:: b.price
orderedAttributes:: [b.price]
ARGUMENT:: 'b.price'
8435 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8435 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8435 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@43ed0ff3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8436 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8436 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.price<150.0'},operator_1)
operator_3 = MAP({expressions=['b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8436 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8440 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8440 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8440 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8441 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8441 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8442 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8442 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8442 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8442 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8442 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8442 INFO  transform  - Starting transformation of Top@1851255134 OwnerIDs: 37... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8443 DEBUG transform  - Before transformation: 
TopAO (1851255134) Owner: 37
0 <- 0 MapAO (659937029) Owner: 37
       0 <- 0 SelectAO (1457226878) Owner: 37
              0 <- 0 AccessAO (121678773) Owner: 37
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8447 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8447 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8448 INFO  transform  - Transformation of Top@1851255134 OwnerIDs: 37 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8448 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8449 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8449 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8449 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8450 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8450 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.price<150.0'},operator_1)
operator_3 = MAP({expressions=['b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8450 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8451 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8451 DEBUG ReloadLog  - Query added to log: SELECT b.price FROM bid AS b WHERE b.price < 150.0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8451 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8452 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8452 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3f093abe - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8452 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8452 DEBUG StandardExecutor  - Adding following query: SELECT b.bidder, b.price FROM bid AS b WHERE b.bidder =  1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8452 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@e24ddd0 (name: b.bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@6f70f32f (name: b.price)]
prefix= b
prefix= b
map={bid=[b.bidder, b.price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@548e76f1 (name: bid)
selfJoin:: 0
b.bidder
aliasses::[bidder, b.bidder]
b.price
aliasses::[bidder, b.bidder, price, b.price]
true
getAttributename:: b.bidder, null
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.price
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.price
orderedAttributes:: [b.bidder, b.price]
ARGUMENT:: 'b.bidder','b.price'
8458 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8458 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8459 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5aabbb29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8459 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8459 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b.bidder','price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder==1'},operator_1)
operator_3 = MAP({expressions=['b.bidder','b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8459 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8463 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8463 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8463 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8463 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8464 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8464 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8464 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8464 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8465 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8465 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8465 INFO  transform  - Starting transformation of Top@1029898472 OwnerIDs: 38... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8465 DEBUG transform  - Before transformation: 
TopAO (1029898472) Owner: 38
0 <- 0 MapAO (461516748) Owner: 38
       0 <- 0 SelectAO (614580607) Owner: 38
              0 <- 0 AccessAO (1443900956) Owner: 38
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8468 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8468 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8468 INFO  transform  - Transformation of Top@1029898472 OwnerIDs: 38 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8469 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8469 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8469 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8469 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8470 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8470 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b.bidder','price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder==1'},operator_1)
operator_3 = MAP({expressions=['b.bidder','b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8470 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8470 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8471 DEBUG ReloadLog  - Query added to log: SELECT b.bidder, b.price FROM bid AS b WHERE b.bidder =  1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8471 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8471 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8471 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@10b892d5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8472 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8472 DEBUG StandardExecutor  - Adding following query: SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b WHERE b.price > 100.0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8472 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@3546d80f (name: b.timestamp), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@579d011c (name: b.auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@3670f00 (name: b.bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@452e26d0 (name: b.datetime), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@46ab18da (name: b.price)]
prefix= b
prefix= b
prefix= b
prefix= b
prefix= b
map={bid=[b.timestamp, b.auction, b.bidder, b.datetime, b.price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@790174f2 (name: bid)
selfJoin:: 0
b.timestamp
aliasses::[timestamp, b.timestamp]
b.auction
aliasses::[timestamp, b.timestamp, auction, b.auction]
b.bidder
aliasses::[timestamp, b.timestamp, auction, b.auction, bidder, b.bidder]
b.datetime
aliasses::[timestamp, b.timestamp, auction, b.auction, bidder, b.bidder, datetime, b.datetime]
b.price
aliasses::[timestamp, b.timestamp, auction, b.auction, bidder, b.bidder, datetime, b.datetime, price, b.price]
true
getAttributename:: b.price, null
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
orderedAttributes:: [b.timestamp, b.auction, b.bidder, b.datetime, b.price]
ARGUMENT:: 'b.timestamp','b.auction','b.bidder','b.datetime','b.price'
8477 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8477 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8477 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@42257bdd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8477 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8477 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','b.timestamp','auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.price>100.0'},operator_1)
operator_3 = MAP({expressions=['b.timestamp','b.auction','b.bidder','b.datetime','b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8478 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8483 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8483 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8483 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8484 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8484 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8485 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8485 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8485 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8485 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8485 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8486 INFO  transform  - Starting transformation of Top@310276293 OwnerIDs: 39... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8486 DEBUG transform  - Before transformation: 
TopAO (310276293) Owner: 39
0 <- 0 MapAO (1494277749) Owner: 39
       0 <- 0 SelectAO (1091107430) Owner: 39
              0 <- 0 AccessAO (521342639) Owner: 39
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8498 DEBUG ruleengine  - Ruleengine needed 11 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8498 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8499 INFO  transform  - Transformation of Top@310276293 OwnerIDs: 39 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8499 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8500 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8500 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8501 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8501 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8501 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','b.timestamp','auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.price>100.0'},operator_1)
operator_3 = MAP({expressions=['b.timestamp','b.auction','b.bidder','b.datetime','b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8501 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8502 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8502 DEBUG ReloadLog  - Query added to log: SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b WHERE b.price > 100.0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8502 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8503 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8503 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2f66e802 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8503 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8503 DEBUG StandardExecutor  - Adding following query: SELECT price AS p FROM bid WHERE p < 100 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8504 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@76318a7d (name: price), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@2a492f2a (name: p)]
prefix= bid
map={bid=[p]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3277e499 (name: bid)
selfJoin:: 0
p
true
getAttributename:: p, null
ATTRIBUTE:: p
orderedAttributes:: [p]
ARGUMENT:: 'p'
8508 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8508 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8509 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@585811a4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8509 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8509 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='p<100'},operator_1)
operator_3 = MAP({expressions=['p']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8510 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8514 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8514 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8514 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8515 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8515 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8516 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8516 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8516 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8516 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8516 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8517 INFO  transform  - Starting transformation of Top@2061226112 OwnerIDs: 40... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8517 DEBUG transform  - Before transformation: 
TopAO (2061226112) Owner: 40
0 <- 0 MapAO (1103017075) Owner: 40
       0 <- 0 SelectAO (1443173326) Owner: 40
              0 <- 0 AccessAO (318794136) Owner: 40
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8523 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8523 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8523 INFO  transform  - Transformation of Top@2061226112 OwnerIDs: 40 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8523 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8524 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8524 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8525 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8525 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8525 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='p<100'},operator_1)
operator_3 = MAP({expressions=['p']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8526 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8527 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8527 DEBUG ReloadLog  - Query added to log: SELECT price AS p FROM bid WHERE p < 100 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8528 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8528 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8529 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@26b894bd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8529 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8529 DEBUG StandardExecutor  - Adding following query: SELECT price AS p, bidder FROM bid WHERE p > 100 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8529 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@30b34287 (name: price), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@5489c777 (name: bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@3676ac27 (name: p)]
prefix= bid
prefix= bid
map={bid=[p, bidder]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@62f87c44 (name: bid)
selfJoin:: 0
p
true
getAttributename:: p, null
ATTRIBUTE:: p
ATTRIBUTE:: bidder
ATTRIBUTE:: p
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@62f87c44 (name: bid)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@62f87c44 (name: bid)]
orderedAttributes:: [p, bid.bidder]
ARGUMENT:: 'p','bid.bidder'
8535 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8535 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8536 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@48f5bde6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8536 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8536 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='p>100'},operator_1)
operator_3 = MAP({expressions=['p','bid.bidder']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8536 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8540 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8540 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8540 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8541 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8541 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8541 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8542 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8542 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8542 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8542 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8542 INFO  transform  - Starting transformation of Top@843867341 OwnerIDs: 41... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8542 DEBUG transform  - Before transformation: 
TopAO (843867341) Owner: 41
0 <- 0 MapAO (324507700) Owner: 41
       0 <- 0 SelectAO (616443292) Owner: 41
              0 <- 0 AccessAO (1540832538) Owner: 41
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8545 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8545 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8546 INFO  transform  - Transformation of Top@843867341 OwnerIDs: 41 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8546 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8547 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8547 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8547 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8547 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8547 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='p>100'},operator_1)
operator_3 = MAP({expressions=['p','bid.bidder']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8548 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8548 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8548 DEBUG ReloadLog  - Query added to log: SELECT price AS p, bidder FROM bid WHERE p > 100 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8549 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8549 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8549 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@43c67247 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8550 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8550 DEBUG StandardExecutor  - Adding following query: SELECT price AS p, bidder AS b FROM bid WHERE b=1 AND p <100 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8550 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@649f2009 (name: price), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@14bb2297 (name: bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@69adf72c (name: b), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@797501a (name: p)]
prefix= bid
prefix= bid
map={bid=[p, b]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@1a15b789 (name: bid)
selfJoin:: 0
b
p
true
getAttributename:: b, null
getAttributename:: p, null
ATTRIBUTE:: p
ATTRIBUTE:: b
ATTRIBUTE:: p
ATTRIBUTE:: b
orderedAttributes:: [p, b]
ARGUMENT:: 'p','b'
8558 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8558 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8558 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@57f791c6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8558 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8558 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='b==1&&p<100'},operator_1)
operator_3 = MAP({expressions=['p','b']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8558 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8562 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8564 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8564 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8564 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8565 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8568 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8568 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8568 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8568 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8568 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8569 INFO  transform  - Starting transformation of Top@788048067 OwnerIDs: 42... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8569 DEBUG transform  - Before transformation: 
TopAO (788048067) Owner: 42
0 <- 0 MapAO (619985571) Owner: 42
       0 <- 0 SelectAO (1677543539) Owner: 42
              0 <- 0 SelectAO (504478805) Owner: 42
                     0 <- 0 AccessAO (1967432164) Owner: 42
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8572 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8572 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8573 INFO  transform  - Transformation of Top@788048067 OwnerIDs: 42 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8573 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8574 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8574 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8574 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8574 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8575 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='b==1&&p<100'},operator_1)
operator_3 = MAP({expressions=['p','b']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8575 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8575 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8575 DEBUG ReloadLog  - Query added to log: SELECT price AS p, bidder AS b FROM bid WHERE b=1 AND p <100 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8576 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8576 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8576 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@38875e7d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8577 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8577 DEBUG StandardExecutor  - Adding following query: SELECT AVG(price) AS aprice FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8577 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@d816dde (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@6e33c391 (operators: null)
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6c451c9c (name: bid)]
FUNCTIONSTORES:: [avg(), AVG(), AVG()]
8581 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
8581 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
8581 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@31c269fd (name: price)]
prefix= bid
map={bid=[price]}
{bid=[price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6c451c9c (name: bid)
selfJoin:: 0
true
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6c451c9c (name: bid)]
getAttributename:: bid.price, null
bid.price
[bid, price]
ATTRIBUTE:: price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: aprice
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
orderedAttributes:: [aprice]
ARGUMENT:: 'aprice'
8584 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8584 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8584 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@372b0d86 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8585 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8585 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['aprice']},AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']]},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8585 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8588 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8588 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8588 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8588 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8589 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8589 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8589 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8590 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8590 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8590 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8590 INFO  transform  - Starting transformation of Top@443502884 OwnerIDs: 43... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8590 DEBUG transform  - Before transformation: 
TopAO (443502884) Owner: 43
0 <- 0 MapAO (517693873) Owner: 43
       0 <- 0 AggregateAO (247644034) Owner: 43
              0 <- 0 AccessAO (214313531) Owner: 43
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8637 DEBUG ruleengine  - Ruleengine needed 46 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8637 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8638 INFO  transform  - Transformation of Top@443502884 OwnerIDs: 43 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8638 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8639 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8639 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8640 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8640 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8640 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['aprice']},AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']]},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8640 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8641 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8641 DEBUG ReloadLog  - Query added to log: SELECT AVG(price) AS aprice FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8641 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8642 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8642 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@ecf9fb3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8642 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8643 DEBUG StandardExecutor  - Adding following query: SELECT AVG(price) AS aprice FROM bid GROUP BY auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8643 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@4593ff34 (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@37d3d232 (operators: null)
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@30c0ccff (name: bid)]
FUNCTIONSTORES:: [avg(), AVG(), AVG()]
8646 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
8646 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
8647 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@581d969c (name: price)]
prefix= bid
map={bid=[price]}
{bid=[price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@30c0ccff (name: bid)
selfJoin:: 0
true
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@30c0ccff (name: bid)]
getAttributename:: bid.price, null
bid.price
[bid, price]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@30c0ccff (name: bid)]
ATTRIBUTE:: price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: aprice
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
orderedAttributes:: [aprice]
ARGUMENT:: 'aprice'
8651 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8651 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8651 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2b46a8c1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8651 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8651 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['aprice']},AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8652 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8653 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8654 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8654 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8654 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8654 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8655 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8655 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8655 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8655 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8656 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8656 INFO  transform  - Starting transformation of Top@456785282 OwnerIDs: 44... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8656 DEBUG transform  - Before transformation: 
TopAO (456785282) Owner: 44
0 <- 0 MapAO (1043317832) Owner: 44
       0 <- 0 AggregateAO (560465923) Owner: 44
              0 <- 0 AccessAO (1485485458) Owner: 44
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8659 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8659 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8659 INFO  transform  - Transformation of Top@456785282 OwnerIDs: 44 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8659 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8661 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8661 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8661 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8662 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8662 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['aprice']},AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8662 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8663 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8663 DEBUG ReloadLog  - Query added to log: SELECT AVG(price) AS aprice FROM bid GROUP BY auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8663 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8664 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8664 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3228d990 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8665 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8665 DEBUG StandardExecutor  - Adding following query: SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8665 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@50b8ae8d (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@255990cc (operators: null)
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@51c929ae (name: bid)]
FUNCTIONSTORES:: [avg(), AVG(), AVG()]
8674 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
8674 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
8674 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@3c8bdd5b (name: auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@29d2d081 (name: price)]
prefix= bid
prefix= bid
map={bid=[auction, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@51c929ae (name: bid)
selfJoin:: 0
true
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@51c929ae (name: bid)]
getAttributename:: bid.price, null
bid.price
[bid, price]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@51c929ae (name: bid)]
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@51c929ae (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@51c929ae (name: bid)]
ATTRIBUTE:: price
ATTRIBUTE:: aprice
ATTRIBUTE:: auction
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: aprice
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
orderedAttributes:: [bid.auction, aprice]
ARGUMENT:: 'bid.auction','aprice'
8678 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8678 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8678 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@40e4ea87 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8679 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8679 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['bid.auction','aprice']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8679 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8682 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8682 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8682 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8683 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8683 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8683 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8683 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8684 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8684 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8684 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8684 INFO  transform  - Starting transformation of Top@49969897 OwnerIDs: 45... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8684 DEBUG transform  - Before transformation: 
TopAO (49969897) Owner: 45
0 <- 0 MapAO (1970779713) Owner: 45
       0 <- 0 AggregateAO (923013679) Owner: 45
              0 <- 0 AccessAO (827579900) Owner: 45
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8687 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8687 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8687 INFO  transform  - Transformation of Top@49969897 OwnerIDs: 45 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8688 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8690 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8691 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8691 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8691 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8691 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['bid.auction','aprice']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8691 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8692 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8693 DEBUG ReloadLog  - Query added to log: SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8693 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8694 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8694 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3aaf4f07 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8694 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8694 DEBUG StandardExecutor  - Adding following query: SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction HAVING aprice<100.0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8694 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@18e8473e (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@5a2f016d (operators: null)
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@1a38ba58 (name: bid)]
FUNCTIONSTORES:: [avg(), AVG(), AVG()]
8698 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
8698 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
8699 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@3ad394e6 (name: auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@6058e535 (name: price)]
prefix= bid
prefix= bid
map={bid=[auction, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@1a38ba58 (name: bid)
selfJoin:: 0
true
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@1a38ba58 (name: bid)]
getAttributename:: bid.price, null
bid.price
[bid, price]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@1a38ba58 (name: bid)]
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@1a38ba58 (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@1a38ba58 (name: bid)]
ATTRIBUTE:: price
ATTRIBUTE:: aprice
ATTRIBUTE:: auction
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: aprice
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
orderedAttributes:: [bid.auction, aprice]
ARGUMENT:: 'bid.auction','aprice'
8701 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8701 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8701 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@42deb43a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8701 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8701 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['bid.auction','aprice']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8701 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8703 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8704 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8704 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8704 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8704 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8705 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8705 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8705 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8705 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8705 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8705 INFO  transform  - Starting transformation of Top@1637601612 OwnerIDs: 46... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8706 DEBUG transform  - Before transformation: 
TopAO (1637601612) Owner: 46
0 <- 0 MapAO (842957574) Owner: 46
       0 <- 0 AggregateAO (170106909) Owner: 46
              0 <- 0 AccessAO (1255109302) Owner: 46
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8708 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8708 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8709 INFO  transform  - Transformation of Top@1637601612 OwnerIDs: 46 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8709 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8711 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8711 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8711 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8711 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8711 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['bid.auction','aprice']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8712 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8712 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8712 DEBUG ReloadLog  - Query added to log: SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction HAVING aprice<100.0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8712 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8713 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8713 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3c1e3314 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8713 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8713 DEBUG StandardExecutor  - Adding following query: SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8714 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@78e16155 (name: auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@54a3ab8f (name: bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@1968a49c (name: bid.bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@6a1ebcff (name: person.id)]
prefix= bid
prefix= bid
prefix= bid
prefix= person
map={bid=[auction, bidder, bid.bidder], person=[person.id]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@19868320 (name: bid)
selfJoin:: 0
true
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@50b0bc4c (name: person)
selfJoin:: 0
true
getAttributename:: bid.bidder, null
getAttributename:: person.id, null
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@19868320 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@50b0bc4c (name: person)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@19868320 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@50b0bc4c (name: person)]
ATTRIBUTE:: bidder
ATTRIBUTE:: bid.bidder
ATTRIBUTE:: person.id
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@19868320 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@50b0bc4c (name: person)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@19868320 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@50b0bc4c (name: person)]
ATTRIBUTE:: bid.bidder
ATTRIBUTE:: person.id
orderedAttributes:: [bid.auction, bid.bidder]
ARGUMENT:: 'bid.auction','bid.bidder'
8718 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8718 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8718 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@c20be82 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8719 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8719 DEBUG StandardExecutor  - Adding following query: operator_1 = SELECT({predicate='bid.bidder==person.id'},JOIN(bid,person))
operator_2 = MAP({expressions=['bid.auction','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8719 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8722 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8722 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8723 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8723 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8723 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8725 DEBUG RelationalRestructHelper  - removing operator:Select@295055909 OwnerIDs: 47(bid.bidder) = (person.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
8726 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8726 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8726 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8726 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8726 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8727 INFO  transform  - Starting transformation of Top@246264949 OwnerIDs: 47... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8727 DEBUG transform  - Before transformation: 
TopAO (246264949) Owner: 47
0 <- 0 MapAO (1296910502) Owner: 47
       0 <- 0 JoinAO (828241083) Owner: 47 Predicate: (bid.bidder) = (person.id) initialized = true
              0 <- 0 AccessAO (1069584108) Owner: 47
              1 <- 0 AccessAO (1554877309) Owner: 47
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8743 DEBUG ruleengine  - Ruleengine needed 15 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8744 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8744 INFO  transform  - Transformation of Top@246264949 OwnerIDs: 47 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8744 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8745 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8745 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8745 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8745 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8746 DEBUG ReloadLog  - Query added to log: operator_1 = SELECT({predicate='bid.bidder==person.id'},JOIN(bid,person))
operator_2 = MAP({expressions=['bid.auction','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8746 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8746 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8746 DEBUG ReloadLog  - Query added to log: SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8747 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8747 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8747 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@51bde877 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8747 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8748 DEBUG StandardExecutor  - Adding following query: SELECT auction FROM bid AS b, person AS p WHERE b.bidder = p.id - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8748 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@492fc69e (name: auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@117632cf (name: b.bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@2fb68ec6 (name: p.id)]
prefix= bid
prefix= b
prefix= p
map={bid=[auction, b.bidder], person=[p.id]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@d71adc2 (name: bid)
selfJoin:: 0
b.bidder
aliasses::[bidder, b.bidder]
true
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3add81c4 (name: person)
selfJoin:: 0
p.id
aliasses::[id, p.id]
true
getAttributename:: b.bidder, null
getAttributename:: p.id, null
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@d71adc2 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3add81c4 (name: person)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@d71adc2 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3add81c4 (name: person)]
ATTRIBUTE:: b.bidder
ATTRIBUTE:: p.id
orderedAttributes:: [bid.auction]
ARGUMENT:: 'bid.auction'
8751 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8751 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8752 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1a1d3c1a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8752 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8752 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','p.id'],pairs='true'},person)
operator_3 = SELECT({predicate='b.bidder==p.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['bid.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8752 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8755 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8755 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8755 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8755 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8755 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8756 DEBUG RelationalRestructHelper  - removing operator:Select@1211586911 OwnerIDs: 48(b.bidder) = (p.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
8756 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8757 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8757 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8757 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8757 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8757 INFO  transform  - Starting transformation of Top@1965036946 OwnerIDs: 48... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8758 DEBUG transform  - Before transformation: 
TopAO (1965036946) Owner: 48
0 <- 0 MapAO (1999036805) Owner: 48
       0 <- 0 JoinAO (178603358) Owner: 48 Predicate: (b.bidder) = (p.id) initialized = true
              0 <- 0 AccessAO (673384643) Owner: 48
              1 <- 0 AccessAO (1574573264) Owner: 48
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8763 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8763 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8763 INFO  transform  - Transformation of Top@1965036946 OwnerIDs: 48 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8764 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8765 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8765 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8765 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8765 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8766 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','p.id'],pairs='true'},person)
operator_3 = SELECT({predicate='b.bidder==p.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['bid.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8766 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8766 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8767 DEBUG ReloadLog  - Query added to log: SELECT auction FROM bid AS b, person AS p WHERE b.bidder = p.id - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8767 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8767 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8767 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5710768a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8768 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8768 DEBUG StandardExecutor  - Adding following query: SELECT auction AS a, bidder AS b FROM bid, person WHERE a = b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8768 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@6e0d4a8 (name: auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@64d7b720 (name: bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@30272916 (name: a), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@5bb3d42d (name: b)]
prefix= bid
prefix= bid
map={bid=[a, b]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@5bf61e67 (name: bid)
selfJoin:: 0
a
b
true
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2c1dc8e (name: person)
selfJoin:: 0
true
getAttributename:: a, null
getAttributename:: b, null
ATTRIBUTE:: a
ATTRIBUTE:: b
ATTRIBUTE:: a
ATTRIBUTE:: b
orderedAttributes:: [a, b]
ARGUMENT:: 'a','b'
8773 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8773 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8773 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@b273a59 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8774 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8774 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','a','bidder','b'],pairs='true'},bid)
operator_2 = SELECT({predicate='a==b'},JOIN(operator_1,person))
operator_3 = MAP({expressions=['a','b']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8774 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8777 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8777 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8777 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8778 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8778 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8778 DEBUG RelationalRestructHelper  - removing operator:Select@653515020 OwnerIDs: 49(a) = (b) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
8779 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8779 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8779 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8780 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8780 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8780 INFO  transform  - Starting transformation of Top@1552179791 OwnerIDs: 49... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8780 DEBUG transform  - Before transformation: 
TopAO (1552179791) Owner: 49
0 <- 0 MapAO (1661161169) Owner: 49
       0 <- 0 JoinAO (589309113) Owner: 49 Predicate: null
              0 <- 0 SelectAO (1437129801) Owner: 
                     0 <- 0 AccessAO (708926121) Owner: 49
              1 <- 0 AccessAO (1406004470) Owner: 49
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8786 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8786 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8786 INFO  transform  - Transformation of Top@1552179791 OwnerIDs: 49 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8787 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8788 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8788 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8788 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8788 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8788 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','a','bidder','b'],pairs='true'},bid)
operator_2 = SELECT({predicate='a==b'},JOIN(operator_1,person))
operator_3 = MAP({expressions=['a','b']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8788 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8789 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8789 DEBUG ReloadLog  - Query added to log: SELECT auction AS a, bidder AS b FROM bid, person WHERE a = b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8789 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8790 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8790 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4163f1cd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8790 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8790 DEBUG StandardExecutor  - Adding following query: SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8791 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@3e681bc (name: auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@5c09d180 (name: bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@23aae55 (name: bid.bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@5f574cc2 (name: person.id)]
prefix= bid
prefix= bid
prefix= bid
prefix= person
map={bid=[auction, bidder, bid.bidder], person=[person.id]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@680bddf5 (name: bid)
selfJoin:: 0
true
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7a9c84a5 (name: person)
selfJoin:: 0
true
getAttributename:: bid.bidder, null
getAttributename:: person.id, null
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@680bddf5 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7a9c84a5 (name: person)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@680bddf5 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7a9c84a5 (name: person)]
ATTRIBUTE:: bidder
ATTRIBUTE:: bid.bidder
ATTRIBUTE:: person.id
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@680bddf5 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7a9c84a5 (name: person)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@680bddf5 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7a9c84a5 (name: person)]
ATTRIBUTE:: bid.bidder
ATTRIBUTE:: person.id
orderedAttributes:: [bid.auction, bid.bidder]
ARGUMENT:: 'bid.auction','bid.bidder'
8796 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8796 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8796 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2d83c5a5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8796 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8797 DEBUG StandardExecutor  - Adding following query: operator_1 = SELECT({predicate='bid.bidder==person.id'},JOIN(bid,person))
operator_2 = MAP({expressions=['bid.auction','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8797 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8802 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8802 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8803 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8803 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8803 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8804 DEBUG RelationalRestructHelper  - removing operator:Select@1008608255 OwnerIDs: 50(bid.bidder) = (person.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
8807 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8807 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8807 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8807 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8808 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8808 INFO  transform  - Starting transformation of Top@1865617081 OwnerIDs: 50... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8808 DEBUG transform  - Before transformation: 
TopAO (1865617081) Owner: 50
0 <- 0 MapAO (308021294) Owner: 50
       0 <- 0 JoinAO (1481594007) Owner: 50 Predicate: (bid.bidder) = (person.id) initialized = true
              0 <- 0 AccessAO (1756160273) Owner: 50
              1 <- 0 AccessAO (530410619) Owner: 50
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8812 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8813 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8813 INFO  transform  - Transformation of Top@1865617081 OwnerIDs: 50 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8814 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8815 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8815 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8815 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8815 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8815 DEBUG ReloadLog  - Query added to log: operator_1 = SELECT({predicate='bid.bidder==person.id'},JOIN(bid,person))
operator_2 = MAP({expressions=['bid.auction','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8816 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8816 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8816 DEBUG ReloadLog  - Query added to log: SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8817 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8817 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8818 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@219f4597 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8818 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8818 DEBUG StandardExecutor  - Adding following query: SELECT left.* FROM bid AS left, bid AS right WHERE left.bidder = right.bidder - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8818 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@2e16b08d (name: left.*), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@5b989dc7 (name: left.bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@70d8de (name: right.bidder)]
prefix= left
prefix= right
map={bid=[timestamp, auction, bidder, datetime, price, left.bidder, right.bidder]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@42561fba (name: bid)
selfJoin:: 0
left.bidder
aliasses::[bidder, left.bidder]
right.bidder
true
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@595f4da5 (name: bid)
selfJoin:: 1
left.bidder
right.bidder
aliasses::[bidder, right.bidder]
true
self join:: 
getAttributename:: left.bidder, null
getAttributename:: right.bidder, null
8823 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8823 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8824 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@46b695ec - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8824 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8824 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','left.bidder'],pairs='true'},bid)
operator_2 = RENAME({aliases=['bidder','right.bidder','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = SELECT({predicate='left.bidder==right.bidder'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8824 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8827 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8827 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8827 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8828 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8828 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8829 DEBUG RelationalRestructHelper  - removing operator:Select@353206468 OwnerIDs: 51(left.bidder) = (right.bidder) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
8829 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8830 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8830 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8830 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8830 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8831 INFO  transform  - Starting transformation of Top@1811787796 OwnerIDs: 51... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8831 DEBUG transform  - Before transformation: 
TopAO (1811787796) Owner: 51
0 <- 0 JoinAO (1921553024) Owner: 51 Predicate: (left.bidder) = (right.bidder) initialized = true
       0 <- 0 AccessAO (1617937669) Owner: 51
       1 <- 0 AccessAO (78265654) Owner: 51
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8835 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8836 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8837 INFO  transform  - Transformation of Top@1811787796 OwnerIDs: 51 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8837 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8838 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8838 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8838 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8838 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8839 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','left.bidder'],pairs='true'},bid)
operator_2 = RENAME({aliases=['bidder','right.bidder','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = SELECT({predicate='left.bidder==right.bidder'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8839 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8839 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8839 DEBUG ReloadLog  - Query added to log: SELECT left.* FROM bid AS left, bid AS right WHERE left.bidder = right.bidder - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8839 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8840 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8840 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4c9e9fb8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8840 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8840 DEBUG StandardExecutor  - Adding following query: SELECT a.auction AS aid FROM bid AS a, bid AS b WHERE aid=b.auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8841 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@40147317 (name: a.auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@210f0cc1 (name: aid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@19542407 (name: b.auction)]
prefix= a
prefix= b
map={bid=[aid, b.auction]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6f95cd51 (name: bid)
selfJoin:: 0
aid
aliasses::[auction, aid]
b.auction
true
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@c7a977f (name: bid)
selfJoin:: 1
aid
b.auction
aliasses::[auction, b.auction]
true
self join:: 
getAttributename:: aid, null
getAttributename:: b.auction, null
ATTRIBUTE:: aid
ATTRIBUTE:: b.auction
orderedAttributes:: [aid]
ARGUMENT:: 'aid'
8845 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8845 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8845 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@55caeb35 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8846 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8846 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','aid'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','b.auction','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = SELECT({predicate='aid==b.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['aid']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8846 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8848 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8849 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8849 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8849 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8849 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8851 DEBUG RelationalRestructHelper  - removing operator:Select@357653585 OwnerIDs: 52(aid) = (b.auction) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
8851 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8852 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8852 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8852 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8852 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8852 INFO  transform  - Starting transformation of Top@43856716 OwnerIDs: 52... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8853 DEBUG transform  - Before transformation: 
TopAO (43856716) Owner: 52
0 <- 0 MapAO (269458366) Owner: 52
       0 <- 0 JoinAO (334099170) Owner: 52 Predicate: (aid) = (b.auction) initialized = true
              0 <- 0 AccessAO (1731967318) Owner: 52
              1 <- 0 AccessAO (215478702) Owner: 52
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8857 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8857 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8857 INFO  transform  - Transformation of Top@43856716 OwnerIDs: 52 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8857 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8858 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8858 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8859 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8859 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8859 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','aid'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','b.auction','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = SELECT({predicate='aid==b.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['aid']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8859 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8859 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8860 DEBUG ReloadLog  - Query added to log: SELECT a.auction AS aid FROM bid AS a, bid AS b WHERE aid=b.auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8860 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8860 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8861 DEBUG ReloadLog  - Query added to log: /// THIS IS A TEST FOR PROJECT, MAP AND RENAME
/// ALL PROVIDED EXAMPLE SHOULD WORK
#PARSER CQL
#TRANSCFG Standard
#DOREWRITE false
#DROPALLQUERIES
#QUERY
DROP STREAM bid IF EXISTS
#QUERY
ATTACH STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) CHANNEL localhost : 65442
#QUERY
DROP STREAM person IF EXISTS
#QUERY
ATTACH STREAM person (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) CHANNEL localhost : 65440

/// SIMPLE PROJECTS
#QUERY 
SELECT * FROM bid
#QUERY
SELECT bid.* FROM bid
#QUERY
SELECT price FROM bid
#QUERY
SELECT bidder, price FROM bid
#QUERY
SELECT timestamp, auction, bidder, datetime, price FROM bid

/// PROJECTS WITH RENAMED SOURCE BUT NO USE IN PROJECT
#QUERY 
SELECT * FROM bid AS b
#QUERY
SELECT bid.* FROM bid AS b
#QUERY
SELECT price FROM bid AS b
#QUERY
SELECT bidder, price FROM bid AS b
#QUERY
SELECT timestamp, auction, bidder, datetime, price FROM bid AS b


/// PROJECTS WITH RENAMED SOURCE WITH USE IN PROJECT
#QUERY 
SELECT * FROM bid AS b
#QUERY
SELECT b.* FROM bid AS b
#QUERY
SELECT b.price FROM bid AS b
#QUERY
SELECT b.bidder, b.price FROM bid AS b
#QUERY
SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b

/// PROJECTS WITH RENAMED ATTRIBUTES
#QUERY
SELECT price AS p FROM bid
#QUERY
SELECT price AS p, bidder FROM bid
#QUERY
SELECT price AS p, bidder AS b FROM bid

/// PROJECTS WITH RENAMED ATTRIBUTES AND SOURCES
#QUERY
SELECT price AS p FROM bid AS b
#QUERY
SELECT b.price AS p FROM bid AS b
#QUERY
SELECT b.price AS p, b.bidder FROM bid AS b
#QUERY
SELECT b.price AS p, b.bidder AS b FROM bid AS b


/// PROJECTS WITH CONSTANTS, FUNCTIONS AND EXPRESSIONS
#QUERY
SELECT bidder + price AS d FROM bid
#QUERY
SELECT 123.4 * price AS d FROM bid
#QUERY
SELECT 123.4 AS d FROM bid
#QUERY
SELECT 123.4 AS d, price FROM bid
#QUERY
SELECT DolToEur(price) AS d FROM bid
#QUERY
SELECT DolToEur(price) AS d, price FROM bid
#QUERY
SELECT DolToEur(price) * auction AS d FROM bid
#QUERY
SELECT DolToEur(price) * price AS d FROM bid
#QUERY
SELECT DolToEur(price) * auction AS d, price FROM bid
#QUERY
SELECT DolToEur(123.4) AS d FROM bid
#QUERY
SELECT 'test' AS s FROM bid
#QUERY
SELECT 'test' AS s, 123.4 AS d FROM bid
#QUERY
SELECT 'test' AS s, 123.4 AS d, price FROM bid


/// PROJECTS AND SELECTS WITH RENAMED SOURCE WITH USE IN SELECT
#QUERY 
SELECT * FROM bid AS b WHERE b.bidder > 10
#QUERY
SELECT b.* FROM bid AS b WHERE b.bidder > 10
#QUERY
SELECT b.price FROM bid AS b WHERE b.price < 150.0
#QUERY
SELECT b.bidder, b.price FROM bid AS b WHERE b.bidder =  1
#QUERY
SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b WHERE b.price > 100.0

/// PROJECTS WITH RENAMED ATTRIBUTES
#QUERY
SELECT price AS p FROM bid WHERE p < 100
#QUERY
SELECT price AS p, bidder FROM bid WHERE p > 100
#QUERY
SELECT price AS p, bidder AS b FROM bid WHERE b=1 AND p <100


/// AGGREGATES ARE NOT HANDLED LIKE FUNCTIONS AND MAY HAVE A GROUPING ETC.
#QUERY
SELECT AVG(price) AS aprice FROM bid
#QUERY
SELECT AVG(price) AS aprice FROM bid GROUP BY auction
#QUERY
SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction
#QUERY
SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction HAVING aprice<100.0


/// JOINS AND SELFJOINS
#QUERY
SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id
#QUERY
SELECT auction FROM bid AS b, person AS p WHERE b.bidder = p.id
#QUERY
SELECT auction AS a, bidder AS b FROM bid, person WHERE a = b
#QUERY
SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id
#QUERY
SELECT left.* FROM bid AS left, bid AS right WHERE left.bidder = right.bidder
#QUERY
SELECT a.auction AS aid FROM bid AS a, bid AS b WHERE aid=b.auction
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8861 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8861 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8861 DEBUG AbstractTestComponent  - adding 53 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8862 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8862 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8862 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8862 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8868 INFO  StandardExecutor  - Removing Query 0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8868 DEBUG StandardExecutor  - Removing Ownership 0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8869 INFO  StandardExecutor  - Query 0 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8869 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8870 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8871 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8871 INFO  StandardExecutor  - Removing Query 1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8872 DEBUG StandardExecutor  - Removing Ownership 1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8872 INFO  StandardExecutor  - Query 1 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8872 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8872 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8872 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8873 INFO  StandardExecutor  - Removing Query 2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8873 DEBUG StandardExecutor  - Removing Ownership 2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8873 INFO  StandardExecutor  - Query 2 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8873 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8873 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8874 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8874 INFO  StandardExecutor  - Removing Query 3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8874 DEBUG StandardExecutor  - Removing Ownership 3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8874 INFO  StandardExecutor  - Query 3 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8874 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.bidder','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8874 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8875 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8875 INFO  StandardExecutor  - Removing Query 4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8875 DEBUG StandardExecutor  - Removing Ownership 4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8875 INFO  StandardExecutor  - Query 4 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8875 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8875 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8876 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8876 INFO  StandardExecutor  - Removing Query 5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8876 DEBUG StandardExecutor  - Removing Ownership 5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8876 INFO  StandardExecutor  - Query 5 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8876 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8876 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8877 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8877 INFO  StandardExecutor  - Removing Query 6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8877 DEBUG StandardExecutor  - Removing Ownership 6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8877 INFO  StandardExecutor  - Query 6 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8877 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8877 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8878 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8878 INFO  StandardExecutor  - Removing Query 7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8878 DEBUG StandardExecutor  - Removing Ownership 7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8878 INFO  StandardExecutor  - Query 7 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8878 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8878 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8879 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8879 INFO  StandardExecutor  - Removing Query 8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8879 DEBUG StandardExecutor  - Removing Ownership 8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8879 INFO  StandardExecutor  - Query 8 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8879 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.bidder','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8879 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8880 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8880 INFO  StandardExecutor  - Removing Query 9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8880 DEBUG StandardExecutor  - Removing Ownership 9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8881 INFO  StandardExecutor  - Query 9 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8881 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8881 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8881 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8882 INFO  StandardExecutor  - Removing Query 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8882 DEBUG StandardExecutor  - Removing Ownership 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8882 INFO  StandardExecutor  - Query 10 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8882 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8882 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8883 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8883 INFO  StandardExecutor  - Removing Query 11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8883 DEBUG StandardExecutor  - Removing Ownership 11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8883 INFO  StandardExecutor  - Query 11 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8883 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8883 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8884 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8884 INFO  StandardExecutor  - Removing Query 12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8884 DEBUG StandardExecutor  - Removing Ownership 12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8884 INFO  StandardExecutor  - Query 12 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8884 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8884 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8885 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8885 INFO  StandardExecutor  - Removing Query 13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8885 DEBUG StandardExecutor  - Removing Ownership 13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8885 INFO  StandardExecutor  - Query 13 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8885 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b.bidder','price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.bidder','b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8885 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8886 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8886 INFO  StandardExecutor  - Removing Query 14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8886 DEBUG StandardExecutor  - Removing Ownership 14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8886 INFO  StandardExecutor  - Query 14 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8886 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','b.timestamp','auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.timestamp','b.auction','b.bidder','b.datetime','b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8886 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8887 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8887 INFO  StandardExecutor  - Removing Query 15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8887 DEBUG StandardExecutor  - Removing Ownership 15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8887 INFO  StandardExecutor  - Query 15 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8887 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8887 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8887 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8888 INFO  StandardExecutor  - Removing Query 16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8888 DEBUG StandardExecutor  - Removing Ownership 16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8888 INFO  StandardExecutor  - Query 16 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8888 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8888 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8888 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8888 INFO  StandardExecutor  - Removing Query 17 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8888 DEBUG StandardExecutor  - Removing Ownership 17 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8889 INFO  StandardExecutor  - Query 17 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8889 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8889 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8889 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8889 INFO  StandardExecutor  - Removing Query 18 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8890 DEBUG StandardExecutor  - Removing Ownership 18 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8890 INFO  StandardExecutor  - Query 18 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8890 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8890 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8891 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8891 INFO  StandardExecutor  - Removing Query 19 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8891 DEBUG StandardExecutor  - Removing Ownership 19 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8891 INFO  StandardExecutor  - Query 19 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8891 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8891 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8892 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8892 INFO  StandardExecutor  - Removing Query 20 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8892 DEBUG StandardExecutor  - Removing Ownership 20 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8892 INFO  StandardExecutor  - Query 20 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8892 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b.bidder','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8892 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8893 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8893 INFO  StandardExecutor  - Removing Query 21 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8893 DEBUG StandardExecutor  - Removing Ownership 21 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8893 INFO  StandardExecutor  - Query 21 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8894 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8894 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8894 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8894 INFO  StandardExecutor  - Removing Query 22 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8894 DEBUG StandardExecutor  - Removing Ownership 22 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8894 INFO  StandardExecutor  - Query 22 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8895 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['bid.bidder+bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8895 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8895 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8895 INFO  StandardExecutor  - Removing Query 23 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8895 DEBUG StandardExecutor  - Removing Ownership 23 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8896 INFO  StandardExecutor  - Query 23 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8896 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['123.4*bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8896 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8896 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8896 INFO  StandardExecutor  - Removing Query 24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8896 DEBUG StandardExecutor  - Removing Ownership 24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8896 INFO  StandardExecutor  - Query 24 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8897 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8897 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8897 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8897 INFO  StandardExecutor  - Removing Query 25 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8897 DEBUG StandardExecutor  - Removing Ownership 25 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8897 INFO  StandardExecutor  - Query 25 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8897 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8898 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8898 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8898 INFO  StandardExecutor  - Removing Query 26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8898 DEBUG StandardExecutor  - Removing Ownership 26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8898 INFO  StandardExecutor  - Query 26 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8899 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8899 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8899 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8899 INFO  StandardExecutor  - Removing Query 27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8899 DEBUG StandardExecutor  - Removing Ownership 27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8899 INFO  StandardExecutor  - Query 27 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8900 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','d'],'bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8900 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8900 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8900 INFO  StandardExecutor  - Removing Query 28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8900 DEBUG StandardExecutor  - Removing Ownership 28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8900 INFO  StandardExecutor  - Query 28 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8901 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.auction','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8901 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8901 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8901 INFO  StandardExecutor  - Removing Query 29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8902 DEBUG StandardExecutor  - Removing Ownership 29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8902 INFO  StandardExecutor  - Query 29 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8902 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8902 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8902 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8903 INFO  StandardExecutor  - Removing Query 30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8903 DEBUG StandardExecutor  - Removing Ownership 30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8903 INFO  StandardExecutor  - Query 30 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8903 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.auction','d'],'bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8903 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8904 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8904 INFO  StandardExecutor  - Removing Query 31 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8904 DEBUG StandardExecutor  - Removing Ownership 31 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8904 INFO  StandardExecutor  - Query 31 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8904 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(123.4)','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8904 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8905 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8905 INFO  StandardExecutor  - Removing Query 32 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8905 DEBUG StandardExecutor  - Removing Ownership 32 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8905 INFO  StandardExecutor  - Query 32 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8905 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8905 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8906 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8906 INFO  StandardExecutor  - Removing Query 33 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8906 DEBUG StandardExecutor  - Removing Ownership 33 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8906 INFO  StandardExecutor  - Query 33 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8906 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8906 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8907 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8907 INFO  StandardExecutor  - Removing Query 34 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8907 DEBUG StandardExecutor  - Removing Ownership 34 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8907 INFO  StandardExecutor  - Query 34 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8907 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8907 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8908 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8908 INFO  StandardExecutor  - Removing Query 35 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8908 DEBUG StandardExecutor  - Removing Ownership 35 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8908 INFO  StandardExecutor  - Query 35 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8908 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder>10'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8908 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8909 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8909 INFO  StandardExecutor  - Removing Query 36 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8909 DEBUG StandardExecutor  - Removing Ownership 36 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8909 INFO  StandardExecutor  - Query 36 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8909 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder>10'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8909 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8910 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8910 INFO  StandardExecutor  - Removing Query 37 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8910 DEBUG StandardExecutor  - Removing Ownership 37 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8910 INFO  StandardExecutor  - Query 37 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8910 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.price<150.0'},operator_1)
operator_3 = MAP({expressions=['b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8910 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8913 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8914 INFO  StandardExecutor  - Removing Query 38 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8914 DEBUG StandardExecutor  - Removing Ownership 38 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8914 INFO  StandardExecutor  - Query 38 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8914 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b.bidder','price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder==1'},operator_1)
operator_3 = MAP({expressions=['b.bidder','b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8914 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8915 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8915 INFO  StandardExecutor  - Removing Query 39 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8915 DEBUG StandardExecutor  - Removing Ownership 39 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8915 INFO  StandardExecutor  - Query 39 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8915 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','b.timestamp','auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.price>100.0'},operator_1)
operator_3 = MAP({expressions=['b.timestamp','b.auction','b.bidder','b.datetime','b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8915 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8916 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8916 INFO  StandardExecutor  - Removing Query 40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8916 DEBUG StandardExecutor  - Removing Ownership 40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8916 INFO  StandardExecutor  - Query 40 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8917 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='p<100'},operator_1)
operator_3 = MAP({expressions=['p']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8917 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8917 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8917 INFO  StandardExecutor  - Removing Query 41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8917 DEBUG StandardExecutor  - Removing Ownership 41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8918 INFO  StandardExecutor  - Query 41 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8918 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='p>100'},operator_1)
operator_3 = MAP({expressions=['p','bid.bidder']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8918 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8918 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8918 INFO  StandardExecutor  - Removing Query 42 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8918 DEBUG StandardExecutor  - Removing Ownership 42 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8919 INFO  StandardExecutor  - Query 42 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8919 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='b==1&&p<100'},operator_1)
operator_3 = MAP({expressions=['p','b']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8919 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8919 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8919 INFO  StandardExecutor  - Removing Query 43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8919 DEBUG StandardExecutor  - Removing Ownership 43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8919 INFO  StandardExecutor  - Query 43 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8920 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['aprice']},AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']]},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8920 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8920 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8920 INFO  StandardExecutor  - Removing Query 44 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8920 DEBUG StandardExecutor  - Removing Ownership 44 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8920 INFO  StandardExecutor  - Query 44 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8920 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['aprice']},AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8921 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8921 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8921 INFO  StandardExecutor  - Removing Query 45 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8921 DEBUG StandardExecutor  - Removing Ownership 45 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8921 INFO  StandardExecutor  - Query 45 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8921 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['bid.auction','aprice']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8921 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8922 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8922 INFO  StandardExecutor  - Removing Query 46 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8922 DEBUG StandardExecutor  - Removing Ownership 46 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8922 INFO  StandardExecutor  - Query 46 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8922 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['bid.auction','aprice']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8922 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8923 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8923 INFO  StandardExecutor  - Removing Query 47 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8923 DEBUG StandardExecutor  - Removing Ownership 47 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8923 INFO  StandardExecutor  - Query 47 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8923 DEBUG ReloadLog  - Removing query from log: operator_1 = SELECT({predicate='bid.bidder==person.id'},JOIN(bid,person))
operator_2 = MAP({expressions=['bid.auction','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8923 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8924 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8924 INFO  StandardExecutor  - Removing Query 48 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8924 DEBUG StandardExecutor  - Removing Ownership 48 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8924 INFO  StandardExecutor  - Query 48 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8924 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','p.id'],pairs='true'},person)
operator_3 = SELECT({predicate='b.bidder==p.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['bid.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8925 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8925 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8925 INFO  StandardExecutor  - Removing Query 49 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8925 DEBUG StandardExecutor  - Removing Ownership 49 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8926 INFO  StandardExecutor  - Query 49 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8926 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','a','bidder','b'],pairs='true'},bid)
operator_2 = SELECT({predicate='a==b'},JOIN(operator_1,person))
operator_3 = MAP({expressions=['a','b']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8926 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8927 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8927 INFO  StandardExecutor  - Removing Query 50 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8927 DEBUG StandardExecutor  - Removing Ownership 50 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8927 INFO  StandardExecutor  - Query 50 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8927 DEBUG ReloadLog  - Removing query from log: operator_1 = SELECT({predicate='bid.bidder==person.id'},JOIN(bid,person))
operator_2 = MAP({expressions=['bid.auction','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8927 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8928 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8928 INFO  StandardExecutor  - Removing Query 51 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8928 DEBUG StandardExecutor  - Removing Ownership 51 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8928 INFO  StandardExecutor  - Query 51 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8928 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','left.bidder'],pairs='true'},bid)
operator_2 = RENAME({aliases=['bidder','right.bidder','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = SELECT({predicate='left.bidder==right.bidder'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8928 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8929 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8929 INFO  StandardExecutor  - Removing Query 52 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8929 DEBUG StandardExecutor  - Removing Ownership 52 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8929 INFO  StandardExecutor  - Query 52 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8929 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','aid'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','b.auction','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = SELECT({predicate='aid==b.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['aid']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8929 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8930 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8930 DEBUG AbstractTestComponent  - Sub test "ProjectMapRename-Test.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8930 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8930 DEBUG AbstractTestComponent  - Stopping executor - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStopExecutor(AbstractTestComponent.java:110) 
8931 DEBUG SingleSchedulerManager  - Stop scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:304) 
8931 DEBUG AbstractSimpleThreadScheduler  - Stopping source treads - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:133) 
8931 DEBUG AbstractSimpleThreadScheduler  - Stopping scheduler executors - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:138) 
8931 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
8931 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
8931 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
8931 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
8931 DEBUG AbstractScheduler  - Stopping scheduling - de.uniol.inf.is.odysseus.core.server.scheduler.AbstractScheduler.stopScheduling(AbstractScheduler.java:216) 
8931 DEBUG AbstractSimpleThreadScheduler  - Setting new Plans to schedule :[] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:158) 
8932 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans done - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:178) 
8932 DEBUG SingleSchedulerManager  - Scheduling stopped. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:306) 
8942 DEBUG TestComponentRunner  - End Testcomponent 'Compile Test Component'. Duration = 1980 ms - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:73) 
8942 DEBUG TestRunnerApplication  - Total results for component "Compile Test Component" - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:103) 
8942 DEBUG TestRunnerApplication  - Sub test 1: ProjectMapRename-Test.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
8951 DEBUG TestRunnerApplication  - Starting a new component test: Jira Test Component - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:100) 
8951 DEBUG TestRunnerApplication  - ####################################################################################### - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:101) 
8951 DEBUG TestComponentRunner  - Start Testcomponent 'Jira Test Component' - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:52) 
8951 DEBUG AbstractTestComponent  - Starting executor... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStartExecutor(AbstractTestComponent.java:94) 
8951 DEBUG SingleSchedulerManager  - Start scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:286) 
8952 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
8952 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
8952 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
8952 DEBUG AbstractSimpleThreadScheduler  - Starting Scheduler with 4 thread(s). - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.startScheduling(AbstractSimpleThreadScheduler.java:119) 
8952 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
8957 DEBUG SingleSchedulerManager  - Scheduling started. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:288) 
8958 DEBUG AbstractTestComponent  - Sat Apr 01 14:26:25 CEST 2017Running sub test 1 of 1: "ODY-987.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8958 DEBUG AbstractTestComponent  - #PARSER CQL

#ADDQUERY
DROP STREAM bid if exists;
#ADDQUERY
ATTACH STREAM bid (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.jira/.//jira/ODY-987/nexmark_bid2.csv' AS SimpleCSV;


#ADDQUERY

SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8958 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8958 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8958 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8959 DEBUG StandardExecutor  - Adding following query: #PARSER CQL

#ADDQUERY
DROP STREAM bid if exists;
#ADDQUERY
ATTACH STREAM bid (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.jira/.//jira/ODY-987/nexmark_bid2.csv' AS SimpleCSV;


#ADDQUERY

SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8959 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8960 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8960 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8960 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4aeaadc1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8961 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8961 DEBUG StandardExecutor  - Adding following query: DROP STREAM bid if exists; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8961 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8963 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8964 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8964 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@1f14f20c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8965 DEBUG ReloadLog  - Query added to log: DROP STREAM bid if exists; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8965 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8966 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8966 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7daa61f3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8967 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8967 DEBUG StandardExecutor  - Adding following query: ATTACH STREAM bid (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.jira/.//jira/ODY-987/nexmark_bid2.csv' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8967 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8971 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8971 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8972 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@56f2bbea - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8972 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8972 DEBUG StandardExecutor  - Adding following query: bid := ACCESS({source='bid',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.jira/.//jira/ODY-987/nexmark_bid2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8972 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8973 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8973 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8974 DEBUG StandardExecutor  - Executing Create VIEW bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8975 DEBUG ReloadLog  - Query added to log: bid := ACCESS({source='bid',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.jira/.//jira/ODY-987/nexmark_bid2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8976 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8977 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8978 DEBUG ReloadLog  - Query added to log: ATTACH STREAM bid (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.jira/.//jira/ODY-987/nexmark_bid2.csv' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8978 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8979 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8979 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@b0964b2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8979 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8979 DEBUG StandardExecutor  - Adding following query: SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8979 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@24e8de5c (name: auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@64040287 (name: price)]
prefix= bid
prefix= bid
map={bid=[auction, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@110844f6 (name: bid)
selfJoin:: 0
true
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@110844f6 (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@110844f6 (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@110844f6 (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@110844f6 (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@110844f6 (name: bid)]
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@110844f6 (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@110844f6 (name: bid)]
ATTRIBUTE:: price
ATTRIBUTE:: auction
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@110844f6 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@110844f6 (name: bid)]
orderedAttributes:: [bid.auction, bid.price]
ARGUMENT:: 'bid.auction','bid.price'
8991 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8991 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8991 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6f89f665 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8991 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8991 DEBUG StandardExecutor  - Adding following query: operator_1 = SELECT({predicate='bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87'},bid)
operator_2 = MAP({expressions=['bid.auction','bid.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8992 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9000 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9000 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9000 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9001 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9001 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9046 DEBUG ruleengine  - Ruleengine needed 45 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9047 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9047 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9047 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9047 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9048 INFO  transform  - Starting transformation of Top@910504711 OwnerIDs: 53... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9048 DEBUG transform  - Before transformation: 
TopAO (910504711) Owner: 53
0 <- 0 MapAO (2110558717) Owner: 53
       0 <- 0 SelectAO (1726715997) Owner: 53
              0 <- 0 AccessAO (1787987889) Owner: 53
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9058 DEBUG ruleengine  - Ruleengine needed 10 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9058 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9059 INFO  transform  - Transformation of Top@910504711 OwnerIDs: 53 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9059 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9059 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9059 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9059 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9060 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9060 DEBUG ReloadLog  - Query added to log: operator_1 = SELECT({predicate='bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87'},bid)
operator_2 = MAP({expressions=['bid.auction','bid.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9060 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9061 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9061 DEBUG ReloadLog  - Query added to log: SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9061 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9062 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9062 DEBUG ReloadLog  - Query added to log: #PARSER CQL

#ADDQUERY
DROP STREAM bid if exists;
#ADDQUERY
ATTACH STREAM bid (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.jira/.//jira/ODY-987/nexmark_bid2.csv' AS SimpleCSV;


#ADDQUERY

SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9062 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9062 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9063 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9065 DEBUG AbstractTestComponent  - starting query with ID 53... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:53) 
9066 INFO  StandardExecutor  - Starting query (ID: 53)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9069 DEBUG TICompareSink  - expected data loaded - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.TICompareSink.process_open(TICompareSink.java:92) 
9069 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9069 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9070 INFO  StandardExecutor  - Query 53 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9070 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 53 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9074 DEBUG AbstractSimpleThreadScheduler  - Created new Multi-Source-Excutor MultiSourceExecutor #0  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.createNewExecutor(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:118) 
9074 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9074 DEBUG MultipleSourceExecutor  - Added Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedAddSources(MultipleSourceExecutor.java:284) 
9084 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9087 DEBUG AbstractTestComponent  - query started, waiting until data is processed... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:58) 
10303 DEBUG AbstractCompareSink  - Received done... - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.AbstractCompareSink.process_done(AbstractCompareSink.java:170) 
10303 DEBUG StandardExecutor  - Try to stop query 53 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10304 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10305 INFO  StandardExecutor  - Query 53 stopped. Execution time 1235 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10305 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 53 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10305 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10305 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10305 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10305 DEBUG AbstractSimpleThreadScheduler  - Removing sources [AccessPO(1602785474)(o=false)(d=true)] from MultiSourceExecutor #0  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:52) 
10306 DEBUG AbstractSimpleThreadScheduler  - Removed sources [AccessPO(1602785474)(o=false)(d=true)] from MultiSourceExecutor #0  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:55) 
10306 DEBUG MultipleSourceExecutor  - Removed Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedRemoveSources(MultipleSourceExecutor.java:296) 
10306 DEBUG AbstractSimpleThreadScheduler  - Remove source executor MultiSourceExecutor #0  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.sourcesChanged(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:72) 
10306 DEBUG MultipleSourceExecutor  - Terminating Source Executor MultiSourceExecutor #0  with sources: [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.run(MultipleSourceExecutor.java:76) 
11092 DEBUG AbstractTestComponent  - processing done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:70) 
12094 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
12094 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
12094 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
12095 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-28] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
12095 INFO  StandardExecutor  - Removing Query 53 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
12096 DEBUG StandardExecutor  - Removing Ownership 53 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
12096 INFO  StandardExecutor  - Query 53 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
12096 DEBUG ReloadLog  - Removing query from log: operator_1 = SELECT({predicate='bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87'},bid)
operator_2 = MAP({expressions=['bid.auction','bid.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
12096 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12098 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
12098 DEBUG AbstractTestComponent  - Sub test "ODY-987.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
12098 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
12098 DEBUG AbstractTestComponent  - Stopping executor - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStopExecutor(AbstractTestComponent.java:110) 
12098 DEBUG SingleSchedulerManager  - Stop scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:304) 
12098 DEBUG AbstractSimpleThreadScheduler  - Stopping source treads - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:133) 
12099 DEBUG AbstractSimpleThreadScheduler  - Stopping scheduler executors - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:138) 
12099 DEBUG AbstractScheduler  - Stopping scheduling - de.uniol.inf.is.odysseus.core.server.scheduler.AbstractScheduler.stopScheduling(AbstractScheduler.java:216) 
12100 DEBUG AbstractSimpleThreadScheduler  - Setting new Plans to schedule :[] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:158) 
12101 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans done - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:178) 
12101 DEBUG SingleSchedulerManager  - Scheduling stopped. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:306) 
12101 DEBUG TestComponentRunner  - End Testcomponent 'Jira Test Component'. Duration = 3149 ms - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:73) 
12101 DEBUG TestRunnerApplication  - Total results for component "Jira Test Component" - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:103) 
12101 DEBUG TestRunnerApplication  - Sub test 1: ODY-987.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12102 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
12102 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
12102 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
12102 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
13087 DEBUG TestRunnerApplication  - Starting a new component test: Nexmark Test - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:100) 
13087 DEBUG TestRunnerApplication  - ####################################################################################### - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:101) 
13087 DEBUG TestComponentRunner  - Start Testcomponent 'Nexmark Test' - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:52) 
13087 DEBUG AbstractTestComponent  - Starting executor... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStartExecutor(AbstractTestComponent.java:94) 
13087 DEBUG SingleSchedulerManager  - Start scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:286) 
13088 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
13088 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
13088 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
13088 DEBUG AbstractSimpleThreadScheduler  - Starting Scheduler with 4 thread(s). - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.startScheduling(AbstractSimpleThreadScheduler.java:119) 
13088 DEBUG SingleSchedulerManager  - Scheduling started. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:288) 
13088 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
13089 DEBUG AbstractTestComponent  - Sat Apr 01 14:26:30 CEST 2017Running sub test 1 of 6: "query1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
13089 DEBUG AbstractTestComponent  - ///OdysseusScript
#PARSER CQL
#ADDQUERY
DROP STREAM nexmark:person2;
#ADDQUERY
ATTACH STREAM nexmark:person2 (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_person2.csv' AS SimpleCSV

#ADDQUERY
SELECT * FROM nexmark:person2
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
13089 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
13089 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
13089 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13089 DEBUG StandardExecutor  - Adding following query: ///OdysseusScript
#PARSER CQL
#ADDQUERY
DROP STREAM nexmark:person2;
#ADDQUERY
ATTACH STREAM nexmark:person2 (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_person2.csv' AS SimpleCSV

#ADDQUERY
SELECT * FROM nexmark:person2
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13089 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
13090 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13090 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13090 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@55120f99 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13090 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13090 DEBUG StandardExecutor  - Adding following query: DROP STREAM nexmark:person2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13090 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
13092 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13092 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13093 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@38f2e97e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13093 WARN  AbstractDataDictionary  - Trying to remove not registered view/stream nexmark:person2 - de.uniol.inf.is.odysseus.core.server.datadictionary.AbstractDataDictionary.removeViewOrStream(AbstractDataDictionary.java:710) 
13093 DEBUG ReloadLog  - Query added to log: DROP STREAM nexmark:person2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13093 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13094 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13095 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@779dfe55 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13095 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13095 DEBUG StandardExecutor  - Adding following query: ATTACH STREAM nexmark:person2 (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_person2.csv' AS SimpleCSV - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13095 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
13099 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13100 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13100 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1144a55a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13100 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13100 DEBUG StandardExecutor  - Adding following query: nexmark:person2 := ACCESS({source='nexmark:person2',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['name','STRING'],['email','STRING'],['creditcard','STRING'],['city','STRING'],['state','STRING']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_person2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13100 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
13101 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13101 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13101 DEBUG StandardExecutor  - Executing Create VIEW nexmark:person2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13102 DEBUG ReloadLog  - Query added to log: nexmark:person2 := ACCESS({source='nexmark:person2',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['name','STRING'],['email','STRING'],['creditcard','STRING'],['city','STRING'],['state','STRING']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_person2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13102 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13103 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13103 DEBUG ReloadLog  - Query added to log: ATTACH STREAM nexmark:person2 (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_person2.csv' AS SimpleCSV - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13103 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13103 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13103 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@265c5d69 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13104 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13104 DEBUG StandardExecutor  - Adding following query: SELECT * FROM nexmark:person2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13104 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: []
map={nexmark:person2=[timestamp, id, name, email, creditcard, city, state]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3cc20577 (name: nexmark:person2)
selfJoin:: 0
true
getAttributename:: timestamp, nexmark:person2
getAttributename:: id, nexmark:person2
getAttributename:: name, nexmark:person2
getAttributename:: email, nexmark:person2
getAttributename:: creditcard, nexmark:person2
getAttributename:: city, nexmark:person2
getAttributename:: state, nexmark:person2
orderedAttributes:: [nexmark:person2.timestamp, nexmark:person2.id, nexmark:person2.name, nexmark:person2.email, nexmark:person2.creditcard, nexmark:person2.city, nexmark:person2.state]
ARGUMENT:: 'nexmark:person2.timestamp','nexmark:person2.id','nexmark:person2.name','nexmark:person2.email','nexmark:person2.creditcard','nexmark:person2.city','nexmark:person2.state'
13106 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13106 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13107 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@33a630fa - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13108 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13108 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['nexmark:person2.timestamp','nexmark:person2.id','nexmark:person2.name','nexmark:person2.email','nexmark:person2.creditcard','nexmark:person2.city','nexmark:person2.state']},nexmark:person2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13108 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
13114 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13115 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13115 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
13115 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
13115 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
13116 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13116 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13117 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
13117 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
13117 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
13117 INFO  transform  - Starting transformation of Top@1062181581 OwnerIDs: 54... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
13117 DEBUG transform  - Before transformation: 
TopAO (1062181581) Owner: 54
0 <- 0 MapAO (1186657657) Owner: 54
       0 <- 0 AccessAO (1274225913) Owner: 54
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
13120 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13120 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13120 INFO  transform  - Transformation of Top@1062181581 OwnerIDs: 54 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
13120 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
13121 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
13121 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
13121 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
13121 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
13121 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['nexmark:person2.timestamp','nexmark:person2.id','nexmark:person2.name','nexmark:person2.email','nexmark:person2.creditcard','nexmark:person2.city','nexmark:person2.state']},nexmark:person2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13121 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13122 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13122 DEBUG ReloadLog  - Query added to log: SELECT * FROM nexmark:person2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13122 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13122 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13123 DEBUG ReloadLog  - Query added to log: ///OdysseusScript
#PARSER CQL
#ADDQUERY
DROP STREAM nexmark:person2;
#ADDQUERY
ATTACH STREAM nexmark:person2 (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_person2.csv' AS SimpleCSV

#ADDQUERY
SELECT * FROM nexmark:person2
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13123 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13123 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13123 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
13124 DEBUG AbstractTestComponent  - starting query with ID 54... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:53) 
13124 INFO  StandardExecutor  - Starting query (ID: 54)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
13220 DEBUG TICompareSink  - expected data loaded - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.TICompareSink.process_open(TICompareSink.java:92) 
13221 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
13221 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
13221 INFO  StandardExecutor  - Query 54 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
13221 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 54 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
13222 DEBUG AbstractSimpleThreadScheduler  - Created new Multi-Source-Excutor MultiSourceExecutor #1  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.createNewExecutor(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:118) 
13222 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
13222 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
13222 DEBUG MultipleSourceExecutor  - Added Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedAddSources(MultipleSourceExecutor.java:284) 
13223 DEBUG AbstractTestComponent  - query started, waiting until data is processed... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:58) 
13490 DEBUG AbstractCompareSink  - Received done... - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.AbstractCompareSink.process_done(AbstractCompareSink.java:170) 
13490 DEBUG StandardExecutor  - Try to stop query 54 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
13490 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
13491 INFO  StandardExecutor  - Query 54 stopped. Execution time 270 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
13491 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 54 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
13491 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
13491 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
13491 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
13491 DEBUG AbstractSimpleThreadScheduler  - Removing sources [AccessPO(1613514326)(o=false)(d=true)] from MultiSourceExecutor #1  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:52) 
13491 DEBUG AbstractSimpleThreadScheduler  - Removed sources [AccessPO(1613514326)(o=false)(d=true)] from MultiSourceExecutor #1  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:55) 
13491 DEBUG MultipleSourceExecutor  - Removed Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedRemoveSources(MultipleSourceExecutor.java:296) 
13491 DEBUG AbstractSimpleThreadScheduler  - Remove source executor MultiSourceExecutor #1  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.sourcesChanged(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:72) 
13492 DEBUG MultipleSourceExecutor  - Terminating Source Executor MultiSourceExecutor #1  with sources: [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.run(MultipleSourceExecutor.java:76) 
14228 DEBUG AbstractTestComponent  - processing done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:70) 
15229 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
15229 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
15230 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
15230 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-34] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
15230 INFO  StandardExecutor  - Removing Query 54 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
15230 DEBUG StandardExecutor  - Removing Ownership 54 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
15231 INFO  StandardExecutor  - Query 54 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
15231 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['nexmark:person2.timestamp','nexmark:person2.id','nexmark:person2.name','nexmark:person2.email','nexmark:person2.creditcard','nexmark:person2.city','nexmark:person2.state']},nexmark:person2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
15231 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
15232 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
15233 DEBUG AbstractTestComponent  - Sub test "query1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
15233 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
15233 DEBUG AbstractTestComponent  - Sat Apr 01 14:26:32 CEST 2017Running sub test 2 of 6: "query2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
15233 DEBUG AbstractTestComponent  - ///OdysseusScript
#PARSER CQL
#ADDQUERY
DROP STREAM nexmark:auction2;
#ADDQUERY
ATTACH STREAM nexmark:auction2 (timestamp STARTTIMESTAMP,	id INTEGER,	itemname STRING,	description STRING,	initialbid INTEGER,	reserve INTEGER,	expires LONG,	seller INTEGER ,category INTEGER) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_auction2.csv' AS SimpleCSV

#ADDQUERY
SELECT * FROM nexmark:auction2;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
15233 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
15233 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
15234 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
15234 DEBUG StandardExecutor  - Adding following query: ///OdysseusScript
#PARSER CQL
#ADDQUERY
DROP STREAM nexmark:auction2;
#ADDQUERY
ATTACH STREAM nexmark:auction2 (timestamp STARTTIMESTAMP,	id INTEGER,	itemname STRING,	description STRING,	initialbid INTEGER,	reserve INTEGER,	expires LONG,	seller INTEGER ,category INTEGER) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_auction2.csv' AS SimpleCSV

#ADDQUERY
SELECT * FROM nexmark:auction2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
15234 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
15235 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
15235 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
15235 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1d035be3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
15235 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
15235 DEBUG StandardExecutor  - Adding following query: DROP STREAM nexmark:auction2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
15235 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
15237 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
15238 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
15238 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@4cfbaf4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
15238 WARN  AbstractDataDictionary  - Trying to remove not registered view/stream nexmark:auction2 - de.uniol.inf.is.odysseus.core.server.datadictionary.AbstractDataDictionary.removeViewOrStream(AbstractDataDictionary.java:710) 
15238 DEBUG ReloadLog  - Query added to log: DROP STREAM nexmark:auction2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
15238 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
15239 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
15239 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@58faa93b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
15239 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
15239 DEBUG StandardExecutor  - Adding following query: ATTACH STREAM nexmark:auction2 (timestamp STARTTIMESTAMP,	id INTEGER,	itemname STRING,	description STRING,	initialbid INTEGER,	reserve INTEGER,	expires LONG,	seller INTEGER ,category INTEGER) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_auction2.csv' AS SimpleCSV - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
15240 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
15242 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
15243 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
15243 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@127d7908 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
15243 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
15243 DEBUG StandardExecutor  - Adding following query: nexmark:auction2 := ACCESS({source='nexmark:auction2',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['itemname','STRING'],['description','STRING'],['initialbid','INTEGER'],['reserve','INTEGER'],['expires','LONG'],['seller','INTEGER'],['category','INTEGER']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_auction2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
15243 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
15245 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
15245 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
15245 DEBUG StandardExecutor  - Executing Create VIEW nexmark:auction2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
15245 DEBUG ReloadLog  - Query added to log: nexmark:auction2 := ACCESS({source='nexmark:auction2',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['itemname','STRING'],['description','STRING'],['initialbid','INTEGER'],['reserve','INTEGER'],['expires','LONG'],['seller','INTEGER'],['category','INTEGER']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_auction2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
15246 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
15246 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
15247 DEBUG ReloadLog  - Query added to log: ATTACH STREAM nexmark:auction2 (timestamp STARTTIMESTAMP,	id INTEGER,	itemname STRING,	description STRING,	initialbid INTEGER,	reserve INTEGER,	expires LONG,	seller INTEGER ,category INTEGER) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_auction2.csv' AS SimpleCSV - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
15247 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
15247 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
15248 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@30b9eadd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
15248 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
15248 DEBUG StandardExecutor  - Adding following query: SELECT * FROM nexmark:auction2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
15248 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: []
map={nexmark:auction2=[timestamp, id, itemname, description, initialbid, reserve, expires, seller, category]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@412c995d (name: nexmark:auction2)
selfJoin:: 0
true
getAttributename:: timestamp, nexmark:auction2
getAttributename:: id, nexmark:auction2
getAttributename:: itemname, nexmark:auction2
getAttributename:: description, nexmark:auction2
getAttributename:: initialbid, nexmark:auction2
getAttributename:: reserve, nexmark:auction2
getAttributename:: expires, nexmark:auction2
getAttributename:: seller, nexmark:auction2
getAttributename:: category, nexmark:auction2
orderedAttributes:: [nexmark:auction2.timestamp, nexmark:auction2.id, nexmark:auction2.itemname, nexmark:auction2.description, nexmark:auction2.initialbid, nexmark:auction2.reserve, nexmark:auction2.expires, nexmark:auction2.seller, nexmark:auction2.category]
ARGUMENT:: 'nexmark:auction2.timestamp','nexmark:auction2.id','nexmark:auction2.itemname','nexmark:auction2.description','nexmark:auction2.initialbid','nexmark:auction2.reserve','nexmark:auction2.expires','nexmark:auction2.seller','nexmark:auction2.category'
15251 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
15251 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
15251 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3249a1ce - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
15251 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
15251 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['nexmark:auction2.timestamp','nexmark:auction2.id','nexmark:auction2.itemname','nexmark:auction2.description','nexmark:auction2.initialbid','nexmark:auction2.reserve','nexmark:auction2.expires','nexmark:auction2.seller','nexmark:auction2.category']},nexmark:auction2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
15251 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
15255 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
15256 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
15256 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
15256 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
15256 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
15257 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
15257 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
15257 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
15257 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
15257 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
15257 INFO  transform  - Starting transformation of Top@7346738 OwnerIDs: 55... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
15258 DEBUG transform  - Before transformation: 
TopAO (7346738) Owner: 55
0 <- 0 MapAO (967460257) Owner: 55
       0 <- 0 AccessAO (1940912369) Owner: 55
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
15260 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
15260 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
15260 INFO  transform  - Transformation of Top@7346738 OwnerIDs: 55 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
15260 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
15261 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
15261 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
15261 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
15261 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
15261 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['nexmark:auction2.timestamp','nexmark:auction2.id','nexmark:auction2.itemname','nexmark:auction2.description','nexmark:auction2.initialbid','nexmark:auction2.reserve','nexmark:auction2.expires','nexmark:auction2.seller','nexmark:auction2.category']},nexmark:auction2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
15261 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
15262 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
15262 DEBUG ReloadLog  - Query added to log: SELECT * FROM nexmark:auction2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
15262 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
15263 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
15263 DEBUG ReloadLog  - Query added to log: ///OdysseusScript
#PARSER CQL
#ADDQUERY
DROP STREAM nexmark:auction2;
#ADDQUERY
ATTACH STREAM nexmark:auction2 (timestamp STARTTIMESTAMP,	id INTEGER,	itemname STRING,	description STRING,	initialbid INTEGER,	reserve INTEGER,	expires LONG,	seller INTEGER ,category INTEGER) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_auction2.csv' AS SimpleCSV

#ADDQUERY
SELECT * FROM nexmark:auction2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
15263 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
15264 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
15264 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
15264 DEBUG AbstractTestComponent  - starting query with ID 55... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:53) 
15264 INFO  StandardExecutor  - Starting query (ID: 55)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
15694 DEBUG TICompareSink  - expected data loaded - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.TICompareSink.process_open(TICompareSink.java:92) 
15695 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
15696 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
15696 INFO  StandardExecutor  - Query 55 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
15696 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 55 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
15696 DEBUG AbstractSimpleThreadScheduler  - Created new Multi-Source-Excutor MultiSourceExecutor #2  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.createNewExecutor(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:118) 
15696 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
15697 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
15697 DEBUG MultipleSourceExecutor  - Added Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedAddSources(MultipleSourceExecutor.java:284) 
15697 DEBUG AbstractTestComponent  - query started, waiting until data is processed... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:58) 
18618 DEBUG AbstractCompareSink  - Received done... - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.AbstractCompareSink.process_done(AbstractCompareSink.java:170) 
18619 DEBUG StandardExecutor  - Try to stop query 55 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
18619 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
18619 INFO  StandardExecutor  - Query 55 stopped. Execution time 2923 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
18619 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 55 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
18619 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
18619 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
18620 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
18620 DEBUG AbstractSimpleThreadScheduler  - Removing sources [AccessPO(943666520)(o=false)(d=true)] from MultiSourceExecutor #2  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:52) 
18620 DEBUG AbstractSimpleThreadScheduler  - Removed sources [AccessPO(943666520)(o=false)(d=true)] from MultiSourceExecutor #2  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:55) 
18620 DEBUG MultipleSourceExecutor  - Removed Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedRemoveSources(MultipleSourceExecutor.java:296) 
18620 DEBUG AbstractSimpleThreadScheduler  - Remove source executor MultiSourceExecutor #2  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.sourcesChanged(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:72) 
18620 DEBUG MultipleSourceExecutor  - Terminating Source Executor MultiSourceExecutor #2  with sources: [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.run(MultipleSourceExecutor.java:76) 
18704 DEBUG AbstractTestComponent  - processing done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:70) 
19710 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
19710 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
19710 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
19711 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-36] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
19711 INFO  StandardExecutor  - Removing Query 55 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
19711 DEBUG StandardExecutor  - Removing Ownership 55 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
19712 INFO  StandardExecutor  - Query 55 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
19712 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['nexmark:auction2.timestamp','nexmark:auction2.id','nexmark:auction2.itemname','nexmark:auction2.description','nexmark:auction2.initialbid','nexmark:auction2.reserve','nexmark:auction2.expires','nexmark:auction2.seller','nexmark:auction2.category']},nexmark:auction2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
19712 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
19713 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
19713 DEBUG AbstractTestComponent  - Sub test "query2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
19713 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
19713 DEBUG AbstractTestComponent  - Sat Apr 01 14:26:36 CEST 2017Running sub test 3 of 6: "query3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
19713 DEBUG AbstractTestComponent  - ///OdysseusScript
#PARSER CQL
#ADDQUERY
DROP STREAM nexmark:bid2;
#ADDQUERY
ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV;

#ADDQUERY
SELECT b.auction, DolToEur(b.price) AS euroPrice, b.bidder, b.datetime FROM nexmark:bid2 [UNBOUNDED] AS b;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
19714 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
19714 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
19714 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
19714 DEBUG StandardExecutor  - Adding following query: ///OdysseusScript
#PARSER CQL
#ADDQUERY
DROP STREAM nexmark:bid2;
#ADDQUERY
ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV;

#ADDQUERY
SELECT b.auction, DolToEur(b.price) AS euroPrice, b.bidder, b.datetime FROM nexmark:bid2 [UNBOUNDED] AS b;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
19714 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
19715 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
19715 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
19715 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@f2c488 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
19715 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
19715 DEBUG StandardExecutor  - Adding following query: DROP STREAM nexmark:bid2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
19715 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
19717 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
19717 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
19718 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@7bc9e6ab - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
19718 WARN  AbstractDataDictionary  - Trying to remove not registered view/stream nexmark:bid2 - de.uniol.inf.is.odysseus.core.server.datadictionary.AbstractDataDictionary.removeViewOrStream(AbstractDataDictionary.java:710) 
19718 DEBUG ReloadLog  - Query added to log: DROP STREAM nexmark:bid2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
19718 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
19719 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
19719 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5488b5c5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
19719 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
19719 DEBUG StandardExecutor  - Adding following query: ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
19719 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
19722 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
19723 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
19723 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@712ca57b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
19723 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
19723 DEBUG StandardExecutor  - Adding following query: nexmark:bid2 := ACCESS({source='nexmark:bid2',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
19724 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
19725 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
19725 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
19725 DEBUG StandardExecutor  - Executing Create VIEW nexmark:bid2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
19726 DEBUG ReloadLog  - Query added to log: nexmark:bid2 := ACCESS({source='nexmark:bid2',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
19726 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
19728 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
19728 DEBUG ReloadLog  - Query added to log: ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
19729 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
19729 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
19730 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@51745f40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
19730 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
19730 DEBUG StandardExecutor  - Adding following query: SELECT b.auction, DolToEur(b.price) AS euroPrice, b.bidder, b.datetime FROM nexmark:bid2 [UNBOUNDED] AS b; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
19730 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@69e308c6 (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@1a1ed4e5 (operators: null)
getAttributename:: b.price, null
FUNCTIONSTORES:: [DolToEur()]
TYPE:: Double
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@667e34b1 (name: b.auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@1c6e0a08 (name: b.bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@6dba847b (name: b.datetime), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@1efdcd5 (name: b.price)]
prefix= b
prefix= b
prefix= b
prefix= b
map={nexmark:bid2=[b.auction, b.bidder, b.datetime, b.price]}
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@69e308c6 (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@1a1ed4e5 (operators: null)
getAttributename:: b.price, null
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@1623bbe5 (name: nexmark:bid2)
selfJoin:: 0
b.auction
aliasses::[auction, b.auction]
b.bidder
aliasses::[auction, b.auction, bidder, b.bidder]
b.datetime
aliasses::[auction, b.auction, bidder, b.bidder, datetime, b.datetime]
b.price
aliasses::[auction, b.auction, bidder, b.bidder, datetime, b.datetime, price, b.price]
true
ATTRIBUTE:: euroPrice
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: euroPrice
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: b.auction
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: b.bidder
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: b.datetime
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: b.price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: euroPrice
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: euroPrice
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
orderedAttributes:: [b.auction, ['DolToEur(b.price)','euroPrice'], b.bidder, b.datetime]
ARGUMENT:: 'b.auction',['DolToEur(b.price)','euroPrice'],'b.bidder','b.datetime'
19737 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
19737 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
19737 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7af1cd63 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
19737 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
19738 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},nexmark:bid2)
operator_2 = MAP({expressions=['b.auction',['DolToEur(b.price)','euroPrice'],'b.bidder','b.datetime']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
19738 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
19741 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
19741 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
19741 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
19742 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
19742 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
19742 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
19742 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
19743 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
19743 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
19743 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
19743 INFO  transform  - Starting transformation of Top@795594631 OwnerIDs: 56... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
19743 DEBUG transform  - Before transformation: 
TopAO (795594631) Owner: 56
0 <- 0 MapAO (1492219097) Owner: 56
       0 <- 0 AccessAO (2026371507) Owner: 56
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
19747 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
19747 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
19747 INFO  transform  - Transformation of Top@795594631 OwnerIDs: 56 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
19748 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
19748 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
19748 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
19748 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
19748 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
19748 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},nexmark:bid2)
operator_2 = MAP({expressions=['b.auction',['DolToEur(b.price)','euroPrice'],'b.bidder','b.datetime']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
19748 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
19751 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
19751 DEBUG ReloadLog  - Query added to log: SELECT b.auction, DolToEur(b.price) AS euroPrice, b.bidder, b.datetime FROM nexmark:bid2 [UNBOUNDED] AS b; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
19751 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
19752 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
19752 DEBUG ReloadLog  - Query added to log: ///OdysseusScript
#PARSER CQL
#ADDQUERY
DROP STREAM nexmark:bid2;
#ADDQUERY
ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV;

#ADDQUERY
SELECT b.auction, DolToEur(b.price) AS euroPrice, b.bidder, b.datetime FROM nexmark:bid2 [UNBOUNDED] AS b;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
19752 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
19753 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
19753 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
19753 DEBUG AbstractTestComponent  - starting query with ID 56... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:53) 
19754 INFO  StandardExecutor  - Starting query (ID: 56)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
20437 DEBUG TICompareSink  - expected data loaded - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.TICompareSink.process_open(TICompareSink.java:92) 
20437 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
20437 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
20438 INFO  StandardExecutor  - Query 56 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
20438 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 56 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
20438 DEBUG AbstractSimpleThreadScheduler  - Created new Multi-Source-Excutor MultiSourceExecutor #3  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.createNewExecutor(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:118) 
20438 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
20439 DEBUG MultipleSourceExecutor  - Added Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedAddSources(MultipleSourceExecutor.java:284) 
20439 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
20439 DEBUG AbstractTestComponent  - query started, waiting until data is processed... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:58) 
28890 DEBUG AbstractCompareSink  - Received done... - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.AbstractCompareSink.process_done(AbstractCompareSink.java:170) 
28890 DEBUG StandardExecutor  - Try to stop query 56 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
28891 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
28891 INFO  StandardExecutor  - Query 56 stopped. Execution time 8453 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
28891 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 56 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
28891 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
28891 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
28891 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
28891 DEBUG AbstractSimpleThreadScheduler  - Removing sources [AccessPO(244577237)(o=false)(d=true)] from MultiSourceExecutor #3  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:52) 
28891 DEBUG AbstractSimpleThreadScheduler  - Removed sources [AccessPO(244577237)(o=false)(d=true)] from MultiSourceExecutor #3  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:55) 
28892 DEBUG MultipleSourceExecutor  - Removed Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedRemoveSources(MultipleSourceExecutor.java:296) 
28892 DEBUG AbstractSimpleThreadScheduler  - Remove source executor MultiSourceExecutor #3  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.sourcesChanged(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:72) 
28892 DEBUG MultipleSourceExecutor  - Terminating Source Executor MultiSourceExecutor #3  with sources: [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.run(MultipleSourceExecutor.java:76) 
29460 DEBUG AbstractTestComponent  - processing done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:70) 
30460 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
30460 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
30461 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
30461 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-38] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
30461 INFO  StandardExecutor  - Removing Query 56 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
30461 DEBUG StandardExecutor  - Removing Ownership 56 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
30462 INFO  StandardExecutor  - Query 56 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
30462 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},nexmark:bid2)
operator_2 = MAP({expressions=['b.auction',['DolToEur(b.price)','euroPrice'],'b.bidder','b.datetime']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
30462 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
30463 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
30463 DEBUG AbstractTestComponent  - Sub test "query3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
30463 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
30463 DEBUG AbstractTestComponent  - Sat Apr 01 14:26:47 CEST 2017Running sub test 4 of 6: "query3a.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
30463 DEBUG AbstractTestComponent  - ///OdysseusScript
#PARSER CQL
#DOREWRITE false
#ADDQUERY
DROP STREAM nexmark:bid2;
#ADDQUERY
ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV;

#ADDQUERY
SELECT b.auction, DolToEur(b.price) AS euroPrice, b.bidder, b.datetime FROM nexmark:bid2 [UNBOUNDED] AS b;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
30463 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
30463 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
30464 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
30464 DEBUG StandardExecutor  - Adding following query: ///OdysseusScript
#PARSER CQL
#DOREWRITE false
#ADDQUERY
DROP STREAM nexmark:bid2;
#ADDQUERY
ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV;

#ADDQUERY
SELECT b.auction, DolToEur(b.price) AS euroPrice, b.bidder, b.datetime FROM nexmark:bid2 [UNBOUNDED] AS b;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
30464 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
30464 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
30465 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
30465 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2fb5fe30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
30465 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
30465 DEBUG StandardExecutor  - Adding following query: DROP STREAM nexmark:bid2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
30465 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
30468 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
30468 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
30468 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@2375b321 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
30468 DEBUG ReloadLog  - Query added to log: DROP STREAM nexmark:bid2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
30468 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
30469 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
30469 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5baaae4c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
30469 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
30469 DEBUG StandardExecutor  - Adding following query: ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
30469 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
30472 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
30472 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
30472 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@41a6d121 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
30472 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
30473 DEBUG StandardExecutor  - Adding following query: nexmark:bid2 := ACCESS({source='nexmark:bid2',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
30473 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
30474 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
30474 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
30474 DEBUG StandardExecutor  - Executing Create VIEW nexmark:bid2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
30475 DEBUG ReloadLog  - Query added to log: nexmark:bid2 := ACCESS({source='nexmark:bid2',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
30475 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
30475 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
30476 DEBUG ReloadLog  - Query added to log: ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
30476 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
30476 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
30476 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@19f040ba - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
30476 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
30476 DEBUG StandardExecutor  - Adding following query: SELECT b.auction, DolToEur(b.price) AS euroPrice, b.bidder, b.datetime FROM nexmark:bid2 [UNBOUNDED] AS b; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
30477 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@27e32fe4 (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@c3c4c1c (operators: null)
getAttributename:: b.price, null
FUNCTIONSTORES:: [DolToEur()]
TYPE:: Double
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@17d238b1 (name: b.auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@3d7cc3cb (name: b.bidder), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@35e478f (name: b.datetime), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@6d6cb754 (name: b.price)]
prefix= b
prefix= b
prefix= b
prefix= b
map={nexmark:bid2=[b.auction, b.bidder, b.datetime, b.price]}
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@27e32fe4 (operators: null)
expression::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@c3c4c1c (operators: null)
getAttributename:: b.price, null
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6b7d1df8 (name: nexmark:bid2)
selfJoin:: 0
b.auction
aliasses::[auction, b.auction]
b.bidder
aliasses::[auction, b.auction, bidder, b.bidder]
b.datetime
aliasses::[auction, b.auction, bidder, b.bidder, datetime, b.datetime]
b.price
aliasses::[auction, b.auction, bidder, b.bidder, datetime, b.datetime, price, b.price]
true
ATTRIBUTE:: euroPrice
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: euroPrice
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: b.auction
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: b.bidder
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: b.datetime
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: b.price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: euroPrice
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: euroPrice
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
orderedAttributes:: [b.auction, ['DolToEur(b.price)','euroPrice'], b.bidder, b.datetime]
ARGUMENT:: 'b.auction',['DolToEur(b.price)','euroPrice'],'b.bidder','b.datetime'
30486 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
30486 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
30487 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3044e9c7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
30487 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
30487 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},nexmark:bid2)
operator_2 = MAP({expressions=['b.auction',['DolToEur(b.price)','euroPrice'],'b.bidder','b.datetime']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
30487 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
30492 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
30492 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
30492 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
30492 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
30492 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
30493 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
30493 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
30493 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
30493 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
30493 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
30494 INFO  transform  - Starting transformation of Top@1887466020 OwnerIDs: 57... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
30494 DEBUG transform  - Before transformation: 
TopAO (1887466020) Owner: 57
0 <- 0 MapAO (2123846943) Owner: 57
       0 <- 0 AccessAO (1074630954) Owner: 57
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
30496 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
30496 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
30496 INFO  transform  - Transformation of Top@1887466020 OwnerIDs: 57 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
30498 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
30498 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
30498 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
30499 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
30499 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
30499 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},nexmark:bid2)
operator_2 = MAP({expressions=['b.auction',['DolToEur(b.price)','euroPrice'],'b.bidder','b.datetime']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
30499 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
30500 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
30500 DEBUG ReloadLog  - Query added to log: SELECT b.auction, DolToEur(b.price) AS euroPrice, b.bidder, b.datetime FROM nexmark:bid2 [UNBOUNDED] AS b; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
30500 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
30501 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
30501 DEBUG ReloadLog  - Query added to log: ///OdysseusScript
#PARSER CQL
#DOREWRITE false
#ADDQUERY
DROP STREAM nexmark:bid2;
#ADDQUERY
ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV;

#ADDQUERY
SELECT b.auction, DolToEur(b.price) AS euroPrice, b.bidder, b.datetime FROM nexmark:bid2 [UNBOUNDED] AS b;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
30501 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
30502 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
30502 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
30503 DEBUG AbstractTestComponent  - starting query with ID 57... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:53) 
30503 INFO  StandardExecutor  - Starting query (ID: 57)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
31043 DEBUG TICompareSink  - expected data loaded - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.TICompareSink.process_open(TICompareSink.java:92) 
31043 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
31043 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
31044 INFO  StandardExecutor  - Query 57 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
31044 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 57 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
31044 DEBUG AbstractSimpleThreadScheduler  - Created new Multi-Source-Excutor MultiSourceExecutor #4  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.createNewExecutor(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:118) 
31044 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
31044 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
31044 DEBUG MultipleSourceExecutor  - Added Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedAddSources(MultipleSourceExecutor.java:284) 
31045 DEBUG AbstractTestComponent  - query started, waiting until data is processed... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:58) 
39511 DEBUG AbstractCompareSink  - Received done... - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.AbstractCompareSink.process_done(AbstractCompareSink.java:170) 
39513 DEBUG StandardExecutor  - Try to stop query 57 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
39513 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
39513 INFO  StandardExecutor  - Query 57 stopped. Execution time 8469 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
39513 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 57 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
39513 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
39513 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
39514 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
39514 DEBUG AbstractSimpleThreadScheduler  - Removing sources [AccessPO(749693202)(o=false)(d=true)] from MultiSourceExecutor #4  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:52) 
39514 DEBUG AbstractSimpleThreadScheduler  - Removed sources [AccessPO(749693202)(o=false)(d=true)] from MultiSourceExecutor #4  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:55) 
39514 DEBUG MultipleSourceExecutor  - Removed Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedRemoveSources(MultipleSourceExecutor.java:296) 
39514 DEBUG AbstractSimpleThreadScheduler  - Remove source executor MultiSourceExecutor #4  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.sourcesChanged(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:72) 
39514 DEBUG MultipleSourceExecutor  - Terminating Source Executor MultiSourceExecutor #4  with sources: [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.run(MultipleSourceExecutor.java:76) 
40073 DEBUG AbstractTestComponent  - processing done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:70) 
41074 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
41075 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
41075 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
41075 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-40] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
41075 INFO  StandardExecutor  - Removing Query 57 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
41076 DEBUG StandardExecutor  - Removing Ownership 57 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
41076 INFO  StandardExecutor  - Query 57 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
41076 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},nexmark:bid2)
operator_2 = MAP({expressions=['b.auction',['DolToEur(b.price)','euroPrice'],'b.bidder','b.datetime']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
41076 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
41077 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
41077 DEBUG AbstractTestComponent  - Sub test "query3a.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
41077 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
41077 DEBUG AbstractTestComponent  - Sat Apr 01 14:26:58 CEST 2017Running sub test 5 of 6: "query4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
41077 DEBUG AbstractTestComponent  - ///OdysseusScript
#PARSER CQL
#ADDQUERY
DROP STREAM nexmark:bid2 if exists;
#ADDQUERY
ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV;

#ADDQUERY
SELECT auction, price FROM nexmark:bid2 WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;

 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
41078 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
41078 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
41078 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
41078 DEBUG StandardExecutor  - Adding following query: ///OdysseusScript
#PARSER CQL
#ADDQUERY
DROP STREAM nexmark:bid2 if exists;
#ADDQUERY
ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV;

#ADDQUERY
SELECT auction, price FROM nexmark:bid2 WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;

 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
41078 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
41079 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
41079 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
41079 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2160e52a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
41079 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
41079 DEBUG StandardExecutor  - Adding following query: DROP STREAM nexmark:bid2 if exists; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
41079 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
41081 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
41081 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
41081 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@3a60c416 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
41081 DEBUG ReloadLog  - Query added to log: DROP STREAM nexmark:bid2 if exists; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
41081 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
41082 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
41082 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@60f2e0bd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
41082 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
41082 DEBUG StandardExecutor  - Adding following query: ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
41082 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
41084 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
41084 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
41084 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6b410923 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
41084 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
41085 DEBUG StandardExecutor  - Adding following query: nexmark:bid2 := ACCESS({source='nexmark:bid2',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
41085 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
41086 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
41086 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
41086 DEBUG StandardExecutor  - Executing Create VIEW nexmark:bid2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
41087 DEBUG ReloadLog  - Query added to log: nexmark:bid2 := ACCESS({source='nexmark:bid2',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
41087 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
41088 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
41088 DEBUG ReloadLog  - Query added to log: ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
41088 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
41089 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
41089 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@e8fadb0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
41089 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
41089 DEBUG StandardExecutor  - Adding following query: SELECT auction, price FROM nexmark:bid2 WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
41089 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@53667cbe (name: auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@1d3e6d34 (name: price)]
prefix= nexmark:bid2
prefix= nexmark:bid2
map={nexmark:bid2=[auction, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6eafb10e (name: nexmark:bid2)
selfJoin:: 0
true
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6eafb10e (name: nexmark:bid2)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6eafb10e (name: nexmark:bid2)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6eafb10e (name: nexmark:bid2)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6eafb10e (name: nexmark:bid2)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6eafb10e (name: nexmark:bid2)]
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6eafb10e (name: nexmark:bid2)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6eafb10e (name: nexmark:bid2)]
ATTRIBUTE:: price
ATTRIBUTE:: auction
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6eafb10e (name: nexmark:bid2)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6eafb10e (name: nexmark:bid2)]
orderedAttributes:: [nexmark:bid2.auction, nexmark:bid2.price]
ARGUMENT:: 'nexmark:bid2.auction','nexmark:bid2.price'
41096 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
41096 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
41096 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@26a94fa5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
41096 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
41096 DEBUG StandardExecutor  - Adding following query: operator_1 = SELECT({predicate='nexmark:bid2.auction==7||nexmark:bid2.auction==20||nexmark:bid2.auction==21||nexmark:bid2.auction==59||nexmark:bid2.auction==87'},nexmark:bid2)
operator_2 = MAP({expressions=['nexmark:bid2.auction','nexmark:bid2.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
41097 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
41102 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
41102 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
41102 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
41103 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
41103 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
41112 DEBUG ruleengine  - Ruleengine needed 9 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
41112 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
41113 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
41113 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
41113 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
41113 INFO  transform  - Starting transformation of Top@1720746883 OwnerIDs: 58... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
41113 DEBUG transform  - Before transformation: 
TopAO (1720746883) Owner: 58
0 <- 0 MapAO (1095203437) Owner: 58
       0 <- 0 SelectAO (45880026) Owner: 58
              0 <- 0 AccessAO (824357143) Owner: 58
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
41116 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
41117 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
41118 INFO  transform  - Transformation of Top@1720746883 OwnerIDs: 58 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
41119 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
41119 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
41120 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
41120 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
41120 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
41120 DEBUG ReloadLog  - Query added to log: operator_1 = SELECT({predicate='nexmark:bid2.auction==7||nexmark:bid2.auction==20||nexmark:bid2.auction==21||nexmark:bid2.auction==59||nexmark:bid2.auction==87'},nexmark:bid2)
operator_2 = MAP({expressions=['nexmark:bid2.auction','nexmark:bid2.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
41120 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
41121 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
41122 DEBUG ReloadLog  - Query added to log: SELECT auction, price FROM nexmark:bid2 WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
41124 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
41125 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
41125 DEBUG ReloadLog  - Query added to log: ///OdysseusScript
#PARSER CQL
#ADDQUERY
DROP STREAM nexmark:bid2 if exists;
#ADDQUERY
ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV;

#ADDQUERY
SELECT auction, price FROM nexmark:bid2 WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;

 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
41126 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
41126 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
41126 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
41127 DEBUG AbstractTestComponent  - starting query with ID 58... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:53) 
41127 INFO  StandardExecutor  - Starting query (ID: 58)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
41127 DEBUG TICompareSink  - expected data loaded - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.TICompareSink.process_open(TICompareSink.java:92) 
41127 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
41128 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
41128 INFO  StandardExecutor  - Query 58 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
41128 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 58 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
41132 DEBUG AbstractSimpleThreadScheduler  - Created new Multi-Source-Excutor MultiSourceExecutor #5  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.createNewExecutor(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:118) 
41132 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
41133 DEBUG MultipleSourceExecutor  - Added Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedAddSources(MultipleSourceExecutor.java:284) 
41133 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
41134 DEBUG AbstractTestComponent  - query started, waiting until data is processed... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:58) 
41677 DEBUG AbstractCompareSink  - Received done... - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.AbstractCompareSink.process_done(AbstractCompareSink.java:170) 
41677 DEBUG StandardExecutor  - Try to stop query 58 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
41677 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
41678 INFO  StandardExecutor  - Query 58 stopped. Execution time 550 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
41678 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 58 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
41678 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
41678 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
41678 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
41678 DEBUG AbstractSimpleThreadScheduler  - Removing sources [AccessPO(1495257933)(o=false)(d=true)] from MultiSourceExecutor #5  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:52) 
41678 DEBUG AbstractSimpleThreadScheduler  - Removed sources [AccessPO(1495257933)(o=false)(d=true)] from MultiSourceExecutor #5  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:55) 
41678 DEBUG MultipleSourceExecutor  - Removed Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedRemoveSources(MultipleSourceExecutor.java:296) 
41678 DEBUG AbstractSimpleThreadScheduler  - Remove source executor MultiSourceExecutor #5  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.sourcesChanged(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:72) 
41679 DEBUG MultipleSourceExecutor  - Terminating Source Executor MultiSourceExecutor #5  with sources: [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.run(MultipleSourceExecutor.java:76) 
42136 DEBUG AbstractTestComponent  - processing done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:70) 
43138 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
43138 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
43138 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
43139 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-42] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
43139 INFO  StandardExecutor  - Removing Query 58 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
43139 DEBUG StandardExecutor  - Removing Ownership 58 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
43139 INFO  StandardExecutor  - Query 58 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
43140 DEBUG ReloadLog  - Removing query from log: operator_1 = SELECT({predicate='nexmark:bid2.auction==7||nexmark:bid2.auction==20||nexmark:bid2.auction==21||nexmark:bid2.auction==59||nexmark:bid2.auction==87'},nexmark:bid2)
operator_2 = MAP({expressions=['nexmark:bid2.auction','nexmark:bid2.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
43140 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
43141 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
43141 DEBUG AbstractTestComponent  - Sub test "query4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
43141 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
43141 DEBUG AbstractTestComponent  - Sat Apr 01 14:27:00 CEST 2017Running sub test 6 of 6: "query4a.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
43141 DEBUG AbstractTestComponent  - ///OdysseusScript
#PARSER CQL
#DOREWRITE false
#ADDQUERY
DROP STREAM nexmark:bid2 if exists;
#ADDQUERY
ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV;

#ADDQUERY
SELECT auction, price FROM nexmark:bid2 WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;

 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
43141 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
43142 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
43142 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
43142 DEBUG StandardExecutor  - Adding following query: ///OdysseusScript
#PARSER CQL
#DOREWRITE false
#ADDQUERY
DROP STREAM nexmark:bid2 if exists;
#ADDQUERY
ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV;

#ADDQUERY
SELECT auction, price FROM nexmark:bid2 WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;

 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
43142 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
43143 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
43143 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
43143 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@67207d8a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
43143 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
43143 DEBUG StandardExecutor  - Adding following query: DROP STREAM nexmark:bid2 if exists; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
43144 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
43145 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
43146 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
43146 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@7c2a69b4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
43146 DEBUG ReloadLog  - Query added to log: DROP STREAM nexmark:bid2 if exists; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
43146 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
43147 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
43147 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@a619c2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
43147 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
43147 DEBUG StandardExecutor  - Adding following query: ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
43147 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
43149 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
43149 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
43149 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@375b5b7f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
43149 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
43150 DEBUG StandardExecutor  - Adding following query: nexmark:bid2 := ACCESS({source='nexmark:bid2',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
43150 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
43151 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
43151 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
43152 DEBUG StandardExecutor  - Executing Create VIEW nexmark:bid2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
43152 DEBUG ReloadLog  - Query added to log: nexmark:bid2 := ACCESS({source='nexmark:bid2',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['filename','/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
43152 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
43152 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
43153 DEBUG ReloadLog  - Query added to log: ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
43153 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
43153 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
43153 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@56781d96 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
43154 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
43154 DEBUG StandardExecutor  - Adding following query: SELECT auction, price FROM nexmark:bid2 WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
43154 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
attributes.: [de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@25c5e994 (name: auction), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.AttributeImpl@378bd86d (name: price)]
prefix= nexmark:bid2
prefix= nexmark:bid2
map={nexmark:bid2=[auction, price]}
SOURECE::de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2189e7a7 (name: nexmark:bid2)
selfJoin:: 0
true
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2189e7a7 (name: nexmark:bid2)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2189e7a7 (name: nexmark:bid2)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2189e7a7 (name: nexmark:bid2)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2189e7a7 (name: nexmark:bid2)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2189e7a7 (name: nexmark:bid2)]
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2189e7a7 (name: nexmark:bid2)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2189e7a7 (name: nexmark:bid2)]
ATTRIBUTE:: price
ATTRIBUTE:: auction
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2189e7a7 (name: nexmark:bid2)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2189e7a7 (name: nexmark:bid2)]
orderedAttributes:: [nexmark:bid2.auction, nexmark:bid2.price]
ARGUMENT:: 'nexmark:bid2.auction','nexmark:bid2.price'
43158 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
43158 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
43158 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@69b2f8e5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
43158 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
43158 DEBUG StandardExecutor  - Adding following query: operator_1 = SELECT({predicate='nexmark:bid2.auction==7||nexmark:bid2.auction==20||nexmark:bid2.auction==21||nexmark:bid2.auction==59||nexmark:bid2.auction==87'},nexmark:bid2)
operator_2 = MAP({expressions=['nexmark:bid2.auction','nexmark:bid2.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
43158 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
43163 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
43163 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
43164 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
43164 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
43164 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
43167 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
43167 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
43169 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
43170 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
43170 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
43171 INFO  transform  - Starting transformation of Top@1932244589 OwnerIDs: 59... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
43171 DEBUG transform  - Before transformation: 
TopAO (1932244589) Owner: 59
0 <- 0 MapAO (1913017282) Owner: 59
       0 <- 0 SelectAO (1173504361) Owner: 59
              0 <- 0 AccessAO (1792381498) Owner: 59
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
43174 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
43175 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
43175 INFO  transform  - Transformation of Top@1932244589 OwnerIDs: 59 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
43176 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
43176 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
43177 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
43177 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
43177 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
43177 DEBUG ReloadLog  - Query added to log: operator_1 = SELECT({predicate='nexmark:bid2.auction==7||nexmark:bid2.auction==20||nexmark:bid2.auction==21||nexmark:bid2.auction==59||nexmark:bid2.auction==87'},nexmark:bid2)
operator_2 = MAP({expressions=['nexmark:bid2.auction','nexmark:bid2.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
43177 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
43178 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
43178 DEBUG ReloadLog  - Query added to log: SELECT auction, price FROM nexmark:bid2 WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
43178 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
43179 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
43179 DEBUG ReloadLog  - Query added to log: ///OdysseusScript
#PARSER CQL
#DOREWRITE false
#ADDQUERY
DROP STREAM nexmark:bid2 if exists;
#ADDQUERY
ATTACH STREAM nexmark:bid2 (timestamp STARTTIMESTAMP,	auction INTEGER, bidder INTEGER, datetime LONG,	price DOUBLE) FILE '/Users/jp/workspace/eclipse_odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/../../../../../../git/odysseus/test/integration.testing/de.uniol.inf.is.odysseus.test.component.nexmark/.//testdaten/daten/nexmark_bid2.csv' AS SimpleCSV;

#ADDQUERY
SELECT auction, price FROM nexmark:bid2 WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;

 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
43180 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
43182 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
43182 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
43182 DEBUG AbstractTestComponent  - starting query with ID 59... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:53) 
43182 INFO  StandardExecutor  - Starting query (ID: 59)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
43183 DEBUG TICompareSink  - expected data loaded - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.TICompareSink.process_open(TICompareSink.java:92) 
43183 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
43183 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
43183 INFO  StandardExecutor  - Query 59 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
43183 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 59 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
43183 DEBUG AbstractSimpleThreadScheduler  - Created new Multi-Source-Excutor MultiSourceExecutor #6  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.createNewExecutor(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:118) 
43184 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
43184 DEBUG MultipleSourceExecutor  - Added Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedAddSources(MultipleSourceExecutor.java:284) 
43184 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
43189 DEBUG AbstractTestComponent  - query started, waiting until data is processed... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:58) 
43667 DEBUG AbstractCompareSink  - Received done... - de.uniol.inf.is.odysseus.test.sinks.physicaloperator.AbstractCompareSink.process_done(AbstractCompareSink.java:170) 
43667 DEBUG StandardExecutor  - Try to stop query 59 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
43667 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
43668 INFO  StandardExecutor  - Query 59 stopped. Execution time 485 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
43668 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 59 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
43668 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
43668 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
43668 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
43668 DEBUG AbstractSimpleThreadScheduler  - Removing sources [AccessPO(1340086275)(o=false)(d=true)] from MultiSourceExecutor #6  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:52) 
43668 DEBUG AbstractSimpleThreadScheduler  - Removed sources [AccessPO(1340086275)(o=false)(d=true)] from MultiSourceExecutor #6  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.removeUnscheduledSources(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:55) 
43669 DEBUG MultipleSourceExecutor  - Removed Sources [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.delayedRemoveSources(MultipleSourceExecutor.java:296) 
43669 DEBUG AbstractSimpleThreadScheduler  - Remove source executor MultiSourceExecutor #6  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadSchedulerMultipleSourcesThreaded.sourcesChanged(AbstractSimpleThreadSchedulerMultipleSourcesThreaded.java:72) 
43669 DEBUG MultipleSourceExecutor  - Terminating Source Executor MultiSourceExecutor #6  with sources: [] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.MultipleSourceExecutor.run(MultipleSourceExecutor.java:76) 
44196 DEBUG AbstractTestComponent  - processing done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:70) 
45201 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
45201 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
45201 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
45202 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7b2d0bf6[Locked by thread Thread-44] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
45202 INFO  StandardExecutor  - Removing Query 59 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
45202 DEBUG StandardExecutor  - Removing Ownership 59 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
45202 INFO  StandardExecutor  - Query 59 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
45202 DEBUG ReloadLog  - Removing query from log: operator_1 = SELECT({predicate='nexmark:bid2.auction==7||nexmark:bid2.auction==20||nexmark:bid2.auction==21||nexmark:bid2.auction==59||nexmark:bid2.auction==87'},nexmark:bid2)
operator_2 = MAP({expressions=['nexmark:bid2.auction','nexmark:bid2.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
45203 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
45203 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
45204 DEBUG AbstractTestComponent  - Sub test "query4a.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
45204 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
45204 DEBUG AbstractTestComponent  - Stopping executor - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStopExecutor(AbstractTestComponent.java:110) 
45204 DEBUG SingleSchedulerManager  - Stop scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:304) 
45204 DEBUG AbstractSimpleThreadScheduler  - Stopping source treads - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:133) 
45204 DEBUG AbstractSimpleThreadScheduler  - Stopping scheduler executors - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:138) 
45204 DEBUG AbstractScheduler  - Stopping scheduling - de.uniol.inf.is.odysseus.core.server.scheduler.AbstractScheduler.stopScheduling(AbstractScheduler.java:216) 
45205 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
45205 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
45205 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
45205 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
45205 DEBUG AbstractSimpleThreadScheduler  - Setting new Plans to schedule :[] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:158) 
45206 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans done - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:178) 
45206 DEBUG SingleSchedulerManager  - Scheduling stopped. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:306) 
45206 DEBUG TestComponentRunner  - End Testcomponent 'Nexmark Test'. Duration = 32117 ms - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:73) 
45206 DEBUG TestRunnerApplication  - Total results for component "Nexmark Test" - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:103) 
45206 DEBUG TestRunnerApplication  - Sub test 1: query1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
45206 DEBUG TestRunnerApplication  - Sub test 2: query2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
45206 DEBUG TestRunnerApplication  - Sub test 3: query3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
45206 DEBUG TestRunnerApplication  - Sub test 4: query3a.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
45206 DEBUG TestRunnerApplication  - Sub test 5: query4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
45206 DEBUG TestRunnerApplication  - Sub test 6: query4a.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
45206 DEBUG TestRunnerApplication  - no components were added since 3ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
46211 DEBUG TestRunnerApplication  - All tests were run. - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:74) 
46212 DEBUG TestRunnerApplication  -  Status                                                      Component      Time Error
--------------------------------------------------------------------------------------
     OK                                         Compile Test Component    1980ms
--------------------------------------------------------------------------------------
-                     OK                     ProjectMapRename-Test.qry    1967ms
--------------------------------------------------------------------------------------
     OK                                            Jira Test Component    3149ms
--------------------------------------------------------------------------------------
-                     OK                                   ODY-987.qry    3139ms
--------------------------------------------------------------------------------------
     OK                                                   Nexmark Test   32117ms
--------------------------------------------------------------------------------------
-                     OK                                    query1.qry    2143ms
-                     OK                                    query2.qry    4479ms
-                     OK                                    query3.qry   10749ms
-                     OK                                   query3a.qry   10613ms
-                     OK                                    query4.qry    2063ms
-                     OK                                   query4a.qry    2062ms
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
     OK                                                                  37247ms 
 - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.printReports(TestRunnerApplication.java:205) 
46213 DEBUG TestRunnerApplication  - All tests finished with no errors. - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:87) 
46274 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@767348e9 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
46274 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@767348e9 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
46276 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@2599de7d - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
46277 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@2599de7d - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
46282 DEBUG MEP  - Remove Function Provider: MDAIndex - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46282 DEBUG MEP  - Remove Function Provider: MDAIndices - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46282 DEBUG MEP  - Remove Function Provider: MDADim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46282 DEBUG MEP  - Remove Function Provider: MDAInit - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46283 DEBUG MEP  - Remove Function Provider: MDADrop - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46283 DEBUG MEP  - Remove Function Provider: MDAAddDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46283 DEBUG MEP  - Remove Function Provider: MDAAddDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46283 DEBUG MEP  - Remove Function Provider: MDARemoveDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46283 DEBUG MEP  - Remove Function Provider: MDAExchangeDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46290 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@7bdba377 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
46290 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@7bdba377 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
46292 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.app.AppCommands@23c83034 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
46292 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.app.AppCommands@23c83034 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
46309 DEBUG MEP  - Remove Function Provider: binomialTest - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46313 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@3793a76a - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
46313 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@3793a76a - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
46327 DEBUG StandardExecutor  - Removing all queries before shutdown - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.deactivate(StandardExecutor.java:151) 
46333 DEBUG MEP  - Remove Function Provider: && - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46333 DEBUG MEP  - Remove Function Provider: || - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46333 DEBUG MEP  - Remove Function Provider: ! - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46334 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46334 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46334 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46334 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46334 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46334 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46335 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46335 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46335 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46335 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46335 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46335 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46335 DEBUG MEP  - Remove Function Provider: <= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46336 DEBUG MEP  - Remove Function Provider: <= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46336 DEBUG MEP  - Remove Function Provider: < - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46336 DEBUG MEP  - Remove Function Provider: < - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46336 DEBUG MEP  - Remove Function Provider: >= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46336 DEBUG MEP  - Remove Function Provider: >= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46336 DEBUG MEP  - Remove Function Provider: > - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46336 DEBUG MEP  - Remove Function Provider: > - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46337 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46337 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46337 DEBUG MEP  - Remove Function Provider: toProbabilisticContinuousDouble - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46337 DEBUG MEP  - Remove Function Provider: toProbabilisticDiscreteDouble - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46337 DEBUG MEP  - Remove Function Provider: similarity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46337 DEBUG MEP  - Remove Function Provider: similarity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46337 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46337 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46337 DEBUG MEP  - Remove Function Provider: kl - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46338 DEBUG MEP  - Remove Function Provider: kl - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46338 DEBUG MEP  - Remove Function Provider: loglikelihood - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46338 DEBUG MEP  - Remove Function Provider: as2DVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46338 DEBUG MEP  - Remove Function Provider: as3DVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46338 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46338 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46338 DEBUG MEP  - Remove Function Provider: int - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46342 DEBUG ruleengine  - Rewrite - Removing rules for... de.uniol.inf.is.odysseus.relational.rewrite.RuleProvider@4e3c904c - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.unbindRuleProvider(AbstractInventory.java:218) 
46343 DEBUG ruleengine  - Rewrite - Removing rules for... de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RewriteRuleProvider@29c57cc7 - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.unbindRuleProvider(AbstractInventory.java:218) 
46573 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
46577 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
46577 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
46577 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
46577 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
46581 DEBUG UserManagementProvider  - User management Memorystore removed - de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.unbindUserManagement(UserManagementProvider.java:134) 
46585 DEBUG MEP  - Remove Function Provider: kvread - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46585 DEBUG MEP  - Remove Function Provider: kvwrite - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46585 DEBUG MEP  - Remove Function Provider: kvremove - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46586 DEBUG MEP  - Remove Function Provider: DolToEur - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46586 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46586 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46586 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46586 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46586 DEBUG MEP  - Remove Function Provider: ^ - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46586 DEBUG MEP  - Remove Function Provider: union - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46587 DEBUG MEP  - Remove Function Provider: intersection - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46587 DEBUG MEP  - Remove Function Provider: difference - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46587 DEBUG MEP  - Remove Function Provider: toInterval - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46587 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46587 DEBUG MEP  - Remove Function Provider: path - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46587 DEBUG MEP  - Remove Function Provider: toKeyValue - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46587 DEBUG MEP  - Remove Function Provider: getElement - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46587 DEBUG MEP  - Remove Function Provider: getElements - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46588 DEBUG MEP  - Remove Function Provider: retrieveQueryIDs - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46588 DEBUG MEP  - Remove Function Provider: filterQueryIDs - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46588 DEBUG MEP  - Remove Function Provider: QueryPriority - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46588 DEBUG MEP  - Remove Function Provider: IsACQuery - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46588 DEBUG MEP  - Remove Function Provider: QueryBasePriority - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46588 DEBUG MEP  - Remove Function Provider: QueryState - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46588 DEBUG MEP  - Remove Function Provider: QueryName - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46588 DEBUG MEP  - Remove Function Provider: QueryStartTS - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46588 DEBUG MEP  - Remove Function Provider: QueryLastStateChangeTS - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46589 DEBUG MEP  - Remove Function Provider: QuerySheddingFactor - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46589 DEBUG MEP  - Remove Function Provider: MaxSheddingFactor - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46589 DEBUG MEP  - Remove Function Provider: getSharedOpsCount - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46592 DEBUG MEP  - Remove Function Provider: getSourceCount - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46592 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46593 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46593 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46593 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46593 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46593 DEBUG MEP  - Remove Function Provider: sub - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46593 DEBUG MEP  - Remove Function Provider: sub - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46593 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46593 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46593 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46594 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46594 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46594 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46594 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46594 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46594 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46594 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46594 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46594 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46594 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46595 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46595 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46595 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46595 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46595 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46595 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46595 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46595 DEBUG MEP  - Remove Function Provider: ^ - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46595 DEBUG MEP  - Remove Function Provider: dotProduct - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46596 DEBUG MEP  - Remove Function Provider: dotProduct - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46596 DEBUG MEP  - Remove Function Provider: Min - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46596 DEBUG MEP  - Remove Function Provider: Min - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46596 DEBUG MEP  - Remove Function Provider: Max - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46596 DEBUG MEP  - Remove Function Provider: Max - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46596 DEBUG MEP  - Remove Function Provider: Count - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46596 DEBUG MEP  - Remove Function Provider: Count - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46596 DEBUG MEP  - Remove Function Provider: Sum - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46596 DEBUG MEP  - Remove Function Provider: Sum - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46596 DEBUG MEP  - Remove Function Provider: AVG - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46597 DEBUG MEP  - Remove Function Provider: AVG - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46597 DEBUG MEP  - Remove Function Provider: Median - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46597 DEBUG MEP  - Remove Function Provider: Median - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46597 DEBUG MEP  - Remove Function Provider: StdDev - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46597 DEBUG MEP  - Remove Function Provider: StdDev - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46598 DEBUG MEP  - Remove Function Provider: Var - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46598 DEBUG MEP  - Remove Function Provider: Var - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46598 DEBUG MEP  - Remove Function Provider: toVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46598 DEBUG MEP  - Remove Function Provider: toMatrix - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46599 DEBUG MEP  - Remove Function Provider: toString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46599 DEBUG MEP  - Remove Function Provider: toString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46599 DEBUG MEP  - Remove Function Provider: vectorFromString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46599 DEBUG MEP  - Remove Function Provider: vectorFromString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46599 DEBUG MEP  - Remove Function Provider: readMatrix - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46599 DEBUG MEP  - Remove Function Provider: readVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46599 DEBUG MEP  - Remove Function Provider: readVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46599 DEBUG MEP  - Remove Function Provider: perms - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46599 DEBUG MEP  - Remove Function Provider: perm - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46599 DEBUG MEP  - Remove Function Provider: det - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46600 DEBUG MEP  - Remove Function Provider: tr - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46600 DEBUG MEP  - Remove Function Provider: trans - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46600 DEBUG MEP  - Remove Function Provider: inv - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46600 DEBUG MEP  - Remove Function Provider: identity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46600 DEBUG MEP  - Remove Function Provider: zeros - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46600 DEBUG MEP  - Remove Function Provider: ones - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46600 DEBUG MEP  - Remove Function Provider: eig - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46600 DEBUG MEP  - Remove Function Provider: ieig - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46600 DEBUG MEP  - Remove Function Provider: svd - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
46605 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@67f0a6fc - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
46605 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@67f0a6fc - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
46608 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@15fa47ce - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
46608 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@15fa47ce - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
46608 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@432a81fc - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
46608 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@432a81fc - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
