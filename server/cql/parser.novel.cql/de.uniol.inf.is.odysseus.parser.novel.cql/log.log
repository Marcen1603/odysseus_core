Configuration location:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/
Configuration file:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/config.ini loaded
Install location:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/
Framework located:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/plugins/org.eclipse.osgi_3.10.101.v20150820-1432.jar
Framework classpath:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/plugins/org.eclipse.osgi_3.10.101.v20150820-1432.jar
Splash location:
    null
Debug options:
    file:/Applications/Eclipse.app/Contents/MacOS/.options not found
Time to load bundles: 8
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [bundleresource://75.fwk1173346575:2/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [bundleresource://75.fwk1173346575:6/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
0    DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@338dc321 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
3    DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@338dc321 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
3    DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@94ab795 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
4    DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@94ab795 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
!SESSION 2017-05-15 19:19:24.356 -----------------------------------------------
eclipse.buildId=unknown
java.version=1.8.0_112
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en
Framework arguments:  -product de.uniol.inf.is.odysseus.test.odysseustestproduct System manager
Command-line arguments:  -product de.uniol.inf.is.odysseus.test.odysseustestproduct -data /Users/jp/workspace/eclipse/odysseus/../runtime-TestRunnerProduct.product -dev file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/dev.properties -os macosx -ws cocoa -arch x86_64 -consoleLog -debug .options System manager -console

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:25.143
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.cql. The reference is: Reference[name = IVisitor, interface = de.uniol.inf.is.odysseus.parser.cql.IVisitor, policy = dynamic, cardinality = 0..n, target = null, bind = addVisitor, unbind = removeVisitor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:25.149
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.report.ReportProviderBinder. The reference is: Reference[name = IReportProvider, interface = de.uniol.inf.is.odysseus.report.IReportProvider, policy = dynamic, cardinality = 0..n, target = null, bind = bindReportProvider, unbind = unbindReportProvider]
31   DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@7d4448b3 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
31   DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@7d4448b3 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
122  INFO  Core  - Current size of heap: 	1.0 GB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:61) 
123  INFO  Core  - Maximum size of heap: 	1.9 GB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:64) 
123  INFO  Core  - Free memory of the heap: 	964.7 MB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:67) 
124  INFO  Core  - Running VM with: 	x86_64 - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:70) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:25.443
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.core.server.operatorbuilder. The reference is: Reference[name = IOperatorBuilder, interface = de.uniol.inf.is.odysseus.core.server.logicaloperator.builder.IOperatorBuilder, policy = dynamic, cardinality = 0..n, target = null, bind = addOperatorBuilder, unbind = removeOperatorBuilder]
481  DEBUG FileUtils  - Read from file /Users/jp/.odysseus/odysseus.conf - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 
533  INFO  OdysseusConfiguration  - Read config file from /Users/jp/.odysseus/odysseus.conf - de.uniol.inf.is.odysseus.core.server.OdysseusConfiguration.loadProperties(OdysseusConfiguration.java:85) 
580  DEBUG FileUtils  - Read from file /Users/jp/.odysseus/store/tenants.store - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:26.828
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLStatementGenerator. The reference is: Reference[name = IPQLStatementGenerator, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLStatementGenerator, policy = dynamic, cardinality = 0..n, target = null, bind = bindPQLStatementGenerator, unbind = unbindPQLStatementGenerator]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:27.011
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.relational_interval.ReplacementRegistry. The reference is: Reference[name = IReplacement, interface = de.uniol.inf.is.odysseus.relational_interval.replacement.IReplacement, policy = dynamic, cardinality = 0..n, target = null, bind = addReplacement, unbind = removeReplacement]
1895 DEBUG ruleengine  - Rewrite - Group added to workflow: PREPARE. New workflow is: [PREPARE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
1896 DEBUG ruleengine  - Rewrite - Group added to workflow: DELETE. New workflow is: [PREPARE, DELETE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
1896 DEBUG ruleengine  - Rewrite - Group added to workflow: SPLIT. New workflow is: [PREPARE, DELETE, SPLIT] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
1897 DEBUG ruleengine  - Rewrite - Group added to workflow: PREGROUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
1898 DEBUG ruleengine  - Rewrite - Group added to workflow: SWITCH. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
1898 DEBUG ruleengine  - Rewrite - Group added to workflow: GROUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH, GROUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
1898 DEBUG ruleengine  - Rewrite - Group added to workflow: CLEANUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH, GROUP, CLEANUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:27.060
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.Config. The reference is: Reference[name = IOdysseusScriptConfigSetting, interface = de.uniol.inf.is.odysseus.script.parser.IOdysseusScriptConfigSetting, policy = dynamic, cardinality = 0..n, target = null, bind = bindConfigSetting, unbind = unbindConfigSetting]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:27.066
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.ReplacementProviderManager. The reference is: Reference[name = IReplacementProvider, interface = de.uniol.inf.is.odysseus.script.parser.IReplacementProvider, policy = dynamic, cardinality = 0..n, target = null, bind = bindReplacementProvider, unbind = unbindReplacementProvider]
1944 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@667aa548 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
1945 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@667aa548 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:27.078
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.RecoveryConfigKeyword. The reference is: Reference[name = IRecoveryExecutor, interface = de.uniol.inf.is.odysseus.core.server.recovery.IRecoveryExecutor, policy = dynamic, cardinality = 0..n, target = null, bind = bindRecoveryExecutor, unbind = unbindRecoveryExecutor]
2101 DEBUG ruleengine  - Transform - Group added to workflow: SUBSTITUTION. New workflow is: [SUBSTITUTION] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2101 DEBUG ruleengine  - Transform - Group added to workflow: INIT. New workflow is: [SUBSTITUTION, INIT] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2101 DEBUG ruleengine  - Transform - Group added to workflow: ACCESS. New workflow is: [SUBSTITUTION, INIT, ACCESS] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2102 DEBUG ruleengine  - Transform - Group added to workflow: CREATE_METADATA. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2102 DEBUG ruleengine  - Transform - Group added to workflow: TRANSFORMATION. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2102 DEBUG ruleengine  - Transform - Group added to workflow: SENDER. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2102 DEBUG ruleengine  - Transform - Group added to workflow: SECURITY. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2103 DEBUG ruleengine  - Transform - Group added to workflow: METAOBJECTS. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2103 DEBUG ruleengine  - Transform - Group added to workflow: VALIDATE. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS, VALIDATE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2103 DEBUG ruleengine  - Transform - Group added to workflow: CLEANUP. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS, VALIDATE, CLEANUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2164 DEBUG ruleengine  - Transform - Loading rule - TAggregationAORule: "TAggregationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2167 DEBUG ruleengine  - Transform - Loading rule - TAggregationAORule: "TAggregationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2219 DEBUG UserManagementProvider  - Bound UserManagementService Memorystore - de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.bindUserManagement(UserManagementProvider.java:120) 
2228 DEBUG ruleengine  - Transform - Loading rule - TSaseAOToPatternDetectAORule: "SASEAO --> PATTERNDETECTAO" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2236 DEBUG ruleengine  - Transform - Loading rule - TSaseAOToPatternDetectAORule: "SASEAO --> PATTERNDETECTAO" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2244 DEBUG ruleengine  - Transform - Loading rule - TPatternDetectAORule: "CepAO --> CepOperator (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2246 DEBUG ruleengine  - Transform - Loading rule - TPatternDetectAORule: "CepAO --> CepOperator (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2574 DEBUG ruleengine  - Transform - Loading rule - TLatencyCalculationRule: "LatencyCalculationAO -> LatencyCalculationPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2576 DEBUG ruleengine  - Transform - Loading rule - TLatencyCalculationRule: "LatencyCalculationAO -> LatencyCalculationPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2581 DEBUG ruleengine  - Transform - Loading rule - TLatencyToPayloadAORule: "TLatencyToPayloadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2583 DEBUG ruleengine  - Transform - Loading rule - TLatencyToPayloadAORule: "TLatencyToPayloadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2721 DEBUG CommandProviderBinder  - Binding command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@7f21cff8 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
2722 DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@7f21cff8 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
osgi> 2856 DEBUG ruleengine  - Transform - Loading rule - TPatternMatchingAORule: "PatternMatchingAO -> PatternMatchingPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2866 DEBUG ruleengine  - Transform - Loading rule - TPatternMatchingAORule: "PatternMatchingAO -> PatternMatchingPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3046 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionAORule: "LinearRegressionAO -> LinearRegressionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3049 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionMergeAORule: "LinearRegressionMergeAO -> LinearRegressionMergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3053 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAOInsertLinearRegressionRule: "JoinAO -> Insert linear regression for Equi-Join" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3056 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAORule: "JoinAO -> Continuous probabilistic Equi-Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3058 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetDMRule: "Insert DataMergeFunction (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3060 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3061 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO -> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3065 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3067 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteUnNestAORule: "UnNestAO -> ProbabilisticDiscreteUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3070 DEBUG ruleengine  - Transform - Loading rule - TAssignDistributionAORule: "AssignDistributionAO -> AssignDistributionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3074 DEBUG ruleengine  - Transform - Loading rule - TEMAORule: "EMAO -> EMPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3076 DEBUG ruleengine  - Transform - Loading rule - TKalmanFilterAORule: "KalmanFilterAO -> KalmanFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3077 DEBUG ruleengine  - Transform - Loading rule - TKDEAORule: "KDEAO -> KDEPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3080 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAggregateAORule: "AggregateTIPO use probabilistic aggregations (IProbabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3082 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAORule: "ProbabilisticAO -> MetadataUpdatePO(IProbabilistic)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3084 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticApplicationTimestampRule: "TProbabilisticApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3089 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAORule: "JoinAO -> probabilistic Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3090 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetDMRule: "Insert DataMergeFunction JoinTIPO (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3092 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3094 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticMapAORule: "MapAO -> ProbabilisticMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3096 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3098 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3100 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3103 DEBUG ruleengine  - Transform - Loading rule - TRelationalExistenceToPayloadRule: "ExistenceToPayloadAO --> RelationalExistenceToPayloadPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3104 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionAORule: "LinearRegressionAO -> LinearRegressionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3104 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionMergeAORule: "LinearRegressionMergeAO -> LinearRegressionMergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3105 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAOInsertLinearRegressionRule: "JoinAO -> Insert linear regression for Equi-Join" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3105 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAORule: "JoinAO -> Continuous probabilistic Equi-Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3105 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetDMRule: "Insert DataMergeFunction (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3106 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3106 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO -> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3106 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3106 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteUnNestAORule: "UnNestAO -> ProbabilisticDiscreteUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3107 DEBUG ruleengine  - Transform - Loading rule - TAssignDistributionAORule: "AssignDistributionAO -> AssignDistributionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3108 DEBUG ruleengine  - Transform - Loading rule - TEMAORule: "EMAO -> EMPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3109 DEBUG ruleengine  - Transform - Loading rule - TKalmanFilterAORule: "KalmanFilterAO -> KalmanFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3110 DEBUG ruleengine  - Transform - Loading rule - TKDEAORule: "KDEAO -> KDEPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3111 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAggregateAORule: "AggregateTIPO use probabilistic aggregations (IProbabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3111 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAORule: "ProbabilisticAO -> MetadataUpdatePO(IProbabilistic)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3112 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticApplicationTimestampRule: "TProbabilisticApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3113 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAORule: "JoinAO -> probabilistic Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3113 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetDMRule: "Insert DataMergeFunction JoinTIPO (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3114 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3114 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticMapAORule: "MapAO -> ProbabilisticMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3115 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3115 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3116 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3117 DEBUG ruleengine  - Transform - Loading rule - TRelationalExistenceToPayloadRule: "ExistenceToPayloadAO --> RelationalExistenceToPayloadPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3136 DEBUG ruleengine  - Transform - Loading rule - TAggregateAORule: "TAggregateAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3137 DEBUG ruleengine  - Transform - Loading rule - TAggregatePORule: "Insert RelationalTupleGroupingHelper" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3138 DEBUG ruleengine  - Transform - Loading rule - TAssociativeStorageAORule: "AssociativeStorageAO -> AssociativeStoragePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3139 DEBUG ruleengine  - Transform - Loading rule - TBloomFilterAORule: "BloomFilterAO -> RelationalBloomFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3140 DEBUG ruleengine  - Transform - Loading rule - TConvolutionFilterAORule: "ConvolutionFilterAO -> ConvolutionFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3141 DEBUG ruleengine  - Transform - Loading rule - TEnrichAddDataMergeFunctionRule: "Insert DataMerge Function Enrich (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3141 DEBUG ruleengine  - Transform - Loading rule - TGroupSplitFileWriter: "TGroupSplitFileWriter" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3143 DEBUG ruleengine  - Transform - Loading rule - TInitPredicateRule: "Init Predicates" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3143 DEBUG ruleengine  - Transform - Loading rule - TMapAORule: "MapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3144 DEBUG ruleengine  - Transform - Loading rule - TProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3145 DEBUG ruleengine  - Transform - Loading rule - TRelationalSocketSinkAORule: "SocketSinkAO -> SocketSinkPO (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3146 DEBUG ruleengine  - Transform - Loading rule - TStateMapAORule: "StateMapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3147 DEBUG ruleengine  - Transform - Loading rule - TToTupleAORule: "TToTupleAORule" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3147 DEBUG ruleengine  - Transform - Loading rule - TUnnestAORule: "UnNestAO -> RelationalUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3152 DEBUG ruleengine  - Transform - Loading rule - TAggregateAORule: "TAggregateAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3152 DEBUG ruleengine  - Transform - Loading rule - TAggregatePORule: "Insert RelationalTupleGroupingHelper" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3152 DEBUG ruleengine  - Transform - Loading rule - TAssociativeStorageAORule: "AssociativeStorageAO -> AssociativeStoragePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3153 DEBUG ruleengine  - Transform - Loading rule - TBloomFilterAORule: "BloomFilterAO -> RelationalBloomFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3153 DEBUG ruleengine  - Transform - Loading rule - TConvolutionFilterAORule: "ConvolutionFilterAO -> ConvolutionFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3153 DEBUG ruleengine  - Transform - Loading rule - TEnrichAddDataMergeFunctionRule: "Insert DataMerge Function Enrich (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3154 DEBUG ruleengine  - Transform - Loading rule - TGroupSplitFileWriter: "TGroupSplitFileWriter" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3154 DEBUG ruleengine  - Transform - Loading rule - TInitPredicateRule: "Init Predicates" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3154 DEBUG ruleengine  - Transform - Loading rule - TMapAORule: "MapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3154 DEBUG ruleengine  - Transform - Loading rule - TProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3155 DEBUG ruleengine  - Transform - Loading rule - TRelationalSocketSinkAORule: "SocketSinkAO -> SocketSinkPO (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3155 DEBUG ruleengine  - Transform - Loading rule - TStateMapAORule: "StateMapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3155 DEBUG ruleengine  - Transform - Loading rule - TToTupleAORule: "TToTupleAORule" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3155 DEBUG ruleengine  - Transform - Loading rule - TUnnestAORule: "UnNestAO -> RelationalUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3161 DEBUG ruleengine  - Transform - Loading rule - TApplicationTimestampRule: "TApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3162 DEBUG ruleengine  - Transform - Loading rule - TBufferedFilterAORule: "TBufferedFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3162 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateInsertDataMergeFunctionRule: "Insert DataMergeFunction ChangeCorrelate (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3163 DEBUG ruleengine  - Transform - Loading rule - TCombineAORule: "CombineAO -> CombinePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3164 DEBUG ruleengine  - Transform - Loading rule - TCompareSinkAO: "TCompareSinkAO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3165 DEBUG ruleengine  - Transform - Loading rule - TGeneratorAORule: "TGeneratorAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3166 DEBUG ruleengine  - Transform - Loading rule - TJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3167 DEBUG ruleengine  - Transform - Loading rule - TJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction JoinTIPO (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3168 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3169 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3198 DEBUG ruleengine  - Transform - Loading rule - TRelationalChangeDetectAORule: "TRelationalChangeDetectAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3204 DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.app.AppCommands@51a415be - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
3210 DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.app.AppCommands@51a415be - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
3217 DEBUG ruleengine  - Transform - Loading rule - TRelationalCreateNewFilenamePunctuationRule: "TRelationalCreateNewFilenamePunctuationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3220 DEBUG ruleengine  - Transform - Loading rule - TRelationalDistinctAORule: "TRelationalDistinctAORule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3238 DEBUG ruleengine  - Transform - Loading rule - TRelationalFastMedianAORule: "TRelationalFastMedianAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3247 DEBUG ruleengine  - Transform - Loading rule - TRelationalInsertGroupProcessorTIPORule: "TRelationalInsertGroupProcessorTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3250 DEBUG ruleengine  - Transform - Loading rule - TRelationalJoinAORule: "TRelationalJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3252 DEBUG ruleengine  - Transform - Loading rule - TRelationalTimestampToPayloadRule: "TRelationalTimestampToPayloadRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3254 DEBUG ruleengine  - Transform - Loading rule - TRelationalTupleAggregateTransformationRule: "TRelationalTupleAggregateTransformationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3260 DEBUG ruleengine  - Transform - Loading rule - TReplacementAORule: "TReplacementAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3282 DEBUG ruleengine  - Transform - Loading rule - TSetTransferAreaConvolutionFilterPO: "TSetTransferAreaConvolutionFilterPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3295 DEBUG ruleengine  - Transform - Loading rule - TSortAddComparatorRule: "TSortAddComparatorRule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3298 DEBUG ruleengine  - Transform - Loading rule - TTopKAORule: "TTopKAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3301 DEBUG ruleengine  - Transform - Loading rule - TApplicationTimestampRule: "TApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3302 DEBUG ruleengine  - Transform - Loading rule - TBufferedFilterAORule: "TBufferedFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3302 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateInsertDataMergeFunctionRule: "Insert DataMergeFunction ChangeCorrelate (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3303 DEBUG ruleengine  - Transform - Loading rule - TCombineAORule: "CombineAO -> CombinePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3303 DEBUG ruleengine  - Transform - Loading rule - TCompareSinkAO: "TCompareSinkAO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3303 DEBUG ruleengine  - Transform - Loading rule - TGeneratorAORule: "TGeneratorAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3303 DEBUG ruleengine  - Transform - Loading rule - TJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3303 DEBUG ruleengine  - Transform - Loading rule - TJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction JoinTIPO (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3304 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3304 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3304 DEBUG ruleengine  - Transform - Loading rule - TRelationalChangeDetectAORule: "TRelationalChangeDetectAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3305 DEBUG ruleengine  - Transform - Loading rule - TRelationalCreateNewFilenamePunctuationRule: "TRelationalCreateNewFilenamePunctuationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3305 DEBUG ruleengine  - Transform - Loading rule - TRelationalDistinctAORule: "TRelationalDistinctAORule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3306 DEBUG ruleengine  - Transform - Loading rule - TRelationalFastMedianAORule: "TRelationalFastMedianAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3307 DEBUG ruleengine  - Transform - Loading rule - TRelationalInsertGroupProcessorTIPORule: "TRelationalInsertGroupProcessorTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3307 DEBUG ruleengine  - Transform - Loading rule - TRelationalJoinAORule: "TRelationalJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3308 DEBUG ruleengine  - Transform - Loading rule - TRelationalTimestampToPayloadRule: "TRelationalTimestampToPayloadRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3308 DEBUG ruleengine  - Transform - Loading rule - TRelationalTupleAggregateTransformationRule: "TRelationalTupleAggregateTransformationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3309 DEBUG ruleengine  - Transform - Loading rule - TReplacementAORule: "TReplacementAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3309 DEBUG ruleengine  - Transform - Loading rule - TSetTransferAreaConvolutionFilterPO: "TSetTransferAreaConvolutionFilterPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3310 DEBUG ruleengine  - Transform - Loading rule - TSortAddComparatorRule: "TSortAddComparatorRule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3310 DEBUG ruleengine  - Transform - Loading rule - TTopKAORule: "TTopKAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3373 DEBUG ruleengine  - Transform - Loading rule - TJoinAONoIntervalRule: "TJoinAONoIntervalRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3373 DEBUG ruleengine  - Transform - Loading rule - TJoinAORule: "TJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3374 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAORule: "JoinAO -> JoinTIPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3379 DEBUG ruleengine  - Transform - Loading rule - TAggregationTIPORule: "TAggregationTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3380 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateAORule: "ChangeCorrelateAO -> ChangeCorrelatePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3382 DEBUG ruleengine  - Transform - Loading rule - TCoalesceAORule: "TCoalesceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3383 DEBUG ruleengine  - Transform - Loading rule - TDifferenceAORule: "TDifferenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3384 DEBUG ruleengine  - Transform - Loading rule - TDistinctAORule: "TDistinctAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3385 DEBUG ruleengine  - Transform - Loading rule - TDuplicateEliminationAORule: "TDuplicateEliminationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3386 DEBUG ruleengine  - Transform - Loading rule - TExistenceAORule: "TExistenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3388 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "TFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3389 DEBUG ruleengine  - Transform - Loading rule - THeartbeatAORule: "THeartbeatAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3390 DEBUG ruleengine  - Transform - Loading rule - TReOrderAORule: "ReOrderAO -> AssureOrderPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3391 DEBUG ruleengine  - Transform - Loading rule - TSameTimestampRule: "TSameTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3393 DEBUG ruleengine  - Transform - Loading rule - TSelectAddHeartbeatGenerationRule: "Insert HeartbeatGenerationStrategy in SelectPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3395 DEBUG ruleengine  - Transform - Loading rule - TSortAORule: "TSortAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3397 DEBUG ruleengine  - Transform - Loading rule - TSyncWithSystemTimeAORule: "TSyncWithSystemTimeAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3398 DEBUG ruleengine  - Transform - Loading rule - TSystemTimestampRule: "TimestampAO -> MetadataUpdatePO(system timestamp)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3399 DEBUG ruleengine  - Transform - Loading rule - TTimeStampOrderValdiatorRule: "TTimeStampOrderValdiatorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3400 DEBUG ruleengine  - Transform - Loading rule - TUnionTIPORule: "TUnionTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3401 DEBUG ruleengine  - Transform - Loading rule - TWatermarkAORule: "TWatermarkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3402 DEBUG ruleengine  - Transform - Loading rule - TWindowAORule: "TWindowAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3407 DEBUG ruleengine  - Transform - Loading rule - TJoinAONoIntervalRule: "TJoinAONoIntervalRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3407 DEBUG ruleengine  - Transform - Loading rule - TJoinAORule: "TJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3408 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAORule: "JoinAO -> JoinTIPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3408 DEBUG ruleengine  - Transform - Loading rule - TAggregationTIPORule: "TAggregationTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3409 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateAORule: "ChangeCorrelateAO -> ChangeCorrelatePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3410 DEBUG ruleengine  - Transform - Loading rule - TCoalesceAORule: "TCoalesceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3411 DEBUG ruleengine  - Transform - Loading rule - TDifferenceAORule: "TDifferenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3412 DEBUG ruleengine  - Transform - Loading rule - TDistinctAORule: "TDistinctAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3413 DEBUG ruleengine  - Transform - Loading rule - TDuplicateEliminationAORule: "TDuplicateEliminationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3414 DEBUG ruleengine  - Transform - Loading rule - TExistenceAORule: "TExistenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3414 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "TFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3414 DEBUG ruleengine  - Transform - Loading rule - THeartbeatAORule: "THeartbeatAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3415 DEBUG ruleengine  - Transform - Loading rule - TReOrderAORule: "ReOrderAO -> AssureOrderPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3416 DEBUG ruleengine  - Transform - Loading rule - TSameTimestampRule: "TSameTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3416 DEBUG ruleengine  - Transform - Loading rule - TSelectAddHeartbeatGenerationRule: "Insert HeartbeatGenerationStrategy in SelectPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3416 DEBUG ruleengine  - Transform - Loading rule - TSortAORule: "TSortAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3417 DEBUG ruleengine  - Transform - Loading rule - TSyncWithSystemTimeAORule: "TSyncWithSystemTimeAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3418 DEBUG ruleengine  - Transform - Loading rule - TSystemTimestampRule: "TimestampAO -> MetadataUpdatePO(system timestamp)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3418 DEBUG ruleengine  - Transform - Loading rule - TTimeStampOrderValdiatorRule: "TTimeStampOrderValdiatorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3419 DEBUG ruleengine  - Transform - Loading rule - TUnionTIPORule: "TUnionTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3419 DEBUG ruleengine  - Transform - Loading rule - TWatermarkAORule: "TWatermarkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:28.612
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.cache.RemovalStrategyRegistry. The reference is: Reference[name = IRemovalStrategy, interface = de.uniol.inf.is.odysseus.cache.removalstrategy.IRemovalStrategy, policy = dynamic, cardinality = 0..n, target = null, bind = register, unbind = remove]
3490 DEBUG ruleengine  - Transform - Loading rule - TWindowAORule: "TWindowAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3528 DEBUG ruleengine  - Transform - Loading rule - TJoinAOErrorRule: "TJoinAOErrorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3530 DEBUG ruleengine  - Transform - Loading rule - TKeyValueApplicationTimestampRule: "TKeyValueApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3531 DEBUG ruleengine  - Transform - Loading rule - TKeyValueMapRule: "MapAO --> KeyValueMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3532 DEBUG ruleengine  - Transform - Loading rule - TKeyValueProjectRule: "ProjectAO --> KeyValueProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3534 DEBUG ruleengine  - Transform - Loading rule - TKeyValueRenameRule: "RenameAO --> KeyValueRenamePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3536 DEBUG ruleengine  - Transform - Loading rule - TKeyValueSelectRule: "TKeyValueSelectRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3538 DEBUG ruleengine  - Transform - Loading rule - TKeyValueToTupleRule: "ToTupleAO --> KeyValueToTuplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3541 DEBUG ruleengine  - Transform - Loading rule - TKeyValueUnnestAORule: "TKeyValueUnnestAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3543 DEBUG ruleengine  - Transform - Loading rule - TTupleToKeyValueRule: "TTupleToKeyValueRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3547 DEBUG ruleengine  - Transform - Loading rule - TJoinAOErrorRule: "TJoinAOErrorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3548 DEBUG ruleengine  - Transform - Loading rule - TKeyValueApplicationTimestampRule: "TKeyValueApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3548 DEBUG ruleengine  - Transform - Loading rule - TKeyValueMapRule: "MapAO --> KeyValueMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3549 DEBUG ruleengine  - Transform - Loading rule - TKeyValueProjectRule: "ProjectAO --> KeyValueProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3549 DEBUG ruleengine  - Transform - Loading rule - TKeyValueRenameRule: "RenameAO --> KeyValueRenamePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3551 DEBUG ruleengine  - Transform - Loading rule - TKeyValueSelectRule: "TKeyValueSelectRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3551 DEBUG ruleengine  - Transform - Loading rule - TKeyValueToTupleRule: "ToTupleAO --> KeyValueToTuplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3552 DEBUG ruleengine  - Transform - Loading rule - TKeyValueUnnestAORule: "TKeyValueUnnestAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3553 DEBUG ruleengine  - Transform - Loading rule - TTupleToKeyValueRule: "TTupleToKeyValueRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3656 DEBUG ruleengine  - Transform - Loading rule - TReplicationMergeAORule: "ReplicationMergeAO -> ReplicationMergePO | ReplicationMergeWithTrustPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3658 DEBUG ruleengine  - Transform - Loading rule - TReplicationMergeAORule: "ReplicationMergeAO -> ReplicationMergePO | ReplicationMergeWithTrustPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3922 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3926 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3928 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3931 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3931 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3932 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3938 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3939 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3942 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3942 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3959 DEBUG ruleengine  - Transform - Loading rule - TDBEnrichAORule: "DBEnrichAO -> DBEnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3961 DEBUG ruleengine  - Transform - Loading rule - TDBEnrichAORule: "DBEnrichAO -> DBEnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4014 DEBUG AbstractExecutor  - Initializing Executor. - de.uniol.inf.is.odysseus.core.server.planmanagement.executor.AbstractExecutor.initialize(AbstractExecutor.java:271) 
4016 DEBUG AbstractExecutor  - Initializing Executor done. - de.uniol.inf.is.odysseus.core.server.planmanagement.executor.AbstractExecutor.initialize(AbstractExecutor.java:281) 
4080 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4080 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4080 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4083 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4083 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4083 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4107 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4109 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4114 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4116 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4156 DEBUG ruleengine  - Transform - Loading rule - TDBEnrichAORule: "DBEnrichAO -> DBEnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4157 DEBUG ruleengine  - Transform - Loading rule - TDBEnrichAORule: "DBEnrichAO -> DBEnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4272 INFO  WebServicePublisher  - Webservice published at http://0:0:0:0:0:0:0:0:9670/odysseus - de.uniol.inf.is.odysseus.planmanagement.executor.webservice.server.WebServicePublisher.publish(WebServicePublisher.java:106) 
6199 DEBUG ruleengine  - Rewrite - Loading rules for... de.uniol.inf.is.odysseus.relational.rewrite.RuleProvider@292aa8bd - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.bindRuleProvider(AbstractInventory.java:208) 
6202 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteProjectionWithoutFunctionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteProjectionWithoutFunctionRule" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6202 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteSelectionWithoutPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteSelectionWithoutPredicate" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6203 DEBUG ruleengine  - Rewrite - Loading rule - RMergeSelectionJoinRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RMergeSelectionJoinRule" for group: "GROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6204 DEBUG ruleengine  - Rewrite - Loading rule - RMergeSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RMergeSelectionRule" for group: "GROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6205 DEBUG ruleengine  - Rewrite - Loading rule - RSplitSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSplitSelectionRule" for group: "SPLIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6205 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionRenameRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionRenameRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6206 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionUnionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionUnionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6206 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionWindowRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionWindowRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6207 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionJoinRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionJoinRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6208 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionDifferenceRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionDifferenceRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6208 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionProjectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionProjectionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6209 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionRenameRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionRenameRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6209 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionUnionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionUnionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6210 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionWindowRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionWindowRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6210 DEBUG ruleengine  - Rewrite - Loading rule - RPrepareSelectionCNF: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPrepareSelectionCNF" for group: "PREPARE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6211 DEBUG ruleengine  - Rewrite - Loading rule - RPrepareJoinCNF: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPrepareJoinCNF" for group: "PREPARE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6211 DEBUG ruleengine  - Rewrite - Loading rule - ROptimizeSelectionPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.ROptimizeSelectionPredicate" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6211 DEBUG ruleengine  - Rewrite - Loading rule - ROptimizeJoinPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.ROptimizeJoinPredicate" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6212 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteRenameAORule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteRenameAORule" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6212 DEBUG ruleengine  - Rewrite - Loading rule - RPregroupJoinSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPregroupJoinSelectionRule" for group: "PREGROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6214 DEBUG ruleengine  - Rewrite - Loading rules for... de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RewriteRuleProvider@70f420dd - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.bindRuleProvider(AbstractInventory.java:208) 
6216 DEBUG ruleengine  - Rewrite - Loading rule - RIntersectionAORule: "de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RIntersectionAORule" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:31.343
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.compiler.standardcompiler. The reference is: Reference[name = IPlanGenerator, interface = de.uniol.inf.is.odysseus.core.server.plangeneration.IPlanGenerator, policy = dynamic, cardinality = 0..1, target = null, bind = bindPlanGenerator, unbind = unbindPlanGenerator]
6236 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6238 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6239 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6243 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6244 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6245 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6246 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6246 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6247 DEBUG FileUtils  - Read from file /Users/jp/.odysseus/scheduling.conf - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 
6248 DEBUG SingleSchedulerManager  - Set active Scheduler Single Thread Scheduler RR Multi Source (Biggest Queue) - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.setActiveScheduler(SingleSchedulerManager.java:202) 
6255 INFO  SingleSchedulerManager  - Active scheduler. class de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SimpleThreadSchedulerMSLimitSourcesPerThread - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.activate(SingleSchedulerManager.java:141) 
6256 DEBUG SingleSchedulerManager  - Start scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:286) 
6258 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
6259 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
6260 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
6260 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
6260 DEBUG AbstractSimpleThreadScheduler  - Starting Scheduler with 4 thread(s). - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.startScheduling(AbstractSimpleThreadScheduler.java:119) 
6261 DEBUG SingleSchedulerManager  - Scheduling started. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:288) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:31.396
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.optimization.standardoptimizer. The reference is: Reference[name = IPostOptimizationAction, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.optimization.IPostOptimizationAction, policy = dynamic, cardinality = 0..n, target = null, bind = bindPostOptimizationAction, unbind = unbindPostOptimizationAction]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:31.403
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.optimization.standardoptimizer. The reference is: Reference[name = IElementCloningUpdater, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.optimization.elementcloning.IElementCloningUpdater, policy = dynamic, cardinality = 0..n, target = null, bind = bindElementCloningUpdater, unbind = unbindElementCloningUpdater]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:31.405
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = ISystemMonitorFactory, interface = de.uniol.inf.is.odysseus.core.server.monitoring.ISystemMonitorFactory, policy = dynamic, cardinality = 0..1, target = null, bind = bindSystemMonitorFactory, unbind = unbindSystemMonitorFactory]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:31.410
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IQueryDistributor, interface = de.uniol.inf.is.odysseus.core.server.distribution.IQueryDistributor, policy = dynamic, cardinality = 0..1, target = null, bind = bindQueryDistributor, unbind = unbindQueryDistributor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:31.412
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IPreTransformationHandler, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.executor.IPreTransformationHandler, policy = dynamic, cardinality = 0..n, target = null, bind = bindPreTransformationHandler, unbind = unbindPreTransformationHandler]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:31.413
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IRecoveryExecutor, interface = de.uniol.inf.is.odysseus.core.server.recovery.IRecoveryExecutor, policy = dynamic, cardinality = 0..n, target = null, bind = bindRecoveryExecutor, unbind = unbindRecoveryExecutor]
6298 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@37824724 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
6298 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@37824724 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:31.429
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLGenerator. The reference is: Reference[name = IPQLGeneratorPreProcessor, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLGeneratorPreProcessor, policy = dynamic, cardinality = 0..n, target = null, bind = bindPreProcessor, unbind = unbindPreProcessor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-15 19:19:31.429
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLGenerator. The reference is: Reference[name = IPQLGeneratorPostProcessor, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLGeneratorPostProcessor, policy = dynamic, cardinality = 0..n, target = null, bind = bindPostProcessor, unbind = unbindPostProcessor]
6305 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@49a637e - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
6305 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@49a637e - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
6319 DEBUG ruleengine  - Transform - Loading rule - TAccessAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6320 DEBUG ruleengine  - Transform - Loading rule - TAppendQueryAORule: "TAppendQueryAORule" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6321 DEBUG ruleengine  - Transform - Loading rule - TAppendToPhysicalAORule: "AppendToPhysical" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6321 DEBUG ruleengine  - Transform - Loading rule - TBufferAORule: "BufferAO -> BufferedPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6322 DEBUG ruleengine  - Transform - Loading rule - TCacheAORule: "CacheAO --> CachePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6323 DEBUG ruleengine  - Transform - Loading rule - TChangeDetectAORule: "ChangeDetectAO -> ChangeDetectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6324 DEBUG ruleengine  - Transform - Loading rule - TCloseStreamAORule: "TCloseStreamAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6325 DEBUG ruleengine  - Transform - Loading rule - TCommandAORule: "CommandAO --> CommandPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6325 DEBUG ruleengine  - Transform - Loading rule - TConsoleSinkAORule: "TConsoleSinkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6327 DEBUG ruleengine  - Transform - Loading rule - TConverterAORule: "ConverterAO --> ConverterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6327 DEBUG ruleengine  - Transform - Loading rule - TCSVFileSourceAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6328 DEBUG ruleengine  - Transform - Loading rule - TDeleteRenameAORule: "Delete Rename" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6329 DEBUG ruleengine  - Transform - Loading rule - TEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6330 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "FilterAO -> FilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6330 DEBUG ruleengine  - Transform - Loading rule - TMemStoreReadAORule: "TMemStoreReadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6331 DEBUG ruleengine  - Transform - Loading rule - TMemStoreWriteAORule: "TMemStoreWriteAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6332 DEBUG ruleengine  - Transform - Loading rule - TMergeAORule: "MergeAO --> MergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6333 DEBUG ruleengine  - Transform - Loading rule - TMetadataAOTransformation: "TMetadataAOTransformation" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6334 DEBUG ruleengine  - Transform - Loading rule - TPlanModificationActionAORule: "TPlanModificationActionAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6334 DEBUG ruleengine  - Transform - Loading rule - TRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6335 DEBUG ruleengine  - Transform - Loading rule - TRouteAORule: "RouteAO -> RoutePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6336 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO --> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6336 DEBUG ruleengine  - Transform - Loading rule - TSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6337 DEBUG ruleengine  - Transform - Loading rule - TSenderAOExistsRule: "Transform to existing SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6338 DEBUG ruleengine  - Transform - Loading rule - TSenderAOGenericRule: "AbstractSenderAO (generic) --> SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6339 DEBUG ruleengine  - Transform - Loading rule - TSenderAOViewRule: "Transform Sender View" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6340 DEBUG ruleengine  - Transform - Loading rule - TSetSystemTimeAORule: "SetSystemTimeAO -> SetSystemTimePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6341 DEBUG ruleengine  - Transform - Loading rule - TSetTimeProgressMarker: "TSetTimeProgressMarker" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6341 DEBUG ruleengine  - Transform - Loading rule - TSinkAORule: "SinkAO -> SinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6342 DEBUG ruleengine  - Transform - Loading rule - TSocketSinkAORule: "SocketSinkAO -> SocketSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6344 DEBUG ruleengine  - Transform - Loading rule - TStreamAORule: "Transform View or Stream" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6345 DEBUG ruleengine  - Transform - Loading rule - TTimeshiftAORule: "TimeshiftAO -> TimeshiftPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6346 DEBUG ruleengine  - Transform - Loading rule - TUserDefinedOperatorPO: "UdoAO -> UdoPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6348 DEBUG ruleengine  - Transform - Loading rule - TAccessAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6348 DEBUG ruleengine  - Transform - Loading rule - TAppendQueryAORule: "TAppendQueryAORule" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6348 DEBUG ruleengine  - Transform - Loading rule - TAppendToPhysicalAORule: "AppendToPhysical" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6349 DEBUG ruleengine  - Transform - Loading rule - TBufferAORule: "BufferAO -> BufferedPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6349 DEBUG ruleengine  - Transform - Loading rule - TCacheAORule: "CacheAO --> CachePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6349 DEBUG ruleengine  - Transform - Loading rule - TChangeDetectAORule: "ChangeDetectAO -> ChangeDetectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6349 DEBUG ruleengine  - Transform - Loading rule - TCloseStreamAORule: "TCloseStreamAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6349 DEBUG ruleengine  - Transform - Loading rule - TCommandAORule: "CommandAO --> CommandPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6349 DEBUG ruleengine  - Transform - Loading rule - TConsoleSinkAORule: "TConsoleSinkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6350 DEBUG ruleengine  - Transform - Loading rule - TConverterAORule: "ConverterAO --> ConverterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6350 DEBUG ruleengine  - Transform - Loading rule - TCSVFileSourceAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6350 DEBUG ruleengine  - Transform - Loading rule - TDeleteRenameAORule: "Delete Rename" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6350 DEBUG ruleengine  - Transform - Loading rule - TEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6350 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "FilterAO -> FilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6350 DEBUG ruleengine  - Transform - Loading rule - TMemStoreReadAORule: "TMemStoreReadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6351 DEBUG ruleengine  - Transform - Loading rule - TMemStoreWriteAORule: "TMemStoreWriteAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6351 DEBUG ruleengine  - Transform - Loading rule - TMergeAORule: "MergeAO --> MergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6351 DEBUG ruleengine  - Transform - Loading rule - TMetadataAOTransformation: "TMetadataAOTransformation" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6352 DEBUG ruleengine  - Transform - Loading rule - TPlanModificationActionAORule: "TPlanModificationActionAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6352 DEBUG ruleengine  - Transform - Loading rule - TRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6352 DEBUG ruleengine  - Transform - Loading rule - TRouteAORule: "RouteAO -> RoutePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6352 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO --> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6352 DEBUG ruleengine  - Transform - Loading rule - TSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6353 DEBUG ruleengine  - Transform - Loading rule - TSenderAOExistsRule: "Transform to existing SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6353 DEBUG ruleengine  - Transform - Loading rule - TSenderAOGenericRule: "AbstractSenderAO (generic) --> SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6353 DEBUG ruleengine  - Transform - Loading rule - TSenderAOViewRule: "Transform Sender View" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6353 DEBUG ruleengine  - Transform - Loading rule - TSetSystemTimeAORule: "SetSystemTimeAO -> SetSystemTimePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6353 DEBUG ruleengine  - Transform - Loading rule - TSetTimeProgressMarker: "TSetTimeProgressMarker" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6353 DEBUG ruleengine  - Transform - Loading rule - TSinkAORule: "SinkAO -> SinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6354 DEBUG ruleengine  - Transform - Loading rule - TSocketSinkAORule: "SocketSinkAO -> SocketSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6354 DEBUG ruleengine  - Transform - Loading rule - TStreamAORule: "Transform View or Stream" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6354 DEBUG ruleengine  - Transform - Loading rule - TTimeshiftAORule: "TimeshiftAO -> TimeshiftPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6354 DEBUG ruleengine  - Transform - Loading rule - TUserDefinedOperatorPO: "UdoAO -> UdoPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 

!ENTRY org.eclipse.osgi 4 0 2017-05-15 19:19:31.482
!MESSAGE Could not find bundle: unknown
!STACK 0
org.osgi.framework.BundleException: Could not find bundle: unknown
	at org.eclipse.core.runtime.internal.adaptor.ConsoleManager.checkForConsoleBundle(ConsoleManager.java:58)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:331)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1488)
Starting application: 7130
6359 DEBUG TestRunnerApplication  - Starting Odysseus... - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:57) 
6362 DEBUG TestRunnerApplication  - Odysseus is up and running! - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:60) 
6362 DEBUG TestRunnerApplication  - Starting component tests... - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:71) 
6396 DEBUG TestRunnerApplication  - Starting a new component test: CQL Parser Test - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:100) 
6396 DEBUG TestRunnerApplication  - ####################################################################################### - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:101) 
6396 DEBUG TestComponentRunner  - Start Testcomponent 'CQL Parser Test' - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:52) 
6397 DEBUG AbstractTestComponent  - Starting executor... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStartExecutor(AbstractTestComponent.java:94) 
6399 DEBUG AbstractTestComponent  - Mon May 15 19:19:31 CEST 2017Running sub test 1 of 49: "CreateDatabaseConnectionTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
6399 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION jdbc1
#RUNQUERY
DROP DATABASE CONNECTION jdbc2
#RUNQUERY
DROP DATABASE CONNECTION jdbc3
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
DROP DATABASE CONNECTION con2
#RUNQUERY
DROP DATABASE CONNECTION con3
#RUNQUERY
DROP DATABASE CONNECTION con4
#RUNQUERY
CREATE DATABASE CONNECTION jdbc1 JDBC jdbc:mysql://localhost:3306/test
#RUNQUERY
CREATE DATABASE CONNECTION jdbc2 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION jdbc3 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword NO_LAZY_CONNECTION_CHECK
#RUNQUERY
CREATE DATABASE CONNECTION con1 AS mysql TO test1
#RUNQUERY
CREATE DATABASE CONNECTION con2 AS mysql TO test2 AT localhost : 3306
#RUNQUERY
CREATE DATABASE CONNECTION con3 AS mysql TO test3 AT localhost : 3306 WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION con4 AS mysql TO test4 WITH USER dbuser PASSWORD dbpassword
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
6399 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
6399 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
6400 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6401 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION jdbc1
#RUNQUERY
DROP DATABASE CONNECTION jdbc2
#RUNQUERY
DROP DATABASE CONNECTION jdbc3
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
DROP DATABASE CONNECTION con2
#RUNQUERY
DROP DATABASE CONNECTION con3
#RUNQUERY
DROP DATABASE CONNECTION con4
#RUNQUERY
CREATE DATABASE CONNECTION jdbc1 JDBC jdbc:mysql://localhost:3306/test
#RUNQUERY
CREATE DATABASE CONNECTION jdbc2 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION jdbc3 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword NO_LAZY_CONNECTION_CHECK
#RUNQUERY
CREATE DATABASE CONNECTION con1 AS mysql TO test1
#RUNQUERY
CREATE DATABASE CONNECTION con2 AS mysql TO test2 AT localhost : 3306
#RUNQUERY
CREATE DATABASE CONNECTION con3 AS mysql TO test3 AT localhost : 3306 WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION con4 AS mysql TO test4 WITH USER dbuser PASSWORD dbpassword
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6407 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
6426 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6428 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
6429 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@62010f5c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6429 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6429 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION jdbc1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6430 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
log4j:WARN No appenders could be found for logger (org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser).
log4j:WARN Please initialize the log4j system properly.
CQLParser.getExecutorCommand(..) -> 
6738 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6738 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6739 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@75f95314 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6739 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6739 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION jdbc2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6739 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
6748 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6748 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6749 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6bbe2511 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6750 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6751 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION jdbc3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6752 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
6755 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6756 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6756 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@76012793 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6756 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6756 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6756 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
6759 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6760 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6760 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@79d94571 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6760 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6760 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6760 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
6763 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6764 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6764 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3212a8d7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6764 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6764 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6764 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
6768 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6769 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6769 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@495b0487 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6769 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6769 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6769 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
6773 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6774 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6774 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@93cf163 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6775 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6775 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION jdbc1 JDBC jdbc:mysql://localhost:3306/test - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6775 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
6783 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6784 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6784 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@25bfcafd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6784 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6784 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION jdbc2 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6785 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
6790 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6790 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6790 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@46268f08 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6791 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6791 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION jdbc3 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword NO_LAZY_CONNECTION_CHECK - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6792 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
6798 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6798 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6799 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@71454b9d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6799 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6799 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con1 AS mysql TO test1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6800 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
6809 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6809 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6809 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@623e088f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6809 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6810 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con2 AS mysql TO test2 AT localhost : 3306 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6810 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
6817 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6817 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6817 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3d2ee678 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6817 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6818 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con3 AS mysql TO test3 AT localhost : 3306 WITH USER dbuser PASSWORD dbpassword - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6818 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
6822 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6822 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6823 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@35f26e72 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6823 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6824 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con4 AS mysql TO test4 WITH USER dbuser PASSWORD dbpassword - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6824 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
6828 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6829 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6829 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION jdbc1
#RUNQUERY
DROP DATABASE CONNECTION jdbc2
#RUNQUERY
DROP DATABASE CONNECTION jdbc3
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
DROP DATABASE CONNECTION con2
#RUNQUERY
DROP DATABASE CONNECTION con3
#RUNQUERY
DROP DATABASE CONNECTION con4
#RUNQUERY
CREATE DATABASE CONNECTION jdbc1 JDBC jdbc:mysql://localhost:3306/test
#RUNQUERY
CREATE DATABASE CONNECTION jdbc2 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION jdbc3 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword NO_LAZY_CONNECTION_CHECK
#RUNQUERY
CREATE DATABASE CONNECTION con1 AS mysql TO test1
#RUNQUERY
CREATE DATABASE CONNECTION con2 AS mysql TO test2 AT localhost : 3306
#RUNQUERY
CREATE DATABASE CONNECTION con3 AS mysql TO test3 AT localhost : 3306 WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION con4 AS mysql TO test4 WITH USER dbuser PASSWORD dbpassword
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
6831 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
6832 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
6833 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
6833 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
6833 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
6833 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
6835 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
6835 DEBUG AbstractTestComponent  - Sub test "CreateDatabaseConnectionTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
6835 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
6836 DEBUG AbstractTestComponent  - Mon May 15 19:19:31 CEST 2017Running sub test 2 of 49: "CreateDatabaseSinkTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
6836 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
CREATE DATABASE SINK con1 AS oracle TO test
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
6836 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
6836 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
6836 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6836 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
CREATE DATABASE SINK con1 AS oracle TO test
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6836 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
6838 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6838 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
6838 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6fe1b4fb - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6839 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6839 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6839 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7356 ERROR DatabaseConnectionDictionary  - Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server. - de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeConnection(DatabaseConnectionDictionary.java:138) 
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:407)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1116)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:346)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2334)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2371)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2163)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:407)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:378)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:305)
	at de.uniol.inf.is.odysseus.database.DataSourceFactoryRegistry.getConnection(DataSourceFactoryRegistry.java:30)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.assertConnection(DatabaseConnection.java:360)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.getConnection(DatabaseConnection.java:94)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeConnection(DatabaseConnectionDictionary.java:133)
	at de.uniol.inf.is.odysseus.parser.novel.cql.CQLParser.getExecutorCommand(CQLParser.java:329)
	at de.uniol.inf.is.odysseus.parser.novel.cql.CQLParser.parse(CQLParser.java:186)
	at de.uniol.inf.is.odysseus.planmanagement.compiler.standardcompiler.StandardCompiler.translateQuery(StandardCompiler.java:256)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:247)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:662)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:656)
	at de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand.execute(AddQueryCommand.java:47)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:480)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:665)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:656)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:644)
	at de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:43)
	at de.uniol.inf.is.odysseus.test.component.parser.cql.CQLParserTest.executeTestSet(CQLParserTest.java:72)
	at de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:1)
	at de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:133)
	at de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:57)
	at de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:102)
	at de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:73)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1488)
Caused by: java.net.NoRouteToHostException: Can't assign requested address (Address not available)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:254)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:295)
	... 47 more
7363 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7364 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7364 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@63648ee9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7364 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7364 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE SINK con1 AS oracle TO test - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7366 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7383 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7383 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7384 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
CREATE DATABASE SINK con1 AS oracle TO test
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7384 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7384 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7385 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
7385 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
7385 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
7386 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
7387 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
7388 DEBUG AbstractTestComponent  - Sub test "CreateDatabaseSinkTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
7388 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
7388 DEBUG AbstractTestComponent  - Mon May 15 19:19:32 CEST 2017Running sub test 3 of 49: "CreateDatabaseSourceTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
7389 DEBUG AbstractTestComponent  - #PARSER CQL
#ADDQUERY
CREATE DATABASE CONNECTIOn con1 as mysql
#ADDQUERY
CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
7389 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
7389 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
7390 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7390 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#ADDQUERY
CREATE DATABASE CONNECTIOn con1 as mysql
#ADDQUERY
CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7391 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7393 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7394 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7394 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@eb6449b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7394 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7395 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTIOn con1 as mysql - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7395 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7404 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7405 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7405 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7e985ce9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7405 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7405 DEBUG StandardExecutor  - Adding following query: CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7406 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [id, value]
[INTEGER, STRING]
,
args= {waiteach=0---INTEGER, connection=con1---STRING, attributes=['id','INTEGER'],['value','STRING']---LIST, table=main---STRING}
connection
table
attributes
waiteach
registerOperator() -> VIEW_KEY_datastream
7434 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7434 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7435 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2a1edad4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7438 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7442 DEBUG StandardExecutor  - Adding following query: datastream := DATABASESOURCE({connection='con1',table='main',attributes=[['id','INTEGER'],['value','STRING']],waiteach=0})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7442 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7471 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7474 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7475 DEBUG StandardExecutor  - Executing Create VIEW datastream - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7478 DEBUG ReloadLog  - Query added to log: datastream := DATABASESOURCE({connection='con1',table='main',attributes=[['id','INTEGER'],['value','STRING']],waiteach=0})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7479 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7479 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7479 DEBUG ReloadLog  - Query added to log: CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7480 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7480 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7481 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#ADDQUERY
CREATE DATABASE CONNECTIOn con1 as mysql
#ADDQUERY
CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7481 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7482 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7482 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
7482 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
7482 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
7482 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
7483 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
7483 DEBUG AbstractTestComponent  - Sub test "CreateDatabaseSourceTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
7483 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
7484 DEBUG AbstractTestComponent  - Mon May 15 19:19:32 CEST 2017Running sub test 4 of 49: "CreateStreamFromFileTest.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
7484 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
7484 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
7484 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
7484 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7484 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7484 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7485 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7485 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7485 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@c7a975a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7486 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7486 DEBUG StandardExecutor  - Adding following query: CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7486 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [attr1]
[Integer]
,
args= {schema=['attr1','Integer']---LIST, dataHandler=Tuple---STRING, protocol=SimpleCSV---STRING, options=['filename','this/is/a/filename.file'],['delimiter',';'],['textDelimiter',"'"]---LIST, wrapper=GenericPull---STRING, source=stream1---STRING, transport=File---STRING}
source
wrapper
protocol
transport
dataHandler
schema
options
registerOperator() -> VIEW_KEY_stream1
7506 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7507 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7508 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5cc126dc - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7509 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7509 DEBUG StandardExecutor  - Adding following query: stream1 := ACCESS({source='stream1',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['attr1','Integer']],options=[['filename','this/is/a/filename.file'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7509 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7513 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7514 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7514 DEBUG StandardExecutor  - Executing Create VIEW stream1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7516 DEBUG ReloadLog  - Query added to log: stream1 := ACCESS({source='stream1',wrapper='GenericPull',protocol='SimpleCSV',transport='File',dataHandler='Tuple',schema=[['attr1','Integer']],options=[['filename','this/is/a/filename.file'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7516 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7517 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7517 DEBUG ReloadLog  - Query added to log: CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7517 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7517 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7518 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7518 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7518 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7518 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
7518 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
7518 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
7518 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
7519 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
7519 DEBUG AbstractTestComponent  - Sub test "CreateStreamFromFileTest.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
7519 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
7519 DEBUG AbstractTestComponent  - Mon May 15 19:19:32 CEST 2017Running sub test 5 of 49: "CreateStreamTest.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
7519 DEBUG AbstractTestComponent  - #PARSER CQL
#DROPALLQUERIES
#QUERY 
DROP STREAM person IF EXISTS
#QUERY
CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440
#QUERY 
DROP STREAM bid IF EXISTS
#QUERY
CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65442', 'host' 'localhost')
#QUERY 
DROP STREAM auction IF EXISTS
#QUERY
CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441
#QUERY 
DROP STREAM category IF EXISTS
#QUERY
CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65443', 'host' 'localhost')
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
7519 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
7519 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
7520 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7520 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#DROPALLQUERIES
#QUERY 
DROP STREAM person IF EXISTS
#QUERY
CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440
#QUERY 
DROP STREAM bid IF EXISTS
#QUERY
CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65442', 'host' 'localhost')
#QUERY 
DROP STREAM auction IF EXISTS
#QUERY
CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441
#QUERY 
DROP STREAM category IF EXISTS
#QUERY
CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65443', 'host' 'localhost')
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7520 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7522 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7522 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7522 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.query.RemoveAllQueriesCommand@89c10b7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7523 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5dbe30be - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7523 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7523 DEBUG StandardExecutor  - Adding following query: DROP STREAM person IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7523 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7535 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7535 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7535 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@1a1da881 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7536 DEBUG ReloadLog  - Query added to log: DROP STREAM person IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7536 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7536 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7536 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5b970f7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7537 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7537 DEBUG StandardExecutor  - Adding following query: CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7537 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [timestamp, id, name, email, creditcard, city, state]
[STARTTIMESTAMP, INTEGER, STRING, STRING, STRING, STRING, STRING]
,
args= {schema=['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['name','STRING'],['email','STRING'],['creditcard','STRING'],['city','STRING'],['state','STRING']---LIST, dataHandler=Tuple---STRING, protocol=SizeByteBuffer---STRING, options=['port','65440'],['host', 'localhost']---LIST, wrapper=GenericPush---STRING, source=person---STRING, transport=NonBlockingTcp---STRING}
source
wrapper
protocol
transport
dataHandler
schema
options
registerOperator() -> VIEW_KEY_person
7544 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7544 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7545 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6175619b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7545 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7545 DEBUG StandardExecutor  - Adding following query: person := ACCESS({source='person',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['name','STRING'],['email','STRING'],['creditcard','STRING'],['city','STRING'],['state','STRING']],options=[['port','65440'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7545 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7548 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7548 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7548 DEBUG StandardExecutor  - Executing Create VIEW person - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7552 DEBUG ReloadLog  - Query added to log: person := ACCESS({source='person',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['name','STRING'],['email','STRING'],['creditcard','STRING'],['city','STRING'],['state','STRING']],options=[['port','65440'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7552 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7553 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7553 DEBUG ReloadLog  - Query added to log: CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7553 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7554 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7554 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3f2ef586 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7555 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7555 DEBUG StandardExecutor  - Adding following query: DROP STREAM bid IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7556 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7565 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7565 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7565 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@76c7beb3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7565 DEBUG ReloadLog  - Query added to log: DROP STREAM bid IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7566 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7566 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7566 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@64337702 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7567 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7567 DEBUG StandardExecutor  - Adding following query: CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE)
WRAPPER 'GenericPush'
PROTOCOL 'SizeByteBuffer'
TRANSPORT 'NonBlockingTcp'
DATAHANDLER 'Tuple'
OPTIONS ('port' '65442', 'host' 'localhost') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7567 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [timestamp, auction, bidder, datetime, price]
[STARTTIMESTAMP, INTEGER, INTEGER, LONG, DOUBLE]
,
generateKeyValueString()= [port, host]
[65442, localhost]
,
registerOperator() -> VIEW_KEY_bid
7593 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7593 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7593 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4e76dac - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7594 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7594 DEBUG StandardExecutor  - Adding following query: bid := ACCESS({source='bid',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['port','65442'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7594 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7598 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7598 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7599 DEBUG StandardExecutor  - Executing Create VIEW bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7600 DEBUG ReloadLog  - Query added to log: bid := ACCESS({source='bid',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['port','65442'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7600 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7601 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7601 DEBUG ReloadLog  - Query added to log: CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE)
WRAPPER 'GenericPush'
PROTOCOL 'SizeByteBuffer'
TRANSPORT 'NonBlockingTcp'
DATAHANDLER 'Tuple'
OPTIONS ('port' '65442', 'host' 'localhost') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7601 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7602 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7602 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6273c5a4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7602 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7602 DEBUG StandardExecutor  - Adding following query: DROP STREAM auction IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7603 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7607 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7608 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7608 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@53e211ee - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7608 DEBUG ReloadLog  - Query added to log: DROP STREAM auction IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7608 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7609 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7609 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@41a90fa8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7609 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7609 DEBUG StandardExecutor  - Adding following query: CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7610 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [timestamp, id, itemname, description, initialbid, reserve, expires, seller, category]
[STARTTIMESTAMP, INTEGER, STRING, STRING, INTEGER, INTEGER, LONG, INTEGER, INTEGER]
,
args= {schema=['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['itemname','STRING'],['description','STRING'],['initialbid','INTEGER'],['reserve','INTEGER'],['expires','LONG'],['seller','INTEGER'],['category','INTEGER']---LIST, dataHandler=Tuple---STRING, protocol=SizeByteBuffer---STRING, options=['port','65441'],['host', 'localhost']---LIST, wrapper=GenericPush---STRING, source=auction---STRING, transport=NonBlockingTcp---STRING}
source
wrapper
protocol
transport
dataHandler
schema
options
registerOperator() -> VIEW_KEY_auction
7620 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7620 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7620 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@52500920 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7621 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7621 DEBUG StandardExecutor  - Adding following query: auction := ACCESS({source='auction',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['itemname','STRING'],['description','STRING'],['initialbid','INTEGER'],['reserve','INTEGER'],['expires','LONG'],['seller','INTEGER'],['category','INTEGER']],options=[['port','65441'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7621 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7624 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7624 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7624 DEBUG StandardExecutor  - Executing Create VIEW auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7625 DEBUG ReloadLog  - Query added to log: auction := ACCESS({source='auction',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['itemname','STRING'],['description','STRING'],['initialbid','INTEGER'],['reserve','INTEGER'],['expires','LONG'],['seller','INTEGER'],['category','INTEGER']],options=[['port','65441'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7625 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7626 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7627 DEBUG ReloadLog  - Query added to log: CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7627 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7627 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7628 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@78aea4b9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7628 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7628 DEBUG StandardExecutor  - Adding following query: DROP STREAM category IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7628 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7633 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7633 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7633 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@4b85880b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7633 DEBUG ReloadLog  - Query added to log: DROP STREAM category IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7634 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7634 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7634 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4f936da8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7635 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7635 DEBUG StandardExecutor  - Adding following query: CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'SizeByteBuffer'
TRANSPORT 'NonBlockingTcp'
DATAHANDLER 'Tuple'
OPTIONS ('port' '65443', 'host' 'localhost') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7635 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [id, name, description, parentid]
[INTEGER, STRING, STRING, INTEGER]
,
generateKeyValueString()= [port, host]
[65443, localhost]
,
registerOperator() -> VIEW_KEY_category
7643 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7643 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7643 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@452ba1db - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7643 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7644 DEBUG StandardExecutor  - Adding following query: category := ACCESS({source='category',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['id','INTEGER'],['name','STRING'],['description','STRING'],['parentid','INTEGER']],options=[['port','65443'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7644 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7645 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7646 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7647 DEBUG StandardExecutor  - Executing Create VIEW category - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7648 DEBUG ReloadLog  - Query added to log: category := ACCESS({source='category',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['id','INTEGER'],['name','STRING'],['description','STRING'],['parentid','INTEGER']],options=[['port','65443'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7648 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7649 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7651 DEBUG ReloadLog  - Query added to log: CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'SizeByteBuffer'
TRANSPORT 'NonBlockingTcp'
DATAHANDLER 'Tuple'
OPTIONS ('port' '65443', 'host' 'localhost') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7651 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7652 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7652 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#DROPALLQUERIES
#QUERY 
DROP STREAM person IF EXISTS
#QUERY
CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440
#QUERY 
DROP STREAM bid IF EXISTS
#QUERY
CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65442', 'host' 'localhost')
#QUERY 
DROP STREAM auction IF EXISTS
#QUERY
CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441
#QUERY 
DROP STREAM category IF EXISTS
#QUERY
CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65443', 'host' 'localhost')
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7652 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7654 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7654 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
7654 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
7654 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
7654 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
7655 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
7655 DEBUG AbstractTestComponent  - Sub test "CreateStreamTest.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
7655 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
7656 DEBUG AbstractTestComponent  - Mon May 15 19:19:32 CEST 2017Running sub test 6 of 49: "CreateStreamToDatabaseSinkTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
7656 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
CREATE DATABASE CONNECTION con6 AS mysql
#QUERY
CREATE SINK dbsink AS DATABASE con6 TABLE example
#ADDQUERY
STREAM TO dbsink SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
7656 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
7656 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
7656 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7656 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
CREATE DATABASE CONNECTION con6 AS mysql
#QUERY
CREATE SINK dbsink AS DATABASE con6 TABLE example
#ADDQUERY
STREAM TO dbsink SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7656 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7658 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7658 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7658 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@184497d1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7658 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7658 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con6 AS mysql - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7659 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7663 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7663 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7663 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6ffab045 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7663 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7664 DEBUG StandardExecutor  - Adding following query: CREATE SINK dbsink AS DATABASE con6 TABLE example - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7664 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
args= {input=--INPUT--, connection=con6---STRING, type=mysql---STRING, table=example---STRING}
connection
table
drop
truncate
type
input
7669 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7670 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7670 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@70dd7e15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7670 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7670 DEBUG StandardExecutor  - Adding following query: STREAM TO dbsink SELECT * FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7670 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{}
getProjectionAttribute() -> bid.auction
{}
getProjectionAttribute() -> bid.bidder
{}
getProjectionAttribute() -> bid.datetime
{}
getProjectionAttribute() -> bid.price
{}
registerOperator() -> operator_1
registerOperator() -> dbsink
7714 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7714 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7714 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5fcacc0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7715 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7715 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
dbsink = DATABASESINK({connection='con6',table='example',type='mysql'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7715 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7749 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7751 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7751 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7752 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7753 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7763 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7763 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7763 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7764 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7764 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7765 INFO  transform  - Starting transformation of Top@1189651769 OwnerIDs: 0... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7767 DEBUG transform  - Before transformation: 
TopAO (1189651769) Owner: 0
0 <- 0 DatabaseSinkAO (1230013344) Owner: 0
       0 <- 0 MapAO (1607869297) Owner: 0
              0 <- 0 AccessAO (681639276) Owner: 0
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
7841 DEBUG ruleengine  - Ruleengine needed 72 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7841 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7842 INFO  transform  - Transformation of Top@1189651769 OwnerIDs: 0 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
7845 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
7849 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
7849 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
7849 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
7850 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
7850 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
dbsink = DATABASESINK({connection='con6',table='example',type='mysql'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7850 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7850 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7851 DEBUG ReloadLog  - Query added to log: STREAM TO dbsink SELECT * FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7851 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7852 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7852 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
CREATE DATABASE CONNECTION con6 AS mysql
#QUERY
CREATE SINK dbsink AS DATABASE con6 TABLE example
#ADDQUERY
STREAM TO dbsink SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7852 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7853 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7853 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
7853 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
7853 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
7853 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
7854 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-28] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
7855 INFO  StandardExecutor  - Removing Query 0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
7855 DEBUG StandardExecutor  - Removing Ownership 0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
7856 INFO  StandardExecutor  - Query 0 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
7856 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
dbsink = DATABASESINK({connection='con6',table='example',type='mysql'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
7857 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7858 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
7858 DEBUG AbstractTestComponent  - Sub test "CreateStreamToDatabaseSinkTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
7858 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
7859 DEBUG AbstractTestComponent  - Mon May 15 19:19:32 CEST 2017Running sub test 7 of 49: "CreateViewTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
7859 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
DROP VIEW view1 IF EXISTS
#QUERY
CREATE VIEW view1 FROM (SELECT * FROM bid)
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
7859 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
7859 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
7859 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7859 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
DROP VIEW view1 IF EXISTS
#QUERY
CREATE VIEW view1 FROM (SELECT * FROM bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7860 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7861 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7862 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7862 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5af28b27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7862 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7862 DEBUG StandardExecutor  - Adding following query: DROP VIEW view1 IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7862 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7866 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7867 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7867 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropViewCommand@4985cbcb - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7867 DEBUG ReloadLog  - Query added to log: DROP VIEW view1 IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7868 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7868 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7869 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@72f46e16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7869 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7869 DEBUG StandardExecutor  - Adding following query: CREATE VIEW view1 FROM (SELECT * FROM bid) - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7869 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{}
getProjectionAttribute() -> bid.auction
{}
getProjectionAttribute() -> bid.bidder
{}
getProjectionAttribute() -> bid.datetime
{}
getProjectionAttribute() -> bid.price
{}
registerOperator() -> operator_1
7878 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7879 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7879 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@32232e55 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7879 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7879 DEBUG StandardExecutor  - Adding following query: view1 := MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7880 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7888 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7889 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7889 DEBUG StandardExecutor  - Executing Create VIEW view1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7889 DEBUG ReloadLog  - Query added to log: view1 := MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7889 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7890 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7890 DEBUG ReloadLog  - Query added to log: CREATE VIEW view1 FROM (SELECT * FROM bid) - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7890 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7891 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7891 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
DROP VIEW view1 IF EXISTS
#QUERY
CREATE VIEW view1 FROM (SELECT * FROM bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7891 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7892 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7892 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
7892 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
7892 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
7892 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
7894 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
7894 DEBUG AbstractTestComponent  - Sub test "CreateViewTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
7894 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
7895 DEBUG AbstractTestComponent  - Mon May 15 19:19:33 CEST 2017Running sub test 8 of 49: "ExistsTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
7895 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder);
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
7895 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
7895 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
7895 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7896 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder);
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7896 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7897 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7898 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7898 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6fa590ba - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7899 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7899 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7899 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.bidder
alias!
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.bidder]}, order= [B.bidder]
parsePredicate(List<Expressions>)
prepareParsingSelect()
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::P.id
alias!
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
getSelectedAttributes() -> map= {person=[P.id]}, order= [P.id]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> P.id,P
registerOperator() -> operator_1
getProjectionAttribute() -> P.id
{P.id=P, B.bidder=B}
registerOperator() -> operator_2
getAttributename() -> attributename=P.id, sourcename= null
getAttributename() -> attributename=B.bidder, sourcename= null
exists() -> P.id!=B.bidder
P.id
exists() -> P_id!=B.bidder
parsePredicate() -> 
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.bidder,B
registerOperator() -> operator_3
args= {type=EXISTS---STRING, predicate=P_id!=B.bidder---STRING, input=operator_2,operator_3}
type
predicate
input
registerOperator() -> operator_4
getProjectionAttribute() -> B.bidder
{P.id=P, B.bidder=B}
registerOperator() -> operator_5
7937 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7938 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7938 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@532a02d9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7938 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7938 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.id']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7939 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7960 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7961 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7961 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7962 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7962 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7966 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7966 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7967 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7967 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7967 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7968 INFO  transform  - Starting transformation of Top@1278616846 OwnerIDs: 1... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7968 DEBUG transform  - Before transformation: 
TopAO (1278616846) Owner: 1
0 <- 0 MapAO (559050604) Owner: 1
       0 <- 0 JoinAO (1240843015) Owner: 1 Predicate: null
              0 <- 0 ExistenceAO (697460450) Owner: 1
                     0 <- 0 MapAO (1416706187) Owner: 1
                            0 <- 0 AccessAO (1726616678) Owner: 1
                     1 <- 0 AccessAO (23076423) Owner: 1
              1 <- 0 AccessAO (23076423) Owner: 1
                            [see above for following operators]
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8685 DEBUG ruleengine  - Ruleengine needed 715 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8685 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8685 INFO  transform  - Transformation of Top@1278616846 OwnerIDs: 1 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8686 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8687 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8687 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8687 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8688 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8688 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.id']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8688 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8688 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8689 DEBUG ReloadLog  - Query added to log: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8689 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8689 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8690 INFO  StandardExecutor  - Starting query (ID: 1)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
8691 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8691 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8702 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8702 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8703 INFO  StandardExecutor  - Query 1 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
8704 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 1 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
8704 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
8750 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
8752 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder);
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8752 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8753 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8753 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8754 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8754 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8754 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8756 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-30] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8757 INFO  StandardExecutor  - Stopping query (ID: 1).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
8757 DEBUG StandardExecutor  - Try to stop query 1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
8759 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8763 WARN  NonBlockingTcpClientHandler  -  - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.NonBlockingTcpClientHandler.socketException(NonBlockingTcpClientHandler.java:437) 
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.ensureReadOpen(SocketChannelImpl.java:257)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:300)
	at de.uniol.inf.is.odysseus.core.connection.NioTcpConnection.onRead(NioTcpConnection.java:58)
	at de.uniol.inf.is.odysseus.core.connection.SelectorThread.run(SelectorThread.java:276)
	at java.lang.Thread.run(Thread.java:745)
8764 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8766 INFO  StandardExecutor  - Query 1 stopped. Execution time 63 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
8766 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 1 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
8766 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
8766 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
8767 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
8767 INFO  StandardExecutor  - Removing Query 1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8767 DEBUG StandardExecutor  - Removing Ownership 1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8768 INFO  StandardExecutor  - Query 1 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8768 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.id']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8768 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8769 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8770 DEBUG AbstractTestComponent  - Sub test "ExistsTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8770 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8771 DEBUG AbstractTestComponent  - Mon May 15 19:19:33 CEST 2017Running sub test 9 of 49: "ExistsTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8771 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max');
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8771 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8771 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8771 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8771 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max');
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8772 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8772 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8773 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8773 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@770d0ea6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8773 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8773 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max'); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8773 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.bidder
alias!
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.bidder]}, order= [B.bidder]
parsePredicate(List<Expressions>)
prepareParsingSelect()
buildJoin() --> SimpleSource
buildRename() -> P.timestamp,P
buildRename() -> P.id,P
buildRename() -> P.name,P
buildRename() -> P.email,P
buildRename() -> P.creditcard,P
buildRename() -> P.city,P
buildRename() -> P.state,P
registerOperator() -> operator_1
getProjectionAttribute() -> P.timestamp
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.id
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.name
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.email
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.creditcard
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.city
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.state
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
registerOperator() -> operator_2
getAttributename() -> attributename=P.id, sourcename= null
getAttributename() -> attributename=B.bidder, sourcename= null
getAttributename() -> attributename=P.name, sourcename= null
exists() -> P.id!=B.bidder&&P.name!="Max"
P.timestamp
person.timestamp
P.id
person.id
P.name
person.name
P.email
person.email
P.creditcard
person.creditcard
P.city
person.city
P.state
person.state
exists() -> P_id!=B.bidder&&P_name!="Max"
parsePredicate() -> 
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.bidder,B
registerOperator() -> operator_3
args= {type=EXISTS---STRING, predicate=P_id!=B.bidder&&P_name!="Max"---STRING, input=operator_2,operator_3}
type
predicate
input
registerOperator() -> operator_4
getProjectionAttribute() -> B.bidder
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
registerOperator() -> operator_5
8798 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8798 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8799 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@19b30c92 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8799 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8799 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.timestamp','P.id','P.name','P.email','P.creditcard','P.city','P.state']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder&&P_name!="Max"'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8799 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8817 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8817 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8817 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8818 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8818 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8820 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8820 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8821 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8821 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8821 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8821 INFO  transform  - Starting transformation of Top@1306535359 OwnerIDs: 2... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8822 DEBUG transform  - Before transformation: 
TopAO (1306535359) Owner: 2
0 <- 0 MapAO (1401295795) Owner: 2
       0 <- 0 JoinAO (519019247) Owner: 2 Predicate: null
              0 <- 0 ExistenceAO (288919635) Owner: 2
                     0 <- 0 MapAO (1572442646) Owner: 2
                            0 <- 0 AccessAO (1052842393) Owner: 2
                     1 <- 0 AccessAO (1545327692) Owner: 2
              1 <- 0 AccessAO (1545327692) Owner: 2
                            [see above for following operators]
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8836 DEBUG ruleengine  - Ruleengine needed 10 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8837 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8837 INFO  transform  - Transformation of Top@1306535359 OwnerIDs: 2 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8837 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8838 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8838 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8838 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8838 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8838 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.timestamp','P.id','P.name','P.email','P.creditcard','P.city','P.state']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder&&P_name!="Max"'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8838 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8839 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8839 DEBUG ReloadLog  - Query added to log: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max'); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8839 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8840 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8840 INFO  StandardExecutor  - Starting query (ID: 2)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
8840 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8840 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8841 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8841 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8842 INFO  StandardExecutor  - Query 2 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
8842 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 2 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
8842 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
8842 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
8843 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max');
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8844 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8846 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8846 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8846 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8846 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8846 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8847 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-31] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8848 INFO  StandardExecutor  - Stopping query (ID: 2).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
8848 DEBUG StandardExecutor  - Try to stop query 2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
8849 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8851 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8852 INFO  StandardExecutor  - Query 2 stopped. Execution time 10 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
8852 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 2 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
8852 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
8853 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
8853 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
8853 INFO  StandardExecutor  - Removing Query 2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8853 DEBUG StandardExecutor  - Removing Ownership 2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8853 INFO  StandardExecutor  - Query 2 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8853 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.timestamp','P.id','P.name','P.email','P.creditcard','P.city','P.state']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder&&P_name!="Max"'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8853 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8854 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8854 DEBUG AbstractTestComponent  - Sub test "ExistsTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8854 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8854 DEBUG AbstractTestComponent  - Mon May 15 19:19:33 CEST 2017Running sub test 10 of 49: "ExistsTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8855 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8855 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8855 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8855 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8855 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8855 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8856 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8857 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8857 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@ca27722 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8857 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8857 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8857 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.bidder
alias!
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.bidder]}, order= [B.bidder]
parsePredicate(List<Expressions>)
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= id, realSourcename= person, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= name, realSourcename= person, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {person=[id, name]}, order= [person.id, person.name]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
getProjectionAttribute() -> person.id
{P.city=P, B.price=B, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> person.name
{P.city=P, B.price=B, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
registerOperator() -> operator_1
getAttributename() -> attributename=id, sourcename= null
getAttributename() -> attributename=B.bidder, sourcename= null
getAttributename() -> attributename=name, sourcename= null
exists() -> person.id!=B.bidder&&person.name!="Max"
person.id
person.name
exists() -> person_id!=B.bidder&&person_name!="Max"
getAttributename() -> attributename=B.price, sourcename= null
parsePredicate() -> ||B.price>1000
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.bidder,B
buildRename() -> B.price,B
registerOperator() -> operator_2
registerOperator() -> operator_3
registerExistenceOperator() -> selectInput= operator_2
args= {type=EXISTS---STRING, predicate=person_id!=B.bidder&&person_name!="Max"---STRING, input=operator_1,operator_2}
type
predicate
input
registerOperator() -> operator_4
getProjectionAttribute() -> B.bidder
{P.city=P, B.price=B, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
registerOperator() -> operator_5
8878 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8878 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8878 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3d6300e8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8879 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8879 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['person.id','person.name']},person)
operator_2 = RENAME({aliases=['bidder','B.bidder','price','B.price','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='person_id!=B.bidder&&person_name!="Max"'},operator_1,operator_2)
operator_3 = SELECT({predicate='B.price>1000'},JOIN(operator_4,operator_2))
operator_5 = MAP({expressions=['B.bidder']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8879 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8889 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8890 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8890 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8891 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8891 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8899 DEBUG RelationalRestructHelper  - removing operator:Select@609887969 OwnerIDs: 3(B.price) > (1000) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
8901 DEBUG ruleengine  - Ruleengine needed 9 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8902 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8902 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8902 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8902 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8903 INFO  transform  - Starting transformation of Top@1988746735 OwnerIDs: 3... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8903 DEBUG transform  - Before transformation: 
TopAO (1988746735) Owner: 3
0 <- 0 MapAO (1752856108) Owner: 3
       0 <- 0 JoinAO (439232821) Owner: 3 Predicate: null
              0 <- 0 ExistenceAO (1933328958) Owner: 3
                     0 <- 0 MapAO (1264754451) Owner: 3
                            0 <- 0 AccessAO (1888639813) Owner: 3
                     1 <- 0 AccessAO (463381475) Owner: 3
              1 <- 0 SelectAO (178401052) Owner: 
                     0 <- 0 AccessAO (463381475) Owner: 3
                                   [see above for following operators]
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8917 DEBUG ruleengine  - Ruleengine needed 13 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8917 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8918 INFO  transform  - Transformation of Top@1988746735 OwnerIDs: 3 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8918 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8918 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8918 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8919 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8919 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8919 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['person.id','person.name']},person)
operator_2 = RENAME({aliases=['bidder','B.bidder','price','B.price','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='person_id!=B.bidder&&person_name!="Max"'},operator_1,operator_2)
operator_3 = SELECT({predicate='B.price>1000'},JOIN(operator_4,operator_2))
operator_5 = MAP({expressions=['B.bidder']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8919 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8920 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8920 DEBUG ReloadLog  - Query added to log: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8920 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8921 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8921 INFO  StandardExecutor  - Starting query (ID: 3)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
8921 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8921 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8922 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8922 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8923 INFO  StandardExecutor  - Query 3 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
8923 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 3 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
8923 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
8923 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
8923 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8923 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8924 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8924 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8924 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8924 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8924 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8925 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-32] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8925 INFO  StandardExecutor  - Stopping query (ID: 3).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
8925 DEBUG StandardExecutor  - Try to stop query 3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
8926 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8927 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8928 INFO  StandardExecutor  - Query 3 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
8928 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 3 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
8928 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
8929 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
8929 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
8929 INFO  StandardExecutor  - Removing Query 3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8929 DEBUG StandardExecutor  - Removing Ownership 3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8929 INFO  StandardExecutor  - Query 3 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8929 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['person.id','person.name']},person)
operator_2 = RENAME({aliases=['bidder','B.bidder','price','B.price','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='person_id!=B.bidder&&person_name!="Max"'},operator_1,operator_2)
operator_3 = SELECT({predicate='B.price>1000'},JOIN(operator_4,operator_2))
operator_5 = MAP({expressions=['B.bidder']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8930 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8931 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8939 DEBUG AbstractTestComponent  - Sub test "ExistsTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8940 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8940 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 11 of 49: "QuantificationTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8940 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.price 
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2);
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8941 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8941 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8941 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8941 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.price 
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2);
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8942 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8945 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8945 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8946 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7fe083b1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8948 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8948 DEBUG StandardExecutor  - Adding following query: SELECT B.price
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8948 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.price
alias!
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.price]}, order= [B.price]
parsePredicate(List<Expressions>)
prepareParsingSelect()
findbyName::B2.price
alias!
registerAttributeAliases() -> attribute= B2.price, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B2.price]}, order= [B2.price]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.price,B
buildRename() -> B2.price,B2
registerOperator() -> operator_1
getProjectionAttribute() -> B2.price
{P.city=P, B.price=B, P.name=P, P.creditcard=P, B2.price=B2, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
registerOperator() -> operator_2
B2.price
parsePredicate() -> 
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.price,B
buildRename() -> B2.price,B2
registerOperator() -> operator_3
args= {type=NOT_EXISTS---STRING, input=operator_2,operator_3, predicate=B.price<=B2_price---STRING}
type
predicate
input
registerOperator() -> operator_4
getProjectionAttribute() -> B.price
{P.city=P, B.price=B, P.name=P, P.creditcard=P, B2.price=B2, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
registerOperator() -> operator_5
8979 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8980 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8980 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5ca17ab0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8981 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8981 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','B2.price','timestamp','B2.timestamp','auction','B2.auction','bidder','B2.bidder','datetime','B2.datetime'],pairs='true'},bid)
operator_2 = MAP({expressions=['B2.price']},operator_1)
operator_3 = RENAME({aliases=['price','B.price','timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='NOT_EXISTS',predicate='B.price<=B2_price'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.price']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8982 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8995 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8995 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8996 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8997 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8997 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8999 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8999 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8999 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8999 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9000 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9000 INFO  transform  - Starting transformation of Top@1739555643 OwnerIDs: 4... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9001 DEBUG transform  - Before transformation: 
TopAO (1739555643) Owner: 4
0 <- 0 MapAO (220165304) Owner: 4
       0 <- 0 JoinAO (1094272405) Owner: 4 Predicate: null
              0 <- 0 ExistenceAO (973604791) Owner: 4
                     0 <- 0 MapAO (564526486) Owner: 4
                            0 <- 0 AccessAO (1466558382) Owner: 4
                     1 <- 0 AccessAO (1551303995) Owner: 4
              1 <- 0 AccessAO (1551303995) Owner: 4
                            [see above for following operators]
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9014 DEBUG ruleengine  - Ruleengine needed 11 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9014 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9014 INFO  transform  - Transformation of Top@1739555643 OwnerIDs: 4 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9015 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9015 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9016 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9016 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9016 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9017 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','B2.price','timestamp','B2.timestamp','auction','B2.auction','bidder','B2.bidder','datetime','B2.datetime'],pairs='true'},bid)
operator_2 = MAP({expressions=['B2.price']},operator_1)
operator_3 = RENAME({aliases=['price','B.price','timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='NOT_EXISTS',predicate='B.price<=B2_price'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.price']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9017 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9017 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9017 DEBUG ReloadLog  - Query added to log: SELECT B.price
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9018 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9018 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9019 INFO  StandardExecutor  - Starting query (ID: 4)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9019 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9019 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9020 INFO  StandardExecutor  - Query 4 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9021 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 4 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9022 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9022 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9022 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.price 
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2);
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9023 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9023 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9024 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9024 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9024 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9024 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9025 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-33] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9025 INFO  StandardExecutor  - Stopping query (ID: 4).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9026 DEBUG StandardExecutor  - Try to stop query 4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9027 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9027 INFO  StandardExecutor  - Query 4 stopped. Execution time 7 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9027 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 4 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9028 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9028 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9028 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9028 INFO  StandardExecutor  - Removing Query 4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9028 DEBUG StandardExecutor  - Removing Ownership 4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9029 INFO  StandardExecutor  - Query 4 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9029 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','B2.price','timestamp','B2.timestamp','auction','B2.auction','bidder','B2.bidder','datetime','B2.datetime'],pairs='true'},bid)
operator_2 = MAP({expressions=['B2.price']},operator_1)
operator_3 = RENAME({aliases=['price','B.price','timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='NOT_EXISTS',predicate='B.price<=B2_price'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.price']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9029 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9030 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9031 DEBUG AbstractTestComponent  - Sub test "QuantificationTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9031 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9031 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 12 of 49: "RenameTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9031 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9031 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9032 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9032 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9032 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9032 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9033 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9034 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9034 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@37d80fe7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9034 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9034 DEBUG StandardExecutor  - Adding following query: SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9034 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= C.id, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
findbyName::B.auction
alias!
findbyName::B.auction
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.bidder
alias!
findbyName::B.bidder
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::C.email
findbyName::C.email
alias!
registerAttributeAliases() -> attribute= C.email, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
findbyName::C.id
findbyName::C.id
alias!
registerAttributeAliases() -> attribute= C.id, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.auction, B.bidder], person=[C.email, C.id]}, order= [B.auction, B.bidder, C.email, C.id]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B.auction, sourcename= null
getAttributename() -> attributename=C.id, sourcename= null
parsePredicate() -> B.auction==C.id
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.auction,B
buildRename() -> B.bidder,B
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> C.id,C
buildRename() -> C.email,C
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> B.auction
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> B.bidder
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> C.email
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> C.id
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
registerOperator() -> operator_4
9043 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9043 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9043 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@797501a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9044 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9044 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B.auction','bidder','B.bidder','timestamp','B.timestamp','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction','B.bidder','C.email','C.id']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9044 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9056 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9056 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9057 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9060 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9060 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9063 DEBUG RelationalRestructHelper  - removing operator:Select@102103410 OwnerIDs: 5(B.auction) = (C.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9064 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9064 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9065 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9065 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9065 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9066 INFO  transform  - Starting transformation of Top@2035801202 OwnerIDs: 5... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9067 DEBUG transform  - Before transformation: 
TopAO (2035801202) Owner: 5
0 <- 0 MapAO (1790387225) Owner: 5
       0 <- 0 JoinAO (984412970) Owner: 5 Predicate: (B.auction) = (C.id) initialized = true
              0 <- 0 AccessAO (1340057206) Owner: 5
              1 <- 0 AccessAO (137123763) Owner: 5
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9090 DEBUG ruleengine  - Ruleengine needed 21 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9090 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9090 INFO  transform  - Transformation of Top@2035801202 OwnerIDs: 5 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9090 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9091 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9091 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9091 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9091 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9091 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B.auction','bidder','B.bidder','timestamp','B.timestamp','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction','B.bidder','C.email','C.id']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9091 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9092 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9092 DEBUG ReloadLog  - Query added to log: SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9092 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9093 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9093 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9093 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9094 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9094 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9094 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9095 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9095 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9095 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-34] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9096 INFO  StandardExecutor  - Removing Query 5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9096 DEBUG StandardExecutor  - Removing Ownership 5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9097 INFO  StandardExecutor  - Query 5 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9097 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B.auction','bidder','B.bidder','timestamp','B.timestamp','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction','B.bidder','C.email','C.id']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9097 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9098 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9099 DEBUG AbstractTestComponent  - Sub test "RenameTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9099 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9099 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 13 of 49: "RenameTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9099 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id;
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9099 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9099 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9099 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9099 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id;
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9100 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9101 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9101 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9101 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@29539e36 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9102 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9102 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9102 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
findbyName::B.bidder
alias!
findbyName::B.bidder
registerAttributeAliases() -> attribute= auctioneer, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::C.email
findbyName::C.email
alias!
registerAttributeAliases() -> attribute= C.email, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer], person=[C.email]}, order= [auctioneer, C.email]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=id, sourcename= null
parsePredicate() -> B.auction==C.id
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> auctioneer,B
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> C.email,C
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> auctioneer
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> C.email
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
registerOperator() -> operator_4
9112 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9113 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9113 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@52d10fb8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9113 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9113 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['email','C.email','timestamp','C.timestamp','id','C.id','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9114 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9122 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9122 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9123 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9124 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9124 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9125 DEBUG RelationalRestructHelper  - removing operator:Select@848958019 OwnerIDs: 6(B.auction) = (C.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9125 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9125 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9126 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9126 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9126 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9126 INFO  transform  - Starting transformation of Top@981487964 OwnerIDs: 6... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9126 DEBUG transform  - Before transformation: 
TopAO (981487964) Owner: 6
0 <- 0 MapAO (1417554340) Owner: 6
       0 <- 0 JoinAO (478182173) Owner: 6 Predicate: (B.auction) = (C.id) initialized = true
              0 <- 0 AccessAO (596333086) Owner: 6
              1 <- 0 AccessAO (456785282) Owner: 6
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9174 DEBUG ruleengine  - Ruleengine needed 7 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9174 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9174 INFO  transform  - Transformation of Top@981487964 OwnerIDs: 6 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9174 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9175 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9175 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9175 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9175 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9176 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['email','C.email','timestamp','C.timestamp','id','C.id','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9176 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9176 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9177 DEBUG ReloadLog  - Query added to log: SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9177 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9179 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9179 INFO  StandardExecutor  - Starting query (ID: 6)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9179 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9179 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9180 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9181 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9181 INFO  StandardExecutor  - Query 6 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9182 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 6 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9182 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9182 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9182 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4201a617 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9182 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9182 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9183 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= C.id, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
findbyName::B.bidder
alias!
findbyName::B.bidder
registerAttributeAliases() -> attribute= auctioneer, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::C.email
findbyName::C.email
alias!
registerAttributeAliases() -> attribute= C.email, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer], person=[C.email]}, order= [auctioneer, C.email]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=C.id, sourcename= null
parsePredicate() -> B.auction==C.id
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> auctioneer,B
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> C.id,C
buildRename() -> C.email,C
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> auctioneer
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> C.email
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
registerOperator() -> operator_4
9188 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9189 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9189 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1c05a54d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9189 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9189 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9189 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9202 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9203 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9203 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9203 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9203 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9204 DEBUG RelationalRestructHelper  - removing operator:Select@904208473 OwnerIDs: 7(B.auction) = (C.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9205 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9205 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9206 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9206 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9206 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9207 INFO  transform  - Starting transformation of Top@22668134 OwnerIDs: 7... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9207 DEBUG transform  - Before transformation: 
TopAO (22668134) Owner: 7
0 <- 0 MapAO (1474072872) Owner: 7
       0 <- 0 JoinAO (609389093) Owner: 7 Predicate: (B.auction) = (C.id) initialized = true
              0 <- 0 AccessAO (397318359) Owner: 7
              1 <- 0 AccessAO (1495407511) Owner: 7
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9216 DEBUG ruleengine  - Ruleengine needed 7 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9217 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9217 INFO  transform  - Transformation of Top@22668134 OwnerIDs: 7 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9218 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9218 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9218 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9218 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9219 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9219 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9219 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9220 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9220 DEBUG ReloadLog  - Query added to log: SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9220 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9221 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9222 INFO  StandardExecutor  - Starting query (ID: 7)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9223 INFO  StandardExecutor  - Query 7 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9223 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 7 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9223 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9224 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9224 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id;
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9224 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9225 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9225 DEBUG AbstractTestComponent  - adding 2 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9225 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9225 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9225 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9226 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-35] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9226 INFO  StandardExecutor  - Stopping query (ID: 6).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9226 DEBUG StandardExecutor  - Try to stop query 6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9227 INFO  StandardExecutor  - Query 6 stopped. Execution time 46 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9227 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 6 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9227 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9227 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9227 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9227 INFO  StandardExecutor  - Removing Query 6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9227 DEBUG StandardExecutor  - Removing Ownership 6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9228 INFO  StandardExecutor  - Query 6 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9228 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['email','C.email','timestamp','C.timestamp','id','C.id','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9228 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9229 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-35] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9229 INFO  StandardExecutor  - Stopping query (ID: 7).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9229 DEBUG StandardExecutor  - Try to stop query 7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9230 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9231 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9232 INFO  StandardExecutor  - Query 7 stopped. Execution time 9 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9232 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 7 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9232 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9233 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9233 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9233 INFO  StandardExecutor  - Removing Query 7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9233 DEBUG StandardExecutor  - Removing Ownership 7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9234 INFO  StandardExecutor  - Query 7 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9234 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9234 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9235 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9235 DEBUG AbstractTestComponent  - Sub test "RenameTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9235 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9235 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 14 of 49: "RenameTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9236 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction 
FROM bid AS B1, bid AS B2;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9236 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9236 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9236 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9236 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction 
FROM bid AS B1, bid AS B2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9236 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9237 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9237 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9237 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6979efad - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9237 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9238 DEBUG StandardExecutor  - Adding following query: SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9238 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
findbyName::B1.auction
alias!
findbyName::B1.auction
alias!
registerAttributeAliases() -> attribute= B1.auction, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B1.auction, B2.auction]}, order= [B1.auction, B2.auction]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> B2.auction,B2
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> B2.auction,B2
registerOperator() -> operator_2
getProjectionAttribute() -> B1.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
registerOperator() -> operator_3
9245 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9245 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9245 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@315ba14a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9246 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9246 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','timestamp','B2.timestamp','bidder','B2.bidder','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = MAP({expressions=['B1.auction','B2.auction']},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9246 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9252 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9253 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9253 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9253 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9253 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9255 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9255 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9255 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9256 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9256 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9256 INFO  transform  - Starting transformation of Top@115397800 OwnerIDs: 8... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9256 DEBUG transform  - Before transformation: 
TopAO (115397800) Owner: 8
0 <- 0 MapAO (1691858720) Owner: 8
       0 <- 0 JoinAO (807872790) Owner: 8 Predicate: null
              0 <- 0 AccessAO (1538511917) Owner: 8
              1 <- 0 AccessAO (1542856295) Owner: 8
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9263 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9263 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9264 INFO  transform  - Transformation of Top@115397800 OwnerIDs: 8 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9264 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9265 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9265 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9265 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9266 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9266 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','timestamp','B2.timestamp','bidder','B2.bidder','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = MAP({expressions=['B1.auction','B2.auction']},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9266 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9266 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9267 DEBUG ReloadLog  - Query added to log: SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9267 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9267 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9268 INFO  StandardExecutor  - Starting query (ID: 8)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9268 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9268 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9268 INFO  StandardExecutor  - Query 8 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9269 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 8 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9269 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9270 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9270 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction 
FROM bid AS B1, bid AS B2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9270 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9271 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9271 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9271 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9271 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9271 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9272 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-36] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9272 INFO  StandardExecutor  - Stopping query (ID: 8).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9273 DEBUG StandardExecutor  - Try to stop query 8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9273 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9274 INFO  StandardExecutor  - Query 8 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9274 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 8 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9275 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9275 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9275 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9275 INFO  StandardExecutor  - Removing Query 8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9275 DEBUG StandardExecutor  - Removing Ownership 8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9276 INFO  StandardExecutor  - Query 8 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9276 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','timestamp','B2.timestamp','bidder','B2.bidder','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = MAP({expressions=['B1.auction','B2.auction']},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9276 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9277 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9277 DEBUG AbstractTestComponent  - Sub test "RenameTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9278 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9278 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 15 of 49: "RenameTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9278 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9278 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9278 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9278 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9278 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9279 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9279 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9280 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9280 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5fa47fea - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9280 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9280 DEBUG StandardExecutor  - Adding following query: SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9281 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B1.bidder, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
registerAttributeAliases() -> attribute= B2.bidder, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B1.auction
alias!
findbyName::B1.auction
alias!
registerAttributeAliases() -> attribute= B1.auction, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B1.auction, B2.auction]}, order= [B1.auction, B2.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B1.bidder, sourcename= null
getAttributename() -> attributename=B2.bidder, sourcename= null
parsePredicate() -> B1.bidder!=B2.bidder
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> B2.auction,B2
buildRename() -> B1.bidder,B1
buildRename() -> B2.bidder,B2
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> B2.auction,B2
buildRename() -> B1.bidder,B1
buildRename() -> B2.bidder,B2
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> B1.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_4
9287 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9287 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9287 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@28f8e165 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9287 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9287 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B1.auction','bidder','B1.bidder','timestamp','B1.timestamp','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = SELECT({predicate='B1.bidder!=B2.bidder'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B1.auction','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9288 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9294 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9294 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9294 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9294 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9294 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9295 DEBUG RelationalRestructHelper  - removing operator:Select@1565713391 OwnerIDs: 9(B1.bidder) != (B2.bidder) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9296 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9296 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9296 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9296 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9296 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9297 INFO  transform  - Starting transformation of Top@739210872 OwnerIDs: 9... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9297 DEBUG transform  - Before transformation: 
TopAO (739210872) Owner: 9
0 <- 0 MapAO (1154941313) Owner: 9
       0 <- 0 JoinAO (1789282489) Owner: 9 Predicate: (B1.bidder) != (B2.bidder) initialized = true
              0 <- 0 AccessAO (600199331) Owner: 9
              1 <- 0 AccessAO (1949126165) Owner: 9
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9304 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9304 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9304 INFO  transform  - Transformation of Top@739210872 OwnerIDs: 9 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9305 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9305 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9305 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9305 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9305 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9305 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B1.auction','bidder','B1.bidder','timestamp','B1.timestamp','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = SELECT({predicate='B1.bidder!=B2.bidder'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B1.auction','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9305 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9306 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9306 DEBUG ReloadLog  - Query added to log: SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9306 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9307 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9307 INFO  StandardExecutor  - Starting query (ID: 9)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9307 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9307 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9308 INFO  StandardExecutor  - Query 9 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9308 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 9 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9308 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9309 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9309 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9309 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9309 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9310 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9310 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9310 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9310 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9310 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-37] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9311 INFO  StandardExecutor  - Stopping query (ID: 9).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9311 DEBUG StandardExecutor  - Try to stop query 9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9312 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9312 INFO  StandardExecutor  - Query 9 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9313 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 9 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9313 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9313 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9313 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9313 INFO  StandardExecutor  - Removing Query 9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9313 DEBUG StandardExecutor  - Removing Ownership 9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9313 INFO  StandardExecutor  - Query 9 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9313 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B1.auction','bidder','B1.bidder','timestamp','B1.timestamp','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = SELECT({predicate='B1.bidder!=B2.bidder'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B1.auction','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9313 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9314 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9315 DEBUG AbstractTestComponent  - Sub test "RenameTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9315 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9315 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 16 of 49: "RenameTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9315 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9315 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9315 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9315 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9315 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9315 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9316 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9317 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9317 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@68ace111 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9317 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9317 DEBUG StandardExecutor  - Adding following query: SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9317 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B1.auction, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
registerAttributeAliases() -> attribute= B2.bidder, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B1.auction
alias!
findbyName::B1.auction
alias!
registerAttributeAliases() -> attribute= auctioneer, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer, B2.auction]}, order= [auctioneer, B2.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B1.auction, sourcename= null
getAttributename() -> attributename=B2.bidder, sourcename= null
parsePredicate() -> B1.auction!=B2.bidder
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> auctioneer,B1
buildRename() -> B2.auction,B2
buildRename() -> B2.bidder,B2
registerOperator() -> operator_1
registerOperator() -> operator_2
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> auctioneer,B1
buildRename() -> B2.auction,B2
buildRename() -> B2.bidder,B2
registerOperator() -> operator_3
registerOperator() -> operator_4
getProjectionAttribute() -> auctioneer
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_5
9323 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9323 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9324 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4fbb001b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9324 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9324 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','auctioneer','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_4 = SELECT({predicate='B1.auction!=B2.bidder'},JOIN(JOIN(operator_1,operator_2),operator_3))
operator_5 = MAP({expressions=['auctioneer','B2.auction']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9324 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9335 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9335 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9336 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9336 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9336 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9337 DEBUG RelationalRestructHelper  - removing operator:Select@1735330400 OwnerIDs: 10(B1.auction) != (B2.bidder) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9338 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9338 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9338 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9339 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9339 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9339 INFO  transform  - Starting transformation of Top@773238925 OwnerIDs: 10... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9339 DEBUG transform  - Before transformation: 
TopAO (773238925) Owner: 10
0 <- 0 MapAO (1536728519) Owner: 10
       0 <- 0 JoinAO (7395550) Owner: 10 Predicate: (B1.auction) != (B2.bidder) initialized = true
              0 <- 0 JoinAO (1112940474) Owner: 10 Predicate: null
                     0 <- 0 AccessAO (1499418021) Owner: 10
                     1 <- 0 AccessAO (1186371052) Owner: 10
              1 <- 0 AccessAO (1082528716) Owner: 10
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9351 DEBUG ruleengine  - Ruleengine needed 11 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9351 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9352 INFO  transform  - Transformation of Top@773238925 OwnerIDs: 10 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9352 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9352 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9353 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9353 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9353 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9353 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','auctioneer','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_4 = SELECT({predicate='B1.auction!=B2.bidder'},JOIN(JOIN(operator_1,operator_2),operator_3))
operator_5 = MAP({expressions=['auctioneer','B2.auction']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9353 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9354 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9354 DEBUG ReloadLog  - Query added to log: SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9354 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9355 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9355 INFO  StandardExecutor  - Starting query (ID: 10)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9356 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9356 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9356 INFO  StandardExecutor  - Query 10 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9357 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 10 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9357 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9358 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9358 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9358 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9359 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9359 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9359 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9360 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9360 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9361 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-38] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9361 INFO  StandardExecutor  - Stopping query (ID: 10).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9361 DEBUG StandardExecutor  - Try to stop query 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9362 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9363 INFO  StandardExecutor  - Query 10 stopped. Execution time 7 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9363 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 10 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9363 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9363 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9364 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9364 INFO  StandardExecutor  - Removing Query 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9364 DEBUG StandardExecutor  - Removing Ownership 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9364 INFO  StandardExecutor  - Query 10 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9364 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','auctioneer','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_4 = SELECT({predicate='B1.auction!=B2.bidder'},JOIN(JOIN(operator_1,operator_2),operator_3))
operator_5 = MAP({expressions=['auctioneer','B2.auction']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9365 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9366 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9366 DEBUG AbstractTestComponent  - Sub test "RenameTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9367 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9367 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 17 of 49: "RenameTest6.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9367 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9367 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9367 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9367 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9368 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9368 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9369 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9369 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9369 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@67fe380b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9369 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9369 DEBUG StandardExecutor  - Adding following query: SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9369 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B1.bidder
alias!
findbyName::B1.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer1, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.bidder
alias!
findbyName::B2.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer2, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer1, auctioneer2, B2.auction]}, order= [auctioneer1, auctioneer2, B2.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auctioneer1, sourcename= null
getAttributename() -> attributename=B2.auction, sourcename= null
parsePredicate() -> auctioneer1==B2.auction
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B2.auction,B2
buildRename() -> auctioneer1,B1
buildRename() -> auctioneer2,B2
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> B2.auction,B2
buildRename() -> auctioneer1,B1
buildRename() -> auctioneer2,B2
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> auctioneer1
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, P.state=P, B1.auction=B1, auctioneer1=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer2
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, P.state=P, B1.auction=B1, auctioneer1=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, P.state=P, B1.auction=B1, auctioneer1=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_4
9385 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9385 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9385 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1d81e101 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9385 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9386 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer1','auctioneer2','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9386 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9392 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9393 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9393 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9394 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9394 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9395 DEBUG RelationalRestructHelper  - removing operator:Select@554634433 OwnerIDs: 11(auctioneer1) = (B2.auction) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9396 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9396 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9396 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9396 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9397 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9397 INFO  transform  - Starting transformation of Top@988179589 OwnerIDs: 11... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9397 DEBUG transform  - Before transformation: 
TopAO (988179589) Owner: 11
0 <- 0 MapAO (378814088) Owner: 11
       0 <- 0 JoinAO (1174714624) Owner: 11 Predicate: (auctioneer1) = (B2.auction) initialized = true
              0 <- 0 TimeWindowAO (121466124) Owner: 11
                     0 <- 0 AccessAO (238467882) Owner: 11
              1 <- 0 TimeWindowAO (962700314) Owner: 11
                     0 <- 0 AccessAO (1515116175) Owner: 11
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9410 DEBUG ruleengine  - Ruleengine needed 12 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9411 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9411 INFO  transform  - Transformation of Top@988179589 OwnerIDs: 11 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9411 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9411 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9412 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9412 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9412 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9412 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer1','auctioneer2','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9412 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9413 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9413 DEBUG ReloadLog  - Query added to log: SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9413 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9414 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9414 INFO  StandardExecutor  - Starting query (ID: 11)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9414 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9415 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9415 INFO  StandardExecutor  - Query 11 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9415 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 11 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9416 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9416 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9416 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9416 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9417 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9417 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9417 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9417 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9417 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9418 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-39] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9418 INFO  StandardExecutor  - Stopping query (ID: 11).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9419 DEBUG StandardExecutor  - Try to stop query 11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9419 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9420 INFO  StandardExecutor  - Query 11 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9420 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 11 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9420 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9420 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9420 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9420 INFO  StandardExecutor  - Removing Query 11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9421 DEBUG StandardExecutor  - Removing Ownership 11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9421 INFO  StandardExecutor  - Query 11 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9421 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer1','auctioneer2','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9421 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9422 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9422 DEBUG AbstractTestComponent  - Sub test "RenameTest6.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9422 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9422 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 18 of 49: "RenameTest7.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9422 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9422 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9422 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9422 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9422 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9423 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9424 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9424 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9424 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4aeaadc1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9424 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9424 DEBUG StandardExecutor  - Adding following query: SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9424 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B1.bidder
alias!
findbyName::B1.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer1, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B1.bidder
alias!
findbyName::B1.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer11, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B1.bidder
alias!
findbyName::B1.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer111, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.bidder
alias!
findbyName::B2.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer2, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B2.bidder
alias!
findbyName::B2.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer22, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer1, auctioneer11, auctioneer111, auctioneer2, auctioneer22, B2.auction]}, order= [auctioneer1, auctioneer11, auctioneer111, auctioneer2, auctioneer22, B2.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auctioneer1, sourcename= null
getAttributename() -> attributename=B2.auction, sourcename= null
parsePredicate() -> auctioneer1==B2.auction
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B2.auction,B2
buildRename() -> auctioneer1,B1
buildRename() -> auctioneer11,B1
buildRename() -> auctioneer111,B1
buildRename() -> auctioneer2,B2
buildRename() -> auctioneer22,B2
registerOperator() -> operator_1
registerOperator() -> operator_2
registerOperator() -> operator_3
buildJoin() --> SimpleSource
buildRename() -> B2.auction,B2
buildRename() -> auctioneer1,B1
buildRename() -> auctioneer11,B1
buildRename() -> auctioneer111,B1
buildRename() -> auctioneer2,B2
buildRename() -> auctioneer22,B2
registerOperator() -> operator_4
registerOperator() -> operator_5
registerOperator() -> operator_6
getProjectionAttribute() -> auctioneer1
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer11
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer111
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer2
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer22
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_7
9441 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9441 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9441 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7daa61f3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9441 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9442 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['bidder','auctioneer11','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = RENAME({aliases=['bidder','auctioneer111','timestamp','bid.timestamp#2','auction','bid.auction#2','datetime','bid.datetime#2','price','bid.price#2'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_5 = RENAME({aliases=['bidder','auctioneer22','timestamp','bid.timestamp#3','auction','bid.auction#3','datetime','bid.datetime#3','price','bid.price#3'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_6 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(JOIN(operator_1,JOIN(operator_2,operator_3)),JOIN(operator_4,operator_5)))
operator_7 = MAP({expressions=['auctioneer1','auctioneer11','auctioneer111','auctioneer2','auctioneer22','B2.auction']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9442 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9455 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9456 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9456 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9457 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9457 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9458 DEBUG RelationalRestructHelper  - removing operator:Select@687892306 OwnerIDs: 12(auctioneer1) = (B2.auction) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9459 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9461 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9461 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9461 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9462 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9464 INFO  transform  - Starting transformation of Top@701724503 OwnerIDs: 12... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9465 DEBUG transform  - Before transformation: 
TopAO (701724503) Owner: 12
0 <- 0 MapAO (83674409) Owner: 12
       0 <- 0 JoinAO (634156144) Owner: 12 Predicate: (auctioneer1) = (B2.auction) initialized = true
              0 <- 0 JoinAO (1273879638) Owner: 12 Predicate: null
                     0 <- 0 TimeWindowAO (2041996211) Owner: 12
                            0 <- 0 AccessAO (461448225) Owner: 12
                     1 <- 0 JoinAO (1562950869) Owner: 12 Predicate: null
                            0 <- 0 TimeWindowAO (2021835850) Owner: 12
                                   0 <- 0 AccessAO (845388562) Owner: 12
                            1 <- 0 TimeWindowAO (550572371) Owner: 12
                                   0 <- 0 AccessAO (948424584) Owner: 12
              1 <- 0 JoinAO (1447685190) Owner: 12 Predicate: null
                     0 <- 0 TimeWindowAO (2027701910) Owner: 12
                            0 <- 0 AccessAO (1345293143) Owner: 12
                     1 <- 0 TimeWindowAO (1448277333) Owner: 12
                            0 <- 0 AccessAO (1340086277) Owner: 12
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9496 DEBUG ruleengine  - Ruleengine needed 29 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9496 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9496 INFO  transform  - Transformation of Top@701724503 OwnerIDs: 12 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9497 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9499 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9499 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9500 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9500 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9500 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['bidder','auctioneer11','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = RENAME({aliases=['bidder','auctioneer111','timestamp','bid.timestamp#2','auction','bid.auction#2','datetime','bid.datetime#2','price','bid.price#2'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_5 = RENAME({aliases=['bidder','auctioneer22','timestamp','bid.timestamp#3','auction','bid.auction#3','datetime','bid.datetime#3','price','bid.price#3'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_6 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(JOIN(operator_1,JOIN(operator_2,operator_3)),JOIN(operator_4,operator_5)))
operator_7 = MAP({expressions=['auctioneer1','auctioneer11','auctioneer111','auctioneer2','auctioneer22','B2.auction']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9501 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9501 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9501 DEBUG ReloadLog  - Query added to log: SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9502 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9503 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9503 INFO  StandardExecutor  - Starting query (ID: 12)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9504 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9504 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9506 INFO  StandardExecutor  - Query 12 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9506 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 12 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9506 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9506 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9507 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9507 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9508 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9508 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9508 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9508 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9508 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9509 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-40] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9509 INFO  StandardExecutor  - Stopping query (ID: 12).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9510 DEBUG StandardExecutor  - Try to stop query 12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9510 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9511 INFO  StandardExecutor  - Query 12 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9511 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 12 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9511 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9511 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9511 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9511 INFO  StandardExecutor  - Removing Query 12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9512 DEBUG StandardExecutor  - Removing Ownership 12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9512 INFO  StandardExecutor  - Query 12 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9512 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['bidder','auctioneer11','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = RENAME({aliases=['bidder','auctioneer111','timestamp','bid.timestamp#2','auction','bid.auction#2','datetime','bid.datetime#2','price','bid.price#2'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_5 = RENAME({aliases=['bidder','auctioneer22','timestamp','bid.timestamp#3','auction','bid.auction#3','datetime','bid.datetime#3','price','bid.price#3'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_6 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(JOIN(operator_1,JOIN(operator_2,operator_3)),JOIN(operator_4,operator_5)))
operator_7 = MAP({expressions=['auctioneer1','auctioneer11','auctioneer111','auctioneer2','auctioneer22','B2.auction']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9512 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9513 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9513 DEBUG AbstractTestComponent  - Sub test "RenameTest7.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9513 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9513 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 19 of 49: "SelectAggregationTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9513 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9513 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9513 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9514 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9514 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9514 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9514 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9515 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9515 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@412c995d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9516 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9516 DEBUG StandardExecutor  - Adding following query: SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9516 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [auctionCount]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@51e37590 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@deb3b60 (operators: null)
getAttributename() -> attributename=auction, sourcename= null
9590 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
9590 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
getAttributename() -> attributename=auction, sourcename= null
getDataTypeFrom() -> attribute= bid.auction, attributename= bid.auction
getAttributename() -> attributename=auction, sourcename= null
registerOperator() -> operator_1
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_1
[auctionCount]
[auctionCount]
getProjectionAttribute() -> auctionCount
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_2
9594 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9594 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9594 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@39aa45a1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9594 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9594 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({AGGREGATIONS=[['COUNT','bid.auction','auctionCount','Integer']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['auctionCount']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9595 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9597 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9597 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9598 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9598 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9598 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9599 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9599 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9599 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9599 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9599 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9600 INFO  transform  - Starting transformation of Top@1243495105 OwnerIDs: 13... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9600 DEBUG transform  - Before transformation: 
TopAO (1243495105) Owner: 13
0 <- 0 MapAO (1853422837) Owner: 13
       0 <- 0 AggregateAO (91220956) Owner: 13
              0 <- 0 AccessAO (999221400) Owner: 13
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9617 DEBUG ruleengine  - Ruleengine needed 15 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9617 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9617 INFO  transform  - Transformation of Top@1243495105 OwnerIDs: 13 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9617 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9618 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9618 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9618 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9618 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9618 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({AGGREGATIONS=[['COUNT','bid.auction','auctionCount','Integer']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['auctionCount']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9618 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9619 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9619 DEBUG ReloadLog  - Query added to log: SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9619 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9620 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9620 INFO  StandardExecutor  - Starting query (ID: 13)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9620 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9621 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9622 INFO  StandardExecutor  - Query 13 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9622 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 13 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9622 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9622 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9623 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9623 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9623 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9623 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9624 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9624 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9624 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9625 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-41] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9625 INFO  StandardExecutor  - Stopping query (ID: 13).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9625 DEBUG StandardExecutor  - Try to stop query 13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9625 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9626 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
9626 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
9626 INFO  StandardExecutor  - Query 13 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9626 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 13 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9626 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9627 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9627 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9627 INFO  StandardExecutor  - Removing Query 13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9627 DEBUG StandardExecutor  - Removing Ownership 13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9627 INFO  StandardExecutor  - Query 13 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9627 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({AGGREGATIONS=[['COUNT','bid.auction','auctionCount','Integer']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['auctionCount']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9627 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9628 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9628 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9628 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9628 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 20 of 49: "SelectAggregationTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9628 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9628 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9628 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9628 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9629 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9629 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9629 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9630 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9630 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@89c65d5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9630 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9630 DEBUG StandardExecutor  - Adding following query: SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9631 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auctioneer, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer, auction]}, order= [auctioneer, Counter]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@988246e (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@62515a47 (operators: null)
getAttributename() -> attributename=auction, sourcename= null
9637 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
9637 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
buildRename() -> auctioneer,bid
registerOperator() -> operator_1
getAttributename() -> attributename=auction, sourcename= null
getDataTypeFrom() -> attribute= bid.auction, attributename= bid.auction
registerOperator() -> operator_2
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_2
[auctioneer, Counter]
[Counter]
buildJoin() --> SimpleSource
buildRename() -> auctioneer,bid
registerOperator() -> operator_3
groupByyy
getProjectionAttribute() -> auctioneer
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> Counter
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_4
9639 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9640 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9640 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3c5a54b7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9640 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9641 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({AGGREGATIONS=[['COUNT','bid.auction','Counter','Integer']]},operator_1)
operator_3 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['auctioneer','Counter']},JOIN(operator_2,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9641 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9645 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9646 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9646 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9646 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9647 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9648 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9648 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9648 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9648 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9649 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9649 INFO  transform  - Starting transformation of Top@1091736037 OwnerIDs: 14... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9649 DEBUG transform  - Before transformation: 
TopAO (1091736037) Owner: 14
0 <- 0 MapAO (1848163207) Owner: 14
       0 <- 0 JoinAO (435175610) Owner: 14 Predicate: null
              0 <- 0 AggregateAO (1923810797) Owner: 14
                     0 <- 0 TimeWindowAO (669200356) Owner: 14
                            0 <- 0 AccessAO (205278236) Owner: 14
              1 <- 0 TimeWindowAO (399653041) Owner: 14
                     0 <- 0 AccessAO (1031586763) Owner: 14
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9656 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9656 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9657 INFO  transform  - Transformation of Top@1091736037 OwnerIDs: 14 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9657 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9658 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9658 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9658 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9658 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9659 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({AGGREGATIONS=[['COUNT','bid.auction','Counter','Integer']]},operator_1)
operator_3 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['auctioneer','Counter']},JOIN(operator_2,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9659 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9659 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9659 DEBUG ReloadLog  - Query added to log: SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9660 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9660 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9660 INFO  StandardExecutor  - Starting query (ID: 14)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9661 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9661 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9661 INFO  StandardExecutor  - Query 14 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9662 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 14 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9662 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9662 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9662 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9663 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9663 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9663 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9663 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9663 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9664 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9664 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-42] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9664 INFO  StandardExecutor  - Stopping query (ID: 14).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9664 DEBUG StandardExecutor  - Try to stop query 14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9665 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9665 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
9666 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
9666 INFO  StandardExecutor  - Query 14 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9666 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 14 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9666 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9666 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9666 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9666 INFO  StandardExecutor  - Removing Query 14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9667 DEBUG StandardExecutor  - Removing Ownership 14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9667 INFO  StandardExecutor  - Query 14 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9667 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({AGGREGATIONS=[['COUNT','bid.auction','Counter','Integer']]},operator_1)
operator_3 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['auctioneer','Counter']},JOIN(operator_2,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9667 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9668 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9668 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9668 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9668 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 21 of 49: "SelectAggregationTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9668 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS Counter, city 
FROM bid , person
WHERE city != 'New York' 
HAVING Counter > 1000;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9668 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9668 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9668 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9668 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS Counter, city 
FROM bid , person
WHERE city != 'New York' 
HAVING Counter > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9669 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9669 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9669 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9670 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6eafb10e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9670 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9670 DEBUG StandardExecutor  - Adding following query: SELECT COUNT(auction) AS Counter, city
FROM bid , person
WHERE city != 'New York'
HAVING Counter > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9670 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= city, realSourcename= person, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction], person=[city]}, order= [Counter, person.city]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@2873d672 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3bc735b3 (operators: null)
getAttributename() -> attributename=auction, sourcename= null
9676 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
9676 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getAttributename() -> attributename=auction, sourcename= null
getDataTypeFrom() -> attribute= bid.auction, attributename= bid.auction
registerOperator() -> operator_1
parsePredicate(List<Expressions>)
getAttributename() -> attributename=Counter, sourcename= null
parsePredicate()x -> Counter>1000&&
getAttributename() -> attributename=city, sourcename= null
parsePredicate() -> Counter>1000&&person.city!="New York"
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_1
[Counter, person.city]
[Counter]
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
groupByyy
registerOperator() -> operator_2
getProjectionAttribute() -> Counter
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> person.city
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_3
9679 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9679 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9679 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@577f9109 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9679 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9679 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({AGGREGATIONS=[['COUNT','bid.auction','Counter','Integer']]},JOIN(bid,person))
operator_2 = SELECT({predicate='Counter>1000&&person.city!="NewYork"'},JOIN(operator_1,JOIN(bid,person)))
operator_3 = MAP({expressions=['Counter','person.city']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9680 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9686 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9686 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9686 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9688 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9688 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9696 DEBUG RelationalRestructHelper  - removing operator:Select@51376124 OwnerIDs: 15(person.city) != ("NewYork") initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9697 DEBUG RelationalRestructHelper  - removing operator:Select@1418851979 OwnerIDs: 15(Counter) > (1000) initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9698 DEBUG RelationalRestructHelper  - removing operator:Select@2083154356 OwnerIDs: (person.city) != ("NewYork") initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9699 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9699 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9699 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9699 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9700 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9700 INFO  transform  - Starting transformation of Top@931911789 OwnerIDs: 15... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9700 DEBUG transform  - Before transformation: 
TopAO (931911789) Owner: 15
0 <- 0 MapAO (562685863) Owner: 15
       0 <- 0 JoinAO (1773336805) Owner: 15 Predicate: null
              0 <- 0 SelectAO (1664165134) Owner: 
                     0 <- 0 AggregateAO (168870325) Owner: 15
                            0 <- 0 JoinAO (1682619279) Owner: 15 Predicate: null
                                   0 <- 0 AccessAO (440472115) Owner: 15
                                   1 <- 0 AccessAO (1882348832) Owner: 15
              1 <- 0 JoinAO (2082678778) Owner: 15 Predicate: null
                     0 <- 0 AccessAO (1300528434) Owner: 15
                     1 <- 0 SelectAO (1598434875) Owner: 
                            0 <- 0 AccessAO (1031775150) Owner: 15
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9713 DEBUG ruleengine  - Ruleengine needed 12 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9713 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9713 INFO  transform  - Transformation of Top@931911789 OwnerIDs: 15 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9714 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9715 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9715 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9715 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9715 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9715 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({AGGREGATIONS=[['COUNT','bid.auction','Counter','Integer']]},JOIN(bid,person))
operator_2 = SELECT({predicate='Counter>1000&&person.city!="NewYork"'},JOIN(operator_1,JOIN(bid,person)))
operator_3 = MAP({expressions=['Counter','person.city']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9715 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9716 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9716 DEBUG ReloadLog  - Query added to log: SELECT COUNT(auction) AS Counter, city
FROM bid , person
WHERE city != 'New York'
HAVING Counter > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9716 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9718 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9718 INFO  StandardExecutor  - Starting query (ID: 15)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9718 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9718 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9719 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9719 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9720 INFO  StandardExecutor  - Query 15 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9721 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 15 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9721 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9721 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9721 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS Counter, city 
FROM bid , person
WHERE city != 'New York' 
HAVING Counter > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9721 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9722 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9722 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9722 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9722 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9723 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9723 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-43] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9723 INFO  StandardExecutor  - Stopping query (ID: 15).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9724 DEBUG StandardExecutor  - Try to stop query 15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9724 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
9724 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
9724 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9725 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9725 INFO  StandardExecutor  - Query 15 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9725 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 15 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9725 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9726 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9726 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9726 INFO  StandardExecutor  - Removing Query 15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9726 DEBUG StandardExecutor  - Removing Ownership 15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9726 INFO  StandardExecutor  - Query 15 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9726 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({AGGREGATIONS=[['COUNT','bid.auction','Counter','Integer']]},JOIN(bid,person))
operator_2 = SELECT({predicate='Counter>1000&&person.city!="NewYork"'},JOIN(operator_1,JOIN(bid,person)))
operator_3 = MAP({expressions=['Counter','person.city']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9726 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9727 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9727 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9727 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9727 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 22 of 49: "SelectAggregationTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9727 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT COUNT(*) AS count FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9728 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9728 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9728 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9728 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT COUNT(*) AS count FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9728 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9729 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9729 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9729 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2b87581 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9729 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9729 DEBUG StandardExecutor  - Adding following query: SELECT COUNT(*) AS count FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9729 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
getSelectedAttributes() -> map= {}, order= [count]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@75f2099 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.StarExpressionImpl@1c12f3ee (operators: null)
buildJoin() --> SimpleSource
registerOperator() -> operator_1
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_1
[count]
[count]
getProjectionAttribute() -> count
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_2
9736 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9736 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9737 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6d467c87 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9737 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9737 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({AGGREGATIONS=[['COUNT','*','count']]},bid)
operator_2 = MAP({expressions=['count']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9737 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9741 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9741 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9742 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9742 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9742 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9742 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9743 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9743 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9743 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9743 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9743 INFO  transform  - Starting transformation of Top@291847739 OwnerIDs: 16... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9743 DEBUG transform  - Before transformation: 
TopAO (291847739) Owner: 16
0 <- 0 MapAO (118881143) Owner: 16
       0 <- 0 AggregateAO (463215441) Owner: 16
              0 <- 0 AccessAO (777190206) Owner: 16
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9747 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9747 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9748 INFO  transform  - Transformation of Top@291847739 OwnerIDs: 16 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9748 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9748 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9748 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9749 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9749 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9749 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({AGGREGATIONS=[['COUNT','*','count']]},bid)
operator_2 = MAP({expressions=['count']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9749 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9750 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9750 DEBUG ReloadLog  - Query added to log: SELECT COUNT(*) AS count FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9750 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9751 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9751 INFO  StandardExecutor  - Starting query (ID: 16)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9751 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9751 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9752 INFO  StandardExecutor  - Query 16 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9752 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 16 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9753 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9753 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9753 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT COUNT(*) AS count FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9753 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9754 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9754 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9754 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9754 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9754 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9755 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-44] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9755 INFO  StandardExecutor  - Stopping query (ID: 16).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9755 DEBUG StandardExecutor  - Try to stop query 16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9755 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9756 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
9756 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
9756 INFO  StandardExecutor  - Query 16 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9756 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 16 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9756 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9757 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9757 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9757 INFO  StandardExecutor  - Removing Query 16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9757 DEBUG StandardExecutor  - Removing Ownership 16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9757 INFO  StandardExecutor  - Query 16 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9757 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({AGGREGATIONS=[['COUNT','*','count']]},bid)
operator_2 = MAP({expressions=['count']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9758 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9758 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9759 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9759 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9759 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 23 of 49: "SelectAggregationTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9759 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT auction, AVG(auction) AS auctionAVG 
FROM bid 
GROUP BY auction
HAVING auctionAVG > 150
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9759 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9759 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9759 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9759 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT auction, AVG(auction) AS auctionAVG 
FROM bid 
GROUP BY auction
HAVING auctionAVG > 150
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9760 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9760 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9760 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9761 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@588ffeb - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9761 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9761 DEBUG StandardExecutor  - Adding following query: SELECT auction, AVG(auction) AS auctionAVG
FROM bid
GROUP BY auction
HAVING auctionAVG > 150 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9761 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [bid.auction, auctionAVG]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@67ec8477 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@25d958c6 (operators: null)
getAttributename() -> attributename=auction, sourcename= null
9765 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
9766 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
9766 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
getAttributename() -> attributename=auction, sourcename= null
getDataTypeFrom() -> attribute= bid.auction, attributename= bid.auction
getAttributename() -> attributename=auction, sourcename= null
registerOperator() -> operator_1
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auctionAVG, sourcename= null
parsePredicate() -> auctionAVG>150
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_1
[bid.auction, auctionAVG]
[auctionAVG]
buildJoin() --> SimpleSource
groupByyy
registerOperator() -> operator_2
getProjectionAttribute() -> bid.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctionAVG
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_3
9768 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9769 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9769 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4482469c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9769 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9769 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.auction','auctionAVG','Integer']],GROUP_BY=['bid.auction']},bid)
operator_2 = SELECT({predicate='auctionAVG>150'},JOIN(RENAME({aliases=['auction','auction_groupAttribute#0'],pairs='true'},operator_1),bid))
operator_3 = MAP({expressions=['bid.auction','auctionAVG']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9769 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9774 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9774 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9774 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9775 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9775 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9775 DEBUG RelationalRestructHelper  - removing operator:Select@858727880 OwnerIDs: 17(auctionAVG) > (150) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9777 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9777 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9777 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9778 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9778 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9778 INFO  transform  - Starting transformation of Top@184244257 OwnerIDs: 17... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9778 DEBUG transform  - Before transformation: 
TopAO (184244257) Owner: 17
0 <- 0 MapAO (1275011461) Owner: 17
       0 <- 0 JoinAO (1545666472) Owner: 17 Predicate: null
              0 <- 0 SelectAO (2146303527) Owner: 
                     0 <- 0 AggregateAO (797416363) Owner: 17
                            0 <- 0 AccessAO (491152599) Owner: 17
              1 <- 0 AccessAO (1186989416) Owner: 17
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9786 DEBUG ruleengine  - Ruleengine needed 7 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9786 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9787 INFO  transform  - Transformation of Top@184244257 OwnerIDs: 17 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9787 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9788 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9788 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9788 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9788 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9788 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.auction','auctionAVG','Integer']],GROUP_BY=['bid.auction']},bid)
operator_2 = SELECT({predicate='auctionAVG>150'},JOIN(RENAME({aliases=['auction','auction_groupAttribute#0'],pairs='true'},operator_1),bid))
operator_3 = MAP({expressions=['bid.auction','auctionAVG']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9788 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9789 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9789 DEBUG ReloadLog  - Query added to log: SELECT auction, AVG(auction) AS auctionAVG
FROM bid
GROUP BY auction
HAVING auctionAVG > 150 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9789 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9790 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9790 INFO  StandardExecutor  - Starting query (ID: 17)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9790 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9790 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9792 INFO  StandardExecutor  - Query 17 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9792 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 17 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9792 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9792 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9792 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT auction, AVG(auction) AS auctionAVG 
FROM bid 
GROUP BY auction
HAVING auctionAVG > 150
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9792 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9793 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9793 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9793 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9793 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9793 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9794 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-45] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9794 INFO  StandardExecutor  - Stopping query (ID: 17).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9794 DEBUG StandardExecutor  - Try to stop query 17 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9794 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
9794 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
9794 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9795 INFO  StandardExecutor  - Query 17 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9795 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 17 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9795 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9795 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9796 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9796 INFO  StandardExecutor  - Removing Query 17 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9796 DEBUG StandardExecutor  - Removing Ownership 17 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9796 INFO  StandardExecutor  - Query 17 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9796 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.auction','auctionAVG','Integer']],GROUP_BY=['bid.auction']},bid)
operator_2 = SELECT({predicate='auctionAVG>150'},JOIN(RENAME({aliases=['auction','auction_groupAttribute#0'],pairs='true'},operator_1),bid))
operator_3 = MAP({expressions=['bid.auction','auctionAVG']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9796 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9797 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9797 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9797 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9797 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 24 of 49: "SelectAllTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9797 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9797 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9797 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9798 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9798 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9798 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9798 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9799 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9799 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2abc224d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9799 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9799 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9799 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.bidder
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.datetime
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.price
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_1
9804 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9804 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9804 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2b97cc1f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9804 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9804 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9806 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9812 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9812 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9812 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9813 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9813 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9814 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9814 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9814 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9814 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9815 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9815 INFO  transform  - Starting transformation of Top@700348233 OwnerIDs: 18... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9815 DEBUG transform  - Before transformation: 
TopAO (700348233) Owner: 18
0 <- 0 MapAO (1602530280) Owner: 18
       0 <- 0 AccessAO (1179689991) Owner: 18
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9820 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9820 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9820 INFO  transform  - Transformation of Top@700348233 OwnerIDs: 18 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9821 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9821 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9821 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9821 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9821 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9822 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9822 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9822 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9823 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9823 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9823 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9824 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9824 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9824 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9825 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9825 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9825 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9825 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9825 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-46] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9825 INFO  StandardExecutor  - Removing Query 18 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9825 DEBUG StandardExecutor  - Removing Ownership 18 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9825 INFO  StandardExecutor  - Query 18 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9826 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9826 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9826 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9826 DEBUG AbstractTestComponent  - Sub test "SelectAllTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9826 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9827 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 25 of 49: "SelectAllTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9827 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT * FROM bid, person, auction;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9827 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9827 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9827 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9827 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT * FROM bid, person, auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9828 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9828 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9828 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9829 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@63e5e5b4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9829 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9829 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid, person, auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9829 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
registerOperator() -> operator_1
9832 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9833 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9833 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1280851e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9833 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9833 DEBUG StandardExecutor  - Adding following query: operator_1 = JOIN(bid,JOIN(person,auction))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9833 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9834 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9834 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9835 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9835 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9835 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9836 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9836 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9836 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9836 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9837 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9837 INFO  transform  - Starting transformation of Top@1003307628 OwnerIDs: 19... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9837 DEBUG transform  - Before transformation: 
TopAO (1003307628) Owner: 19
0 <- 0 JoinAO (1595188851) Owner: 19 Predicate: null
       0 <- 0 AccessAO (1919555524) Owner: 19
       1 <- 0 JoinAO (1573125303) Owner: 19 Predicate: null
              0 <- 0 AccessAO (206310209) Owner: 19
              1 <- 0 AccessAO (1989219205) Owner: 19
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9843 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9843 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9843 INFO  transform  - Transformation of Top@1003307628 OwnerIDs: 19 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9844 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9844 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9844 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9844 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9844 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9845 DEBUG ReloadLog  - Query added to log: operator_1 = JOIN(bid,JOIN(person,auction))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9845 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9845 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9845 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid, person, auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9846 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9846 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9846 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT * FROM bid, person, auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9847 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9847 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9847 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9847 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9847 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9847 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9848 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-47] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9848 INFO  StandardExecutor  - Removing Query 19 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9848 DEBUG StandardExecutor  - Removing Ownership 19 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9848 INFO  StandardExecutor  - Query 19 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9848 DEBUG ReloadLog  - Removing query from log: operator_1 = JOIN(bid,JOIN(person,auction))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9848 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9849 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9849 DEBUG AbstractTestComponent  - Sub test "SelectAllTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9849 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9849 DEBUG AbstractTestComponent  - Mon May 15 19:19:34 CEST 2017Running sub test 26 of 49: "SelectAllTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9850 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann';
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9850 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9850 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9850 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9850 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann';
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9850 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9850 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9851 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9851 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5d235104 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9851 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9851 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann'; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9851 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=P.name, sourcename= null
parsePredicate() -> bid.auction>2&&P.name=="Max Mustermann"
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
buildRename() -> P.timestamp,P
buildRename() -> P.id,P
buildRename() -> P.name,P
buildRename() -> P.email,P
buildRename() -> P.creditcard,P
buildRename() -> P.city,P
buildRename() -> P.state,P
registerOperator() -> operator_1
buildJoin() --> SimpleSource
registerOperator() -> operator_2
9856 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9857 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9857 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3af356f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9857 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9857 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = SELECT({predicate='bid.auction>2&&P.name=="MaxMustermann"'},JOIN(bid,JOIN(operator_1,category)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9857 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9863 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9863 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9863 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9864 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9864 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9867 DEBUG RelationalRestructHelper  - removing operator:Select@159562640 OwnerIDs: 20(bid.auction) > (2) initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9867 DEBUG RelationalRestructHelper  - removing operator:Select@1081633119 OwnerIDs: 20(P.name) = ("MaxMustermann") initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9868 DEBUG RelationalRestructHelper  - removing operator:Select@1476061571 OwnerIDs: (P.name) = ("MaxMustermann") initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9869 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9869 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9869 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9869 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9869 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9870 INFO  transform  - Starting transformation of Top@1651689839 OwnerIDs: 20... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9870 DEBUG transform  - Before transformation: 
TopAO (1651689839) Owner: 20
0 <- 0 JoinAO (1843594609) Owner: 20 Predicate: null
       0 <- 0 SelectAO (1591954203) Owner: 
              0 <- 0 AccessAO (1015659282) Owner: 20
       1 <- 0 JoinAO (1220813917) Owner: 20 Predicate: null
              0 <- 0 SelectAO (1039759545) Owner: 
                     0 <- 0 AccessAO (2030458766) Owner: 20
              1 <- 0 AccessAO (145105559) Owner: 20
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9880 DEBUG ruleengine  - Ruleengine needed 9 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9880 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9881 INFO  transform  - Transformation of Top@1651689839 OwnerIDs: 20 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9881 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9881 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9881 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9882 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9882 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9882 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = SELECT({predicate='bid.auction>2&&P.name=="MaxMustermann"'},JOIN(bid,JOIN(operator_1,category)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9882 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9883 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9883 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann'; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9883 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9884 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9884 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann';
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9884 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9885 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9885 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9885 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9885 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9885 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9886 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-48] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9886 INFO  StandardExecutor  - Removing Query 20 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9886 DEBUG StandardExecutor  - Removing Ownership 20 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9886 INFO  StandardExecutor  - Query 20 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9886 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = SELECT({predicate='bid.auction>2&&P.name=="MaxMustermann"'},JOIN(bid,JOIN(operator_1,category)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9886 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9887 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9887 DEBUG AbstractTestComponent  - Sub test "SelectAllTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9887 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9887 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 27 of 49: "SelectAllTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9887 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT bid.* FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9887 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9888 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9888 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9888 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT bid.* FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9888 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9888 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9889 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9889 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@878537d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9889 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9889 DEBUG StandardExecutor  - Adding following query: SELECT bid.* FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9889 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
findbyName::bid.*
registerAttributeAliases() -> attribute= null.timestamp, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= null.auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= null.bidder, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= null.datetime, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= null.price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[timestamp, auction, bidder, datetime, price]}, order= [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.bidder
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.datetime
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.price
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_1
9893 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9893 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9893 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4d0b0fd4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9893 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9893 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9894 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9896 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9897 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9897 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9897 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9897 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9898 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9898 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9898 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9898 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9898 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9898 INFO  transform  - Starting transformation of Top@2078154554 OwnerIDs: 21... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9898 DEBUG transform  - Before transformation: 
TopAO (2078154554) Owner: 21
0 <- 0 MapAO (361903111) Owner: 21
       0 <- 0 AccessAO (1742448147) Owner: 21
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9903 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9904 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9904 INFO  transform  - Transformation of Top@2078154554 OwnerIDs: 21 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9904 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9906 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9906 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9906 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9906 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9906 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9906 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9907 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9908 DEBUG ReloadLog  - Query added to log: SELECT bid.* FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9908 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9909 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9909 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT bid.* FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9909 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9910 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9910 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9910 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9910 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9910 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9910 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-49] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9911 INFO  StandardExecutor  - Removing Query 21 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9911 DEBUG StandardExecutor  - Removing Ownership 21 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9911 INFO  StandardExecutor  - Query 21 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9911 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9911 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9912 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9912 DEBUG AbstractTestComponent  - Sub test "SelectAllTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9912 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9912 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 28 of 49: "SelectAllTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9912 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT B.* FROM bid as B
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9912 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9912 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9912 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9912 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT B.* FROM bid as B
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9912 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9913 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9913 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9913 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4d23015c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9913 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9913 DEBUG StandardExecutor  - Adding following query: SELECT B.* FROM bid as B - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9914 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
findbyName::B.*
alias!
registerAttributeAliases() -> attribute= B.timestamp, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.datetime, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[timestamp, auction, bidder, datetime, price]}, order= [B.timestamp, B.auction, B.bidder, B.datetime, B.price]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.timestamp,B
buildRename() -> B.auction,B
buildRename() -> B.bidder,B
buildRename() -> B.datetime,B
buildRename() -> B.price,B
registerOperator() -> operator_1
getProjectionAttribute() -> B.timestamp
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> B.auction
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> B.bidder
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> B.datetime
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> B.price
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_2
9921 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9921 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9922 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@73a00e09 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9922 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9922 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['B.timestamp','B.auction','B.bidder','B.datetime','B.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9922 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9928 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9928 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9929 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9929 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9929 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9931 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9931 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9931 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9931 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9931 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9932 INFO  transform  - Starting transformation of Top@584157293 OwnerIDs: 22... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9932 DEBUG transform  - Before transformation: 
TopAO (584157293) Owner: 22
0 <- 0 MapAO (2113273959) Owner: 22
       0 <- 0 AccessAO (482032955) Owner: 22
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9937 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9937 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9937 INFO  transform  - Transformation of Top@584157293 OwnerIDs: 22 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9938 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9938 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9938 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9938 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9938 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9939 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['B.timestamp','B.auction','B.bidder','B.datetime','B.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9939 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9939 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9940 DEBUG ReloadLog  - Query added to log: SELECT B.* FROM bid as B - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9940 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9940 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9941 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT B.* FROM bid as B
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9941 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9942 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9942 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9942 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9942 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9942 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9943 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-50] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9943 INFO  StandardExecutor  - Removing Query 22 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9943 DEBUG StandardExecutor  - Removing Ownership 22 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9943 INFO  StandardExecutor  - Query 22 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9943 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['B.timestamp','B.auction','B.bidder','B.datetime','B.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9943 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9944 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9944 DEBUG AbstractTestComponent  - Sub test "SelectAllTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9944 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9944 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 29 of 49: "SelectAllTest6.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9944 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9945 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9945 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9945 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9945 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9945 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9946 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9947 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9947 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@f2e4acf - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9947 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9947 DEBUG StandardExecutor  - Adding following query: SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9947 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
findbyName::B.*
alias!
findbyName::B.*
registerAttributeAliases() -> attribute= B.timestamp, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.datetime, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::P.*
findbyName::P.*
alias!
registerAttributeAliases() -> attribute= P.timestamp, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.name, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.email, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.creditcard, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.city, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.state, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[timestamp, auction, bidder, datetime, price], person=[timestamp, id, name, email, creditcard, city, state]}, order= [P.timestamp, P.id, P.name, P.email, P.creditcard, P.city, P.state]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B.auction, sourcename= null
getAttributename() -> attributename=P.id, sourcename= null
parsePredicate() -> B.auction>1000&&P.id==108
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.timestamp,B
buildRename() -> B.auction,B
buildRename() -> B.bidder,B
buildRename() -> B.datetime,B
buildRename() -> B.price,B
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> P.timestamp,P
buildRename() -> P.id,P
buildRename() -> P.name,P
buildRename() -> P.email,P
buildRename() -> P.creditcard,P
buildRename() -> P.city,P
buildRename() -> P.state,P
registerOperator() -> operator_2
registerOperator() -> operator_3
9962 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9962 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9962 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4a7761b1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9962 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9962 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction>1000&&P.id==108'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9962 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9967 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9967 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9968 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9968 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9968 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9974 DEBUG RelationalRestructHelper  - removing operator:Select@613281005 OwnerIDs: 23(P.id) = (108) initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9974 DEBUG RelationalRestructHelper  - removing operator:Select@939391749 OwnerIDs: 23(B.auction) > (1000) initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9975 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9975 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9976 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9976 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9976 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9976 INFO  transform  - Starting transformation of Top@1103234208 OwnerIDs: 23... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9977 DEBUG transform  - Before transformation: 
TopAO (1103234208) Owner: 23
0 <- 0 JoinAO (1679002380) Owner: 23 Predicate: null
       0 <- 0 SelectAO (1239132915) Owner: 
              0 <- 0 AccessAO (584698209) Owner: 23
       1 <- 0 SelectAO (1936670366) Owner: 
              0 <- 0 AccessAO (199000084) Owner: 23
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9987 DEBUG ruleengine  - Ruleengine needed 10 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9987 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9987 INFO  transform  - Transformation of Top@1103234208 OwnerIDs: 23 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9987 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9988 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9988 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9988 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9988 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9988 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction>1000&&P.id==108'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9989 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9990 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9990 DEBUG ReloadLog  - Query added to log: SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9990 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9991 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9991 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9992 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9992 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9992 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9992 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9993 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9993 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9993 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-51] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9993 INFO  StandardExecutor  - Removing Query 23 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9993 DEBUG StandardExecutor  - Removing Ownership 23 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9993 INFO  StandardExecutor  - Query 23 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9994 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction>1000&&P.id==108'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9994 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9994 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9995 DEBUG AbstractTestComponent  - Sub test "SelectAllTest6.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9995 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9995 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 30 of 49: "SelectExpressionTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9995 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT DolToEur(price) FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9995 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9995 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9995 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9995 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price) FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9996 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9996 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9997 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9997 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@45792847 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9997 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9997 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price) FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9997 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
getSelectedAttributes() -> map= {bid=[price]}, order= [expression_0]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@6b68cb27 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@675ffd1d (operators: null)
getAttributename() -> attributename=price, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@6b68cb27 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@675ffd1d (operators: null)
getAttributename() -> attributename=price, sourcename= null
buildSelectInput() --> mapOperator= MAP({expressions=[['DolToEur(bid.price)','expression_0']]},), aggregateOperator= null
buildJoin() --> SimpleSource
registerOperator() -> operator_1
10004 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10005 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10005 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@56303475 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10005 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10005 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price)','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10005 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10008 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10008 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10008 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10008 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10008 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10009 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10009 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10009 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10010 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10010 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10010 INFO  transform  - Starting transformation of Top@209845522 OwnerIDs: 24... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10010 DEBUG transform  - Before transformation: 
TopAO (209845522) Owner: 24
0 <- 0 MapAO (1659282412) Owner: 24
       0 <- 0 AccessAO (1465179762) Owner: 24
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10013 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10013 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10013 INFO  transform  - Transformation of Top@209845522 OwnerIDs: 24 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10013 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10014 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10015 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10015 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10015 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10015 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10015 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10016 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10016 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price) FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10016 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10017 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10017 INFO  StandardExecutor  - Starting query (ID: 24)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10018 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10018 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10019 INFO  StandardExecutor  - Query 24 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10019 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 24 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10020 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10020 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10020 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price) FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10020 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10021 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10021 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10021 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10021 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10021 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10021 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-52] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10021 INFO  StandardExecutor  - Stopping query (ID: 24).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10022 DEBUG StandardExecutor  - Try to stop query 24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10022 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10022 INFO  StandardExecutor  - Query 24 stopped. Execution time 3 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10022 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 24 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10022 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10022 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10023 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10023 INFO  StandardExecutor  - Removing Query 24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10023 DEBUG StandardExecutor  - Removing Ownership 24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10023 INFO  StandardExecutor  - Query 24 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10023 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10023 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10024 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10024 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10024 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10024 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 31 of 49: "SelectExpressionTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10024 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT price + price AS priceTwice FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10024 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10024 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10024 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10024 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT price + price AS priceTwice FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10025 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10025 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10025 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10026 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@51827393 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10026 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10026 DEBUG StandardExecutor  - Adding following query: SELECT price + price AS priceTwice FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10026 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price]}, order= [priceTwice]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@58399d82 (operators: [+])
getAttributename() -> attributename=price, sourcename= null
getAttributename() -> attributename=price, sourcename= null
buildSelectInput() --> mapOperator= MAP({expressions=[['bid.price+bid.price','priceTwice']]},), aggregateOperator= null
buildJoin() --> SimpleSource
registerOperator() -> operator_1
10032 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10032 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10033 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@26f96b85 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10033 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10033 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['bid.price+bid.price','priceTwice']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10033 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10036 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10036 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10037 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10037 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10037 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10038 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10038 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10038 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10038 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10038 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10039 INFO  transform  - Starting transformation of Top@408909888 OwnerIDs: 25... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10039 DEBUG transform  - Before transformation: 
TopAO (408909888) Owner: 25
0 <- 0 MapAO (510445648) Owner: 25
       0 <- 0 AccessAO (2122256138) Owner: 25
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10043 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10043 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10043 INFO  transform  - Transformation of Top@408909888 OwnerIDs: 25 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10043 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10044 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10044 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10044 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10044 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10044 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['bid.price+bid.price','priceTwice']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10044 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10045 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10046 DEBUG ReloadLog  - Query added to log: SELECT price + price AS priceTwice FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10046 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10046 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10047 INFO  StandardExecutor  - Starting query (ID: 25)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10047 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10047 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10048 INFO  StandardExecutor  - Query 25 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10048 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 25 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10048 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10048 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10049 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT price + price AS priceTwice FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10049 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10049 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10050 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10050 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10050 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10050 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10050 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-53] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10050 INFO  StandardExecutor  - Stopping query (ID: 25).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10050 DEBUG StandardExecutor  - Try to stop query 25 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10051 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10051 INFO  StandardExecutor  - Query 25 stopped. Execution time 3 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10051 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 25 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10051 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10051 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10052 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10052 INFO  StandardExecutor  - Removing Query 25 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10052 DEBUG StandardExecutor  - Removing Ownership 25 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10052 INFO  StandardExecutor  - Query 25 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10052 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['bid.price+bid.price','priceTwice']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10052 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10053 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10053 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10053 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10053 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 32 of 49: "SelectExpressionTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10053 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro 
FROM bid, category;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10053 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10054 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10054 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10054 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro 
FROM bid, category;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10054 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10055 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10055 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10055 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2e140e59 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10056 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10056 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro
FROM bid, category; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10056 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= id, realSourcename= category, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price], category=[id]}, order= [complexPrice, priceToEuro]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7103ab0 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@19ccca5 (operators: null)
getAttributename() -> attributename=price, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@769d513 (operators: [-, +])
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@5e4fa1da (operators: [*])
getAttributename() -> attributename=price, sourcename= null
getAttributename() -> attributename=price, sourcename= null
getAttributename() -> attributename=id, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7103ab0 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@19ccca5 (operators: null)
getAttributename() -> attributename=price, sourcename= null
buildSelectInput() --> mapOperator= MAP({expressions=[['DolToEur(bid.price*2.5)-bid.price+category.id','complexPrice'],['DolToEur(bid.price)','priceToEuro']]},), aggregateOperator= null
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
registerOperator() -> operator_1
10064 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10065 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10065 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@588cd519 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10065 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10065 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price*2.5)-bid.price+category.id','complexPrice'],['DolToEur(bid.price)','priceToEuro']]},JOIN(bid,category))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10065 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10081 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10081 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10081 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10082 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10082 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10084 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10084 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10084 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10085 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10085 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10085 INFO  transform  - Starting transformation of Top@239937174 OwnerIDs: 26... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10085 DEBUG transform  - Before transformation: 
TopAO (239937174) Owner: 26
0 <- 0 MapAO (1846508205) Owner: 26
       0 <- 0 JoinAO (368802354) Owner: 26 Predicate: null
              0 <- 0 AccessAO (628933116) Owner: 26
              1 <- 0 AccessAO (1122118227) Owner: 26
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10092 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10092 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10093 INFO  transform  - Transformation of Top@239937174 OwnerIDs: 26 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10093 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10093 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10093 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10093 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10094 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10094 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price*2.5)-bid.price+category.id','complexPrice'],['DolToEur(bid.price)','priceToEuro']]},JOIN(bid,category))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10094 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10094 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10095 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro
FROM bid, category; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10095 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10097 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10097 INFO  StandardExecutor  - Starting query (ID: 26)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10097 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10097 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10099 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10099 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10100 INFO  StandardExecutor  - Query 26 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10106 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 26 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10109 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10109 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10109 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro 
FROM bid, category;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10109 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10110 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10111 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10111 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10111 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10111 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10111 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-54] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10112 INFO  StandardExecutor  - Stopping query (ID: 26).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10112 DEBUG StandardExecutor  - Try to stop query 26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10112 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10113 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10115 INFO  StandardExecutor  - Query 26 stopped. Execution time 15 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10115 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 26 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10115 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10115 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10115 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10115 INFO  StandardExecutor  - Removing Query 26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10116 DEBUG StandardExecutor  - Removing Ownership 26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10116 INFO  StandardExecutor  - Query 26 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10116 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price*2.5)-bid.price+category.id','complexPrice'],['DolToEur(bid.price)','priceToEuro']]},JOIN(bid,category))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10116 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10117 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10117 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10117 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10117 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 33 of 49: "SelectExpressionTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10117 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME];
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10117 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10117 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10118 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10118 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10118 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10118 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10119 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10119 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@28a6301f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10119 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10119 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10119 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
getSelectedAttributes() -> map= {bid=[price]}, order= [expression_0]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@d8948cd (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@1436a7ab (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3b7b05a8 (operators: null)
getAttributename() -> attributename=price, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@d8948cd (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@1436a7ab (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3b7b05a8 (operators: null)
getAttributename() -> attributename=price, sourcename= null
buildSelectInput() --> mapOperator= MAP({expressions=[['DolToEur(DolToEur(bid.price))','expression_0']]},), aggregateOperator= null
buildJoin() --> SimpleSource
registerOperator() -> operator_1
10125 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10125 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10125 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3d36dff4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10125 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10126 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(DolToEur(bid.price))','expression_0']]},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10126 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10128 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10129 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10129 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10129 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10129 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10130 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10130 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10130 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10130 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10131 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10131 INFO  transform  - Starting transformation of Top@1445222369 OwnerIDs: 27... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10131 DEBUG transform  - Before transformation: 
TopAO (1445222369) Owner: 27
0 <- 0 MapAO (1414934182) Owner: 27
       0 <- 0 TimeWindowAO (439720255) Owner: 27
              0 <- 0 AccessAO (1527906606) Owner: 27
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10134 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10134 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10135 INFO  transform  - Transformation of Top@1445222369 OwnerIDs: 27 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10135 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10135 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10135 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10135 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10135 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10136 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(DolToEur(bid.price))','expression_0']]},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10136 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10137 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10137 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10137 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10138 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10138 INFO  StandardExecutor  - Starting query (ID: 27)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10138 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10139 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10139 INFO  StandardExecutor  - Query 27 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10140 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 27 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10140 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10140 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10140 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10140 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10141 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10141 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10141 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10141 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10142 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10142 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-55] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10142 INFO  StandardExecutor  - Stopping query (ID: 27).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10142 DEBUG StandardExecutor  - Try to stop query 27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10142 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10143 INFO  StandardExecutor  - Query 27 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10143 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 27 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10143 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10143 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10143 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10143 INFO  StandardExecutor  - Removing Query 27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10143 DEBUG StandardExecutor  - Removing Ownership 27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10143 INFO  StandardExecutor  - Query 27 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10143 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(DolToEur(bid.price))','expression_0']]},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10143 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10145 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10145 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10145 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10145 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 34 of 49: "SelectExpressionTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10145 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10146 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10146 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10146 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10146 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10146 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10147 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10148 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10148 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@b8a7e43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10148 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10148 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10148 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
registerAttributeAliases() -> attribute= A, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
getSelectedAttributes() -> map= {bid=[price, A]}, order= [expression_0, avgPrice, A]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7207cb51 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@2a27cb34 (operators: null)
getAttributename() -> attributename=price, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@6892cc6f (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@6fd1660 (operators: null)
getAttributename() -> attributename=price, sourcename= null
10155 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10155 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10155 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7207cb51 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@2a27cb34 (operators: null)
getAttributename() -> attributename=price, sourcename= null
buildJoin() --> SimpleSource
buildRename() -> A,bid
registerOperator() -> operator_1
getAttributename() -> attributename=price, sourcename= null
getDataTypeFrom() -> attribute= bid.price, attributename= bid.price
getAttributename() -> attributename=A, sourcename= null
registerOperator() -> operator_2
parsePredicate(List<Expressions>)
getAttributename() -> attributename=avgPrice, sourcename= null
parsePredicate() -> avgPrice>150
buildSelectInput() --> mapOperator= MAP({expressions=[['DolToEur(bid.price)','expression_0']]},), aggregateOperator= operator_2
buildJoin() --> SimpleSource
buildRename() -> A,bid
registerOperator() -> operator_3
groupByyy
registerOperator() -> operator_4
getProjectionAttribute() -> avgPrice
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> A
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_5
10158 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10158 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10159 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4a6c18ad - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10159 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10159 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','avgPrice','Double']],GROUP_BY=['A']},operator_1)
operator_3 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = SELECT({predicate='avgPrice>150'},JOIN(RENAME({aliases=['A','A_groupAttribute#0'],pairs='true'},operator_2),operator_3))
operator_5 = MAP({expressions=[['DolToEur(bid.price)','expression_0'],'avgPrice','A']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10159 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10165 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10165 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10165 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10166 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10166 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10167 DEBUG RelationalRestructHelper  - removing operator:Select@4015102 OwnerIDs: 28(avgPrice) > (150) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10168 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10168 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10168 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10168 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10168 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10169 INFO  transform  - Starting transformation of Top@161672347 OwnerIDs: 28... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10170 DEBUG transform  - Before transformation: 
TopAO (161672347) Owner: 28
0 <- 0 MapAO (1477520324) Owner: 28
       0 <- 0 JoinAO (36707189) Owner: 28 Predicate: null
              0 <- 0 SelectAO (822409149) Owner: 
                     0 <- 0 AggregateAO (794563378) Owner: 28
                            0 <- 0 TimeWindowAO (2126664214) Owner: 28
                                   0 <- 0 AccessAO (2091586824) Owner: 28
              1 <- 0 TimeWindowAO (1787083839) Owner: 28
                     0 <- 0 AccessAO (630122462) Owner: 28
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10178 DEBUG ruleengine  - Ruleengine needed 7 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10179 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10179 INFO  transform  - Transformation of Top@161672347 OwnerIDs: 28 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10179 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10180 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10180 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10180 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10181 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10181 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','avgPrice','Double']],GROUP_BY=['A']},operator_1)
operator_3 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = SELECT({predicate='avgPrice>150'},JOIN(RENAME({aliases=['A','A_groupAttribute#0'],pairs='true'},operator_2),operator_3))
operator_5 = MAP({expressions=[['DolToEur(bid.price)','expression_0'],'avgPrice','A']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10181 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10181 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10182 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10182 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10182 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10183 INFO  StandardExecutor  - Starting query (ID: 28)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10183 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10183 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10184 INFO  StandardExecutor  - Query 28 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10184 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 28 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10186 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10186 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10186 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10186 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10187 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10187 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10187 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10187 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10188 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10188 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-56] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10188 INFO  StandardExecutor  - Stopping query (ID: 28).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10188 DEBUG StandardExecutor  - Try to stop query 28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10188 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10189 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
10189 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
10189 INFO  StandardExecutor  - Query 28 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10189 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 28 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10189 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10190 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10190 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10190 INFO  StandardExecutor  - Removing Query 28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10190 DEBUG StandardExecutor  - Removing Ownership 28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10190 INFO  StandardExecutor  - Query 28 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10190 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','avgPrice','Double']],GROUP_BY=['A']},operator_1)
operator_3 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = SELECT({predicate='avgPrice>150'},JOIN(RENAME({aliases=['A','A_groupAttribute#0'],pairs='true'},operator_2),operator_3))
operator_5 = MAP({expressions=[['DolToEur(bid.price)','expression_0'],'avgPrice','A']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10190 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10192 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10192 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10192 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10192 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 35 of 49: "SelectExpressionTest6.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10192 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT 'hello' + 'world' FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10193 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10193 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10193 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10193 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT 'hello' + 'world' FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10193 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10194 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10195 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10195 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@105b693d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10195 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10195 DEBUG StandardExecutor  - Adding following query: SELECT 'hello' + 'world' FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10195 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
getSelectedAttributes() -> map= {}, order= [expression_0]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@42fcc7e6 (operators: [+])
buildSelectInput() --> mapOperator= MAP({expressions=[['"hello"+"world"','expression_0']]},), aggregateOperator= null
buildJoin() --> SimpleSource
registerOperator() -> operator_1
10200 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10200 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10200 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@9255c05 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10200 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10200 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['"hello"+"world"','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10201 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10207 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10208 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10208 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10208 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10208 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10209 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10209 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10209 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10209 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10210 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10210 INFO  transform  - Starting transformation of Top@1334528976 OwnerIDs: 29... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10210 DEBUG transform  - Before transformation: 
TopAO (1334528976) Owner: 29
0 <- 0 MapAO (1318080469) Owner: 29
       0 <- 0 AccessAO (727236) Owner: 29
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10213 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10213 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10214 INFO  transform  - Transformation of Top@1334528976 OwnerIDs: 29 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10214 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10214 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10214 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10214 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10215 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10215 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['"hello"+"world"','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10215 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10215 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10216 DEBUG ReloadLog  - Query added to log: SELECT 'hello' + 'world' FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10216 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10216 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10217 INFO  StandardExecutor  - Starting query (ID: 29)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10217 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10217 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10218 INFO  StandardExecutor  - Query 29 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10219 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 29 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10219 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10219 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10219 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT 'hello' + 'world' FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10219 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10220 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10220 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10220 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10221 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10221 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10221 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-57] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10221 INFO  StandardExecutor  - Stopping query (ID: 29).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10221 DEBUG StandardExecutor  - Try to stop query 29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10221 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10222 INFO  StandardExecutor  - Query 29 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10222 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 29 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10222 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10222 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10222 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10222 INFO  StandardExecutor  - Removing Query 29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10222 DEBUG StandardExecutor  - Removing Ownership 29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10222 INFO  StandardExecutor  - Query 29 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10223 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['"hello"+"world"','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10223 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10223 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10223 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest6.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10224 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10224 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 36 of 49: "SelectExpressionTest7.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10224 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction 
FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10224 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10224 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10225 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10225 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction 
FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10225 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10226 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10226 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10227 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1237e0be - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10227 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10227 DEBUG StandardExecutor  - Adding following query: SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction
FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10227 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price, auction]}, order= [matrix, bid.price, bid.auction]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@33cbfa57 (operators: [+, *])
buildSelectInput() --> mapOperator= MAP({expressions=[['[1.0,2.0,3.0;3.0,4.0,6.0]+[2.0,4.0,5.0;12.0,5.0,1.0]*0.5','matrix']]},), aggregateOperator= null
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_1
10235 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10236 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10236 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1d96d872 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10236 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10236 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['[1.0,2.0,3.0;3.0,4.0,6.0]+[2.0,4.0,5.0;12.0,5.0,1.0]*0.5','matrix'],'bid.price','bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10236 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10262 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10262 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10262 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10262 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10262 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10263 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10263 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10263 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10264 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10264 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10264 INFO  transform  - Starting transformation of Top@895705623 OwnerIDs: 30... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10264 DEBUG transform  - Before transformation: 
TopAO (895705623) Owner: 30
0 <- 0 MapAO (357153703) Owner: 30
       0 <- 0 AccessAO (1045397707) Owner: 30
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10267 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10268 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10268 INFO  transform  - Transformation of Top@895705623 OwnerIDs: 30 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10268 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10268 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10269 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10269 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10269 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10269 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['[1.0,2.0,3.0;3.0,4.0,6.0]+[2.0,4.0,5.0;12.0,5.0,1.0]*0.5','matrix'],'bid.price','bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10269 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10270 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10270 DEBUG ReloadLog  - Query added to log: SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction
FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10270 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10271 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10271 INFO  StandardExecutor  - Starting query (ID: 30)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10271 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10272 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10272 INFO  StandardExecutor  - Query 30 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10272 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 30 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10273 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10273 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10273 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction 
FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10273 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10274 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10274 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10274 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10274 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10275 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10275 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-58] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10275 INFO  StandardExecutor  - Stopping query (ID: 30).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10276 DEBUG StandardExecutor  - Try to stop query 30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10276 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10276 INFO  StandardExecutor  - Query 30 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10276 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 30 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10276 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10276 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10277 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10277 INFO  StandardExecutor  - Removing Query 30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10277 DEBUG StandardExecutor  - Removing Ownership 30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10277 INFO  StandardExecutor  - Query 30 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10277 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['[1.0,2.0,3.0;3.0,4.0,6.0]+[2.0,4.0,5.0;12.0,5.0,1.0]*0.5','matrix'],'bid.price','bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10277 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10278 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10278 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest7.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10278 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10278 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 37 of 49: "SelectTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10278 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT auction FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10278 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10278 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10278 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10278 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT auction FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10279 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10279 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10279 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10280 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4b54af3d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10280 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10280 DEBUG StandardExecutor  - Adding following query: SELECT auction FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10280 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [bid.auction]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_1
10285 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10285 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10285 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2a1debfa - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10285 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10285 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10286 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10287 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10287 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10287 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10288 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10288 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10288 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10289 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10289 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10289 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10289 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10289 INFO  transform  - Starting transformation of Top@1656318404 OwnerIDs: 31... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10289 DEBUG transform  - Before transformation: 
TopAO (1656318404) Owner: 31
0 <- 0 MapAO (231498257) Owner: 31
       0 <- 0 AccessAO (1206678562) Owner: 31
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10293 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10293 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10293 INFO  transform  - Transformation of Top@1656318404 OwnerIDs: 31 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10294 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10294 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10294 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10294 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10294 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10294 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10294 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10295 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10295 DEBUG ReloadLog  - Query added to log: SELECT auction FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10296 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10296 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10296 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT auction FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10297 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10297 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10297 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10297 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10298 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10298 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10298 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-59] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10298 INFO  StandardExecutor  - Removing Query 31 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10298 DEBUG StandardExecutor  - Removing Ownership 31 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10298 INFO  StandardExecutor  - Query 31 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10298 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10298 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10299 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10300 DEBUG AbstractTestComponent  - Sub test "SelectTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10300 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10300 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 38 of 49: "SelectTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10300 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT auction FROM bid WHERE auction > 1000;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10300 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10300 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10300 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10300 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT auction FROM bid WHERE auction > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10300 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10301 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10301 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10301 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@46d9aec8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10302 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10302 DEBUG StandardExecutor  - Adding following query: SELECT auction FROM bid WHERE auction > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10302 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [bid.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
parsePredicate() -> bid.auction>1000
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
registerOperator() -> operator_1
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_2
10311 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10311 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10312 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@17740dae - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10312 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10312 DEBUG StandardExecutor  - Adding following query: operator_1 = SELECT({predicate='bid.auction>1000'},bid)
operator_2 = MAP({expressions=['bid.auction']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10312 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10317 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10317 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10317 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10318 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10318 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10319 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10319 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10319 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10319 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10320 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10320 INFO  transform  - Starting transformation of Top@2117043942 OwnerIDs: 32... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10320 DEBUG transform  - Before transformation: 
TopAO (2117043942) Owner: 32
0 <- 0 MapAO (1299661385) Owner: 32
       0 <- 0 SelectAO (397822273) Owner: 32
              0 <- 0 AccessAO (1403815002) Owner: 32
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10325 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10325 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10325 INFO  transform  - Transformation of Top@2117043942 OwnerIDs: 32 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10326 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10326 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10326 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10326 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10327 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10327 DEBUG ReloadLog  - Query added to log: operator_1 = SELECT({predicate='bid.auction>1000'},bid)
operator_2 = MAP({expressions=['bid.auction']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10328 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10329 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10329 DEBUG ReloadLog  - Query added to log: SELECT auction FROM bid WHERE auction > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10329 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10330 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10331 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT auction FROM bid WHERE auction > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10331 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10332 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10333 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10333 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10333 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10333 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10334 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-60] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10334 INFO  StandardExecutor  - Removing Query 32 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10334 DEBUG StandardExecutor  - Removing Ownership 32 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10334 INFO  StandardExecutor  - Query 32 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10334 DEBUG ReloadLog  - Removing query from log: operator_1 = SELECT({predicate='bid.auction>1000'},bid)
operator_2 = MAP({expressions=['bid.auction']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10334 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10335 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10335 DEBUG AbstractTestComponent  - Sub test "SelectTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10335 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10335 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 39 of 49: "SelectTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10335 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10336 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10336 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10336 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10336 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10336 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10337 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10337 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10337 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5cbd159f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10337 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10337 DEBUG StandardExecutor  - Adding following query: SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10337 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= bidder, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price, auction, bidder]}, order= [bid.price, avgPrice, bid.auction, bid.bidder]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7d0cc890 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@49293b43 (operators: null)
getAttributename() -> attributename=price, sourcename= null
10342 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10342 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10342 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
getAttributename() -> attributename=price, sourcename= null
getDataTypeFrom() -> attribute= bid.price, attributename= bid.price
registerOperator() -> operator_1
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_1
[bid.price, avgPrice, bid.auction, bid.bidder]
[avgPrice]
buildJoin() --> SimpleSource
groupByyy
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> avgPrice
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_2
10348 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10348 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10348 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5ff60a8c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10349 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10349 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','avgPrice','Double']]},bid)
operator_2 = MAP({expressions=['bid.price','avgPrice','bid.auction','bid.bidder']},JOIN(operator_1,bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10349 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10357 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10358 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10358 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10358 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10358 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10359 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10359 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10359 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10359 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10360 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10360 INFO  transform  - Starting transformation of Top@741191984 OwnerIDs: 33... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10360 DEBUG transform  - Before transformation: 
TopAO (741191984) Owner: 33
0 <- 0 MapAO (847018986) Owner: 33
       0 <- 0 JoinAO (881662115) Owner: 33 Predicate: null
              0 <- 0 AggregateAO (1818592781) Owner: 33
                     0 <- 0 AccessAO (754978432) Owner: 33
              1 <- 0 AccessAO (2096268257) Owner: 33
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10367 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10367 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10368 INFO  transform  - Transformation of Top@741191984 OwnerIDs: 33 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10368 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10368 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10368 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10368 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10369 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10369 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','avgPrice','Double']]},bid)
operator_2 = MAP({expressions=['bid.price','avgPrice','bid.auction','bid.bidder']},JOIN(operator_1,bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10370 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10370 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10371 DEBUG ReloadLog  - Query added to log: SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10371 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10373 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10373 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10373 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10374 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10375 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10375 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10375 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10375 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10376 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-61] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10376 INFO  StandardExecutor  - Removing Query 33 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10376 DEBUG StandardExecutor  - Removing Ownership 33 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10376 INFO  StandardExecutor  - Query 33 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10376 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','avgPrice','Double']]},bid)
operator_2 = MAP({expressions=['bid.price','avgPrice','bid.auction','bid.bidder']},JOIN(operator_1,bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10376 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10378 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10378 DEBUG AbstractTestComponent  - Sub test "SelectTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10378 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10378 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 40 of 49: "SelectTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10379 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10379 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10379 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10379 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10379 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10379 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10381 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10381 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10381 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3900fa71 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10382 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10382 DEBUG StandardExecutor  - Adding following query: SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10382 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction, price]}, order= [bid.auction, bid.price]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=auction, sourcename= null
parsePredicate() -> bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
registerOperator() -> operator_1
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_2
10387 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10387 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10387 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@627d8516 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10388 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10388 DEBUG StandardExecutor  - Adding following query: operator_1 = SELECT({predicate='bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87'},bid)
operator_2 = MAP({expressions=['bid.auction','bid.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10388 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10394 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10394 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10394 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10395 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10395 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10400 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10400 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10400 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10401 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10401 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10401 INFO  transform  - Starting transformation of Top@123629835 OwnerIDs: 34... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10402 DEBUG transform  - Before transformation: 
TopAO (123629835) Owner: 34
0 <- 0 MapAO (653774328) Owner: 34
       0 <- 0 SelectAO (929985841) Owner: 34
              0 <- 0 AccessAO (589311025) Owner: 34
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10405 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10406 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10406 INFO  transform  - Transformation of Top@123629835 OwnerIDs: 34 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10406 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10406 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10406 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10407 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10407 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10407 DEBUG ReloadLog  - Query added to log: operator_1 = SELECT({predicate='bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87'},bid)
operator_2 = MAP({expressions=['bid.auction','bid.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10407 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10408 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10408 DEBUG ReloadLog  - Query added to log: SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10408 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10409 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10409 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10409 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10410 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10410 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10410 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10410 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10410 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10411 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-62] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10411 INFO  StandardExecutor  - Removing Query 34 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10411 DEBUG StandardExecutor  - Removing Ownership 34 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10411 INFO  StandardExecutor  - Query 34 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10411 DEBUG ReloadLog  - Removing query from log: operator_1 = SELECT({predicate='bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87'},bid)
operator_2 = MAP({expressions=['bid.auction','bid.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10411 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10412 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10412 DEBUG AbstractTestComponent  - Sub test "SelectTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10413 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10413 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 41 of 49: "SelectTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10413 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10413 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10413 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10413 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10413 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10413 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10414 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10414 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10414 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@31133b6e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10414 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10414 DEBUG StandardExecutor  - Adding following query: SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10415 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
findbyName::P1.id
alias!
findbyName::P1.id
alias!
registerAttributeAliases() -> attribute= ID1, realSourcename= person, sourcenameAlias= P1, isFormSubQuery= false
findbyName::P2.id
alias!
findbyName::P2.id
alias!
registerAttributeAliases() -> attribute= ID2, realSourcename= person, sourcenameAlias= P2, isFormSubQuery= false
getSelectedAttributes() -> map= {person=[ID1, ID2]}, order= [ID1, ID2]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=ID1, sourcename= null
getAttributename() -> attributename=ID2, sourcename= null
parsePredicate() -> ID1==ID2
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> ID1,P1
buildRename() -> ID2,P2
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> ID1,P1
buildRename() -> ID2,P2
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> ID1
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> ID2
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
registerOperator() -> operator_4
10419 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10420 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10420 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6401d0a0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10420 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10420 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['id','ID1','timestamp','P1.timestamp','name','P1.name','email','P1.email','creditcard','P1.creditcard','city','P1.city','state','P1.state'],pairs='true'},person)
operator_2 = RENAME({aliases=['id','ID2','timestamp','P2.timestamp','name','P2.name','email','P2.email','creditcard','P2.creditcard','city','P2.city','state','P2.state'],pairs='true'},person)
operator_3 = SELECT({predicate='ID1==ID2'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['ID1','ID2']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10420 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10425 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10425 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10425 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10425 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10426 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10426 DEBUG RelationalRestructHelper  - removing operator:Select@1688526221 OwnerIDs: 35(ID1) = (ID2) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10427 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10427 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10427 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10427 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10427 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10428 INFO  transform  - Starting transformation of Top@773518491 OwnerIDs: 35... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10428 DEBUG transform  - Before transformation: 
TopAO (773518491) Owner: 35
0 <- 0 MapAO (1070740013) Owner: 35
       0 <- 0 JoinAO (1454136448) Owner: 35 Predicate: (ID1) = (ID2) initialized = true
              0 <- 0 AccessAO (1776589441) Owner: 35
              1 <- 0 AccessAO (270734602) Owner: 35
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10437 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10437 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10438 INFO  transform  - Transformation of Top@773518491 OwnerIDs: 35 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10438 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10438 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10438 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10439 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10439 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10439 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['id','ID1','timestamp','P1.timestamp','name','P1.name','email','P1.email','creditcard','P1.creditcard','city','P1.city','state','P1.state'],pairs='true'},person)
operator_2 = RENAME({aliases=['id','ID2','timestamp','P2.timestamp','name','P2.name','email','P2.email','creditcard','P2.creditcard','city','P2.city','state','P2.state'],pairs='true'},person)
operator_3 = SELECT({predicate='ID1==ID2'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['ID1','ID2']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10439 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10440 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10440 DEBUG ReloadLog  - Query added to log: SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10440 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10441 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10441 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10441 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10442 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10442 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10442 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10442 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10442 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10443 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-63] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10443 INFO  StandardExecutor  - Removing Query 35 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10443 DEBUG StandardExecutor  - Removing Ownership 35 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10443 INFO  StandardExecutor  - Query 35 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10443 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['id','ID1','timestamp','P1.timestamp','name','P1.name','email','P1.email','creditcard','P1.creditcard','city','P1.city','state','P1.state'],pairs='true'},person)
operator_2 = RENAME({aliases=['id','ID2','timestamp','P2.timestamp','name','P2.name','email','P2.email','creditcard','P2.creditcard','city','P2.city','state','P2.state'],pairs='true'},person)
operator_3 = SELECT({predicate='ID1==ID2'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['ID1','ID2']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10443 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10444 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10444 DEBUG AbstractTestComponent  - Sub test "SelectTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10444 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10445 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 42 of 49: "SelectTest6.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10445 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10445 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10445 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10445 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10446 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10446 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10447 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10447 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10447 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@12b5454f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10447 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10447 DEBUG StandardExecutor  - Adding following query: SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10447 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [bid.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B.bidder, sourcename= null
getAttributename() -> attributename=P.id, sourcename= null
parsePredicate() -> B.bidder==P.id
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.bidder,B
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> P.id,P
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
registerOperator() -> operator_4
10454 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10454 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10455 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3cd206b5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10455 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10455 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.bidder==P.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10455 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10459 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10459 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10459 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10460 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10460 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10461 DEBUG RelationalRestructHelper  - removing operator:Select@1595472338 OwnerIDs: 36(B.bidder) = (P.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10461 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10461 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10461 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10462 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10462 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10464 INFO  transform  - Starting transformation of Top@22874185 OwnerIDs: 36... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10464 DEBUG transform  - Before transformation: 
TopAO (22874185) Owner: 36
0 <- 0 MapAO (1077464378) Owner: 36
       0 <- 0 JoinAO (346847161) Owner: 36 Predicate: (B.bidder) = (P.id) initialized = true
              0 <- 0 AccessAO (1061998933) Owner: 36
              1 <- 0 AccessAO (1446676917) Owner: 36
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10470 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10471 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10471 INFO  transform  - Transformation of Top@22874185 OwnerIDs: 36 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10472 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10472 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10472 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10472 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10473 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10473 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.bidder==P.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10473 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10474 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10474 DEBUG ReloadLog  - Query added to log: SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10474 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10475 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10475 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10475 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10476 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10476 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10476 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10476 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10476 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10477 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-64] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10477 INFO  StandardExecutor  - Removing Query 36 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10477 DEBUG StandardExecutor  - Removing Ownership 36 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10477 INFO  StandardExecutor  - Query 36 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10477 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.bidder==P.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10477 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10478 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10478 DEBUG AbstractTestComponent  - Sub test "SelectTest6.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10479 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10479 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 43 of 49: "SelectTest7.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10479 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT C.name FROM category AS C WHERE C.id != 108;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10479 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10479 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10479 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10479 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT C.name FROM category AS C WHERE C.id != 108;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10479 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10480 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10480 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10480 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@745c2004 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10480 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10480 DEBUG StandardExecutor  - Adding following query: SELECT C.name FROM category AS C WHERE C.id != 108; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10481 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= C.id, realSourcename= category, sourcenameAlias= C, isFormSubQuery= false
findbyName::C.name
alias!
registerAttributeAliases() -> attribute= C.name, realSourcename= category, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {category=[C.name]}, order= [C.name]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=C.id, sourcename= null
parsePredicate() -> C.id!=108
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> C.id,C
buildRename() -> C.name,C
registerOperator() -> operator_1
registerOperator() -> operator_2
getProjectionAttribute() -> C.name
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
registerOperator() -> operator_3
10492 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10492 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10494 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@12010fd1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10495 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10495 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_2 = SELECT({predicate='C.id!=108'},operator_1)
operator_3 = MAP({expressions=['C.name']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10496 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10498 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10498 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10498 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10501 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10501 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10501 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10502 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10502 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10502 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10502 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10502 INFO  transform  - Starting transformation of Top@1929969663 OwnerIDs: 37... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10503 DEBUG transform  - Before transformation: 
TopAO (1929969663) Owner: 37
0 <- 0 MapAO (1711393939) Owner: 37
       0 <- 0 SelectAO (1423507882) Owner: 37
              0 <- 0 AccessAO (1668376627) Owner: 37
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10506 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10507 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10507 INFO  transform  - Transformation of Top@1929969663 OwnerIDs: 37 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10507 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10507 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10507 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10507 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10508 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10508 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_2 = SELECT({predicate='C.id!=108'},operator_1)
operator_3 = MAP({expressions=['C.name']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10509 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10509 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10511 DEBUG ReloadLog  - Query added to log: SELECT C.name FROM category AS C WHERE C.id != 108; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10511 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10512 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10512 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT C.name FROM category AS C WHERE C.id != 108;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10512 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10513 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10513 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10513 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10513 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10513 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10514 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-65] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10514 INFO  StandardExecutor  - Removing Query 37 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10514 DEBUG StandardExecutor  - Removing Ownership 37 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10514 INFO  StandardExecutor  - Query 37 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10514 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_2 = SELECT({predicate='C.id!=108'},operator_1)
operator_3 = MAP({expressions=['C.name']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10514 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10515 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10515 DEBUG AbstractTestComponent  - Sub test "SelectTest7.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10515 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10515 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 44 of 49: "SetTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10515 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT * FROM bid
UNION
SELECT * FROM person
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10515 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10515 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10515 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10516 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT * FROM bid
UNION
SELECT * FROM person
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10516 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10516 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10516 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10516 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@100c567f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10516 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10517 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid
UNION
SELECT * FROM person - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10517 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.datetime
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
registerOperator() -> operator_1
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> person.timestamp
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.id
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.name
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.email
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.creditcard
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.city
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.state
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
registerOperator() -> operator_2
registerOperator() -> operator_3
10521 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10521 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10521 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@30669dac - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10522 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10522 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
operator_2 = MAP({expressions=['person.timestamp','person.id','person.name','person.email','person.creditcard','person.city','person.state']},person)
operator_3 = UNION(operator_1,operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10522 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10528 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10529 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10529 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10529 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10529 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10530 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10530 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10530 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10530 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10530 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10531 INFO  transform  - Starting transformation of Top@256139608 OwnerIDs: 38... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10531 DEBUG transform  - Before transformation: 
TopAO (256139608) Owner: 38
0 <- 0 UnionAO (854640632) Owner: 38
       0 <- 0 MapAO (1347294617) Owner: 38
              0 <- 0 AccessAO (1912172027) Owner: 38
       1 <- 0 MapAO (1562090557) Owner: 38
              0 <- 0 AccessAO (1776312161) Owner: 38
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10538 DEBUG ruleengine  - Ruleengine needed 7 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10538 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10539 INFO  transform  - Transformation of Top@256139608 OwnerIDs: 38 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10539 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10539 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10539 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10539 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10539 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10539 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
operator_2 = MAP({expressions=['person.timestamp','person.id','person.name','person.email','person.creditcard','person.city','person.state']},person)
operator_3 = UNION(operator_1,operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10540 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10540 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10540 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid
UNION
SELECT * FROM person - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10541 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10541 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10541 INFO  StandardExecutor  - Starting query (ID: 38)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10542 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10542 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10543 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10544 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10544 INFO  StandardExecutor  - Query 38 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10546 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 38 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10546 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10546 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10546 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT * FROM bid
UNION
SELECT * FROM person
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10546 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10547 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10547 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10547 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10547 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10548 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10548 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-66] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10548 INFO  StandardExecutor  - Stopping query (ID: 38).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10548 DEBUG StandardExecutor  - Try to stop query 38 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10548 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10549 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10549 INFO  StandardExecutor  - Query 38 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10549 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 38 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10549 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10550 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10550 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10550 INFO  StandardExecutor  - Removing Query 38 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10550 DEBUG StandardExecutor  - Removing Ownership 38 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10550 INFO  StandardExecutor  - Query 38 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10550 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
operator_2 = MAP({expressions=['person.timestamp','person.id','person.name','person.email','person.creditcard','person.city','person.state']},person)
operator_3 = UNION(operator_1,operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10550 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10551 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10552 DEBUG AbstractTestComponent  - Sub test "SetTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10552 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10552 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 45 of 49: "StreamToTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10552 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
DROP SINK out1 IF EXISTS
#QUERY
CREATE SINK out1 (attr1 INTEGER, attr2 INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'CSV'
TRANSPORT 'File'
DATAHANDLER 'TUPLE'
OPTIONS('filename' 'E:\\Users\\test.txt') 			
#QUERY
STREAM TO out1 SELECT auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10552 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10552 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10552 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10552 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
DROP SINK out1 IF EXISTS
#QUERY
CREATE SINK out1 (attr1 INTEGER, attr2 INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'CSV'
TRANSPORT 'File'
DATAHANDLER 'TUPLE'
OPTIONS('filename' 'E:\\Users\\test.txt') 			
#QUERY
STREAM TO out1 SELECT auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10552 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10553 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10554 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10554 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@409986fe - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10554 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10554 DEBUG StandardExecutor  - Adding following query: DROP SINK out1 IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10554 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
10557 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10557 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10557 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropSinkCommand@22590e3e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10557 DEBUG ReloadLog  - Query added to log: DROP SINK out1 IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10557 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10558 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10558 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@53dad875 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10558 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10558 DEBUG StandardExecutor  - Adding following query: CREATE SINK out1 (attr1 INTEGER, attr2 INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'CSV'
TRANSPORT 'File'
DATAHANDLER 'TUPLE'
OPTIONS('filename' 'E:\\Users\\test.txt') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10559 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [attr1, attr2]
[INTEGER, INTEGER]
,
generateKeyValueString()= [filename]
[E:\Users\test.txt]
,
10561 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10561 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
10562 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@446c3920 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10562 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10562 DEBUG StandardExecutor  - Adding following query: STREAM TO out1 SELECT auction, bidder FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10562 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= bidder, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction, bidder]}, order= [bid.auction, bid.bidder]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
registerOperator() -> operator_1
registerOperator() -> out1
10565 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10565 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10566 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@34819867 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10566 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10566 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.auction','bid.bidder']},bid)
out1 = SENDER({sink='out1',wrapper='GenericPush',protocol='CSV',transport='File',dataHandler='TUPLE',options=[['filename','E:\Users\test.txt']]},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10566 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10569 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10569 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10569 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10569 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10569 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10570 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10570 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10570 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10570 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10570 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10571 INFO  transform  - Starting transformation of Top@816302479 OwnerIDs: 39... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10571 DEBUG transform  - Before transformation: 
TopAO (816302479) Owner: 39
0 <- 0 SenderAO (909516251) Owner: 39
       0 <- 0 MapAO (1107218767) Owner: 39
              0 <- 0 AccessAO (81194567) Owner: 39
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10577 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10578 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10578 INFO  transform  - Transformation of Top@816302479 OwnerIDs: 39 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10578 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10579 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10579 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10579 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10579 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10579 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.auction','bid.bidder']},bid)
out1 = SENDER({sink='out1',wrapper='GenericPush',protocol='CSV',transport='File',dataHandler='TUPLE',options=[['filename','E:\Users\test.txt']]},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10579 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10580 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10580 DEBUG ReloadLog  - Query added to log: STREAM TO out1 SELECT auction, bidder FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10581 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10581 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10581 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
DROP SINK out1 IF EXISTS
#QUERY
CREATE SINK out1 (attr1 INTEGER, attr2 INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'CSV'
TRANSPORT 'File'
DATAHANDLER 'TUPLE'
OPTIONS('filename' 'E:\\Users\\test.txt') 			
#QUERY
STREAM TO out1 SELECT auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10582 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10582 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10582 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10582 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10583 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10583 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10583 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-67] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10583 INFO  StandardExecutor  - Removing Query 39 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10583 DEBUG StandardExecutor  - Removing Ownership 39 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10583 INFO  StandardExecutor  - Query 39 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10583 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.auction','bid.bidder']},bid)
out1 = SENDER({sink='out1',wrapper='GenericPush',protocol='CSV',transport='File',dataHandler='TUPLE',options=[['filename','E:\Users\test.txt']]},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10584 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10586 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10586 DEBUG AbstractTestComponent  - Sub test "StreamToTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10586 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10586 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 46 of 49: "SubQueryTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10586 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
        FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10586 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10586 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10586 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10587 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
        FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10587 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10587 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10587 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10587 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@25da615a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10588 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10588 DEBUG StandardExecutor  - Adding following query: SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10588 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
prepareParsingSelect()
findbyName::B1.price
alias!
registerAttributeAliases() -> attribute= B1.price, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B1.auction
alias!
registerAttributeAliases() -> attribute= B1.auction, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B1.price, B1.auction]}, order= [B1.price, num]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@75308740 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@5acc9fdf (operators: null)
getAttributename() -> attributename=B1.auction, sourcename= null
10593 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10593 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
registerAttributeAliases() -> attribute= price2, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= true
getSelectedAttributes() -> map= {bid=[price2]}, order= [price2]
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> B1.price,B1
buildRename() -> price2,B2
registerOperator() -> operator_1
getAttributename() -> attributename=B1.auction, sourcename= null
getDataTypeFrom() -> attribute= B1.auction, attributename= B1.auction
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
registerOperator() -> operator_2
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_2
[B1.price, num]
[num]
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> B1.price,B1
buildRename() -> price2,B2
registerOperator() -> operator_3
groupByyy
getProjectionAttribute() -> B1.price
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> num
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
registerOperator() -> operator_4
parsePredicate(List<Expressions>)
getAttributename() -> attributename=num, sourcename= null
parsePredicate() -> num>=200
buildSelectInput() --> mapOperator= null, aggregateOperator= null
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
registerOperator() -> operator_5
registerOperator() -> operator_6
getProjectionAttribute() -> price2
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
registerOperator() -> operator_7
10597 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10598 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10598 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@e48bf9a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10598 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10598 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({AGGREGATIONS=[['COUNT','B1.auction','num','Integer']]},operator_1)
operator_3 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['B1.price','num']},JOIN(operator_2,operator_3))
operator_5 = RENAME({aliases=['B1_price','price2'],pairs='true'},operator_4)
operator_6 = SELECT({predicate='num>=200'},operator_5)
operator_7 = MAP({expressions=['price2']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10598 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10604 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10604 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10604 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10605 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10605 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10606 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10606 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10606 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10606 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10606 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10607 INFO  transform  - Starting transformation of Top@2092450685 OwnerIDs: 40... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10608 DEBUG transform  - Before transformation: 
TopAO (2092450685) Owner: 40
0 <- 0 MapAO (103433239) Owner: 40
       0 <- 0 SelectAO (1140202235) Owner: 40
              0 <- 0 MapAO (1898996968) Owner: 40
                     0 <- 0 JoinAO (1336762904) Owner: 40 Predicate: null
                            0 <- 0 AggregateAO (468950278) Owner: 40
                                   0 <- 0 TimeWindowAO (1747025217) Owner: 40
                                          0 <- 0 AccessAO (449074057) Owner: 40
                            1 <- 0 TimeWindowAO (1046302571) Owner: 40
                                   0 <- 0 AccessAO (969014795) Owner: 40
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10626 DEBUG ruleengine  - Ruleengine needed 13 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10626 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10626 INFO  transform  - Transformation of Top@2092450685 OwnerIDs: 40 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10627 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10627 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10627 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10627 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10627 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10628 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({AGGREGATIONS=[['COUNT','B1.auction','num','Integer']]},operator_1)
operator_3 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['B1.price','num']},JOIN(operator_2,operator_3))
operator_5 = RENAME({aliases=['B1_price','price2'],pairs='true'},operator_4)
operator_6 = SELECT({predicate='num>=200'},operator_5)
operator_7 = MAP({expressions=['price2']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10628 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10628 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10629 DEBUG ReloadLog  - Query added to log: SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10629 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10630 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10630 INFO  StandardExecutor  - Starting query (ID: 40)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10630 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10630 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10631 INFO  StandardExecutor  - Query 40 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10631 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 40 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10631 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10632 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10632 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
        FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10632 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10633 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10633 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10633 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10633 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10633 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10634 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-68] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10634 INFO  StandardExecutor  - Stopping query (ID: 40).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10634 DEBUG StandardExecutor  - Try to stop query 40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10634 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10634 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
10635 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
10635 INFO  StandardExecutor  - Query 40 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10635 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 40 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10635 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10635 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10635 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10635 INFO  StandardExecutor  - Removing Query 40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10635 DEBUG StandardExecutor  - Removing Ownership 40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10636 INFO  StandardExecutor  - Query 40 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10636 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({AGGREGATIONS=[['COUNT','B1.auction','num','Integer']]},operator_1)
operator_3 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['B1.price','num']},JOIN(operator_2,operator_3))
operator_5 = RENAME({aliases=['B1_price','price2'],pairs='true'},operator_4)
operator_6 = SELECT({predicate='num>=200'},operator_5)
operator_7 = MAP({expressions=['price2']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10636 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10637 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10637 DEBUG AbstractTestComponent  - Sub test "SubQueryTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10637 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10637 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 47 of 49: "WindowTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10637 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT * FROM bid [UNBOUNDED];
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10637 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10637 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10637 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10637 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT * FROM bid [UNBOUNDED];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10638 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10638 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10638 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10638 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5ec46cdd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10638 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10639 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid [UNBOUNDED]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10639 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.datetime
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
registerOperator() -> operator_1
10644 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10645 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10645 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4016ccc1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10645 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10645 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10646 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10649 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10649 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10649 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10649 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10650 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10650 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10650 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10650 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10650 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10651 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10651 INFO  transform  - Starting transformation of Top@2079051109 OwnerIDs: 41... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10651 DEBUG transform  - Before transformation: 
TopAO (2079051109) Owner: 41
0 <- 0 MapAO (1195670735) Owner: 41
       0 <- 0 AccessAO (2063275841) Owner: 41
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10654 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10655 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10655 INFO  transform  - Transformation of Top@2079051109 OwnerIDs: 41 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10655 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10655 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10656 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10656 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10656 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10656 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10656 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10658 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10658 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid [UNBOUNDED]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10658 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10659 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10659 INFO  StandardExecutor  - Starting query (ID: 41)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10659 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10659 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10660 INFO  StandardExecutor  - Query 41 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10660 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 41 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10661 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10661 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10661 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT * FROM bid [UNBOUNDED];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10661 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10662 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10662 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10662 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10662 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10662 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10663 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-69] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10663 INFO  StandardExecutor  - Stopping query (ID: 41).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10663 DEBUG StandardExecutor  - Try to stop query 41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10663 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10663 INFO  StandardExecutor  - Query 41 stopped. Execution time 3 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10663 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 41 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10663 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10664 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10664 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10664 INFO  StandardExecutor  - Removing Query 41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10664 DEBUG StandardExecutor  - Removing Ownership 41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10664 INFO  StandardExecutor  - Query 41 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10664 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10664 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10665 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10665 DEBUG AbstractTestComponent  - Sub test "WindowTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10665 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10665 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 48 of 49: "WindowTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10665 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT * FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10665 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10665 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10666 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10666 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT * FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10666 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10667 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10667 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10667 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2cc04358 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10667 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10667 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid [SIZE 5 MINUTES TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10667 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.datetime
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
registerOperator() -> operator_1
10671 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10672 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10672 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6ae3fb94 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10672 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10672 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10672 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10677 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10677 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10677 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10677 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10678 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10678 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10678 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10679 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10679 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10679 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10679 INFO  transform  - Starting transformation of Top@2102724832 OwnerIDs: 42... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10680 DEBUG transform  - Before transformation: 
TopAO (2102724832) Owner: 42
0 <- 0 MapAO (1431099210) Owner: 42
       0 <- 0 TimeWindowAO (938279178) Owner: 42
              0 <- 0 AccessAO (1664757401) Owner: 42
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10684 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10685 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10685 INFO  transform  - Transformation of Top@2102724832 OwnerIDs: 42 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10685 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10686 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10686 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10686 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10686 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10687 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10687 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10688 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10688 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid [SIZE 5 MINUTES TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10688 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10690 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10690 INFO  StandardExecutor  - Starting query (ID: 42)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10690 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10690 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10691 INFO  StandardExecutor  - Query 42 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10692 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 42 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10692 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10692 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10693 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT * FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10693 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10693 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10693 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10693 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10694 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10694 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10694 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-70] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10694 INFO  StandardExecutor  - Stopping query (ID: 42).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10694 DEBUG StandardExecutor  - Try to stop query 42 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10694 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10695 INFO  StandardExecutor  - Query 42 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10695 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 42 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10695 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10695 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10695 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10695 INFO  StandardExecutor  - Removing Query 42 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10695 DEBUG StandardExecutor  - Removing Ownership 42 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10696 INFO  StandardExecutor  - Query 42 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10696 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10696 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10697 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10698 DEBUG AbstractTestComponent  - Sub test "WindowTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10698 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10698 DEBUG AbstractTestComponent  - Mon May 15 19:19:35 CEST 2017Running sub test 49 of 49: "WindowTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10699 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT auction, bidder, P.id, C.id 
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10699 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10699 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10699 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10699 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT auction, bidder, P.id, C.id 
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10699 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10700 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10704 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10707 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@61dde151 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10707 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10708 DEBUG StandardExecutor  - Adding following query: SELECT auction, bidder, P.id, C.id
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10708 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= bidder, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
findbyName::P.id
findbyName::P.id
alias!
findbyName::P.id
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
findbyName::C.id
findbyName::C.id
findbyName::C.id
alias!
registerAttributeAliases() -> attribute= C.id, realSourcename= category, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction, bidder], category=[C.id], person=[P.id]}, order= [bid.auction, bid.bidder, P.id, C.id]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
buildRename() -> P.id,P
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> C.id,C
registerOperator() -> operator_2
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> P.id
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> C.id
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
registerOperator() -> operator_3
10721 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10721 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10721 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3fc05ea2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10721 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10721 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},person))
operator_2 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_3 = MAP({expressions=['bid.auction','bid.bidder','P.id','C.id']},JOIN(ELEMENTWINDOW({size=5,advance=1},bid),JOIN(operator_1,operator_2)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10722 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10731 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10732 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10732 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10732 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10732 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10733 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10735 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10735 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10735 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10735 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10736 INFO  transform  - Starting transformation of Top@2136911375 OwnerIDs: 43... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10736 DEBUG transform  - Before transformation: 
TopAO (2136911375) Owner: 43
0 <- 0 MapAO (1488395499) Owner: 43
       0 <- 0 JoinAO (626941486) Owner: 43 Predicate: null
              0 <- 0 ElementWindowAO (19578363) Owner: 43
                     0 <- 0 AccessAO (185488647) Owner: 43
              1 <- 0 JoinAO (1807634633) Owner: 43 Predicate: null
                     0 <- 0 TimeWindowAO (1011276990) Owner: 43
                            0 <- 0 AccessAO (1750563752) Owner: 43
                     1 <- 0 AccessAO (285781448) Owner: 43
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10747 DEBUG ruleengine  - Ruleengine needed 10 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10748 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10748 INFO  transform  - Transformation of Top@2136911375 OwnerIDs: 43 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10748 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10749 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10749 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10750 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10750 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10750 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},person))
operator_2 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_3 = MAP({expressions=['bid.auction','bid.bidder','P.id','C.id']},JOIN(ELEMENTWINDOW({size=5,advance=1},bid),JOIN(operator_1,operator_2)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10750 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10751 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10751 DEBUG ReloadLog  - Query added to log: SELECT auction, bidder, P.id, C.id
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10751 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10752 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10752 INFO  StandardExecutor  - Starting query (ID: 43)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10752 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10753 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10755 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10756 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10757 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10758 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10766 INFO  StandardExecutor  - Query 43 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10766 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 43 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10768 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10769 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10772 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT auction, bidder, P.id, C.id 
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10773 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10774 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10775 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10775 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10775 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10775 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10776 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@7a79ca80[Locked by thread Thread-71] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10777 INFO  StandardExecutor  - Stopping query (ID: 43).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10777 DEBUG StandardExecutor  - Try to stop query 43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10777 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10778 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10779 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10779 INFO  StandardExecutor  - Query 43 stopped. Execution time 14 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10779 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 43 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10779 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10779 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10780 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10780 INFO  StandardExecutor  - Removing Query 43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10780 DEBUG StandardExecutor  - Removing Ownership 43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10780 INFO  StandardExecutor  - Query 43 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10780 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},person))
operator_2 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_3 = MAP({expressions=['bid.auction','bid.bidder','P.id','C.id']},JOIN(ELEMENTWINDOW({size=5,advance=1},bid),JOIN(operator_1,operator_2)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10780 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10781 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10781 DEBUG AbstractTestComponent  - Sub test "WindowTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10783 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10783 DEBUG AbstractTestComponent  - Stopping executor - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStopExecutor(AbstractTestComponent.java:110) 
10783 DEBUG SingleSchedulerManager  - Stop scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:304) 
10783 DEBUG AbstractSimpleThreadScheduler  - Stopping source treads - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:133) 
10784 DEBUG AbstractSimpleThreadScheduler  - Stopping scheduler executors - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:138) 
10784 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
10784 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
10784 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
10785 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
10785 DEBUG AbstractScheduler  - Stopping scheduling - de.uniol.inf.is.odysseus.core.server.scheduler.AbstractScheduler.stopScheduling(AbstractScheduler.java:216) 
10785 DEBUG AbstractSimpleThreadScheduler  - Setting new Plans to schedule :[] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:158) 
10785 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans done - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:178) 
10786 DEBUG SingleSchedulerManager  - Scheduling stopped. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:306) 
10791 DEBUG TestComponentRunner  - End Testcomponent 'CQL Parser Test'. Duration = 4393 ms - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:73) 
10791 DEBUG TestRunnerApplication  - Total results for component "CQL Parser Test" - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:103) 
10791 DEBUG TestRunnerApplication  - Sub test 1: CreateDatabaseConnectionTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10791 DEBUG TestRunnerApplication  - Sub test 2: CreateDatabaseSinkTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10791 DEBUG TestRunnerApplication  - Sub test 3: CreateDatabaseSourceTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10791 DEBUG TestRunnerApplication  - Sub test 4: CreateStreamFromFileTest.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10791 DEBUG TestRunnerApplication  - Sub test 5: CreateStreamTest.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10791 DEBUG TestRunnerApplication  - Sub test 6: CreateStreamToDatabaseSinkTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10791 DEBUG TestRunnerApplication  - Sub test 7: CreateViewTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10792 DEBUG TestRunnerApplication  - Sub test 8: ExistsTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10792 DEBUG TestRunnerApplication  - Sub test 9: ExistsTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10792 DEBUG TestRunnerApplication  - Sub test 10: ExistsTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10792 DEBUG TestRunnerApplication  - Sub test 11: QuantificationTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10792 DEBUG TestRunnerApplication  - Sub test 12: RenameTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10792 DEBUG TestRunnerApplication  - Sub test 13: RenameTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10792 DEBUG TestRunnerApplication  - Sub test 14: RenameTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10792 DEBUG TestRunnerApplication  - Sub test 15: RenameTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10792 DEBUG TestRunnerApplication  - Sub test 16: RenameTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10792 DEBUG TestRunnerApplication  - Sub test 17: RenameTest6.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10792 DEBUG TestRunnerApplication  - Sub test 18: RenameTest7.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10792 DEBUG TestRunnerApplication  - Sub test 19: SelectAggregationTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10792 DEBUG TestRunnerApplication  - Sub test 20: SelectAggregationTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 21: SelectAggregationTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 22: SelectAggregationTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 23: SelectAggregationTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 24: SelectAllTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 25: SelectAllTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 26: SelectAllTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 27: SelectAllTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 28: SelectAllTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 29: SelectAllTest6.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 30: SelectExpressionTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 31: SelectExpressionTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 32: SelectExpressionTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 33: SelectExpressionTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 34: SelectExpressionTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 35: SelectExpressionTest6.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 36: SelectExpressionTest7.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 37: SelectTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10793 DEBUG TestRunnerApplication  - Sub test 38: SelectTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10794 DEBUG TestRunnerApplication  - Sub test 39: SelectTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10794 DEBUG TestRunnerApplication  - Sub test 40: SelectTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10794 DEBUG TestRunnerApplication  - Sub test 41: SelectTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10794 DEBUG TestRunnerApplication  - Sub test 42: SelectTest6.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10794 DEBUG TestRunnerApplication  - Sub test 43: SelectTest7.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10794 DEBUG TestRunnerApplication  - Sub test 44: SetTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10794 DEBUG TestRunnerApplication  - Sub test 45: StreamToTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10794 DEBUG TestRunnerApplication  - Sub test 46: SubQueryTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10794 DEBUG TestRunnerApplication  - Sub test 47: WindowTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10794 DEBUG TestRunnerApplication  - Sub test 48: WindowTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10794 DEBUG TestRunnerApplication  - Sub test 49: WindowTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
10794 DEBUG TestRunnerApplication  - no components were added since 3ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
11798 DEBUG TestRunnerApplication  - no components were added since 5439ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
12799 DEBUG TestRunnerApplication  - no components were added since 6440ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
13801 DEBUG TestRunnerApplication  - no components were added since 7442ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
14805 DEBUG TestRunnerApplication  - no components were added since 8446ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
15810 DEBUG TestRunnerApplication  - no components were added since 9451ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
16814 DEBUG TestRunnerApplication  - All tests were run. - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:74) 
16819 DEBUG TestRunnerApplication  -  Status                                                      Component      Time Error
--------------------------------------------------------------------------------------
     OK                                                CQL Parser Test    4393ms
--------------------------------------------------------------------------------------
-                     OK             CreateDatabaseConnectionTest1.qry     435ms
-                     OK                   CreateDatabaseSinkTest1.qry     551ms
-                     OK                 CreateDatabaseSourceTest1.qry      94ms
-                     OK                  CreateStreamFromFileTest.qry      35ms
-                     OK                          CreateStreamTest.qry     135ms
-                     OK           CreateStreamToDatabaseSinkTest1.qry     202ms
-                     OK                           CreateViewTest1.qry      35ms
-                     OK                               ExistsTest1.qry     874ms
-                     OK                               ExistsTest2.qry      83ms
-                     OK                               ExistsTest3.qry      84ms
-                     OK                       QuantificationTest1.qry      90ms
-                     OK                               RenameTest1.qry      67ms
-                     OK                               RenameTest2.qry     135ms
-                     OK                               RenameTest3.qry      41ms
-                     OK                               RenameTest4.qry      36ms
-                     OK                               RenameTest5.qry      51ms
-                     OK                               RenameTest6.qry      54ms
-                     OK                               RenameTest7.qry      90ms
-                     OK                    SelectAggregationTest1.qry     114ms
-                     OK                    SelectAggregationTest2.qry      39ms
-                     OK                    SelectAggregationTest3.qry      58ms
-                     OK                    SelectAggregationTest4.qry      31ms
-                     OK                    SelectAggregationTest5.qry      38ms
-                     OK                            SelectAllTest1.qry      29ms
-                     OK                            SelectAllTest2.qry      22ms
-                     OK                            SelectAllTest3.qry      37ms
-                     OK                            SelectAllTest4.qry      24ms
-                     OK                            SelectAllTest5.qry      32ms
-                     OK                            SelectAllTest6.qry      49ms
-                     OK                     SelectExpressionTest1.qry      28ms
-                     OK                     SelectExpressionTest2.qry      28ms
-                     OK                     SelectExpressionTest3.qry      63ms
-                     OK                     SelectExpressionTest4.qry      27ms
-                     OK                     SelectExpressionTest5.qry      46ms
-                     OK                     SelectExpressionTest6.qry      30ms
-                     OK                     SelectExpressionTest7.qry      53ms
-                     OK                               SelectTest1.qry      21ms
-                     OK                               SelectTest2.qry      35ms
-                     OK                               SelectTest3.qry      42ms
-                     OK                               SelectTest4.qry      33ms
-                     OK                               SelectTest5.qry      31ms
-                     OK                               SelectTest6.qry      33ms
-                     OK                               SelectTest7.qry      36ms
-                     OK                                  SetTest1.qry      36ms
-                     OK                             StreamToTest1.qry      33ms
-                     OK                             SubQueryTest1.qry      50ms
-                     OK                               WindowTest1.qry      27ms
-                     OK                               WindowTest2.qry      32ms
-                     OK                               WindowTest3.qry      82ms
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
     OK                                                                   4393ms 
 - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.printReports(TestRunnerApplication.java:205) 
16820 DEBUG TestRunnerApplication  - All tests finished with no errors. - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:87) 
16863 DEBUG MEP  - Remove Function Provider: && - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16864 DEBUG MEP  - Remove Function Provider: || - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16864 DEBUG MEP  - Remove Function Provider: ! - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16864 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16864 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16864 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16864 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16864 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16864 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16865 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16865 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16865 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16865 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16865 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16865 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16865 DEBUG MEP  - Remove Function Provider: <= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16865 DEBUG MEP  - Remove Function Provider: <= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16865 DEBUG MEP  - Remove Function Provider: < - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16866 DEBUG MEP  - Remove Function Provider: < - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16866 DEBUG MEP  - Remove Function Provider: >= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16866 DEBUG MEP  - Remove Function Provider: >= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16866 DEBUG MEP  - Remove Function Provider: > - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16866 DEBUG MEP  - Remove Function Provider: > - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16866 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16866 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16866 DEBUG MEP  - Remove Function Provider: toProbabilisticContinuousDouble - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16866 DEBUG MEP  - Remove Function Provider: toProbabilisticDiscreteDouble - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16867 DEBUG MEP  - Remove Function Provider: similarity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16867 DEBUG MEP  - Remove Function Provider: similarity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16867 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16867 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16867 DEBUG MEP  - Remove Function Provider: kl - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16867 DEBUG MEP  - Remove Function Provider: kl - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16867 DEBUG MEP  - Remove Function Provider: loglikelihood - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16867 DEBUG MEP  - Remove Function Provider: as2DVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16868 DEBUG MEP  - Remove Function Provider: as3DVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16868 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16868 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16868 DEBUG MEP  - Remove Function Provider: int - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16870 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16870 DEBUG MEP  - Remove Function Provider: path - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16871 DEBUG MEP  - Remove Function Provider: toKeyValue - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16871 DEBUG MEP  - Remove Function Provider: getElement - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16871 DEBUG MEP  - Remove Function Provider: getElements - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16880 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@94ab795 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
16880 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@94ab795 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
16881 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@49a637e - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
16881 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@49a637e - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
16882 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@37824724 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
16882 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@37824724 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
16884 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@338dc321 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
16884 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@338dc321 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
16884 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.app.AppCommands@51a415be - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
16884 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.app.AppCommands@51a415be - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
16885 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@7f21cff8 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
16885 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@7f21cff8 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
16885 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@7d4448b3 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
16885 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@7d4448b3 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
16885 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@667aa548 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
16886 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@667aa548 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
16893 DEBUG MEP  - Remove Function Provider: MDAIndex - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16893 DEBUG MEP  - Remove Function Provider: MDAIndices - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16894 DEBUG MEP  - Remove Function Provider: MDADim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16894 DEBUG MEP  - Remove Function Provider: MDAInit - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16895 DEBUG MEP  - Remove Function Provider: MDADrop - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16895 DEBUG MEP  - Remove Function Provider: MDAAddDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16895 DEBUG MEP  - Remove Function Provider: MDAAddDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16895 DEBUG MEP  - Remove Function Provider: MDARemoveDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16895 DEBUG MEP  - Remove Function Provider: MDAExchangeDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16896 DEBUG MEP  - Remove Function Provider: binomialTest - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16906 DEBUG StandardExecutor  - Removing all queries before shutdown - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.deactivate(StandardExecutor.java:151) 
16911 DEBUG MEP  - Remove Function Provider: ContextStore - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
16914 DEBUG ruleengine  - Rewrite - Removing rules for... de.uniol.inf.is.odysseus.relational.rewrite.RuleProvider@292aa8bd - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.unbindRuleProvider(AbstractInventory.java:218) 
16917 DEBUG ruleengine  - Rewrite - Removing rules for... de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RewriteRuleProvider@70f420dd - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.unbindRuleProvider(AbstractInventory.java:218) 
16933 ERROR DatabaseConnectionDictionary  - The url cannot be null - de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:116) 
java.sql.SQLException: The url cannot be null
	at java.sql.DriverManager.getConnection(DriverManager.java:649)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at de.uniol.inf.is.odysseus.database.DataSourceFactoryRegistry.getConnection(DataSourceFactoryRegistry.java:37)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.assertConnection(DatabaseConnection.java:360)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.getConnection(DatabaseConnection.java:94)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:111)
	at de.uniol.inf.is.odysseus.database.Activator.stop(Activator.java:47)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:827)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.stop(BundleContextImpl.java:820)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.stopWorker0(EquinoxBundle.java:955)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.stopWorker(EquinoxBundle.java:323)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.decStartLevel(ModuleContainer.java:1623)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1542)
	at org.eclipse.osgi.container.SystemModule.stopWorker(SystemModule.java:248)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule.stopWorker(EquinoxBundle.java:144)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.SystemModule.stop(SystemModule.java:186)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule$1.run(EquinoxBundle.java:159)
	at java.lang.Thread.run(Thread.java:745)
16934 ERROR DatabaseConnectionDictionary  - No suitable driver found for jdbc:mysql: - de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:116) 
java.sql.SQLException: No suitable driver found for jdbc:mysql:
	at java.sql.DriverManager.getConnection(DriverManager.java:689)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at de.uniol.inf.is.odysseus.database.DataSourceFactoryRegistry.getConnection(DataSourceFactoryRegistry.java:37)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.assertConnection(DatabaseConnection.java:360)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.getConnection(DatabaseConnection.java:94)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:111)
	at de.uniol.inf.is.odysseus.database.Activator.stop(Activator.java:47)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:827)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.stop(BundleContextImpl.java:820)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.stopWorker0(EquinoxBundle.java:955)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.stopWorker(EquinoxBundle.java:323)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.decStartLevel(ModuleContainer.java:1623)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1542)
	at org.eclipse.osgi.container.SystemModule.stopWorker(SystemModule.java:248)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule.stopWorker(EquinoxBundle.java:144)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.SystemModule.stop(SystemModule.java:186)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule$1.run(EquinoxBundle.java:159)
	at java.lang.Thread.run(Thread.java:745)
16935 ERROR DatabaseConnectionDictionary  - No suitable driver found for jdbc:mysql: - de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:116) 
java.sql.SQLException: No suitable driver found for jdbc:mysql:
	at java.sql.DriverManager.getConnection(DriverManager.java:689)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at de.uniol.inf.is.odysseus.database.DataSourceFactoryRegistry.getConnection(DataSourceFactoryRegistry.java:37)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.assertConnection(DatabaseConnection.java:360)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.getConnection(DatabaseConnection.java:94)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:111)
	at de.uniol.inf.is.odysseus.database.Activator.stop(Activator.java:47)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:827)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.stop(BundleContextImpl.java:820)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.stopWorker0(EquinoxBundle.java:955)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.stopWorker(EquinoxBundle.java:323)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.decStartLevel(ModuleContainer.java:1623)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1542)
	at org.eclipse.osgi.container.SystemModule.stopWorker(SystemModule.java:248)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule.stopWorker(EquinoxBundle.java:144)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.SystemModule.stop(SystemModule.java:186)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule$1.run(EquinoxBundle.java:159)
	at java.lang.Thread.run(Thread.java:745)
16936 ERROR DatabaseConnectionDictionary  - No suitable driver found for jdbc:mysql: - de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:116) 
java.sql.SQLException: No suitable driver found for jdbc:mysql:
	at java.sql.DriverManager.getConnection(DriverManager.java:689)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at de.uniol.inf.is.odysseus.database.DataSourceFactoryRegistry.getConnection(DataSourceFactoryRegistry.java:37)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.assertConnection(DatabaseConnection.java:360)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.getConnection(DatabaseConnection.java:94)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:111)
	at de.uniol.inf.is.odysseus.database.Activator.stop(Activator.java:47)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:827)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.stop(BundleContextImpl.java:820)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.stopWorker0(EquinoxBundle.java:955)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.stopWorker(EquinoxBundle.java:323)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.decStartLevel(ModuleContainer.java:1623)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1542)
	at org.eclipse.osgi.container.SystemModule.stopWorker(SystemModule.java:248)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule.stopWorker(EquinoxBundle.java:144)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.SystemModule.stop(SystemModule.java:186)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule$1.run(EquinoxBundle.java:159)
	at java.lang.Thread.run(Thread.java:745)
16937 ERROR DatabaseConnectionDictionary  - The url cannot be null - de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:116) 
java.sql.SQLException: The url cannot be null
	at java.sql.DriverManager.getConnection(DriverManager.java:649)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at de.uniol.inf.is.odysseus.database.DataSourceFactoryRegistry.getConnection(DataSourceFactoryRegistry.java:37)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.assertConnection(DatabaseConnection.java:360)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.getConnection(DatabaseConnection.java:94)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:111)
	at de.uniol.inf.is.odysseus.database.Activator.stop(Activator.java:47)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:827)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.stop(BundleContextImpl.java:820)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.stopWorker0(EquinoxBundle.java:955)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.stopWorker(EquinoxBundle.java:323)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.decStartLevel(ModuleContainer.java:1623)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1542)
	at org.eclipse.osgi.container.SystemModule.stopWorker(SystemModule.java:248)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule.stopWorker(EquinoxBundle.java:144)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.SystemModule.stop(SystemModule.java:186)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule$1.run(EquinoxBundle.java:159)
	at java.lang.Thread.run(Thread.java:745)
16939 ERROR DatabaseConnectionDictionary  - No suitable driver found for jdbc:mysql://localhost:0/test4 - de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:116) 
java.sql.SQLException: No suitable driver found for jdbc:mysql://localhost:0/test4
	at java.sql.DriverManager.getConnection(DriverManager.java:689)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at de.uniol.inf.is.odysseus.database.DataSourceFactoryRegistry.getConnection(DataSourceFactoryRegistry.java:37)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.assertConnection(DatabaseConnection.java:360)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.getConnection(DatabaseConnection.java:94)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:111)
	at de.uniol.inf.is.odysseus.database.Activator.stop(Activator.java:47)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:827)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.stop(BundleContextImpl.java:820)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.stopWorker0(EquinoxBundle.java:955)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.stopWorker(EquinoxBundle.java:323)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.decStartLevel(ModuleContainer.java:1623)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1542)
	at org.eclipse.osgi.container.SystemModule.stopWorker(SystemModule.java:248)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule.stopWorker(EquinoxBundle.java:144)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.SystemModule.stop(SystemModule.java:186)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule$1.run(EquinoxBundle.java:159)
	at java.lang.Thread.run(Thread.java:745)
16940 ERROR DatabaseConnectionDictionary  - No suitable driver found for jdbc:mysql://localhost:3306/test3 - de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:116) 
java.sql.SQLException: No suitable driver found for jdbc:mysql://localhost:3306/test3
	at java.sql.DriverManager.getConnection(DriverManager.java:689)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at de.uniol.inf.is.odysseus.database.DataSourceFactoryRegistry.getConnection(DataSourceFactoryRegistry.java:37)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.assertConnection(DatabaseConnection.java:360)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.getConnection(DatabaseConnection.java:94)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:111)
	at de.uniol.inf.is.odysseus.database.Activator.stop(Activator.java:47)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:827)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.stop(BundleContextImpl.java:820)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.stopWorker0(EquinoxBundle.java:955)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.stopWorker(EquinoxBundle.java:323)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.decStartLevel(ModuleContainer.java:1623)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1542)
	at org.eclipse.osgi.container.SystemModule.stopWorker(SystemModule.java:248)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule.stopWorker(EquinoxBundle.java:144)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.SystemModule.stop(SystemModule.java:186)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule$1.run(EquinoxBundle.java:159)
	at java.lang.Thread.run(Thread.java:745)
16941 ERROR DatabaseConnectionDictionary  - No suitable driver found for jdbc:mysql://localhost:3306/test2 - de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:116) 
java.sql.SQLException: No suitable driver found for jdbc:mysql://localhost:3306/test2
	at java.sql.DriverManager.getConnection(DriverManager.java:689)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at de.uniol.inf.is.odysseus.database.DataSourceFactoryRegistry.getConnection(DataSourceFactoryRegistry.java:37)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.assertConnection(DatabaseConnection.java:360)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.getConnection(DatabaseConnection.java:94)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeAllConnections(DatabaseConnectionDictionary.java:111)
	at de.uniol.inf.is.odysseus.database.Activator.stop(Activator.java:47)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:827)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$4.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.stop(BundleContextImpl.java:820)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.stopWorker0(EquinoxBundle.java:955)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.stopWorker(EquinoxBundle.java:323)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.decStartLevel(ModuleContainer.java:1623)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1542)
	at org.eclipse.osgi.container.SystemModule.stopWorker(SystemModule.java:248)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule.stopWorker(EquinoxBundle.java:144)
	at org.eclipse.osgi.container.Module.doStop(Module.java:626)
	at org.eclipse.osgi.container.Module.stop(Module.java:488)
	at org.eclipse.osgi.container.SystemModule.stop(SystemModule.java:186)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule$1.run(EquinoxBundle.java:159)
	at java.lang.Thread.run(Thread.java:745)
17325 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
17325 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
17325 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
17326 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
17326 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
17331 DEBUG UserManagementProvider  - User management Memorystore removed - de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.unbindUserManagement(UserManagementProvider.java:134) 
17336 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17336 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17336 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17336 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17336 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17337 DEBUG MEP  - Remove Function Provider: sub - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17337 DEBUG MEP  - Remove Function Provider: sub - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17337 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17337 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17337 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17337 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17337 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17337 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17338 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17338 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17338 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17338 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17338 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17338 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17338 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17338 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17338 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17339 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17339 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17339 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17339 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17339 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17339 DEBUG MEP  - Remove Function Provider: ^ - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17339 DEBUG MEP  - Remove Function Provider: dotProduct - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17339 DEBUG MEP  - Remove Function Provider: dotProduct - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17339 DEBUG MEP  - Remove Function Provider: Min - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17340 DEBUG MEP  - Remove Function Provider: Min - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17340 DEBUG MEP  - Remove Function Provider: Max - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17340 DEBUG MEP  - Remove Function Provider: Max - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17340 DEBUG MEP  - Remove Function Provider: Count - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17340 DEBUG MEP  - Remove Function Provider: Count - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17340 DEBUG MEP  - Remove Function Provider: Sum - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17340 DEBUG MEP  - Remove Function Provider: Sum - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17340 DEBUG MEP  - Remove Function Provider: AVG - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17340 DEBUG MEP  - Remove Function Provider: AVG - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17341 DEBUG MEP  - Remove Function Provider: Median - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17341 DEBUG MEP  - Remove Function Provider: Median - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17341 DEBUG MEP  - Remove Function Provider: StdDev - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17341 DEBUG MEP  - Remove Function Provider: StdDev - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17341 DEBUG MEP  - Remove Function Provider: Var - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17341 DEBUG MEP  - Remove Function Provider: Var - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17341 DEBUG MEP  - Remove Function Provider: toVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17341 DEBUG MEP  - Remove Function Provider: toMatrix - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17341 DEBUG MEP  - Remove Function Provider: toString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17341 DEBUG MEP  - Remove Function Provider: toString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17342 DEBUG MEP  - Remove Function Provider: vectorFromString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17342 DEBUG MEP  - Remove Function Provider: vectorFromString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17342 DEBUG MEP  - Remove Function Provider: readMatrix - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17342 DEBUG MEP  - Remove Function Provider: readVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17342 DEBUG MEP  - Remove Function Provider: readVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17342 DEBUG MEP  - Remove Function Provider: perms - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17342 DEBUG MEP  - Remove Function Provider: perm - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17342 DEBUG MEP  - Remove Function Provider: det - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17343 DEBUG MEP  - Remove Function Provider: tr - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17343 DEBUG MEP  - Remove Function Provider: trans - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17343 DEBUG MEP  - Remove Function Provider: inv - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17343 DEBUG MEP  - Remove Function Provider: identity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17343 DEBUG MEP  - Remove Function Provider: zeros - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17343 DEBUG MEP  - Remove Function Provider: ones - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17343 DEBUG MEP  - Remove Function Provider: eig - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17343 DEBUG MEP  - Remove Function Provider: ieig - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17344 DEBUG MEP  - Remove Function Provider: svd - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17344 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17344 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17344 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17344 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17344 DEBUG MEP  - Remove Function Provider: ^ - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17344 DEBUG MEP  - Remove Function Provider: union - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17344 DEBUG MEP  - Remove Function Provider: intersection - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17344 DEBUG MEP  - Remove Function Provider: difference - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17345 DEBUG MEP  - Remove Function Provider: toInterval - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17345 DEBUG MEP  - Remove Function Provider: kvread - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17345 DEBUG MEP  - Remove Function Provider: kvwrite - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17345 DEBUG MEP  - Remove Function Provider: kvremove - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17345 DEBUG MEP  - Remove Function Provider: DolToEur - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17346 DEBUG MEP  - Remove Function Provider: retrieveQueryIDs - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17346 DEBUG MEP  - Remove Function Provider: filterQueryIDs - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17346 DEBUG MEP  - Remove Function Provider: QueryPriority - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17346 DEBUG MEP  - Remove Function Provider: IsACQuery - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17346 DEBUG MEP  - Remove Function Provider: QueryBasePriority - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17346 DEBUG MEP  - Remove Function Provider: QueryState - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17346 DEBUG MEP  - Remove Function Provider: QueryName - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17346 DEBUG MEP  - Remove Function Provider: QueryStartTS - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17346 DEBUG MEP  - Remove Function Provider: QueryLastStateChangeTS - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17347 DEBUG MEP  - Remove Function Provider: QuerySheddingFactor - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17347 DEBUG MEP  - Remove Function Provider: MaxSheddingFactor - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17347 DEBUG MEP  - Remove Function Provider: getSharedOpsCount - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17347 DEBUG MEP  - Remove Function Provider: getSourceCount - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
