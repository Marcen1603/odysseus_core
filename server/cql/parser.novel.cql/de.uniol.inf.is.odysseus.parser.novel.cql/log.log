Configuration location:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/
Configuration file:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/config.ini loaded
Install location:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/
Framework located:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/plugins/org.eclipse.osgi_3.10.101.v20150820-1432.jar
Framework classpath:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/plugins/org.eclipse.osgi_3.10.101.v20150820-1432.jar
Splash location:
    null
Debug options:
    file:/Applications/Eclipse.app/Contents/MacOS/.options not found
Time to load bundles: 7
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [bundleresource://75.fwk1173346575:2/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [bundleresource://75.fwk1173346575:6/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
0    DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@3b915dc5 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
7    DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@3b915dc5 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
7    DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@3c7308ae - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
7    DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@3c7308ae - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
!SESSION 2017-04-30 19:11:04.220 -----------------------------------------------
eclipse.buildId=unknown
java.version=1.8.0_112
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en
Framework arguments:  -product de.uniol.inf.is.odysseus.test.odysseustestproduct System manager
Command-line arguments:  -product de.uniol.inf.is.odysseus.test.odysseustestproduct -data /Users/jp/workspace/eclipse/odysseus/../runtime-TestRunnerProduct.product -dev file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/dev.properties -os macosx -ws cocoa -arch x86_64 -consoleLog -debug .options System manager -console

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:05.238
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.cql. The reference is: Reference[name = IVisitor, interface = de.uniol.inf.is.odysseus.parser.cql.IVisitor, policy = dynamic, cardinality = 0..n, target = null, bind = addVisitor, unbind = removeVisitor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:05.250
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.report.ReportProviderBinder. The reference is: Reference[name = IReportProvider, interface = de.uniol.inf.is.odysseus.report.IReportProvider, policy = dynamic, cardinality = 0..n, target = null, bind = bindReportProvider, unbind = unbindReportProvider]
62   DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@13a5924 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
63   DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@13a5924 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
190  INFO  Core  - Current size of heap: 	1.0 GB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:61) 
190  INFO  Core  - Maximum size of heap: 	1.9 GB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:64) 
191  INFO  Core  - Free memory of the heap: 	959.3 MB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:67) 
194  INFO  Core  - Running VM with: 	x86_64 - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:70) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:05.672
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.core.server.operatorbuilder. The reference is: Reference[name = IOperatorBuilder, interface = de.uniol.inf.is.odysseus.core.server.logicaloperator.builder.IOperatorBuilder, policy = dynamic, cardinality = 0..n, target = null, bind = addOperatorBuilder, unbind = removeOperatorBuilder]
621  DEBUG FileUtils  - Read from file /Users/jp/.odysseus/odysseus.conf - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 
666  INFO  OdysseusConfiguration  - Read config file from /Users/jp/.odysseus/odysseus.conf - de.uniol.inf.is.odysseus.core.server.OdysseusConfiguration.loadProperties(OdysseusConfiguration.java:86) 
703  DEBUG FileUtils  - Read from file /Users/jp/.odysseus/store/tenants.store - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:07.260
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLStatementGenerator. The reference is: Reference[name = IPQLStatementGenerator, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLStatementGenerator, policy = dynamic, cardinality = 0..n, target = null, bind = bindPQLStatementGenerator, unbind = unbindPQLStatementGenerator]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:07.528
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.relational_interval.ReplacementRegistry. The reference is: Reference[name = IReplacement, interface = de.uniol.inf.is.odysseus.relational_interval.replacement.IReplacement, policy = dynamic, cardinality = 0..n, target = null, bind = addReplacement, unbind = removeReplacement]
2336 DEBUG ruleengine  - Rewrite - Group added to workflow: PREPARE. New workflow is: [PREPARE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2336 DEBUG ruleengine  - Rewrite - Group added to workflow: DELETE. New workflow is: [PREPARE, DELETE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2336 DEBUG ruleengine  - Rewrite - Group added to workflow: SPLIT. New workflow is: [PREPARE, DELETE, SPLIT] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2338 DEBUG ruleengine  - Rewrite - Group added to workflow: PREGROUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2338 DEBUG ruleengine  - Rewrite - Group added to workflow: SWITCH. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2338 DEBUG ruleengine  - Rewrite - Group added to workflow: GROUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH, GROUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2338 DEBUG ruleengine  - Rewrite - Group added to workflow: CLEANUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH, GROUP, CLEANUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:07.604
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.Config. The reference is: Reference[name = IOdysseusScriptConfigSetting, interface = de.uniol.inf.is.odysseus.script.parser.IOdysseusScriptConfigSetting, policy = dynamic, cardinality = 0..n, target = null, bind = bindConfigSetting, unbind = unbindConfigSetting]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:07.612
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.ReplacementProviderManager. The reference is: Reference[name = IReplacementProvider, interface = de.uniol.inf.is.odysseus.script.parser.IReplacementProvider, policy = dynamic, cardinality = 0..n, target = null, bind = bindReplacementProvider, unbind = unbindReplacementProvider]
2415 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@77e2a3ba - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
2415 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@77e2a3ba - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:07.624
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.RecoveryConfigKeyword. The reference is: Reference[name = IRecoveryExecutor, interface = de.uniol.inf.is.odysseus.core.server.recovery.IRecoveryExecutor, policy = dynamic, cardinality = 0..n, target = null, bind = bindRecoveryExecutor, unbind = unbindRecoveryExecutor]
2562 DEBUG ruleengine  - Transform - Group added to workflow: SUBSTITUTION. New workflow is: [SUBSTITUTION] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2562 DEBUG ruleengine  - Transform - Group added to workflow: INIT. New workflow is: [SUBSTITUTION, INIT] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2562 DEBUG ruleengine  - Transform - Group added to workflow: ACCESS. New workflow is: [SUBSTITUTION, INIT, ACCESS] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2562 DEBUG ruleengine  - Transform - Group added to workflow: CREATE_METADATA. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2563 DEBUG ruleengine  - Transform - Group added to workflow: TRANSFORMATION. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2563 DEBUG ruleengine  - Transform - Group added to workflow: SENDER. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2563 DEBUG ruleengine  - Transform - Group added to workflow: SECURITY. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2563 DEBUG ruleengine  - Transform - Group added to workflow: METAOBJECTS. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2563 DEBUG ruleengine  - Transform - Group added to workflow: VALIDATE. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS, VALIDATE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2563 DEBUG ruleengine  - Transform - Group added to workflow: CLEANUP. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS, VALIDATE, CLEANUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2611 DEBUG ruleengine  - Transform - Loading rule - TAggregationAORule: "TAggregationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2614 DEBUG ruleengine  - Transform - Loading rule - TAggregationAORule: "TAggregationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2645 DEBUG ruleengine  - Transform - Loading rule - TSaseAOToPatternDetectAORule: "SASEAO --> PATTERNDETECTAO" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2648 DEBUG ruleengine  - Transform - Loading rule - TSaseAOToPatternDetectAORule: "SASEAO --> PATTERNDETECTAO" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2655 DEBUG ruleengine  - Transform - Loading rule - TPatternDetectAORule: "CepAO --> CepOperator (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2657 DEBUG ruleengine  - Transform - Loading rule - TPatternDetectAORule: "CepAO --> CepOperator (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2707 DEBUG UserManagementProvider  - Bound UserManagementService Memorystore - de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.bindUserManagement(UserManagementProvider.java:120) 
2942 DEBUG ruleengine  - Transform - Loading rule - TLatencyCalculationRule: "LatencyCalculationAO -> LatencyCalculationPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2944 DEBUG ruleengine  - Transform - Loading rule - TLatencyCalculationRule: "LatencyCalculationAO -> LatencyCalculationPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2947 DEBUG ruleengine  - Transform - Loading rule - TLatencyToPayloadAORule: "TLatencyToPayloadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2948 DEBUG ruleengine  - Transform - Loading rule - TLatencyToPayloadAORule: "TLatencyToPayloadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3232 DEBUG ruleengine  - Transform - Loading rule - TPatternMatchingAORule: "PatternMatchingAO -> PatternMatchingPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3238 DEBUG ruleengine  - Transform - Loading rule - TPatternMatchingAORule: "PatternMatchingAO -> PatternMatchingPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
osgi> 3459 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionAORule: "LinearRegressionAO -> LinearRegressionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3463 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionMergeAORule: "LinearRegressionMergeAO -> LinearRegressionMergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3465 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAOInsertLinearRegressionRule: "JoinAO -> Insert linear regression for Equi-Join" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3469 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAORule: "JoinAO -> Continuous probabilistic Equi-Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3474 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetDMRule: "Insert DataMergeFunction (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3480 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3483 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO -> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3487 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3489 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteUnNestAORule: "UnNestAO -> ProbabilisticDiscreteUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3491 DEBUG ruleengine  - Transform - Loading rule - TAssignDistributionAORule: "AssignDistributionAO -> AssignDistributionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3493 DEBUG ruleengine  - Transform - Loading rule - TEMAORule: "EMAO -> EMPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3497 DEBUG ruleengine  - Transform - Loading rule - TKalmanFilterAORule: "KalmanFilterAO -> KalmanFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3507 DEBUG ruleengine  - Transform - Loading rule - TKDEAORule: "KDEAO -> KDEPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3517 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAggregateAORule: "AggregateTIPO use probabilistic aggregations (IProbabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3521 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAORule: "ProbabilisticAO -> MetadataUpdatePO(IProbabilistic)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3540 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticApplicationTimestampRule: "TProbabilisticApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3558 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAORule: "JoinAO -> probabilistic Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3559 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetDMRule: "Insert DataMergeFunction JoinTIPO (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3561 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3569 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticMapAORule: "MapAO -> ProbabilisticMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3573 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3575 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3578 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3583 DEBUG ruleengine  - Transform - Loading rule - TRelationalExistenceToPayloadRule: "ExistenceToPayloadAO --> RelationalExistenceToPayloadPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3587 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionAORule: "LinearRegressionAO -> LinearRegressionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3587 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionMergeAORule: "LinearRegressionMergeAO -> LinearRegressionMergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3587 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAOInsertLinearRegressionRule: "JoinAO -> Insert linear regression for Equi-Join" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3588 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAORule: "JoinAO -> Continuous probabilistic Equi-Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3588 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetDMRule: "Insert DataMergeFunction (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3589 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3589 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO -> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3590 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3590 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteUnNestAORule: "UnNestAO -> ProbabilisticDiscreteUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3591 DEBUG ruleengine  - Transform - Loading rule - TAssignDistributionAORule: "AssignDistributionAO -> AssignDistributionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3592 DEBUG ruleengine  - Transform - Loading rule - TEMAORule: "EMAO -> EMPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3592 DEBUG ruleengine  - Transform - Loading rule - TKalmanFilterAORule: "KalmanFilterAO -> KalmanFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3593 DEBUG ruleengine  - Transform - Loading rule - TKDEAORule: "KDEAO -> KDEPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3593 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAggregateAORule: "AggregateTIPO use probabilistic aggregations (IProbabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3593 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAORule: "ProbabilisticAO -> MetadataUpdatePO(IProbabilistic)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3594 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticApplicationTimestampRule: "TProbabilisticApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3594 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAORule: "JoinAO -> probabilistic Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3595 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetDMRule: "Insert DataMergeFunction JoinTIPO (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3596 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3597 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticMapAORule: "MapAO -> ProbabilisticMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3598 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3600 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3601 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3602 DEBUG ruleengine  - Transform - Loading rule - TRelationalExistenceToPayloadRule: "ExistenceToPayloadAO --> RelationalExistenceToPayloadPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3705 DEBUG ruleengine  - Transform - Loading rule - TAggregateAORule: "TAggregateAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3706 DEBUG ruleengine  - Transform - Loading rule - TAggregatePORule: "Insert RelationalTupleGroupingHelper" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3709 DEBUG ruleengine  - Transform - Loading rule - TAssociativeStorageAORule: "AssociativeStorageAO -> AssociativeStoragePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3710 DEBUG ruleengine  - Transform - Loading rule - TBloomFilterAORule: "BloomFilterAO -> RelationalBloomFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3713 DEBUG ruleengine  - Transform - Loading rule - TConvolutionFilterAORule: "ConvolutionFilterAO -> ConvolutionFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3718 DEBUG ruleengine  - Transform - Loading rule - TEnrichAddDataMergeFunctionRule: "Insert DataMerge Function Enrich (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3721 DEBUG ruleengine  - Transform - Loading rule - TGroupSplitFileWriter: "TGroupSplitFileWriter" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3722 DEBUG ruleengine  - Transform - Loading rule - TInitPredicateRule: "Init Predicates" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3722 DEBUG ruleengine  - Transform - Loading rule - TMapAORule: "MapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3723 DEBUG ruleengine  - Transform - Loading rule - TProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3724 DEBUG ruleengine  - Transform - Loading rule - TRelationalSocketSinkAORule: "SocketSinkAO -> SocketSinkPO (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3728 DEBUG ruleengine  - Transform - Loading rule - TStateMapAORule: "StateMapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3732 DEBUG ruleengine  - Transform - Loading rule - TToTupleAORule: "TToTupleAORule" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3734 DEBUG ruleengine  - Transform - Loading rule - TUnnestAORule: "UnNestAO -> RelationalUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3739 DEBUG ruleengine  - Transform - Loading rule - TAggregateAORule: "TAggregateAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3739 DEBUG ruleengine  - Transform - Loading rule - TAggregatePORule: "Insert RelationalTupleGroupingHelper" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3740 DEBUG ruleengine  - Transform - Loading rule - TAssociativeStorageAORule: "AssociativeStorageAO -> AssociativeStoragePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3740 DEBUG ruleengine  - Transform - Loading rule - TBloomFilterAORule: "BloomFilterAO -> RelationalBloomFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3740 DEBUG ruleengine  - Transform - Loading rule - TConvolutionFilterAORule: "ConvolutionFilterAO -> ConvolutionFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3741 DEBUG ruleengine  - Transform - Loading rule - TEnrichAddDataMergeFunctionRule: "Insert DataMerge Function Enrich (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3741 DEBUG ruleengine  - Transform - Loading rule - TGroupSplitFileWriter: "TGroupSplitFileWriter" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3741 DEBUG ruleengine  - Transform - Loading rule - TInitPredicateRule: "Init Predicates" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3742 DEBUG ruleengine  - Transform - Loading rule - TMapAORule: "MapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3742 DEBUG ruleengine  - Transform - Loading rule - TProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3742 DEBUG ruleengine  - Transform - Loading rule - TRelationalSocketSinkAORule: "SocketSinkAO -> SocketSinkPO (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3743 DEBUG ruleengine  - Transform - Loading rule - TStateMapAORule: "StateMapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3743 DEBUG ruleengine  - Transform - Loading rule - TToTupleAORule: "TToTupleAORule" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3743 DEBUG ruleengine  - Transform - Loading rule - TUnnestAORule: "UnNestAO -> RelationalUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3752 DEBUG ruleengine  - Transform - Loading rule - TApplicationTimestampRule: "TApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3753 DEBUG ruleengine  - Transform - Loading rule - TBufferedFilterAORule: "TBufferedFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3754 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateInsertDataMergeFunctionRule: "Insert DataMergeFunction ChangeCorrelate (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3756 DEBUG ruleengine  - Transform - Loading rule - TCombineAORule: "CombineAO -> CombinePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3757 DEBUG ruleengine  - Transform - Loading rule - TCompareSinkAO: "TCompareSinkAO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3759 DEBUG ruleengine  - Transform - Loading rule - TGeneratorAORule: "TGeneratorAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3760 DEBUG ruleengine  - Transform - Loading rule - TJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3762 DEBUG ruleengine  - Transform - Loading rule - TJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction JoinTIPO (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3764 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3766 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3774 DEBUG ruleengine  - Transform - Loading rule - TRelationalChangeDetectAORule: "TRelationalChangeDetectAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3776 DEBUG ruleengine  - Transform - Loading rule - TRelationalCreateNewFilenamePunctuationRule: "TRelationalCreateNewFilenamePunctuationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3779 DEBUG ruleengine  - Transform - Loading rule - TRelationalDistinctAORule: "TRelationalDistinctAORule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3854 DEBUG CommandProviderBinder  - Binding command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@10c89a76 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
3855 DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@10c89a76 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
3864 DEBUG ruleengine  - Transform - Loading rule - TRelationalFastMedianAORule: "TRelationalFastMedianAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3872 DEBUG ruleengine  - Transform - Loading rule - TRelationalInsertGroupProcessorTIPORule: "TRelationalInsertGroupProcessorTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3875 DEBUG ruleengine  - Transform - Loading rule - TRelationalJoinAORule: "TRelationalJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3883 DEBUG ruleengine  - Transform - Loading rule - TRelationalTimestampToPayloadRule: "TRelationalTimestampToPayloadRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3888 DEBUG ruleengine  - Transform - Loading rule - TRelationalTupleAggregateTransformationRule: "TRelationalTupleAggregateTransformationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3889 DEBUG ruleengine  - Transform - Loading rule - TReplacementAORule: "TReplacementAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3890 DEBUG ruleengine  - Transform - Loading rule - TSetTransferAreaConvolutionFilterPO: "TSetTransferAreaConvolutionFilterPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3895 DEBUG ruleengine  - Transform - Loading rule - TSortAddComparatorRule: "TSortAddComparatorRule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3902 DEBUG ruleengine  - Transform - Loading rule - TTopKAORule: "TTopKAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3906 DEBUG ruleengine  - Transform - Loading rule - TApplicationTimestampRule: "TApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3907 DEBUG ruleengine  - Transform - Loading rule - TBufferedFilterAORule: "TBufferedFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3907 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateInsertDataMergeFunctionRule: "Insert DataMergeFunction ChangeCorrelate (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3907 DEBUG ruleengine  - Transform - Loading rule - TCombineAORule: "CombineAO -> CombinePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3908 DEBUG ruleengine  - Transform - Loading rule - TCompareSinkAO: "TCompareSinkAO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3908 DEBUG ruleengine  - Transform - Loading rule - TGeneratorAORule: "TGeneratorAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3909 DEBUG ruleengine  - Transform - Loading rule - TJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3909 DEBUG ruleengine  - Transform - Loading rule - TJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction JoinTIPO (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3911 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3912 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3912 DEBUG ruleengine  - Transform - Loading rule - TRelationalChangeDetectAORule: "TRelationalChangeDetectAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3913 DEBUG ruleengine  - Transform - Loading rule - TRelationalCreateNewFilenamePunctuationRule: "TRelationalCreateNewFilenamePunctuationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3913 DEBUG ruleengine  - Transform - Loading rule - TRelationalDistinctAORule: "TRelationalDistinctAORule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3913 DEBUG ruleengine  - Transform - Loading rule - TRelationalFastMedianAORule: "TRelationalFastMedianAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3914 DEBUG ruleengine  - Transform - Loading rule - TRelationalInsertGroupProcessorTIPORule: "TRelationalInsertGroupProcessorTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3914 DEBUG ruleengine  - Transform - Loading rule - TRelationalJoinAORule: "TRelationalJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3915 DEBUG ruleengine  - Transform - Loading rule - TRelationalTimestampToPayloadRule: "TRelationalTimestampToPayloadRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3915 DEBUG ruleengine  - Transform - Loading rule - TRelationalTupleAggregateTransformationRule: "TRelationalTupleAggregateTransformationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3916 DEBUG ruleengine  - Transform - Loading rule - TReplacementAORule: "TReplacementAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3916 DEBUG ruleengine  - Transform - Loading rule - TSetTransferAreaConvolutionFilterPO: "TSetTransferAreaConvolutionFilterPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3916 DEBUG ruleengine  - Transform - Loading rule - TSortAddComparatorRule: "TSortAddComparatorRule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3917 DEBUG ruleengine  - Transform - Loading rule - TTopKAORule: "TTopKAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4071 DEBUG ruleengine  - Transform - Loading rule - TJoinAONoIntervalRule: "TJoinAONoIntervalRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4072 DEBUG ruleengine  - Transform - Loading rule - TJoinAORule: "TJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4075 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAORule: "JoinAO -> JoinTIPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4088 DEBUG ruleengine  - Transform - Loading rule - TAggregationTIPORule: "TAggregationTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4091 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateAORule: "ChangeCorrelateAO -> ChangeCorrelatePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4094 DEBUG ruleengine  - Transform - Loading rule - TCoalesceAORule: "TCoalesceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4097 DEBUG ruleengine  - Transform - Loading rule - TDifferenceAORule: "TDifferenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4098 DEBUG ruleengine  - Transform - Loading rule - TDistinctAORule: "TDistinctAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4099 DEBUG ruleengine  - Transform - Loading rule - TDuplicateEliminationAORule: "TDuplicateEliminationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4102 DEBUG ruleengine  - Transform - Loading rule - TExistenceAORule: "TExistenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4106 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "TFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4107 DEBUG ruleengine  - Transform - Loading rule - THeartbeatAORule: "THeartbeatAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4108 DEBUG ruleengine  - Transform - Loading rule - TReOrderAORule: "ReOrderAO -> AssureOrderPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4109 DEBUG ruleengine  - Transform - Loading rule - TSameTimestampRule: "TSameTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4110 DEBUG ruleengine  - Transform - Loading rule - TSelectAddHeartbeatGenerationRule: "Insert HeartbeatGenerationStrategy in SelectPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4113 DEBUG ruleengine  - Transform - Loading rule - TSortAORule: "TSortAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4114 DEBUG ruleengine  - Transform - Loading rule - TSyncWithSystemTimeAORule: "TSyncWithSystemTimeAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4115 DEBUG ruleengine  - Transform - Loading rule - TSystemTimestampRule: "TimestampAO -> MetadataUpdatePO(system timestamp)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4116 DEBUG ruleengine  - Transform - Loading rule - TTimeStampOrderValdiatorRule: "TTimeStampOrderValdiatorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4119 DEBUG ruleengine  - Transform - Loading rule - TUnionTIPORule: "TUnionTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4120 DEBUG ruleengine  - Transform - Loading rule - TWatermarkAORule: "TWatermarkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4123 DEBUG ruleengine  - Transform - Loading rule - TWindowAORule: "TWindowAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4128 DEBUG ruleengine  - Transform - Loading rule - TJoinAONoIntervalRule: "TJoinAONoIntervalRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4129 DEBUG ruleengine  - Transform - Loading rule - TJoinAORule: "TJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4129 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAORule: "JoinAO -> JoinTIPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4130 DEBUG ruleengine  - Transform - Loading rule - TAggregationTIPORule: "TAggregationTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4130 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateAORule: "ChangeCorrelateAO -> ChangeCorrelatePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4131 DEBUG ruleengine  - Transform - Loading rule - TCoalesceAORule: "TCoalesceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4131 DEBUG ruleengine  - Transform - Loading rule - TDifferenceAORule: "TDifferenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4132 DEBUG ruleengine  - Transform - Loading rule - TDistinctAORule: "TDistinctAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4133 DEBUG ruleengine  - Transform - Loading rule - TDuplicateEliminationAORule: "TDuplicateEliminationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4133 DEBUG ruleengine  - Transform - Loading rule - TExistenceAORule: "TExistenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4134 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "TFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4134 DEBUG ruleengine  - Transform - Loading rule - THeartbeatAORule: "THeartbeatAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4134 DEBUG ruleengine  - Transform - Loading rule - TReOrderAORule: "ReOrderAO -> AssureOrderPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4134 DEBUG ruleengine  - Transform - Loading rule - TSameTimestampRule: "TSameTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4134 DEBUG ruleengine  - Transform - Loading rule - TSelectAddHeartbeatGenerationRule: "Insert HeartbeatGenerationStrategy in SelectPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4135 DEBUG ruleengine  - Transform - Loading rule - TSortAORule: "TSortAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4135 DEBUG ruleengine  - Transform - Loading rule - TSyncWithSystemTimeAORule: "TSyncWithSystemTimeAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4135 DEBUG ruleengine  - Transform - Loading rule - TSystemTimestampRule: "TimestampAO -> MetadataUpdatePO(system timestamp)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4136 DEBUG ruleengine  - Transform - Loading rule - TTimeStampOrderValdiatorRule: "TTimeStampOrderValdiatorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4136 DEBUG ruleengine  - Transform - Loading rule - TUnionTIPORule: "TUnionTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4138 DEBUG ruleengine  - Transform - Loading rule - TWatermarkAORule: "TWatermarkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4138 DEBUG ruleengine  - Transform - Loading rule - TWindowAORule: "TWindowAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4144 DEBUG ruleengine  - Transform - Loading rule - TJoinAOErrorRule: "TJoinAOErrorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4146 DEBUG ruleengine  - Transform - Loading rule - TKeyValueApplicationTimestampRule: "TKeyValueApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4147 DEBUG ruleengine  - Transform - Loading rule - TKeyValueMapRule: "MapAO --> KeyValueMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4149 DEBUG ruleengine  - Transform - Loading rule - TKeyValueProjectRule: "ProjectAO --> KeyValueProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4150 DEBUG ruleengine  - Transform - Loading rule - TKeyValueRenameRule: "RenameAO --> KeyValueRenamePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4152 DEBUG ruleengine  - Transform - Loading rule - TKeyValueSelectRule: "TKeyValueSelectRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4154 DEBUG ruleengine  - Transform - Loading rule - TKeyValueToTupleRule: "ToTupleAO --> KeyValueToTuplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4157 DEBUG ruleengine  - Transform - Loading rule - TKeyValueUnnestAORule: "TKeyValueUnnestAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4167 DEBUG ruleengine  - Transform - Loading rule - TTupleToKeyValueRule: "TTupleToKeyValueRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4214 DEBUG ruleengine  - Transform - Loading rule - TJoinAOErrorRule: "TJoinAOErrorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4281 DEBUG ruleengine  - Transform - Loading rule - TKeyValueApplicationTimestampRule: "TKeyValueApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4281 DEBUG ruleengine  - Transform - Loading rule - TKeyValueMapRule: "MapAO --> KeyValueMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4282 DEBUG ruleengine  - Transform - Loading rule - TKeyValueProjectRule: "ProjectAO --> KeyValueProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4282 DEBUG ruleengine  - Transform - Loading rule - TKeyValueRenameRule: "RenameAO --> KeyValueRenamePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4282 DEBUG ruleengine  - Transform - Loading rule - TKeyValueSelectRule: "TKeyValueSelectRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4282 DEBUG ruleengine  - Transform - Loading rule - TKeyValueToTupleRule: "ToTupleAO --> KeyValueToTuplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4283 DEBUG ruleengine  - Transform - Loading rule - TKeyValueUnnestAORule: "TKeyValueUnnestAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4283 DEBUG ruleengine  - Transform - Loading rule - TTupleToKeyValueRule: "TTupleToKeyValueRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4299 DEBUG ruleengine  - Transform - Loading rule - TReplicationMergeAORule: "ReplicationMergeAO -> ReplicationMergePO | ReplicationMergeWithTrustPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4300 DEBUG ruleengine  - Transform - Loading rule - TReplicationMergeAORule: "ReplicationMergeAO -> ReplicationMergePO | ReplicationMergeWithTrustPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4338 DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.app.AppCommands@7aa44eed - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
4338 DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.app.AppCommands@7aa44eed - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
4831 DEBUG AbstractExecutor  - Initializing Executor. - de.uniol.inf.is.odysseus.core.server.planmanagement.executor.AbstractExecutor.initialize(AbstractExecutor.java:270) 
4832 DEBUG AbstractExecutor  - Initializing Executor done. - de.uniol.inf.is.odysseus.core.server.planmanagement.executor.AbstractExecutor.initialize(AbstractExecutor.java:280) 
5144 INFO  WebServicePublisher  - Webservice published at http://0:0:0:0:0:0:0:0:9669/odysseus - de.uniol.inf.is.odysseus.planmanagement.executor.webservice.server.WebServicePublisher.publish(WebServicePublisher.java:106) 
8660 DEBUG ruleengine  - Rewrite - Loading rules for... de.uniol.inf.is.odysseus.relational.rewrite.RuleProvider@886c92f - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.bindRuleProvider(AbstractInventory.java:208) 
8665 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteProjectionWithoutFunctionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteProjectionWithoutFunctionRule" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8666 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteSelectionWithoutPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteSelectionWithoutPredicate" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8666 DEBUG ruleengine  - Rewrite - Loading rule - RMergeSelectionJoinRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RMergeSelectionJoinRule" for group: "GROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8666 DEBUG ruleengine  - Rewrite - Loading rule - RMergeSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RMergeSelectionRule" for group: "GROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8667 DEBUG ruleengine  - Rewrite - Loading rule - RSplitSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSplitSelectionRule" for group: "SPLIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8667 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionRenameRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionRenameRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8668 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionUnionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionUnionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8668 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionWindowRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionWindowRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8668 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionJoinRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionJoinRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8669 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionDifferenceRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionDifferenceRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8669 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionProjectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionProjectionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8669 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionRenameRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionRenameRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8670 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionUnionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionUnionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8670 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionWindowRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionWindowRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8671 DEBUG ruleengine  - Rewrite - Loading rule - RPrepareSelectionCNF: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPrepareSelectionCNF" for group: "PREPARE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8671 DEBUG ruleengine  - Rewrite - Loading rule - RPrepareJoinCNF: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPrepareJoinCNF" for group: "PREPARE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8671 DEBUG ruleengine  - Rewrite - Loading rule - ROptimizeSelectionPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.ROptimizeSelectionPredicate" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8673 DEBUG ruleengine  - Rewrite - Loading rule - ROptimizeJoinPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.ROptimizeJoinPredicate" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8673 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteRenameAORule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteRenameAORule" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8675 DEBUG ruleengine  - Rewrite - Loading rule - RPregroupJoinSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPregroupJoinSelectionRule" for group: "PREGROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8678 DEBUG ruleengine  - Rewrite - Loading rules for... de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RewriteRuleProvider@b2cc98d - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.bindRuleProvider(AbstractInventory.java:208) 
8680 DEBUG ruleengine  - Rewrite - Loading rule - RIntersectionAORule: "de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RIntersectionAORule" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:13.883
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.compiler.standardcompiler. The reference is: Reference[name = IPlanGenerator, interface = de.uniol.inf.is.odysseus.core.server.plangeneration.IPlanGenerator, policy = dynamic, cardinality = 0..1, target = null, bind = bindPlanGenerator, unbind = unbindPlanGenerator]
8724 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
8725 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
8726 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
8733 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
8734 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
8735 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
8737 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
8737 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
8738 DEBUG FileUtils  - Read from file /Users/jp/.odysseus/scheduling.conf - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 
8739 DEBUG SingleSchedulerManager  - Set active Scheduler Single Thread Scheduler RR Multi Source (Biggest Queue) - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.setActiveScheduler(SingleSchedulerManager.java:202) 
8748 INFO  SingleSchedulerManager  - Active scheduler. class de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SimpleThreadSchedulerMSLimitSourcesPerThread - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.activate(SingleSchedulerManager.java:141) 
8749 DEBUG SingleSchedulerManager  - Start scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:286) 
8751 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
8751 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
8751 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
8751 DEBUG AbstractSimpleThreadScheduler  - Starting Scheduler with 4 thread(s). - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.startScheduling(AbstractSimpleThreadScheduler.java:119) 
8751 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
8752 DEBUG SingleSchedulerManager  - Scheduling started. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:288) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:13.965
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.optimization.standardoptimizer. The reference is: Reference[name = IPostOptimizationAction, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.optimization.IPostOptimizationAction, policy = dynamic, cardinality = 0..n, target = null, bind = bindPostOptimizationAction, unbind = unbindPostOptimizationAction]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:13.972
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.optimization.standardoptimizer. The reference is: Reference[name = IElementCloningUpdater, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.optimization.elementcloning.IElementCloningUpdater, policy = dynamic, cardinality = 0..n, target = null, bind = bindElementCloningUpdater, unbind = unbindElementCloningUpdater]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:13.973
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = ISystemMonitorFactory, interface = de.uniol.inf.is.odysseus.core.server.monitoring.ISystemMonitorFactory, policy = dynamic, cardinality = 0..1, target = null, bind = bindSystemMonitorFactory, unbind = unbindSystemMonitorFactory]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:13.985
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IQueryDistributor, interface = de.uniol.inf.is.odysseus.core.server.distribution.IQueryDistributor, policy = dynamic, cardinality = 0..1, target = null, bind = bindQueryDistributor, unbind = unbindQueryDistributor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:13.985
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IPreTransformationHandler, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.executor.IPreTransformationHandler, policy = dynamic, cardinality = 0..n, target = null, bind = bindPreTransformationHandler, unbind = unbindPreTransformationHandler]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:13.986
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IRecoveryExecutor, interface = de.uniol.inf.is.odysseus.core.server.recovery.IRecoveryExecutor, policy = dynamic, cardinality = 0..n, target = null, bind = bindRecoveryExecutor, unbind = unbindRecoveryExecutor]
8806 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@26361827 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
8806 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@26361827 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:14.011
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLGenerator. The reference is: Reference[name = IPQLGeneratorPreProcessor, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLGeneratorPreProcessor, policy = dynamic, cardinality = 0..n, target = null, bind = bindPreProcessor, unbind = unbindPreProcessor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:14.012
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLGenerator. The reference is: Reference[name = IPQLGeneratorPostProcessor, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLGeneratorPostProcessor, policy = dynamic, cardinality = 0..n, target = null, bind = bindPostProcessor, unbind = unbindPostProcessor]
8814 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@3da24eee - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
8815 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@3da24eee - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-04-30 19:11:14.030
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.cache.RemovalStrategyRegistry. The reference is: Reference[name = IRemovalStrategy, interface = de.uniol.inf.is.odysseus.cache.removalstrategy.IRemovalStrategy, policy = dynamic, cardinality = 0..n, target = null, bind = register, unbind = remove]
8830 DEBUG ruleengine  - Transform - Loading rule - TAccessAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8832 DEBUG ruleengine  - Transform - Loading rule - TAppendQueryAORule: "TAppendQueryAORule" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8833 DEBUG ruleengine  - Transform - Loading rule - TAppendToPhysicalAORule: "AppendToPhysical" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8834 DEBUG ruleengine  - Transform - Loading rule - TBufferAORule: "BufferAO -> BufferedPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8835 DEBUG ruleengine  - Transform - Loading rule - TCacheAORule: "CacheAO --> CachePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8836 DEBUG ruleengine  - Transform - Loading rule - TChangeDetectAORule: "ChangeDetectAO -> ChangeDetectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8837 DEBUG ruleengine  - Transform - Loading rule - TCloseStreamAORule: "TCloseStreamAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8838 DEBUG ruleengine  - Transform - Loading rule - TCommandAORule: "CommandAO --> CommandPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8838 DEBUG ruleengine  - Transform - Loading rule - TConsoleSinkAORule: "TConsoleSinkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8840 DEBUG ruleengine  - Transform - Loading rule - TConverterAORule: "ConverterAO --> ConverterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8841 DEBUG ruleengine  - Transform - Loading rule - TCSVFileSourceAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8842 DEBUG ruleengine  - Transform - Loading rule - TDeleteRenameAORule: "Delete Rename" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8843 DEBUG ruleengine  - Transform - Loading rule - TEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8844 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "FilterAO -> FilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8846 DEBUG ruleengine  - Transform - Loading rule - TMemStoreReadAORule: "TMemStoreReadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8848 DEBUG ruleengine  - Transform - Loading rule - TMemStoreWriteAORule: "TMemStoreWriteAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8849 DEBUG ruleengine  - Transform - Loading rule - TMergeAORule: "MergeAO --> MergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8850 DEBUG ruleengine  - Transform - Loading rule - TMetadataAOTransformation: "TMetadataAOTransformation" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8851 DEBUG ruleengine  - Transform - Loading rule - TPlanModificationActionAORule: "TPlanModificationActionAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8852 DEBUG ruleengine  - Transform - Loading rule - TRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8853 DEBUG ruleengine  - Transform - Loading rule - TRouteAORule: "RouteAO -> RoutePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8855 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO --> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8855 DEBUG ruleengine  - Transform - Loading rule - TSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8856 DEBUG ruleengine  - Transform - Loading rule - TSenderAOExistsRule: "Transform to existing SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8858 DEBUG ruleengine  - Transform - Loading rule - TSenderAOGenericRule: "AbstractSenderAO (generic) --> SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8859 DEBUG ruleengine  - Transform - Loading rule - TSenderAOViewRule: "Transform Sender View" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8860 DEBUG ruleengine  - Transform - Loading rule - TSetSystemTimeAORule: "SetSystemTimeAO -> SetSystemTimePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8861 DEBUG ruleengine  - Transform - Loading rule - TSetTimeProgressMarker: "TSetTimeProgressMarker" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8862 DEBUG ruleengine  - Transform - Loading rule - TSinkAORule: "SinkAO -> SinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8864 DEBUG ruleengine  - Transform - Loading rule - TSocketSinkAORule: "SocketSinkAO -> SocketSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8865 DEBUG ruleengine  - Transform - Loading rule - TStreamAORule: "Transform View or Stream" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8866 DEBUG ruleengine  - Transform - Loading rule - TTimeshiftAORule: "TimeshiftAO -> TimeshiftPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8867 DEBUG ruleengine  - Transform - Loading rule - TUserDefinedOperatorPO: "UdoAO -> UdoPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8869 DEBUG ruleengine  - Transform - Loading rule - TAccessAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8869 DEBUG ruleengine  - Transform - Loading rule - TAppendQueryAORule: "TAppendQueryAORule" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8870 DEBUG ruleengine  - Transform - Loading rule - TAppendToPhysicalAORule: "AppendToPhysical" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8870 DEBUG ruleengine  - Transform - Loading rule - TBufferAORule: "BufferAO -> BufferedPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8870 DEBUG ruleengine  - Transform - Loading rule - TCacheAORule: "CacheAO --> CachePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8871 DEBUG ruleengine  - Transform - Loading rule - TChangeDetectAORule: "ChangeDetectAO -> ChangeDetectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8871 DEBUG ruleengine  - Transform - Loading rule - TCloseStreamAORule: "TCloseStreamAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8872 DEBUG ruleengine  - Transform - Loading rule - TCommandAORule: "CommandAO --> CommandPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8872 DEBUG ruleengine  - Transform - Loading rule - TConsoleSinkAORule: "TConsoleSinkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8872 DEBUG ruleengine  - Transform - Loading rule - TConverterAORule: "ConverterAO --> ConverterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8872 DEBUG ruleengine  - Transform - Loading rule - TCSVFileSourceAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8873 DEBUG ruleengine  - Transform - Loading rule - TDeleteRenameAORule: "Delete Rename" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8873 DEBUG ruleengine  - Transform - Loading rule - TEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8873 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "FilterAO -> FilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8873 DEBUG ruleengine  - Transform - Loading rule - TMemStoreReadAORule: "TMemStoreReadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8873 DEBUG ruleengine  - Transform - Loading rule - TMemStoreWriteAORule: "TMemStoreWriteAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8874 DEBUG ruleengine  - Transform - Loading rule - TMergeAORule: "MergeAO --> MergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8874 DEBUG ruleengine  - Transform - Loading rule - TMetadataAOTransformation: "TMetadataAOTransformation" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8874 DEBUG ruleengine  - Transform - Loading rule - TPlanModificationActionAORule: "TPlanModificationActionAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8874 DEBUG ruleengine  - Transform - Loading rule - TRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8874 DEBUG ruleengine  - Transform - Loading rule - TRouteAORule: "RouteAO -> RoutePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8874 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO --> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8875 DEBUG ruleengine  - Transform - Loading rule - TSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8875 DEBUG ruleengine  - Transform - Loading rule - TSenderAOExistsRule: "Transform to existing SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8875 DEBUG ruleengine  - Transform - Loading rule - TSenderAOGenericRule: "AbstractSenderAO (generic) --> SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8875 DEBUG ruleengine  - Transform - Loading rule - TSenderAOViewRule: "Transform Sender View" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8875 DEBUG ruleengine  - Transform - Loading rule - TSetSystemTimeAORule: "SetSystemTimeAO -> SetSystemTimePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8875 DEBUG ruleengine  - Transform - Loading rule - TSetTimeProgressMarker: "TSetTimeProgressMarker" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8876 DEBUG ruleengine  - Transform - Loading rule - TSinkAORule: "SinkAO -> SinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8876 DEBUG ruleengine  - Transform - Loading rule - TSocketSinkAORule: "SocketSinkAO -> SocketSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8876 DEBUG ruleengine  - Transform - Loading rule - TStreamAORule: "Transform View or Stream" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8876 DEBUG ruleengine  - Transform - Loading rule - TTimeshiftAORule: "TimeshiftAO -> TimeshiftPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8876 DEBUG ruleengine  - Transform - Loading rule - TUserDefinedOperatorPO: "UdoAO -> UdoPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8888 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8888 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8890 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8891 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8892 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8892 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8916 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8918 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8921 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
8921 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
9083 DEBUG ruleengine  - Transform - Loading rule - TDBEnrichAORule: "DBEnrichAO -> DBEnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
9084 DEBUG ruleengine  - Transform - Loading rule - TDBEnrichAORule: "DBEnrichAO -> DBEnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 

!ENTRY org.eclipse.osgi 4 0 2017-04-30 19:11:14.304
!MESSAGE Could not find bundle: unknown
!STACK 0
org.osgi.framework.BundleException: Could not find bundle: unknown
	at org.eclipse.core.runtime.internal.adaptor.ConsoleManager.checkForConsoleBundle(ConsoleManager.java:58)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:331)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1488)
Starting application: 10089
9109 DEBUG TestRunnerApplication  - Starting Odysseus... - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:57) 
9116 DEBUG TestRunnerApplication  - Odysseus is up and running! - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:60) 
9117 DEBUG TestRunnerApplication  - Starting component tests... - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:71) 
9117 DEBUG TestRunnerApplication  - no components were added since 8ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
10125 DEBUG TestRunnerApplication  - Starting a new component test: Compile Test Component - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:100) 
10125 DEBUG TestRunnerApplication  - ####################################################################################### - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:101) 
10125 DEBUG TestComponentRunner  - Start Testcomponent 'Compile Test Component' - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:52) 
10125 DEBUG AbstractTestComponent  - Starting executor... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStartExecutor(AbstractTestComponent.java:94) 
10127 DEBUG AbstractTestComponent  - Sun Apr 30 19:11:15 CEST 2017Running sub test 1 of 1: "ProjectMapRename-Test.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10127 DEBUG AbstractTestComponent  - /// THIS IS A TEST FOR PROJECT, MAP AND RENAME
/// ALL PROVIDED EXAMPLE SHOULD WORK
#PARSER CQL
#TRANSCFG Standard
#DOREWRITE false
#DROPALLQUERIES
#QUERY
DROP STREAM bid IF EXISTS
#QUERY
ATTACH STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) CHANNEL localhost : 65442
#QUERY
DROP STREAM person IF EXISTS
#QUERY
ATTACH STREAM person (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) CHANNEL localhost : 65440

/// SIMPLE PROJECTS
#QUERY 
SELECT * FROM bid
#QUERY
SELECT bid.* FROM bid
#QUERY
SELECT price FROM bid
#QUERY
SELECT bidder, price FROM bid
#QUERY
SELECT timestamp, auction, bidder, datetime, price FROM bid

/// PROJECTS WITH RENAMED SOURCE BUT NO USE IN PROJECT
#QUERY 
SELECT * FROM bid AS b
#QUERY
SELECT bid.* FROM bid AS b
#QUERY
SELECT price FROM bid AS b
#QUERY
SELECT bidder, price FROM bid AS b
#QUERY
SELECT timestamp, auction, bidder, datetime, price FROM bid AS b


/// PROJECTS WITH RENAMED SOURCE WITH USE IN PROJECT
#QUERY 
SELECT * FROM bid AS b
#QUERY
SELECT b.* FROM bid AS b
#QUERY
SELECT b.price FROM bid AS b
#QUERY
SELECT b.bidder, b.price FROM bid AS b
#QUERY
SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b

/// PROJECTS WITH RENAMED ATTRIBUTES
#QUERY
SELECT price AS p FROM bid
#QUERY
SELECT price AS p, bidder FROM bid
#QUERY
SELECT price AS p, bidder AS b FROM bid

/// PROJECTS WITH RENAMED ATTRIBUTES AND SOURCES
#QUERY
SELECT price AS p FROM bid AS b
#QUERY
SELECT b.price AS p FROM bid AS b
#QUERY
SELECT b.price AS p, b.bidder FROM bid AS b
#QUERY
SELECT b.price AS p, b.bidder AS b FROM bid AS b


/// PROJECTS WITH CONSTANTS, FUNCTIONS AND EXPRESSIONS
#QUERY
SELECT bidder + price AS d FROM bid
#QUERY
SELECT 123.4 * price AS d FROM bid
#QUERY
SELECT 123.4 AS d FROM bid
#QUERY
SELECT 123.4 AS d, price FROM bid
#QUERY
SELECT DolToEur(price) AS d FROM bid
#QUERY
SELECT DolToEur(price) AS d, price FROM bid
#QUERY
SELECT DolToEur(price) * auction AS d FROM bid
#QUERY
SELECT DolToEur(price) * price AS d FROM bid
#QUERY
SELECT DolToEur(price) * auction AS d, price FROM bid
#QUERY
SELECT DolToEur(123.4) AS d FROM bid
#QUERY
SELECT 'test' AS s FROM bid
#QUERY
SELECT 'test' AS s, 123.4 AS d FROM bid
#QUERY
SELECT 'test' AS s, 123.4 AS d, price FROM bid


/// PROJECTS AND SELECTS WITH RENAMED SOURCE WITH USE IN SELECT
#QUERY 
SELECT * FROM bid AS b WHERE b.bidder > 10
#QUERY
SELECT b.* FROM bid AS b WHERE b.bidder > 10
#QUERY
SELECT b.price FROM bid AS b WHERE b.price < 150.0
#QUERY
SELECT b.bidder, b.price FROM bid AS b WHERE b.bidder =  1
#QUERY
SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b WHERE b.price > 100.0

/// PROJECTS WITH RENAMED ATTRIBUTES
#QUERY
SELECT price AS p FROM bid WHERE p < 100
#QUERY
SELECT price AS p, bidder FROM bid WHERE p > 100
#QUERY
SELECT price AS p, bidder AS b FROM bid WHERE b=1 AND p <100


/// AGGREGATES ARE NOT HANDLED LIKE FUNCTIONS AND MAY HAVE A GROUPING ETC.
#QUERY
SELECT AVG(price) AS aprice FROM bid
#QUERY
SELECT AVG(price) AS aprice FROM bid GROUP BY auction
#QUERY
SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction
#QUERY
SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction HAVING aprice<100.0


/// JOINS AND SELFJOINS
#QUERY
SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id
#QUERY
SELECT auction FROM bid AS b, person AS p WHERE b.bidder = p.id
#QUERY
SELECT auction AS a, bidder AS b FROM bid, person WHERE a = b
#QUERY
SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id
#QUERY
SELECT left.* FROM bid AS left, bid AS right WHERE left.bidder = right.bidder
#QUERY
SELECT a.auction AS aid FROM bid AS a, bid AS b WHERE aid=b.auction
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10127 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10127 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10128 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10129 DEBUG StandardExecutor  - Adding following query: /// THIS IS A TEST FOR PROJECT, MAP AND RENAME
/// ALL PROVIDED EXAMPLE SHOULD WORK
#PARSER CQL
#TRANSCFG Standard
#DOREWRITE false
#DROPALLQUERIES
#QUERY
DROP STREAM bid IF EXISTS
#QUERY
ATTACH STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) CHANNEL localhost : 65442
#QUERY
DROP STREAM person IF EXISTS
#QUERY
ATTACH STREAM person (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) CHANNEL localhost : 65440

/// SIMPLE PROJECTS
#QUERY 
SELECT * FROM bid
#QUERY
SELECT bid.* FROM bid
#QUERY
SELECT price FROM bid
#QUERY
SELECT bidder, price FROM bid
#QUERY
SELECT timestamp, auction, bidder, datetime, price FROM bid

/// PROJECTS WITH RENAMED SOURCE BUT NO USE IN PROJECT
#QUERY 
SELECT * FROM bid AS b
#QUERY
SELECT bid.* FROM bid AS b
#QUERY
SELECT price FROM bid AS b
#QUERY
SELECT bidder, price FROM bid AS b
#QUERY
SELECT timestamp, auction, bidder, datetime, price FROM bid AS b


/// PROJECTS WITH RENAMED SOURCE WITH USE IN PROJECT
#QUERY 
SELECT * FROM bid AS b
#QUERY
SELECT b.* FROM bid AS b
#QUERY
SELECT b.price FROM bid AS b
#QUERY
SELECT b.bidder, b.price FROM bid AS b
#QUERY
SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b

/// PROJECTS WITH RENAMED ATTRIBUTES
#QUERY
SELECT price AS p FROM bid
#QUERY
SELECT price AS p, bidder FROM bid
#QUERY
SELECT price AS p, bidder AS b FROM bid

/// PROJECTS WITH RENAMED ATTRIBUTES AND SOURCES
#QUERY
SELECT price AS p FROM bid AS b
#QUERY
SELECT b.price AS p FROM bid AS b
#QUERY
SELECT b.price AS p, b.bidder FROM bid AS b
#QUERY
SELECT b.price AS p, b.bidder AS b FROM bid AS b


/// PROJECTS WITH CONSTANTS, FUNCTIONS AND EXPRESSIONS
#QUERY
SELECT bidder + price AS d FROM bid
#QUERY
SELECT 123.4 * price AS d FROM bid
#QUERY
SELECT 123.4 AS d FROM bid
#QUERY
SELECT 123.4 AS d, price FROM bid
#QUERY
SELECT DolToEur(price) AS d FROM bid
#QUERY
SELECT DolToEur(price) AS d, price FROM bid
#QUERY
SELECT DolToEur(price) * auction AS d FROM bid
#QUERY
SELECT DolToEur(price) * price AS d FROM bid
#QUERY
SELECT DolToEur(price) * auction AS d, price FROM bid
#QUERY
SELECT DolToEur(123.4) AS d FROM bid
#QUERY
SELECT 'test' AS s FROM bid
#QUERY
SELECT 'test' AS s, 123.4 AS d FROM bid
#QUERY
SELECT 'test' AS s, 123.4 AS d, price FROM bid


/// PROJECTS AND SELECTS WITH RENAMED SOURCE WITH USE IN SELECT
#QUERY 
SELECT * FROM bid AS b WHERE b.bidder > 10
#QUERY
SELECT b.* FROM bid AS b WHERE b.bidder > 10
#QUERY
SELECT b.price FROM bid AS b WHERE b.price < 150.0
#QUERY
SELECT b.bidder, b.price FROM bid AS b WHERE b.bidder =  1
#QUERY
SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b WHERE b.price > 100.0

/// PROJECTS WITH RENAMED ATTRIBUTES
#QUERY
SELECT price AS p FROM bid WHERE p < 100
#QUERY
SELECT price AS p, bidder FROM bid WHERE p > 100
#QUERY
SELECT price AS p, bidder AS b FROM bid WHERE b=1 AND p <100


/// AGGREGATES ARE NOT HANDLED LIKE FUNCTIONS AND MAY HAVE A GROUPING ETC.
#QUERY
SELECT AVG(price) AS aprice FROM bid
#QUERY
SELECT AVG(price) AS aprice FROM bid GROUP BY auction
#QUERY
SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction
#QUERY
SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction HAVING aprice<100.0


/// JOINS AND SELFJOINS
#QUERY
SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id
#QUERY
SELECT auction FROM bid AS b, person AS p WHERE b.bidder = p.id
#QUERY
SELECT auction AS a, bidder AS b FROM bid, person WHERE a = b
#QUERY
SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id
#QUERY
SELECT left.* FROM bid AS left, bid AS right WHERE left.bidder = right.bidder
#QUERY
SELECT a.auction AS aid FROM bid AS a, bid AS b WHERE aid=b.auction
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10140 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10161 ERROR PreParserStatement  - PreParserKeyword TRANSCFG is deprecated - de.uniol.inf.is.odysseus.script.parser.PreParserStatement.logDeprecation(PreParserStatement.java:74) 
10165 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10167 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10167 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.query.RemoveAllQueriesCommand@584f54e6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10168 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5d8bafa9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10168 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10168 DEBUG StandardExecutor  - Adding following query: DROP STREAM bid IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10169 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
log4j:WARN No appenders could be found for logger (org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser).
log4j:WARN Please initialize the log4j system properly.
10643 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10643 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10643 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@6b44435b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10644 DEBUG ReloadLog  - Query added to log: DROP STREAM bid IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10645 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10646 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10647 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2ccca26f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10647 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10647 DEBUG StandardExecutor  - Adding following query: ATTACH STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) CHANNEL localhost : 65442 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10647 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10679 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10680 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10680 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3f0846c6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10680 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10680 DEBUG StandardExecutor  - Adding following query: bid := ACCESS({source='bid',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['port','65442'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10681 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10716 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10716 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10716 DEBUG StandardExecutor  - Executing Create VIEW bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10731 DEBUG ReloadLog  - Query added to log: bid := ACCESS({source='bid',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['port','65442'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10731 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10731 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10732 DEBUG ReloadLog  - Query added to log: ATTACH STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) CHANNEL localhost : 65442 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10732 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10732 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10732 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@62452cc9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10733 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10733 DEBUG StandardExecutor  - Adding following query: DROP STREAM person IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10733 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10737 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10737 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10737 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@5a7005d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10738 DEBUG ReloadLog  - Query added to log: DROP STREAM person IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10738 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10738 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10738 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5bc9ba1d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10738 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10739 DEBUG StandardExecutor  - Adding following query: ATTACH STREAM person (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) CHANNEL localhost : 65440 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10739 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10744 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10745 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10745 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7516e4e5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10745 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10746 DEBUG StandardExecutor  - Adding following query: person := ACCESS({source='person',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['name','STRING'],['email','STRING'],['creditcard','STRING'],['city','STRING'],['state','STRING']],options=[['port','65440'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10746 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10750 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10752 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10752 DEBUG StandardExecutor  - Executing Create VIEW person - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10753 DEBUG ReloadLog  - Query added to log: person := ACCESS({source='person',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',dataHandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['name','STRING'],['email','STRING'],['creditcard','STRING'],['city','STRING'],['state','STRING']],options=[['port','65440'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10755 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10755 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10756 DEBUG ReloadLog  - Query added to log: ATTACH STREAM person (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) CHANNEL localhost : 65440 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10757 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10758 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10758 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4189d70b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10759 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10759 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10759 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
map={bid=[timestamp, auction, bidder, datetime, price]}
simple select:: {bid=[timestamp, auction, bidder, datetime, price]}
true
getAttributename:: timestamp, bid
getAttributename:: auction, bid
getAttributename:: bidder, bid
getAttributename:: datetime, bid
getAttributename:: price, bid
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
10824 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10824 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10824 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7b8233cd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10825 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10825 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10825 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10870 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10877 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10877 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10879 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10880 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10889 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10889 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10889 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10889 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10889 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10890 INFO  transform  - Starting transformation of Top@588449070 OwnerIDs: 0... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10893 DEBUG transform  - Before transformation: 
TopAO (588449070) Owner: 0
0 <- 0 MapAO (735228558) Owner: 0
       0 <- 0 AccessAO (376725601) Owner: 0
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10967 DEBUG ruleengine  - Ruleengine needed 71 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10967 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10969 INFO  transform  - Transformation of Top@588449070 OwnerIDs: 0 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10972 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10977 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10977 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10978 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10978 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10979 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10979 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10979 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10980 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10980 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10980 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10980 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2bb7bd00 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10981 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10981 DEBUG StandardExecutor  - Adding following query: SELECT bid.* FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10981 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::bid.*
map={bid=[timestamp, auction, bidder, datetime, price]}
simple select:: {bid=[timestamp, auction, bidder, datetime, price]}
[null, null]
true
input= bid
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
orderedAttributes:: [timestamp, auction, bidder, datetime, price]
ARGUMENT:: 'timestamp','auction','bidder','datetime','price'
10994 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10995 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10995 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@18230356 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10995 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10995 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10995 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11002 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11002 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11003 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11003 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11003 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11004 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11005 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11005 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11005 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11005 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11005 INFO  transform  - Starting transformation of Top@246003654 OwnerIDs: 1... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11005 DEBUG transform  - Before transformation: 
TopAO (246003654) Owner: 1
0 <- 0 MapAO (235370598) Owner: 1
       0 <- 0 AccessAO (248710794) Owner: 1
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11012 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11012 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11012 INFO  transform  - Transformation of Top@246003654 OwnerIDs: 1 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11013 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11013 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11013 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11013 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11014 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11014 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11014 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11014 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11015 DEBUG ReloadLog  - Query added to log: SELECT bid.* FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11015 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11015 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11016 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4fbda97b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11016 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11016 DEBUG StandardExecutor  - Adding following query: SELECT price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11016 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
map={bid=[price]}
simple select:: {bid=[price]}
[null, null]
true
input= bid
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4879f0f2 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4879f0f2 (name: bid)]
orderedAttributes:: [bid.price]
ARGUMENT:: 'bid.price'
11024 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11025 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11025 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@47db5fa5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11025 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11026 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11026 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11028 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11029 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11029 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11029 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11030 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11031 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11031 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11031 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11032 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11032 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11032 INFO  transform  - Starting transformation of Top@259251414 OwnerIDs: 2... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11032 DEBUG transform  - Before transformation: 
TopAO (259251414) Owner: 2
0 <- 0 MapAO (1552400354) Owner: 2
       0 <- 0 AccessAO (803893384) Owner: 2
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11036 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11037 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11037 INFO  transform  - Transformation of Top@259251414 OwnerIDs: 2 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11037 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11037 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11038 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11038 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11038 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11038 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11038 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11039 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11039 DEBUG ReloadLog  - Query added to log: SELECT price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11039 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11040 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11040 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4bef0fe3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11040 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11040 DEBUG StandardExecutor  - Adding following query: SELECT bidder, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11040 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
map={bid=[bidder, price]}
simple select:: {bid=[bidder, price]}
[null, null]
true
input= bid
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@27953a83 (name: bid)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@27953a83 (name: bid)]
ATTRIBUTE:: price
ATTRIBUTE:: bidder
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@27953a83 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@27953a83 (name: bid)]
orderedAttributes:: [bid.bidder, bid.price]
ARGUMENT:: 'bid.bidder','bid.price'
11047 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11047 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11047 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@556d0826 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11048 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11048 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.bidder','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11048 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11051 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11051 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11052 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11052 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11052 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11053 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11053 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11053 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11053 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11053 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11054 INFO  transform  - Starting transformation of Top@369805307 OwnerIDs: 3... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11054 DEBUG transform  - Before transformation: 
TopAO (369805307) Owner: 3
0 <- 0 MapAO (314562573) Owner: 3
       0 <- 0 AccessAO (1100109058) Owner: 3
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11061 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11064 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11064 INFO  transform  - Transformation of Top@369805307 OwnerIDs: 3 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11064 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11065 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11065 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11065 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11066 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11066 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.bidder','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11066 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11066 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11067 DEBUG ReloadLog  - Query added to log: SELECT bidder, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11067 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11068 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11068 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2ece4966 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11068 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11069 DEBUG StandardExecutor  - Adding following query: SELECT timestamp, auction, bidder, datetime, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11069 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
prefix= bid
prefix= bid
prefix= bid
map={bid=[timestamp, auction, bidder, datetime, price]}
simple select:: {bid=[timestamp, auction, bidder, datetime, price]}
[null, null]
true
input= bid
ATTRIBUTE:: timestamp
getAttributename:: timestamp, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7894f09b (name: bid)]
getAttributename:: timestamp, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7894f09b (name: bid)]
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7894f09b (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7894f09b (name: bid)]
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7894f09b (name: bid)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7894f09b (name: bid)]
ATTRIBUTE:: datetime
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
getAttributename:: datetime, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7894f09b (name: bid)]
getAttributename:: datetime, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7894f09b (name: bid)]
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7894f09b (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7894f09b (name: bid)]
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
11093 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11094 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11095 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3d484181 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11096 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11096 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11097 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11112 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11113 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11113 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11114 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11115 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11116 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11116 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11116 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11116 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11116 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11116 INFO  transform  - Starting transformation of Top@1275009283 OwnerIDs: 4... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11117 DEBUG transform  - Before transformation: 
TopAO (1275009283) Owner: 4
0 <- 0 MapAO (1658512704) Owner: 4
       0 <- 0 AccessAO (1478995734) Owner: 4
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11121 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11121 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11121 INFO  transform  - Transformation of Top@1275009283 OwnerIDs: 4 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11122 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11123 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11124 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11124 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11124 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11124 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11124 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11126 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11126 DEBUG ReloadLog  - Query added to log: SELECT timestamp, auction, bidder, datetime, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11126 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11127 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11127 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4e28bdd1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11127 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11128 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11128 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
map={bid=[timestamp, auction, bidder, datetime, price]}
simple select:: {bid=[timestamp, auction, bidder, datetime, price]}
true
getAttributename:: timestamp, bid
getAttributename:: auction, bid
getAttributename:: bidder, bid
getAttributename:: datetime, bid
getAttributename:: price, bid
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
11139 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11140 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11140 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4c37b5b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11140 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11140 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11140 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11154 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11155 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11155 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11155 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11155 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11156 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11156 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11156 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11156 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11156 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11157 INFO  transform  - Starting transformation of Top@1398260359 OwnerIDs: 5... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11157 DEBUG transform  - Before transformation: 
TopAO (1398260359) Owner: 5
0 <- 0 MapAO (371397455) Owner: 5
       0 <- 0 AccessAO (2052223881) Owner: 5
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11166 DEBUG ruleengine  - Ruleengine needed 8 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11167 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11167 INFO  transform  - Transformation of Top@1398260359 OwnerIDs: 5 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11168 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11168 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11169 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11169 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11170 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11170 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11171 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11171 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11172 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11172 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11173 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11173 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@30990c1b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11173 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11173 DEBUG StandardExecutor  - Adding following query: SELECT bid.* FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11173 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::bid.*
map={bid=[timestamp, auction, bidder, datetime, price]}
simple select:: {bid=[timestamp, auction, bidder, datetime, price]}
[null, null]
true
input= bid
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
orderedAttributes:: [timestamp, auction, bidder, datetime, price]
ARGUMENT:: 'timestamp','auction','bidder','datetime','price'
11191 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11193 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11193 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@44828f6b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11194 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11194 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11194 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11205 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11205 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11205 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11205 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11206 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11207 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11210 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11210 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11211 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11211 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11212 INFO  transform  - Starting transformation of Top@1824322115 OwnerIDs: 6... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11213 DEBUG transform  - Before transformation: 
TopAO (1824322115) Owner: 6
0 <- 0 MapAO (702999333) Owner: 6
       0 <- 0 AccessAO (1648582256) Owner: 6
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11417 DEBUG ruleengine  - Ruleengine needed 18 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11417 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11418 INFO  transform  - Transformation of Top@1824322115 OwnerIDs: 6 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11419 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11419 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11419 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11419 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11420 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11420 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11420 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11422 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11422 DEBUG ReloadLog  - Query added to log: SELECT bid.* FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11422 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11423 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11424 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@162be91c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11424 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11424 DEBUG StandardExecutor  - Adding following query: SELECT price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11425 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
map={bid=[price]}
simple select:: {bid=[price]}
[null, null]
true
input= bid
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@1cd201a8 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@1cd201a8 (name: bid)]
orderedAttributes:: [bid.price]
ARGUMENT:: 'bid.price'
11435 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11435 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11436 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7db82169 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11436 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11436 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11436 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11439 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11439 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11439 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11440 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11440 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11441 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11442 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11443 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11444 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11446 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11447 INFO  transform  - Starting transformation of Top@620456576 OwnerIDs: 7... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11447 DEBUG transform  - Before transformation: 
TopAO (620456576) Owner: 7
0 <- 0 MapAO (1220759559) Owner: 7
       0 <- 0 AccessAO (1923634801) Owner: 7
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11451 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11452 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11452 INFO  transform  - Transformation of Top@620456576 OwnerIDs: 7 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11452 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11453 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11453 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11453 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11453 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11454 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11454 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11454 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11455 DEBUG ReloadLog  - Query added to log: SELECT price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11455 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11455 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11455 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@132ddbab - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11456 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11456 DEBUG StandardExecutor  - Adding following query: SELECT bidder, price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11456 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
map={bid=[bidder, price]}
simple select:: {bid=[bidder, price]}
[null, null]
true
input= bid
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@acb0951 (name: bid)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@acb0951 (name: bid)]
ATTRIBUTE:: price
ATTRIBUTE:: bidder
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@acb0951 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@acb0951 (name: bid)]
orderedAttributes:: [bid.bidder, bid.price]
ARGUMENT:: 'bid.bidder','bid.price'
11465 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11465 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11465 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5bf22f18 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11466 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11466 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.bidder','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11466 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11468 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11469 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11469 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11469 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11470 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11470 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11471 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11471 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11471 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11471 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11471 INFO  transform  - Starting transformation of Top@1985028494 OwnerIDs: 8... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11472 DEBUG transform  - Before transformation: 
TopAO (1985028494) Owner: 8
0 <- 0 MapAO (830863979) Owner: 8
       0 <- 0 AccessAO (1832283291) Owner: 8
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11479 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11480 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11480 INFO  transform  - Transformation of Top@1985028494 OwnerIDs: 8 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11481 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11481 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11482 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11482 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11482 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11482 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.bidder','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11483 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11483 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11483 DEBUG ReloadLog  - Query added to log: SELECT bidder, price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11484 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11484 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11484 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7c351808 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11485 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11485 DEBUG StandardExecutor  - Adding following query: SELECT timestamp, auction, bidder, datetime, price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11485 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
prefix= bid
prefix= bid
prefix= bid
map={bid=[timestamp, auction, bidder, datetime, price]}
simple select:: {bid=[timestamp, auction, bidder, datetime, price]}
[null, null]
true
input= bid
ATTRIBUTE:: timestamp
getAttributename:: timestamp, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7e985ce9 (name: bid)]
getAttributename:: timestamp, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7e985ce9 (name: bid)]
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7e985ce9 (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7e985ce9 (name: bid)]
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7e985ce9 (name: bid)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7e985ce9 (name: bid)]
ATTRIBUTE:: datetime
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
getAttributename:: datetime, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7e985ce9 (name: bid)]
getAttributename:: datetime, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7e985ce9 (name: bid)]
ATTRIBUTE:: price
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7e985ce9 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@7e985ce9 (name: bid)]
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
11498 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11498 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11499 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2a39fe6a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11499 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11500 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11500 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11505 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11505 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11506 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11506 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11506 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11507 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11508 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11509 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11511 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11512 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11513 INFO  transform  - Starting transformation of Top@635288507 OwnerIDs: 9... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11513 DEBUG transform  - Before transformation: 
TopAO (635288507) Owner: 9
0 <- 0 MapAO (355885103) Owner: 9
       0 <- 0 AccessAO (1321115948) Owner: 9
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11518 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11518 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11519 INFO  transform  - Transformation of Top@635288507 OwnerIDs: 9 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11519 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11520 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11520 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11520 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11521 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11521 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11521 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11522 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11522 DEBUG ReloadLog  - Query added to log: SELECT timestamp, auction, bidder, datetime, price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11522 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11522 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11523 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6326d182 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11523 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11523 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11523 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
map={bid=[timestamp, auction, bidder, datetime, price]}
simple select:: {bid=[timestamp, auction, bidder, datetime, price]}
true
getAttributename:: timestamp, bid
getAttributename:: auction, bid
getAttributename:: bidder, bid
getAttributename:: datetime, bid
getAttributename:: price, bid
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
11535 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11535 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11535 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@77192705 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11536 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11536 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11536 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11544 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11545 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11545 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11546 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11546 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11547 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11547 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11547 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11547 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11547 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11548 INFO  transform  - Starting transformation of Top@438151297 OwnerIDs: 10... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11548 DEBUG transform  - Before transformation: 
TopAO (438151297) Owner: 10
0 <- 0 MapAO (96039159) Owner: 10
       0 <- 0 AccessAO (2144644334) Owner: 10
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11551 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11552 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11552 INFO  transform  - Transformation of Top@438151297 OwnerIDs: 10 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11552 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11553 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11553 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11554 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11554 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11554 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11554 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11555 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11555 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11555 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11556 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11556 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3d8bbcdc - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11556 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11556 DEBUG StandardExecutor  - Adding following query: SELECT b.* FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11556 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::b.*
map={bid=[timestamp, auction, bidder, datetime, price]}
simple select:: {bid=[timestamp, auction, bidder, datetime, price]}
[null, null]
true
input= bid
ATTRIBUTE:: timestamp
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
ATTRIBUTE:: datetime
ATTRIBUTE:: price
orderedAttributes:: [timestamp, auction, bidder, datetime, price]
ARGUMENT:: 'timestamp','auction','bidder','datetime','price'
11607 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11607 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11607 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2a65bb85 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11608 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11608 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11608 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11613 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11613 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11614 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11614 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11614 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11615 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11615 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11615 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11616 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11616 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11616 INFO  transform  - Starting transformation of Top@1893563925 OwnerIDs: 11... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11616 DEBUG transform  - Before transformation: 
TopAO (1893563925) Owner: 11
0 <- 0 MapAO (1251967187) Owner: 11
       0 <- 0 AccessAO (901689694) Owner: 11
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11620 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11620 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11621 INFO  transform  - Transformation of Top@1893563925 OwnerIDs: 11 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11622 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11623 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11624 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11624 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11624 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11624 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11624 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11625 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11625 DEBUG ReloadLog  - Query added to log: SELECT b.* FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11626 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11626 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11627 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4204541c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11627 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11627 DEBUG StandardExecutor  - Adding following query: SELECT b.price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11627 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::b.price
prefix= b
map={bid=[b.price]}
simple select:: {bid=[b.price]}
[null, null]
aliasses::[price, b.price]
true
input= operator_1
ATTRIBUTE:: b.price
orderedAttributes:: [b.price]
ARGUMENT:: 'b.price'
11638 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11639 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11639 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4602c2a9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11639 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11639 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11639 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11642 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11642 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11642 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11643 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11643 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11644 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11644 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11644 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11644 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11644 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11645 INFO  transform  - Starting transformation of Top@1788380050 OwnerIDs: 12... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11645 DEBUG transform  - Before transformation: 
TopAO (1788380050) Owner: 12
0 <- 0 MapAO (493944943) Owner: 12
       0 <- 0 AccessAO (1533547487) Owner: 12
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11656 DEBUG ruleengine  - Ruleengine needed 10 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11656 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11657 INFO  transform  - Transformation of Top@1788380050 OwnerIDs: 12 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11657 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11658 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11659 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11659 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11659 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11660 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11660 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11660 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11661 DEBUG ReloadLog  - Query added to log: SELECT b.price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11661 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11661 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11662 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@60bdf15d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11662 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11662 DEBUG StandardExecutor  - Adding following query: SELECT b.bidder, b.price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11662 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::b.bidder
prefix= b
findbyName::b.price
prefix= b
map={bid=[b.bidder, b.price]}
simple select:: {bid=[b.bidder, b.price]}
[null, null]
aliasses::[bidder, b.bidder]
aliasses::[bidder, b.bidder, price, b.price]
true
input= operator_1
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.price
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.price
orderedAttributes:: [b.bidder, b.price]
ARGUMENT:: 'b.bidder','b.price'
11673 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11674 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11674 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@51e4ccb3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11674 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11674 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b.bidder','price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.bidder','b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11675 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11678 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11678 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11678 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11679 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11679 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11680 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11680 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11680 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11681 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11683 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11684 INFO  transform  - Starting transformation of Top@1338958728 OwnerIDs: 13... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11684 DEBUG transform  - Before transformation: 
TopAO (1338958728) Owner: 13
0 <- 0 MapAO (1870723838) Owner: 13
       0 <- 0 AccessAO (988904418) Owner: 13
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11689 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11689 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11689 INFO  transform  - Transformation of Top@1338958728 OwnerIDs: 13 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11690 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11690 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11691 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11691 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11691 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11692 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b.bidder','price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.bidder','b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11692 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11693 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11693 DEBUG ReloadLog  - Query added to log: SELECT b.bidder, b.price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11693 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11693 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11694 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@61861a29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11694 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11694 DEBUG StandardExecutor  - Adding following query: SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11694 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::b.timestamp
prefix= b
findbyName::b.auction
prefix= b
findbyName::b.bidder
prefix= b
findbyName::b.datetime
prefix= b
findbyName::b.price
prefix= b
map={bid=[b.timestamp, b.auction, b.bidder, b.datetime, b.price]}
simple select:: {bid=[b.timestamp, b.auction, b.bidder, b.datetime, b.price]}
[null, null]
aliasses::[timestamp, b.timestamp]
aliasses::[timestamp, b.timestamp, auction, b.auction]
aliasses::[timestamp, b.timestamp, auction, b.auction, bidder, b.bidder]
aliasses::[timestamp, b.timestamp, auction, b.auction, bidder, b.bidder, datetime, b.datetime]
aliasses::[timestamp, b.timestamp, auction, b.auction, bidder, b.bidder, datetime, b.datetime, price, b.price]
true
input= operator_1
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
orderedAttributes:: [b.timestamp, b.auction, b.bidder, b.datetime, b.price]
ARGUMENT:: 'b.timestamp','b.auction','b.bidder','b.datetime','b.price'
11700 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11700 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11700 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@25bcd0c7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11700 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11700 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','b.timestamp','auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.timestamp','b.auction','b.bidder','b.datetime','b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11700 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11705 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11706 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11706 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11706 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11706 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11707 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11707 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11707 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11707 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11707 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11707 INFO  transform  - Starting transformation of Top@1926027290 OwnerIDs: 14... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11708 DEBUG transform  - Before transformation: 
TopAO (1926027290) Owner: 14
0 <- 0 MapAO (1837601499) Owner: 14
       0 <- 0 AccessAO (1690050988) Owner: 14
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11711 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11711 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11711 INFO  transform  - Transformation of Top@1926027290 OwnerIDs: 14 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11712 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11714 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11714 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11714 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11714 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11715 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','b.timestamp','auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.timestamp','b.auction','b.bidder','b.datetime','b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11715 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11716 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11716 DEBUG ReloadLog  - Query added to log: SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11716 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11717 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11718 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7859e786 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11718 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11718 DEBUG StandardExecutor  - Adding following query: SELECT price AS p FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11718 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
map={bid=[p]}
simple select:: {bid=[p]}
[null, null]
true
input= operator_1
ATTRIBUTE:: p
orderedAttributes:: [p]
ARGUMENT:: 'p'
11727 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11727 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11727 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@314b8f2d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11727 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11728 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11728 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11732 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11732 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11732 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11733 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11733 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11737 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11737 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11737 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11737 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11738 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11738 INFO  transform  - Starting transformation of Top@467632528 OwnerIDs: 15... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11738 DEBUG transform  - Before transformation: 
TopAO (467632528) Owner: 15
0 <- 0 MapAO (422522663) Owner: 15
       0 <- 0 AccessAO (145066402) Owner: 15
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11741 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11742 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11742 INFO  transform  - Transformation of Top@467632528 OwnerIDs: 15 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11742 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11743 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11743 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11743 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11743 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11743 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11744 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11744 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11744 DEBUG ReloadLog  - Query added to log: SELECT price AS p FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11745 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11745 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11745 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6bab2585 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11746 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11746 DEBUG StandardExecutor  - Adding following query: SELECT price AS p, bidder FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11746 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
map={bid=[p, bidder]}
simple select:: {bid=[p, bidder]}
[null, null]
true
input= operator_1
ATTRIBUTE:: p
ATTRIBUTE:: bidder
ATTRIBUTE:: p
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@644c78d4 (name: bid)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@644c78d4 (name: bid)]
orderedAttributes:: [p, bid.bidder]
ARGUMENT:: 'p','bid.bidder'
11752 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11752 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11752 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@532a02d9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11752 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11753 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11753 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11756 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11757 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11757 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11757 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11757 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11758 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11758 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11758 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11759 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11759 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11759 INFO  transform  - Starting transformation of Top@168957945 OwnerIDs: 16... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11759 DEBUG transform  - Before transformation: 
TopAO (168957945) Owner: 16
0 <- 0 MapAO (1004430079) Owner: 16
       0 <- 0 AccessAO (1379148981) Owner: 16
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11762 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11762 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11762 INFO  transform  - Transformation of Top@168957945 OwnerIDs: 16 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11762 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11763 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11763 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11763 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11763 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11763 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11764 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11764 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11765 DEBUG ReloadLog  - Query added to log: SELECT price AS p, bidder FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11765 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11765 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11766 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@299266e2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11766 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11766 DEBUG StandardExecutor  - Adding following query: SELECT price AS p, bidder AS b FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11766 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
map={bid=[p, b]}
simple select:: {bid=[p, b]}
[null, null]
true
input= operator_1
ATTRIBUTE:: p
ATTRIBUTE:: b
ATTRIBUTE:: p
ATTRIBUTE:: b
orderedAttributes:: [p, b]
ARGUMENT:: 'p','b'
11772 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11772 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11773 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@66ea1466 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11773 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11773 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11773 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11775 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11776 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11776 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11776 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11776 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11777 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11777 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11777 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11777 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11777 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11778 INFO  transform  - Starting transformation of Top@290096578 OwnerIDs: 17... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11778 DEBUG transform  - Before transformation: 
TopAO (290096578) Owner: 17
0 <- 0 MapAO (255941269) Owner: 17
       0 <- 0 AccessAO (217470033) Owner: 17
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11781 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11781 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11781 INFO  transform  - Transformation of Top@290096578 OwnerIDs: 17 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11782 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11782 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11782 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11782 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11782 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11783 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11783 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11783 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11784 DEBUG ReloadLog  - Query added to log: SELECT price AS p, bidder AS b FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11784 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11785 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11785 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@26be6ca7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11785 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11785 DEBUG StandardExecutor  - Adding following query: SELECT price AS p FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11785 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
map={bid=[p]}
simple select:: {bid=[p]}
[null, null]
aliasses::[price, p]
true
input= operator_1
ATTRIBUTE:: p
orderedAttributes:: [p]
ARGUMENT:: 'p'
11789 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11790 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11790 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@759fad4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11790 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11790 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11790 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11792 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11792 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11792 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11792 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11792 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11793 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11793 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11793 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11793 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11793 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11794 INFO  transform  - Starting transformation of Top@707635461 OwnerIDs: 18... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11794 DEBUG transform  - Before transformation: 
TopAO (707635461) Owner: 18
0 <- 0 MapAO (619929778) Owner: 18
       0 <- 0 AccessAO (1624211687) Owner: 18
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11797 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11797 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11798 INFO  transform  - Transformation of Top@707635461 OwnerIDs: 18 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11798 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11799 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11799 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11799 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11799 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11799 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11799 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11801 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11801 DEBUG ReloadLog  - Query added to log: SELECT price AS p FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11801 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11802 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11803 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@138fe6ec - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11803 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11803 DEBUG StandardExecutor  - Adding following query: SELECT b.price AS p FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11803 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::b.price
prefix= b
map={bid=[p]}
simple select:: {bid=[p]}
[null, null]
aliasses::[price, p]
true
input= operator_1
ATTRIBUTE:: p
orderedAttributes:: [p]
ARGUMENT:: 'p'
11808 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11808 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11808 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@19b30c92 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11808 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11808 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11809 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11811 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11812 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11813 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11813 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11813 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11814 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11815 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11815 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11815 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11815 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11815 INFO  transform  - Starting transformation of Top@2093319848 OwnerIDs: 19... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11815 DEBUG transform  - Before transformation: 
TopAO (2093319848) Owner: 19
0 <- 0 MapAO (2109027570) Owner: 19
       0 <- 0 AccessAO (1151512955) Owner: 19
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11817 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11818 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11818 INFO  transform  - Transformation of Top@2093319848 OwnerIDs: 19 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11819 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11819 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11819 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11820 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11820 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11820 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11820 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11821 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11821 DEBUG ReloadLog  - Query added to log: SELECT b.price AS p FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11821 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11822 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11822 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1eef9aef - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11823 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11823 DEBUG StandardExecutor  - Adding following query: SELECT b.price AS p, b.bidder FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11823 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::b.price
prefix= b
findbyName::b.bidder
prefix= b
map={bid=[p, b.bidder]}
simple select:: {bid=[p, b.bidder]}
[null, null]
aliasses::[bidder, b.bidder]
aliasses::[bidder, b.bidder, price, p]
true
input= operator_1
ATTRIBUTE:: p
ATTRIBUTE:: b.bidder
ATTRIBUTE:: p
ATTRIBUTE:: b.bidder
orderedAttributes:: [p, b.bidder]
ARGUMENT:: 'p','b.bidder'
11828 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11828 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11829 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5db99216 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11829 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11829 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b.bidder','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11829 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11832 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11832 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11837 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11841 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11841 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11842 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11842 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11842 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11843 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11843 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11843 INFO  transform  - Starting transformation of Top@1609086753 OwnerIDs: 20... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11844 DEBUG transform  - Before transformation: 
TopAO (1609086753) Owner: 20
0 <- 0 MapAO (1427775702) Owner: 20
       0 <- 0 AccessAO (1468343491) Owner: 20
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11849 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11849 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11850 INFO  transform  - Transformation of Top@1609086753 OwnerIDs: 20 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11850 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11851 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11851 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11851 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11852 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11852 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b.bidder','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11852 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11853 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11853 DEBUG ReloadLog  - Query added to log: SELECT b.price AS p, b.bidder FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11853 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11854 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11854 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3574e198 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11854 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11855 DEBUG StandardExecutor  - Adding following query: SELECT b.price AS p, b.bidder AS b FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11855 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::b.price
prefix= b
findbyName::b.bidder
prefix= b
map={bid=[p, b]}
simple select:: {bid=[p, b]}
[null, null]
aliasses::[bidder, b]
aliasses::[bidder, b, price, p]
true
input= operator_1
ATTRIBUTE:: p
ATTRIBUTE:: b
ATTRIBUTE:: p
ATTRIBUTE:: b
orderedAttributes:: [p, b]
ARGUMENT:: 'p','b'
11859 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11860 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11860 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@db44aa2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11860 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11860 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11860 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11863 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11863 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11863 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11864 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11864 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11865 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11865 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11865 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11865 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11866 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11866 INFO  transform  - Starting transformation of Top@32393008 OwnerIDs: 21... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11866 DEBUG transform  - Before transformation: 
TopAO (32393008) Owner: 21
0 <- 0 MapAO (1504083002) Owner: 21
       0 <- 0 AccessAO (1342374939) Owner: 21
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11869 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11869 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11870 INFO  transform  - Transformation of Top@32393008 OwnerIDs: 21 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11870 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11871 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11871 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11871 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11871 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11871 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11871 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11872 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11872 DEBUG ReloadLog  - Query added to log: SELECT b.price AS p, b.bidder AS b FROM bid AS b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11872 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11873 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11874 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7927bd9f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11874 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11875 DEBUG StandardExecutor  - Adding following query: SELECT bidder + price AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11878 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
map={bid=[bidder, price]}
simple select:: {bid=[bidder, price]}
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3af4e0bf (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3af4e0bf (name: bid)]
[MAP({expressions=[['bid.bidder+bid.price','d']]},), null]
true
input= bid
ATTRIBUTE:: bidder
ATTRIBUTE:: price
ATTRIBUTE:: d
orderedAttributes:: [['bid.bidder+bid.price','d']]
ARGUMENT:: ['bid.bidder+bid.price','d']
11918 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11918 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11918 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@466cf502 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11919 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11919 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['bid.bidder+bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11920 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11925 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11925 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11926 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11926 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11926 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11928 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11928 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11928 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11928 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11928 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11928 INFO  transform  - Starting transformation of Top@280531669 OwnerIDs: 22... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11929 DEBUG transform  - Before transformation: 
TopAO (280531669) Owner: 22
0 <- 0 MapAO (1027569178) Owner: 22
       0 <- 0 AccessAO (893835279) Owner: 22
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11933 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11933 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11934 INFO  transform  - Transformation of Top@280531669 OwnerIDs: 22 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11934 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11934 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11935 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11935 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11935 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11935 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['bid.bidder+bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11935 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11955 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11964 DEBUG ReloadLog  - Query added to log: SELECT bidder + price AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11964 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11965 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11966 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@71f67a79 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11966 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11966 DEBUG StandardExecutor  - Adding following query: SELECT 123.4 * price AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11966 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
map={bid=[price]}
simple select:: {bid=[price]}
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@27cf3151 (name: bid)]
[MAP({expressions=[['123.4*bid.price','d']]},), null]
true
input= bid
ATTRIBUTE:: price
ATTRIBUTE:: d
orderedAttributes:: [['123.4*bid.price','d']]
ARGUMENT:: ['123.4*bid.price','d']
11983 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11983 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11983 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@127e70c5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11983 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11983 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['123.4*bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11983 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11990 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11990 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11990 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11990 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11990 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11991 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11991 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11991 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11991 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11992 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11992 INFO  transform  - Starting transformation of Top@883678948 OwnerIDs: 23... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11992 DEBUG transform  - Before transformation: 
TopAO (883678948) Owner: 23
0 <- 0 MapAO (1906947271) Owner: 23
       0 <- 0 AccessAO (1177072083) Owner: 23
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11996 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11996 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11996 INFO  transform  - Transformation of Top@883678948 OwnerIDs: 23 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11997 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11998 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11998 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11998 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11999 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11999 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['123.4*bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11999 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12000 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12000 DEBUG ReloadLog  - Query added to log: SELECT 123.4 * price AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12000 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12001 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12001 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3277e499 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12001 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12001 DEBUG StandardExecutor  - Adding following query: SELECT 123.4 AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12001 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
map={}
simple select:: {}
true
getAttributename:: timestamp, bid
getAttributename:: auction, bid
getAttributename:: bidder, bid
getAttributename:: datetime, bid
getAttributename:: price, bid
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
12022 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12023 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12023 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@411341bd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12023 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12023 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12023 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12035 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12035 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12036 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12036 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12049 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12050 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12050 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12051 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12051 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12051 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12051 INFO  transform  - Starting transformation of Top@259077766 OwnerIDs: 24... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12052 DEBUG transform  - Before transformation: 
TopAO (259077766) Owner: 24
0 <- 0 MapAO (1962398162) Owner: 24
       0 <- 0 AccessAO (1263391254) Owner: 24
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12054 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12055 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12055 INFO  transform  - Transformation of Top@259077766 OwnerIDs: 24 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12055 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12056 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12056 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12056 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12056 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12056 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12056 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12057 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12057 DEBUG ReloadLog  - Query added to log: SELECT 123.4 AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12057 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12059 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12059 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@54afd745 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12059 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12059 DEBUG StandardExecutor  - Adding following query: SELECT 123.4 AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12060 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
map={bid=[price]}
simple select:: {bid=[price]}
[null, null]
true
input= bid
ATTRIBUTE:: price
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@fff25f1 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@fff25f1 (name: bid)]
orderedAttributes:: [bid.price]
ARGUMENT:: 'bid.price'
12064 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12065 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12065 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@c00fff0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12065 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12065 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12065 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12067 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12067 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12068 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12068 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12068 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12068 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12069 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12069 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12069 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12069 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12069 INFO  transform  - Starting transformation of Top@1094272405 OwnerIDs: 25... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12069 DEBUG transform  - Before transformation: 
TopAO (1094272405) Owner: 25
0 <- 0 MapAO (973604791) Owner: 25
       0 <- 0 AccessAO (564526486) Owner: 25
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12072 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12073 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12073 INFO  transform  - Transformation of Top@1094272405 OwnerIDs: 25 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12074 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12074 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12074 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12074 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12075 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12075 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12075 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12076 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12076 DEBUG ReloadLog  - Query added to log: SELECT 123.4 AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12076 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12077 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12077 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@ecf9049 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12077 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12077 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price) AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12078 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@50305a (name: bid)]
prefix= bid
map={bid=[price]}
simple select:: {bid=[price]}
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@50305a (name: bid)]
[MAP({expressions=[['DolToEur(bid.price)','d']]},), null]
true
input= bid
ATTRIBUTE:: price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: d
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
orderedAttributes:: [['DolToEur(bid.price)','d']]
ARGUMENT:: ['DolToEur(bid.price)','d']
12084 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12084 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12085 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@72efb5c1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12085 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12085 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price)','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12085 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12094 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12095 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12095 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12095 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12095 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12096 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12096 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12096 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12096 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12096 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12096 INFO  transform  - Starting transformation of Top@626393072 OwnerIDs: 26... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12096 DEBUG transform  - Before transformation: 
TopAO (626393072) Owner: 26
0 <- 0 MapAO (1892869131) Owner: 26
       0 <- 0 AccessAO (302987494) Owner: 26
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12099 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12099 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12100 INFO  transform  - Transformation of Top@626393072 OwnerIDs: 26 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12100 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12100 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12100 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12102 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12102 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12102 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12102 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12103 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12103 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price) AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12104 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12105 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12106 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@408b35bf - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12106 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12111 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price) AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12122 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@15bcf458 (name: bid)]
prefix= bid
map={bid=[price]}
simple select:: {bid=[price]}
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@15bcf458 (name: bid)]
[MAP({expressions=[['DolToEur(bid.price)','d']]},), null]
true
input= bid
ATTRIBUTE:: price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: d
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@15bcf458 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@15bcf458 (name: bid)]
ATTRIBUTE:: d
orderedAttributes:: [['DolToEur(bid.price)','d'], bid.price]
ARGUMENT:: ['DolToEur(bid.price)','d'],'bid.price'
12133 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12133 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12134 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5af9926a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12134 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12134 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price)','d'],'bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12134 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12144 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12144 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12146 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12147 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12147 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12149 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12149 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12149 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12150 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12150 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12151 INFO  transform  - Starting transformation of Top@818093527 OwnerIDs: 27... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12151 DEBUG transform  - Before transformation: 
TopAO (818093527) Owner: 27
0 <- 0 MapAO (1234905692) Owner: 27
       0 <- 0 AccessAO (1500379239) Owner: 27
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12154 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12154 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12154 INFO  transform  - Transformation of Top@818093527 OwnerIDs: 27 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12154 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12155 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12155 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12156 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12156 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12156 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','d'],'bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12156 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12157 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12157 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price) AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12157 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12356 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12358 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3e587920 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12359 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12359 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price) * auction AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12359 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
map={bid=[price, auction]}
simple select:: {bid=[price, auction]}
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@24f43aa3 (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@24f43aa3 (name: bid)]
[MAP({expressions=[['DolToEur(bid.price)*bid.auction','d']]},), null]
true
input= bid
ATTRIBUTE:: price
ATTRIBUTE:: auction
ATTRIBUTE:: d
orderedAttributes:: [['DolToEur(bid.price)*bid.auction','d']]
ARGUMENT:: ['DolToEur(bid.price)*bid.auction','d']
12366 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12367 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12367 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@63fd4873 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12367 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12367 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.auction','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12367 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12370 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12370 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12370 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12371 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12371 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12371 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12372 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12372 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12372 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12372 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12372 INFO  transform  - Starting transformation of Top@1587872480 OwnerIDs: 28... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12372 DEBUG transform  - Before transformation: 
TopAO (1587872480) Owner: 28
0 <- 0 MapAO (1144897090) Owner: 28
       0 <- 0 AccessAO (1195064186) Owner: 28
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12376 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12376 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12376 INFO  transform  - Transformation of Top@1587872480 OwnerIDs: 28 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12377 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12378 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12378 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12378 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12378 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12379 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.auction','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12379 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12379 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12380 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price) * auction AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12380 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12380 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12381 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6e33c391 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12381 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12381 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price) * price AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12381 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
map={bid=[price]}
simple select:: {bid=[price]}
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@31c269fd (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@31c269fd (name: bid)]
[MAP({expressions=[['DolToEur(bid.price)*bid.price','d']]},), null]
true
input= bid
ATTRIBUTE:: price
ATTRIBUTE:: d
orderedAttributes:: [['DolToEur(bid.price)*bid.price','d']]
ARGUMENT:: ['DolToEur(bid.price)*bid.price','d']
12386 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12386 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12386 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@372b0d86 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12386 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12387 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12387 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12398 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12399 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12399 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12399 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12399 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12400 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12400 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12400 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12400 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12400 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12401 INFO  transform  - Starting transformation of Top@1392886653 OwnerIDs: 29... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12401 DEBUG transform  - Before transformation: 
TopAO (1392886653) Owner: 29
0 <- 0 MapAO (1369468094) Owner: 29
       0 <- 0 AccessAO (1037942373) Owner: 29
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12403 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12403 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12404 INFO  transform  - Transformation of Top@1392886653 OwnerIDs: 29 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12404 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12405 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12405 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12405 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12405 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12406 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12406 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12407 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12408 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price) * price AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12408 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12410 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12410 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@433ffad1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12416 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12416 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price) * auction AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12417 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
map={bid=[price, auction]}
simple select:: {bid=[price, auction]}
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2575f671 (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2575f671 (name: bid)]
[MAP({expressions=[['DolToEur(bid.price)*bid.auction','d']]},), null]
true
input= bid
ATTRIBUTE:: price
ATTRIBUTE:: auction
ATTRIBUTE:: d
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2575f671 (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@2575f671 (name: bid)]
ATTRIBUTE:: auction
ATTRIBUTE:: d
orderedAttributes:: [['DolToEur(bid.price)*bid.auction','d'], bid.price]
ARGUMENT:: ['DolToEur(bid.price)*bid.auction','d'],'bid.price'
12460 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12463 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12463 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@329a1243 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12463 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12463 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.auction','d'],'bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12464 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12468 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12468 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12468 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12469 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12469 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12469 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12470 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12471 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12471 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12472 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12472 INFO  transform  - Starting transformation of Top@1187972599 OwnerIDs: 30... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12472 DEBUG transform  - Before transformation: 
TopAO (1187972599) Owner: 30
0 <- 0 MapAO (1481751887) Owner: 30
       0 <- 0 AccessAO (2094115865) Owner: 30
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12482 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12482 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12482 INFO  transform  - Transformation of Top@1187972599 OwnerIDs: 30 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12483 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12483 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12483 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12483 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12484 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12484 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.auction','d'],'bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12484 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12484 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12485 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price) * auction AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12485 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12487 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12487 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@58a55449 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12487 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12488 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(123.4) AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12488 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
map={}
simple select:: {}
[MAP({expressions=[['DolToEur(123.4)','d']]},), null]
true
input= bid
ATTRIBUTE:: d
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
orderedAttributes:: [['DolToEur(123.4)','d']]
ARGUMENT:: ['DolToEur(123.4)','d']
12499 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12499 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12499 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6e0ff644 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12500 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12500 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(123.4)','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12500 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12522 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12522 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12522 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12523 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12523 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12523 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12524 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12524 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12525 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12525 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12526 INFO  transform  - Starting transformation of Top@452457802 OwnerIDs: 31... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12527 DEBUG transform  - Before transformation: 
TopAO (452457802) Owner: 31
0 <- 0 MapAO (1857910993) Owner: 31
       0 <- 0 AccessAO (1130598644) Owner: 31
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12533 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12533 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12533 INFO  transform  - Transformation of Top@452457802 OwnerIDs: 31 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12534 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12535 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12535 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12535 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12535 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12535 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(123.4)','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12535 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12536 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12536 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(123.4) AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12536 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12537 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12538 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@47d93e0d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12538 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12538 DEBUG StandardExecutor  - Adding following query: SELECT 'test' AS s FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12538 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
map={}
simple select:: {}
true
getAttributename:: timestamp, bid
getAttributename:: auction, bid
getAttributename:: bidder, bid
getAttributename:: datetime, bid
getAttributename:: price, bid
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
12554 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12554 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12554 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@182b435b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12555 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12555 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12555 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12563 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12564 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12564 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12564 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12566 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12567 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12567 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12567 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12567 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12567 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12568 INFO  transform  - Starting transformation of Top@242408359 OwnerIDs: 32... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12568 DEBUG transform  - Before transformation: 
TopAO (242408359) Owner: 32
0 <- 0 MapAO (3392189) Owner: 32
       0 <- 0 AccessAO (503144273) Owner: 32
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12570 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12571 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12571 INFO  transform  - Transformation of Top@242408359 OwnerIDs: 32 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12571 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12580 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12581 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12581 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12581 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12581 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12581 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12582 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12582 DEBUG ReloadLog  - Query added to log: SELECT 'test' AS s FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12583 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12584 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12584 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5cbf9e9f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12584 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12584 DEBUG StandardExecutor  - Adding following query: SELECT 'test' AS s, 123.4 AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12585 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
map={}
simple select:: {}
true
getAttributename:: timestamp, bid
getAttributename:: auction, bid
getAttributename:: bidder, bid
getAttributename:: datetime, bid
getAttributename:: price, bid
orderedAttributes:: [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
ARGUMENT:: 'bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price'
12599 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12600 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12600 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1a38ba58 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12600 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12601 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12601 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12607 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12608 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12608 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12608 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12608 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12609 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12609 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12610 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12610 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12610 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12611 INFO  transform  - Starting transformation of Top@1356236848 OwnerIDs: 33... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12611 DEBUG transform  - Before transformation: 
TopAO (1356236848) Owner: 33
0 <- 0 MapAO (508760925) Owner: 33
       0 <- 0 AccessAO (1987354705) Owner: 33
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12614 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12614 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12615 INFO  transform  - Transformation of Top@1356236848 OwnerIDs: 33 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12615 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12616 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12616 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12616 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12616 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12617 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12617 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12617 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12618 DEBUG ReloadLog  - Query added to log: SELECT 'test' AS s, 123.4 AS d FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12618 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12618 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12618 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7692cd34 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12618 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12619 DEBUG StandardExecutor  - Adding following query: SELECT 'test' AS s, 123.4 AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12619 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
map={bid=[price]}
simple select:: {bid=[price]}
[null, null]
true
input= bid
ATTRIBUTE:: price
ATTRIBUTE:: price
ATTRIBUTE:: price
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@32c0915e (name: bid)]
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@32c0915e (name: bid)]
orderedAttributes:: [bid.price]
ARGUMENT:: 'bid.price'
12647 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12647 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12648 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@106faf11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12648 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12648 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12648 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12650 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12650 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12650 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12651 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12651 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12651 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12651 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12651 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12652 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12652 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12652 INFO  transform  - Starting transformation of Top@1266093632 OwnerIDs: 34... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12652 DEBUG transform  - Before transformation: 
TopAO (1266093632) Owner: 34
0 <- 0 MapAO (2028036437) Owner: 34
       0 <- 0 AccessAO (1420012431) Owner: 34
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12654 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12654 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12654 INFO  transform  - Transformation of Top@1266093632 OwnerIDs: 34 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12655 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12655 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12655 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12656 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12656 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12656 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12656 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12656 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12658 DEBUG ReloadLog  - Query added to log: SELECT 'test' AS s, 123.4 AS d, price FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12659 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12659 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12659 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4102b1b1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12659 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12660 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid AS b WHERE b.bidder > 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12660 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::b.bidder
prefix= b
map={bid=[b.bidder]}
getAttributename:: b.bidder, null
[null, null]
aliasses::[bidder, b.bidder]
true
input= operator_1
12671 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12671 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12671 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5cad8b7d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12671 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12672 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder>10'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12672 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12684 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12685 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12685 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12685 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12685 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12696 DEBUG ruleengine  - Ruleengine needed 10 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12696 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12696 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12696 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12696 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12697 INFO  transform  - Starting transformation of Top@140428850 OwnerIDs: 35... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12697 DEBUG transform  - Before transformation: 
TopAO (140428850) Owner: 35
0 <- 0 RenameAO (470132045) Owner: 35
       0 <- 0 SelectAO (1710191146) Owner: 35
              0 <- 0 AccessAO (1608103523) Owner: 35
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12703 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12703 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12704 INFO  transform  - Transformation of Top@140428850 OwnerIDs: 35 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12704 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12708 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12708 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12708 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12708 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12709 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder>10'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12709 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12709 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12710 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid AS b WHERE b.bidder > 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12710 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12710 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12711 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@57dc9128 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12711 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12711 DEBUG StandardExecutor  - Adding following query: SELECT b.* FROM bid AS b WHERE b.bidder > 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12711 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::b.*
findbyName::b.bidder
prefix= b
map={bid=[timestamp, auction, bidder, datetime, price, b.bidder]}
getAttributename:: b.bidder, null
[null, null]
aliasses::[bidder, b.bidder]
true
input= operator_1
12715 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12715 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12715 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@17ae98d7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12715 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12715 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder>10'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12716 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12718 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12718 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12718 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12719 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12719 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12719 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12720 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12720 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12721 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12721 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12722 INFO  transform  - Starting transformation of Top@1177101170 OwnerIDs: 36... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12723 DEBUG transform  - Before transformation: 
TopAO (1177101170) Owner: 36
0 <- 0 RenameAO (309060377) Owner: 36
       0 <- 0 SelectAO (1816397102) Owner: 36
              0 <- 0 AccessAO (1547116051) Owner: 36
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12725 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12726 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12726 INFO  transform  - Transformation of Top@1177101170 OwnerIDs: 36 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12726 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12727 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12727 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12727 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12727 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12727 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder>10'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12727 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12728 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12729 DEBUG ReloadLog  - Query added to log: SELECT b.* FROM bid AS b WHERE b.bidder > 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12729 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12729 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12730 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@27f0ad19 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12730 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12730 DEBUG StandardExecutor  - Adding following query: SELECT b.price FROM bid AS b WHERE b.price < 150.0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12730 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::b.price
prefix= b
map={bid=[b.price]}
getAttributename:: b.price, null
[null, null]
aliasses::[price, b.price]
true
input= operator_1
ATTRIBUTE:: b.price
orderedAttributes:: [b.price]
ARGUMENT:: 'b.price'
12735 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12735 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12736 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@38d5b107 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12736 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12736 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.price<150.0'},operator_1)
operator_3 = MAP({expressions=['b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12736 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12743 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12743 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12743 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12744 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12744 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12744 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12745 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12745 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12745 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12745 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12745 INFO  transform  - Starting transformation of Top@1460696714 OwnerIDs: 37... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12745 DEBUG transform  - Before transformation: 
TopAO (1460696714) Owner: 37
0 <- 0 MapAO (429804587) Owner: 37
       0 <- 0 SelectAO (115397800) Owner: 37
              0 <- 0 AccessAO (1691858720) Owner: 37
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12748 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12749 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12749 INFO  transform  - Transformation of Top@1460696714 OwnerIDs: 37 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12749 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12750 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12750 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12750 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12750 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12750 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.price<150.0'},operator_1)
operator_3 = MAP({expressions=['b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12750 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12751 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12751 DEBUG ReloadLog  - Query added to log: SELECT b.price FROM bid AS b WHERE b.price < 150.0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12751 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12752 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12752 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@71b1a49c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12752 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12752 DEBUG StandardExecutor  - Adding following query: SELECT b.bidder, b.price FROM bid AS b WHERE b.bidder =  1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12753 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::b.bidder
prefix= b
findbyName::b.price
prefix= b
map={bid=[b.bidder, b.price]}
getAttributename:: b.bidder, null
[null, null]
aliasses::[bidder, b.bidder]
aliasses::[bidder, b.bidder, price, b.price]
true
input= operator_1
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.price
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.price
orderedAttributes:: [b.bidder, b.price]
ARGUMENT:: 'b.bidder','b.price'
12758 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12759 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12759 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@589b028e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12759 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12759 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b.bidder','price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder==1'},operator_1)
operator_3 = MAP({expressions=['b.bidder','b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12759 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12764 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12764 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12764 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12765 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12765 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12766 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12766 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12766 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12766 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12766 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12766 INFO  transform  - Starting transformation of Top@1727424614 OwnerIDs: 38... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12767 DEBUG transform  - Before transformation: 
TopAO (1727424614) Owner: 38
0 <- 0 MapAO (586831282) Owner: 38
       0 <- 0 SelectAO (1298557761) Owner: 38
              0 <- 0 AccessAO (1704214570) Owner: 38
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12770 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12770 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12771 INFO  transform  - Transformation of Top@1727424614 OwnerIDs: 38 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12771 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12773 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12774 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12774 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12774 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12774 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b.bidder','price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder==1'},operator_1)
operator_3 = MAP({expressions=['b.bidder','b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12775 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12775 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12776 DEBUG ReloadLog  - Query added to log: SELECT b.bidder, b.price FROM bid AS b WHERE b.bidder =  1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12776 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12777 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12777 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7d2a6eac - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12778 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12778 DEBUG StandardExecutor  - Adding following query: SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b WHERE b.price > 100.0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12778 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::b.timestamp
prefix= b
findbyName::b.auction
prefix= b
findbyName::b.bidder
prefix= b
findbyName::b.datetime
prefix= b
findbyName::b.price
prefix= b
map={bid=[b.timestamp, b.auction, b.bidder, b.datetime, b.price]}
getAttributename:: b.price, null
[null, null]
aliasses::[timestamp, b.timestamp]
aliasses::[timestamp, b.timestamp, auction, b.auction]
aliasses::[timestamp, b.timestamp, auction, b.auction, bidder, b.bidder]
aliasses::[timestamp, b.timestamp, auction, b.auction, bidder, b.bidder, datetime, b.datetime]
aliasses::[timestamp, b.timestamp, auction, b.auction, bidder, b.bidder, datetime, b.datetime, price, b.price]
true
input= operator_1
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
ATTRIBUTE:: b.timestamp
ATTRIBUTE:: b.auction
ATTRIBUTE:: b.bidder
ATTRIBUTE:: b.datetime
ATTRIBUTE:: b.price
orderedAttributes:: [b.timestamp, b.auction, b.bidder, b.datetime, b.price]
ARGUMENT:: 'b.timestamp','b.auction','b.bidder','b.datetime','b.price'
12790 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12791 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12791 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2c0f7678 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12791 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12791 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','b.timestamp','auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.price>100.0'},operator_1)
operator_3 = MAP({expressions=['b.timestamp','b.auction','b.bidder','b.datetime','b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12791 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12796 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12797 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12797 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12797 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12798 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12798 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12799 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12799 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12799 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12799 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12800 INFO  transform  - Starting transformation of Top@1896558831 OwnerIDs: 39... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12800 DEBUG transform  - Before transformation: 
TopAO (1896558831) Owner: 39
0 <- 0 MapAO (10915321) Owner: 39
       0 <- 0 SelectAO (682981033) Owner: 39
              0 <- 0 AccessAO (131037934) Owner: 39
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12803 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12803 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12804 INFO  transform  - Transformation of Top@1896558831 OwnerIDs: 39 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12804 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12805 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12805 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12806 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12806 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12806 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','b.timestamp','auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.price>100.0'},operator_1)
operator_3 = MAP({expressions=['b.timestamp','b.auction','b.bidder','b.datetime','b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12806 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12807 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12807 DEBUG ReloadLog  - Query added to log: SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b WHERE b.price > 100.0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12808 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12809 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12809 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6df20ade - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12809 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12809 DEBUG StandardExecutor  - Adding following query: SELECT price AS p FROM bid WHERE p < 100 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12810 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
map={bid=[p]}
getAttributename:: p, null
[null, null]
true
input= operator_1
ATTRIBUTE:: p
orderedAttributes:: [p]
ARGUMENT:: 'p'
12816 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12816 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12816 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4010d494 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12816 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12817 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='p<100'},operator_1)
operator_3 = MAP({expressions=['p']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12817 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12822 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12822 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12823 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12823 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12823 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12824 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12824 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12824 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12825 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12825 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12826 INFO  transform  - Starting transformation of Top@1733947537 OwnerIDs: 40... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12827 DEBUG transform  - Before transformation: 
TopAO (1733947537) Owner: 40
0 <- 0 MapAO (54134077) Owner: 40
       0 <- 0 SelectAO (346377974) Owner: 40
              0 <- 0 AccessAO (546446235) Owner: 40
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12834 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12835 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12836 INFO  transform  - Transformation of Top@1733947537 OwnerIDs: 40 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12836 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12838 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12839 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12839 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12839 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12839 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='p<100'},operator_1)
operator_3 = MAP({expressions=['p']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12839 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12840 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12840 DEBUG ReloadLog  - Query added to log: SELECT price AS p FROM bid WHERE p < 100 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12840 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12841 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12841 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@62d0ac62 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12842 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12842 DEBUG StandardExecutor  - Adding following query: SELECT price AS p, bidder FROM bid WHERE p > 100 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12842 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
map={bid=[p, bidder]}
getAttributename:: p, null
[null, null]
true
input= operator_1
ATTRIBUTE:: p
ATTRIBUTE:: bidder
ATTRIBUTE:: p
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6826c41e (name: bid)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@6826c41e (name: bid)]
orderedAttributes:: [p, bid.bidder]
ARGUMENT:: 'p','bid.bidder'
12848 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12848 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12848 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3003697 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12848 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12849 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='p>100'},operator_1)
operator_3 = MAP({expressions=['p','bid.bidder']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12849 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12852 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12853 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12853 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12853 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12853 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12854 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12854 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12854 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12854 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12855 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12855 INFO  transform  - Starting transformation of Top@47268007 OwnerIDs: 41... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12855 DEBUG transform  - Before transformation: 
TopAO (47268007) Owner: 41
0 <- 0 MapAO (880533231) Owner: 41
       0 <- 0 SelectAO (715289224) Owner: 41
              0 <- 0 AccessAO (2134157671) Owner: 41
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12860 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12861 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12861 INFO  transform  - Transformation of Top@47268007 OwnerIDs: 41 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12861 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12862 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12862 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12862 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12862 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12862 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='p>100'},operator_1)
operator_3 = MAP({expressions=['p','bid.bidder']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12863 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12863 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12864 DEBUG ReloadLog  - Query added to log: SELECT price AS p, bidder FROM bid WHERE p > 100 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12864 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12865 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12865 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5f233b26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12865 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12865 DEBUG StandardExecutor  - Adding following query: SELECT price AS p, bidder AS b FROM bid WHERE b=1 AND p <100 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12865 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
map={bid=[p, b]}
getAttributename:: b, null
getAttributename:: p, null
[null, null]
true
input= operator_1
ATTRIBUTE:: p
ATTRIBUTE:: b
ATTRIBUTE:: p
ATTRIBUTE:: b
orderedAttributes:: [p, b]
ARGUMENT:: 'p','b'
12882 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12882 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12882 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5e8a459 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12882 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12882 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='b==1&&p<100'},operator_1)
operator_3 = MAP({expressions=['p','b']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12883 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12889 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12890 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12890 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12891 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12891 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12895 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12896 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12896 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12896 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12897 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12897 INFO  transform  - Starting transformation of Top@296234255 OwnerIDs: 42... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12898 DEBUG transform  - Before transformation: 
TopAO (296234255) Owner: 42
0 <- 0 MapAO (450589816) Owner: 42
       0 <- 0 SelectAO (988179589) Owner: 42
              0 <- 0 SelectAO (378814088) Owner: 42
                     0 <- 0 AccessAO (1174714624) Owner: 42
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12902 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12902 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12902 INFO  transform  - Transformation of Top@296234255 OwnerIDs: 42 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12902 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12903 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12903 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12904 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12904 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12904 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='b==1&&p<100'},operator_1)
operator_3 = MAP({expressions=['p','b']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12904 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12905 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12905 DEBUG ReloadLog  - Query added to log: SELECT price AS p, bidder AS b FROM bid WHERE b=1 AND p <100 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12905 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12906 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12906 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@22df874e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12906 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12906 DEBUG StandardExecutor  - Adding following query: SELECT AVG(price) AS aprice FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12907 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@5bdaf2ce (name: bid)]
12910 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
12910 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
12910 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
prefix= bid
map={bid=[price]}
simple select:: {bid=[price]}
true
de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@42d236fb (operators: null)
COMPONENTS==1
COMPONENT SIZE==1
HEY
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@5bdaf2ce (name: bid)]
getAttributename:: bid.price, null
[null, AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']]}, bid)]
input= AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']]}, bid)
ATTRIBUTE:: price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: aprice
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
orderedAttributes:: [aprice]
ARGUMENT:: 'aprice'
12913 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12913 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12913 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1ce93c18 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12913 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12913 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['aprice']},AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']]},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12913 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12916 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12916 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12916 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12917 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12917 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12917 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12917 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12917 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12918 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12918 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12918 INFO  transform  - Starting transformation of Top@1625939772 OwnerIDs: 43... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12918 DEBUG transform  - Before transformation: 
TopAO (1625939772) Owner: 43
0 <- 0 MapAO (151515831) Owner: 43
       0 <- 0 AggregateAO (1130160902) Owner: 43
              0 <- 0 AccessAO (1400582895) Owner: 43
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12940 DEBUG ruleengine  - Ruleengine needed 21 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12940 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12940 INFO  transform  - Transformation of Top@1625939772 OwnerIDs: 43 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12940 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12941 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12942 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12942 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12942 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12942 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['aprice']},AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']]},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12942 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12943 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12943 DEBUG ReloadLog  - Query added to log: SELECT AVG(price) AS aprice FROM bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12943 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12943 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12944 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@28782602 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12944 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12944 DEBUG StandardExecutor  - Adding following query: SELECT AVG(price) AS aprice FROM bid GROUP BY auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12944 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@511816c0 (name: bid)]
12946 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
12947 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
12947 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
prefix= bid
map={bid=[price]}
simple select:: {bid=[price]}
true
de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@38b972d7 (operators: null)
COMPONENTS==1
COMPONENT SIZE==1
HEY
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@511816c0 (name: bid)]
getAttributename:: bid.price, null
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@511816c0 (name: bid)]
[null, AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']}, bid)]
input= AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']}, bid)
ATTRIBUTE:: price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: aprice
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
orderedAttributes:: [aprice]
ARGUMENT:: 'aprice'
12949 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12949 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12950 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3935e9a8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12950 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12950 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['aprice']},AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12950 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12952 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12952 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12952 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12953 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12953 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12953 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12954 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12954 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12954 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12954 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12954 INFO  transform  - Starting transformation of Top@1769227988 OwnerIDs: 44... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12954 DEBUG transform  - Before transformation: 
TopAO (1769227988) Owner: 44
0 <- 0 MapAO (1991094835) Owner: 44
       0 <- 0 AggregateAO (906448455) Owner: 44
              0 <- 0 AccessAO (910504711) Owner: 44
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12957 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12958 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12958 INFO  transform  - Transformation of Top@1769227988 OwnerIDs: 44 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12958 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12960 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12960 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12960 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12960 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12960 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['aprice']},AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12960 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12961 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12961 DEBUG ReloadLog  - Query added to log: SELECT AVG(price) AS aprice FROM bid GROUP BY auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12961 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12962 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12962 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4fcc529 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12962 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12962 DEBUG StandardExecutor  - Adding following query: SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12962 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4beddc56 (name: bid)]
12965 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
12966 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
12966 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
prefix= bid
prefix= bid
map={bid=[auction, price]}
simple select:: {bid=[auction, price]}
true
de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@79b663b3 (operators: null)
COMPONENTS==1
COMPONENT SIZE==1
HEY
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4beddc56 (name: bid)]
getAttributename:: bid.price, null
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4beddc56 (name: bid)]
[null, operator_1]
input= operator_1
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4beddc56 (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4beddc56 (name: bid)]
ATTRIBUTE:: price
ATTRIBUTE:: aprice
ATTRIBUTE:: auction
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: aprice
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
orderedAttributes:: [bid.auction, aprice]
ARGUMENT:: 'bid.auction','aprice'
12968 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12968 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12968 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1b812421 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12968 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12968 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['bid.auction','aprice']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12969 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12972 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12972 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12972 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12973 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12973 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12974 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12974 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12975 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12975 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12975 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12975 INFO  transform  - Starting transformation of Top@2006842965 OwnerIDs: 45... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12975 DEBUG transform  - Before transformation: 
TopAO (2006842965) Owner: 45
0 <- 0 MapAO (842422776) Owner: 45
       0 <- 0 AggregateAO (289711450) Owner: 45
              0 <- 0 AccessAO (1045567253) Owner: 45
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12978 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12979 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12979 INFO  transform  - Transformation of Top@2006842965 OwnerIDs: 45 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12980 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12983 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12983 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12983 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12984 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12984 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['bid.auction','aprice']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12984 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12985 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12986 DEBUG ReloadLog  - Query added to log: SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12986 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12986 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12986 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3c443976 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12987 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12987 DEBUG StandardExecutor  - Adding following query: SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction HAVING aprice<100.0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12987 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3bd55d8 (name: bid)]
12991 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
12991 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
12991 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
prefix= bid
prefix= bid
map={bid=[auction, price]}
simple select:: {bid=[auction, price]}
true
de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@63998bf4 (operators: null)
COMPONENTS==1
COMPONENT SIZE==1
HEY
getAttributename:: price, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3bd55d8 (name: bid)]
getAttributename:: bid.price, null
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3bd55d8 (name: bid)]
[null, operator_1]
input= operator_1
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3bd55d8 (name: bid)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@3bd55d8 (name: bid)]
ATTRIBUTE:: price
ATTRIBUTE:: aprice
ATTRIBUTE:: auction
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: price
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
ATTRIBUTE:: aprice
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
orderedAttributes:: [bid.auction, aprice]
ARGUMENT:: 'bid.auction','aprice'
12993 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12993 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12994 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7e0b9178 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12994 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12994 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['bid.auction','aprice']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12994 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12997 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12997 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12997 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12998 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12998 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12998 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12999 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12999 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12999 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12999 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12999 INFO  transform  - Starting transformation of Top@1596009860 OwnerIDs: 46... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12999 DEBUG transform  - Before transformation: 
TopAO (1596009860) Owner: 46
0 <- 0 MapAO (310212872) Owner: 46
       0 <- 0 AggregateAO (1805412777) Owner: 46
              0 <- 0 AccessAO (1713546896) Owner: 46
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
13002 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13003 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13003 INFO  transform  - Transformation of Top@1596009860 OwnerIDs: 46 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
13003 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
13005 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
13006 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
13006 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
13006 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
13006 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['bid.auction','aprice']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13006 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13007 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13007 DEBUG ReloadLog  - Query added to log: SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction HAVING aprice<100.0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13007 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13008 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13008 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2424686b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13008 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13008 DEBUG StandardExecutor  - Adding following query: SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13009 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
findbyName::bid.bidder
findbyName::bid.bidder
prefix= bid
findbyName::person.id
findbyName::person.id
prefix= person
map={bid=[auction, bidder, bid.bidder], person=[person.id]}
getAttributename:: bid.bidder, null
getAttributename:: person.id, null
[null, null]
true
true
input= JOIN(bid,person)
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@28486680 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4d7e7435 (name: person)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@28486680 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4d7e7435 (name: person)]
ATTRIBUTE:: bidder
ATTRIBUTE:: bid.bidder
ATTRIBUTE:: person.id
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@28486680 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4d7e7435 (name: person)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@28486680 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@4d7e7435 (name: person)]
ATTRIBUTE:: bid.bidder
ATTRIBUTE:: person.id
orderedAttributes:: [bid.auction, bid.bidder]
ARGUMENT:: 'bid.auction','bid.bidder'
13012 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13013 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13013 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4a1e3ac1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13013 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13013 DEBUG StandardExecutor  - Adding following query: operator_1 = SELECT({predicate='bid.bidder==person.id'},JOIN(bid,person))
operator_2 = MAP({expressions=['bid.auction','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13013 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
13016 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13017 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13017 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
13017 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
13018 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
13020 DEBUG RelationalRestructHelper  - removing operator:Select@2076829355 OwnerIDs: 47(bid.bidder) = (person.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
13022 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13022 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13022 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
13023 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
13023 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
13023 INFO  transform  - Starting transformation of Top@1129387802 OwnerIDs: 47... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
13024 DEBUG transform  - Before transformation: 
TopAO (1129387802) Owner: 47
0 <- 0 MapAO (1009218257) Owner: 47
       0 <- 0 JoinAO (936380963) Owner: 47 Predicate: (bid.bidder) = (person.id) initialized = true
              0 <- 0 AccessAO (1128158063) Owner: 47
              1 <- 0 AccessAO (144467413) Owner: 47
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
13085 DEBUG ruleengine  - Ruleengine needed 60 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13085 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13086 INFO  transform  - Transformation of Top@1129387802 OwnerIDs: 47 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
13086 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
13088 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
13088 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
13089 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
13089 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
13089 DEBUG ReloadLog  - Query added to log: operator_1 = SELECT({predicate='bid.bidder==person.id'},JOIN(bid,person))
operator_2 = MAP({expressions=['bid.auction','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13089 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13090 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13090 DEBUG ReloadLog  - Query added to log: SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13090 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13092 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13092 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@72ab05ed - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13092 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13092 DEBUG StandardExecutor  - Adding following query: SELECT auction FROM bid AS b, person AS p WHERE b.bidder = p.id - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13092 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
findbyName::b.bidder
findbyName::b.bidder
prefix= b
findbyName::p.id
findbyName::p.id
prefix= p
map={bid=[auction, b.bidder], person=[p.id]}
getAttributename:: b.bidder, null
getAttributename:: p.id, null
[null, null]
aliasses::[bidder, b.bidder]
true
aliasses::[id, p.id]
true
input= JOIN(operator_1,operator_2)
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@c3c4c1c (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@17d238b1 (name: person)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@c3c4c1c (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@17d238b1 (name: person)]
ATTRIBUTE:: b.bidder
ATTRIBUTE:: p.id
orderedAttributes:: [bid.auction]
ARGUMENT:: 'bid.auction'
13098 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13099 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13099 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3d7cc3cb - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13099 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13099 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','p.id'],pairs='true'},person)
operator_3 = SELECT({predicate='b.bidder==p.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['bid.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13099 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
13106 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13106 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13106 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
13107 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
13107 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
13107 DEBUG RelationalRestructHelper  - removing operator:Select@1532800776 OwnerIDs: 48(b.bidder) = (p.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
13108 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13108 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13108 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
13109 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
13109 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
13109 INFO  transform  - Starting transformation of Top@1514955661 OwnerIDs: 48... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
13109 DEBUG transform  - Before transformation: 
TopAO (1514955661) Owner: 48
0 <- 0 MapAO (333879495) Owner: 48
       0 <- 0 JoinAO (183304529) Owner: 48 Predicate: (b.bidder) = (p.id) initialized = true
              0 <- 0 AccessAO (645643802) Owner: 48
              1 <- 0 AccessAO (521331027) Owner: 48
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
13116 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13116 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13117 INFO  transform  - Transformation of Top@1514955661 OwnerIDs: 48 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
13117 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
13119 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
13119 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
13119 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
13119 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
13120 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','p.id'],pairs='true'},person)
operator_3 = SELECT({predicate='b.bidder==p.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['bid.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13120 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13120 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13121 DEBUG ReloadLog  - Query added to log: SELECT auction FROM bid AS b, person AS p WHERE b.bidder = p.id - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13121 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13121 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13122 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@64e1dd11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13122 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13122 DEBUG StandardExecutor  - Adding following query: SELECT auction AS a, bidder AS b FROM bid, person WHERE a = b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13122 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
map={bid=[a, b]}
getAttributename:: a, null
getAttributename:: b, null
[null, null]
true
true
input= JOIN(operator_1,person)
ATTRIBUTE:: a
ATTRIBUTE:: b
ATTRIBUTE:: a
ATTRIBUTE:: b
orderedAttributes:: [a, b]
ARGUMENT:: 'a','b'
13126 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13126 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13126 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6999cd39 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13126 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13127 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','a','bidder','b'],pairs='true'},bid)
operator_2 = SELECT({predicate='a==b'},JOIN(operator_1,person))
operator_3 = MAP({expressions=['a','b']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13127 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
13132 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13133 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13143 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
13146 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
13146 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
13147 DEBUG RelationalRestructHelper  - removing operator:Select@1642356615 OwnerIDs: 49(a) = (b) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
13147 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13148 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13148 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
13148 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
13148 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
13148 INFO  transform  - Starting transformation of Top@1052399527 OwnerIDs: 49... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
13148 DEBUG transform  - Before transformation: 
TopAO (1052399527) Owner: 49
0 <- 0 MapAO (657069980) Owner: 49
       0 <- 0 JoinAO (51376124) Owner: 49 Predicate: null
              0 <- 0 SelectAO (1730182538) Owner: 
                     0 <- 0 AccessAO (197855654) Owner: 49
              1 <- 0 AccessAO (2083154356) Owner: 49
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
13157 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13158 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13158 INFO  transform  - Transformation of Top@1052399527 OwnerIDs: 49 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
13158 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
13160 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
13160 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
13160 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
13160 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
13160 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','a','bidder','b'],pairs='true'},bid)
operator_2 = SELECT({predicate='a==b'},JOIN(operator_1,person))
operator_3 = MAP({expressions=['a','b']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13160 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13161 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13161 DEBUG ReloadLog  - Query added to log: SELECT auction AS a, bidder AS b FROM bid, person WHERE a = b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13161 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13162 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13162 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6f6962ba - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13162 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13162 DEBUG StandardExecutor  - Adding following query: SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13163 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prefix= bid
prefix= bid
findbyName::bid.bidder
findbyName::bid.bidder
prefix= bid
findbyName::person.id
findbyName::person.id
prefix= person
map={bid=[auction, bidder, bid.bidder], person=[person.id]}
getAttributename:: bid.bidder, null
getAttributename:: person.id, null
[null, null]
true
true
input= JOIN(bid,person)
ATTRIBUTE:: auction
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@a0a9fa5 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@15723761 (name: person)]
getAttributename:: auction, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@a0a9fa5 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@15723761 (name: person)]
ATTRIBUTE:: bidder
ATTRIBUTE:: bid.bidder
ATTRIBUTE:: person.id
ATTRIBUTE:: auction
ATTRIBUTE:: bidder
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@a0a9fa5 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@15723761 (name: person)]
getAttributename:: bidder, null
QUERY_SOURCES::[de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@a0a9fa5 (name: bid), de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SimpleSourceImpl@15723761 (name: person)]
ATTRIBUTE:: bid.bidder
ATTRIBUTE:: person.id
orderedAttributes:: [bid.auction, bid.bidder]
ARGUMENT:: 'bid.auction','bid.bidder'
13168 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13168 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13168 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@312afbc7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13168 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13168 DEBUG StandardExecutor  - Adding following query: operator_1 = SELECT({predicate='bid.bidder==person.id'},JOIN(bid,person))
operator_2 = MAP({expressions=['bid.auction','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13168 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
13175 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13175 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13175 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
13176 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
13176 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
13176 DEBUG RelationalRestructHelper  - removing operator:Select@882706486 OwnerIDs: 50(bid.bidder) = (person.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
13177 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13177 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13177 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
13177 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
13177 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
13178 INFO  transform  - Starting transformation of Top@1702478809 OwnerIDs: 50... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
13178 DEBUG transform  - Before transformation: 
TopAO (1702478809) Owner: 50
0 <- 0 MapAO (45643137) Owner: 50
       0 <- 0 JoinAO (1715686600) Owner: 50 Predicate: (bid.bidder) = (person.id) initialized = true
              0 <- 0 AccessAO (1123166613) Owner: 50
              1 <- 0 AccessAO (1765690649) Owner: 50
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
13183 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13184 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13184 INFO  transform  - Transformation of Top@1702478809 OwnerIDs: 50 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
13185 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
13187 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
13187 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
13187 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
13187 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
13188 DEBUG ReloadLog  - Query added to log: operator_1 = SELECT({predicate='bid.bidder==person.id'},JOIN(bid,person))
operator_2 = MAP({expressions=['bid.auction','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13188 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13189 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13189 DEBUG ReloadLog  - Query added to log: SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13189 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13190 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13190 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@72805168 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13190 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13190 DEBUG StandardExecutor  - Adding following query: SELECT left.* FROM bid AS left, bid AS right WHERE left.bidder = right.bidder - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13191 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::left.*
findbyName::left.*
findbyName::left.bidder
findbyName::left.bidder
prefix= left
findbyName::right.bidder
findbyName::right.bidder
prefix= right
map={bid=[timestamp, auction, bidder, datetime, price, left.bidder, right.bidder]}
getAttributename:: left.bidder, null
getAttributename:: right.bidder, null
[null, null]
aliasses::[bidder, left.bidder]
true
aliasses::[bidder, right.bidder]
true
self join:: 
input= JOIN(operator_1,operator_2)
13196 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13196 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13196 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@27f1bbe0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13197 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13197 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','left.bidder'],pairs='true'},bid)
operator_2 = RENAME({aliases=['bidder','right.bidder','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = SELECT({predicate='left.bidder==right.bidder'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13197 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
13199 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13199 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13199 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
13200 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
13200 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
13201 DEBUG RelationalRestructHelper  - removing operator:Select@1149388444 OwnerIDs: 51(left.bidder) = (right.bidder) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
13202 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13203 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13203 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
13203 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
13203 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
13204 INFO  transform  - Starting transformation of Top@138933223 OwnerIDs: 51... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
13204 DEBUG transform  - Before transformation: 
TopAO (138933223) Owner: 51
0 <- 0 JoinAO (1774897456) Owner: 51 Predicate: (left.bidder) = (right.bidder) initialized = true
       0 <- 0 AccessAO (425275537) Owner: 51
       1 <- 0 AccessAO (1564078808) Owner: 51
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
13208 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13208 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13208 INFO  transform  - Transformation of Top@138933223 OwnerIDs: 51 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
13209 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
13210 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
13210 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
13211 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
13211 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
13211 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','left.bidder'],pairs='true'},bid)
operator_2 = RENAME({aliases=['bidder','right.bidder','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = SELECT({predicate='left.bidder==right.bidder'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13211 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13212 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13212 DEBUG ReloadLog  - Query added to log: SELECT left.* FROM bid AS left, bid AS right WHERE left.bidder = right.bidder - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13212 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13214 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13214 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6872f9c8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13214 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13215 DEBUG StandardExecutor  - Adding following query: SELECT a.auction AS aid FROM bid AS a, bid AS b WHERE aid=b.auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13215 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::a.auction
findbyName::a.auction
prefix= a
findbyName::b.auction
findbyName::b.auction
prefix= b
map={bid=[aid, b.auction]}
getAttributename:: aid, null
getAttributename:: b.auction, null
[null, null]
aliasses::[auction, aid]
true
aliasses::[auction, b.auction]
true
self join:: 
input= JOIN(operator_1,operator_2)
ATTRIBUTE:: aid
ATTRIBUTE:: b.auction
orderedAttributes:: [aid]
ARGUMENT:: 'aid'
13219 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13219 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13219 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@bdecc21 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
13220 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
13220 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','aid'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','b.auction','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = SELECT({predicate='aid==b.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['aid']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
13220 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
13224 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
13225 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
13225 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
13225 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
13225 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
13226 DEBUG RelationalRestructHelper  - removing operator:Select@2122991287 OwnerIDs: 52(aid) = (b.auction) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
13227 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13227 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13228 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
13228 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
13228 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
13230 INFO  transform  - Starting transformation of Top@935722070 OwnerIDs: 52... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
13230 DEBUG transform  - Before transformation: 
TopAO (935722070) Owner: 52
0 <- 0 MapAO (29369803) Owner: 52
       0 <- 0 JoinAO (1350720002) Owner: 52 Predicate: (aid) = (b.auction) initialized = true
              0 <- 0 AccessAO (1753259207) Owner: 52
              1 <- 0 AccessAO (1883237069) Owner: 52
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
13236 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
13236 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
13236 INFO  transform  - Transformation of Top@935722070 OwnerIDs: 52 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
13237 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
13238 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
13238 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
13238 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
13239 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
13239 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','aid'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','b.auction','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = SELECT({predicate='aid==b.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['aid']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13239 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13240 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13241 DEBUG ReloadLog  - Query added to log: SELECT a.auction AS aid FROM bid AS a, bid AS b WHERE aid=b.auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13241 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13242 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13242 DEBUG ReloadLog  - Query added to log: /// THIS IS A TEST FOR PROJECT, MAP AND RENAME
/// ALL PROVIDED EXAMPLE SHOULD WORK
#PARSER CQL
#TRANSCFG Standard
#DOREWRITE false
#DROPALLQUERIES
#QUERY
DROP STREAM bid IF EXISTS
#QUERY
ATTACH STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) CHANNEL localhost : 65442
#QUERY
DROP STREAM person IF EXISTS
#QUERY
ATTACH STREAM person (timestamp STARTTIMESTAMP,id INTEGER,name STRING,email STRING,creditcard STRING,city STRING,state STRING) CHANNEL localhost : 65440

/// SIMPLE PROJECTS
#QUERY 
SELECT * FROM bid
#QUERY
SELECT bid.* FROM bid
#QUERY
SELECT price FROM bid
#QUERY
SELECT bidder, price FROM bid
#QUERY
SELECT timestamp, auction, bidder, datetime, price FROM bid

/// PROJECTS WITH RENAMED SOURCE BUT NO USE IN PROJECT
#QUERY 
SELECT * FROM bid AS b
#QUERY
SELECT bid.* FROM bid AS b
#QUERY
SELECT price FROM bid AS b
#QUERY
SELECT bidder, price FROM bid AS b
#QUERY
SELECT timestamp, auction, bidder, datetime, price FROM bid AS b


/// PROJECTS WITH RENAMED SOURCE WITH USE IN PROJECT
#QUERY 
SELECT * FROM bid AS b
#QUERY
SELECT b.* FROM bid AS b
#QUERY
SELECT b.price FROM bid AS b
#QUERY
SELECT b.bidder, b.price FROM bid AS b
#QUERY
SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b

/// PROJECTS WITH RENAMED ATTRIBUTES
#QUERY
SELECT price AS p FROM bid
#QUERY
SELECT price AS p, bidder FROM bid
#QUERY
SELECT price AS p, bidder AS b FROM bid

/// PROJECTS WITH RENAMED ATTRIBUTES AND SOURCES
#QUERY
SELECT price AS p FROM bid AS b
#QUERY
SELECT b.price AS p FROM bid AS b
#QUERY
SELECT b.price AS p, b.bidder FROM bid AS b
#QUERY
SELECT b.price AS p, b.bidder AS b FROM bid AS b


/// PROJECTS WITH CONSTANTS, FUNCTIONS AND EXPRESSIONS
#QUERY
SELECT bidder + price AS d FROM bid
#QUERY
SELECT 123.4 * price AS d FROM bid
#QUERY
SELECT 123.4 AS d FROM bid
#QUERY
SELECT 123.4 AS d, price FROM bid
#QUERY
SELECT DolToEur(price) AS d FROM bid
#QUERY
SELECT DolToEur(price) AS d, price FROM bid
#QUERY
SELECT DolToEur(price) * auction AS d FROM bid
#QUERY
SELECT DolToEur(price) * price AS d FROM bid
#QUERY
SELECT DolToEur(price) * auction AS d, price FROM bid
#QUERY
SELECT DolToEur(123.4) AS d FROM bid
#QUERY
SELECT 'test' AS s FROM bid
#QUERY
SELECT 'test' AS s, 123.4 AS d FROM bid
#QUERY
SELECT 'test' AS s, 123.4 AS d, price FROM bid


/// PROJECTS AND SELECTS WITH RENAMED SOURCE WITH USE IN SELECT
#QUERY 
SELECT * FROM bid AS b WHERE b.bidder > 10
#QUERY
SELECT b.* FROM bid AS b WHERE b.bidder > 10
#QUERY
SELECT b.price FROM bid AS b WHERE b.price < 150.0
#QUERY
SELECT b.bidder, b.price FROM bid AS b WHERE b.bidder =  1
#QUERY
SELECT b.timestamp, b.auction, b.bidder, b.datetime, b.price FROM bid AS b WHERE b.price > 100.0

/// PROJECTS WITH RENAMED ATTRIBUTES
#QUERY
SELECT price AS p FROM bid WHERE p < 100
#QUERY
SELECT price AS p, bidder FROM bid WHERE p > 100
#QUERY
SELECT price AS p, bidder AS b FROM bid WHERE b=1 AND p <100


/// AGGREGATES ARE NOT HANDLED LIKE FUNCTIONS AND MAY HAVE A GROUPING ETC.
#QUERY
SELECT AVG(price) AS aprice FROM bid
#QUERY
SELECT AVG(price) AS aprice FROM bid GROUP BY auction
#QUERY
SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction
#QUERY
SELECT auction, AVG(price) AS aprice FROM bid GROUP BY auction HAVING aprice<100.0


/// JOINS AND SELFJOINS
#QUERY
SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id
#QUERY
SELECT auction FROM bid AS b, person AS p WHERE b.bidder = p.id
#QUERY
SELECT auction AS a, bidder AS b FROM bid, person WHERE a = b
#QUERY
SELECT auction, bidder FROM bid, person WHERE bid.bidder = person.id
#QUERY
SELECT left.* FROM bid AS left, bid AS right WHERE left.bidder = right.bidder
#QUERY
SELECT a.auction AS aid FROM bid AS a, bid AS b WHERE aid=b.auction
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
13242 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13243 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
13243 DEBUG AbstractTestComponent  - adding 53 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
13244 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
13244 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
13244 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
13245 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13246 INFO  StandardExecutor  - Removing Query 0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13246 DEBUG StandardExecutor  - Removing Ownership 0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13246 INFO  StandardExecutor  - Query 0 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13246 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13247 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13248 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13248 INFO  StandardExecutor  - Removing Query 1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13248 DEBUG StandardExecutor  - Removing Ownership 1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13248 INFO  StandardExecutor  - Query 1 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13248 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13248 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13249 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13249 INFO  StandardExecutor  - Removing Query 2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13249 DEBUG StandardExecutor  - Removing Ownership 2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13250 INFO  StandardExecutor  - Query 2 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13250 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13250 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13251 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13251 INFO  StandardExecutor  - Removing Query 3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13251 DEBUG StandardExecutor  - Removing Ownership 3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13251 INFO  StandardExecutor  - Query 3 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13251 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.bidder','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13251 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13252 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13252 INFO  StandardExecutor  - Removing Query 4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13252 DEBUG StandardExecutor  - Removing Ownership 4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13252 INFO  StandardExecutor  - Query 4 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13253 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13253 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13253 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13254 INFO  StandardExecutor  - Removing Query 5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13254 DEBUG StandardExecutor  - Removing Ownership 5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13254 INFO  StandardExecutor  - Query 5 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13254 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13254 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13255 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13255 INFO  StandardExecutor  - Removing Query 6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13255 DEBUG StandardExecutor  - Removing Ownership 6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13255 INFO  StandardExecutor  - Query 6 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13255 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13255 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13256 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13256 INFO  StandardExecutor  - Removing Query 7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13256 DEBUG StandardExecutor  - Removing Ownership 7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13256 INFO  StandardExecutor  - Query 7 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13257 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13257 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13257 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13257 INFO  StandardExecutor  - Removing Query 8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13258 DEBUG StandardExecutor  - Removing Ownership 8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13258 INFO  StandardExecutor  - Query 8 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13258 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.bidder','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13258 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13259 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13259 INFO  StandardExecutor  - Removing Query 9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13259 DEBUG StandardExecutor  - Removing Ownership 9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13259 INFO  StandardExecutor  - Query 9 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13259 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13259 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13260 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13260 INFO  StandardExecutor  - Removing Query 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13260 DEBUG StandardExecutor  - Removing Ownership 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13260 INFO  StandardExecutor  - Query 10 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13261 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13261 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13262 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13262 INFO  StandardExecutor  - Removing Query 11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13262 DEBUG StandardExecutor  - Removing Ownership 11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13262 INFO  StandardExecutor  - Query 11 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13262 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['timestamp','auction','bidder','datetime','price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13262 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13263 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13263 INFO  StandardExecutor  - Removing Query 12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13263 DEBUG StandardExecutor  - Removing Ownership 12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13263 INFO  StandardExecutor  - Query 12 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13263 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13263 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13264 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13264 INFO  StandardExecutor  - Removing Query 13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13264 DEBUG StandardExecutor  - Removing Ownership 13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13265 INFO  StandardExecutor  - Query 13 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13265 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b.bidder','price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.bidder','b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13265 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13265 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13266 INFO  StandardExecutor  - Removing Query 14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13266 DEBUG StandardExecutor  - Removing Ownership 14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13266 INFO  StandardExecutor  - Query 14 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13266 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','b.timestamp','auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['b.timestamp','b.auction','b.bidder','b.datetime','b.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13266 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13267 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13267 INFO  StandardExecutor  - Removing Query 15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13267 DEBUG StandardExecutor  - Removing Ownership 15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13267 INFO  StandardExecutor  - Query 15 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13268 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13268 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13268 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13268 INFO  StandardExecutor  - Removing Query 16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13269 DEBUG StandardExecutor  - Removing Ownership 16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13269 INFO  StandardExecutor  - Query 16 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13269 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13269 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13270 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13270 INFO  StandardExecutor  - Removing Query 17 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13270 DEBUG StandardExecutor  - Removing Ownership 17 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13270 INFO  StandardExecutor  - Query 17 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13270 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13270 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13271 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13271 INFO  StandardExecutor  - Removing Query 18 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13271 DEBUG StandardExecutor  - Removing Ownership 18 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13271 INFO  StandardExecutor  - Query 18 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13271 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13271 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13272 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13272 INFO  StandardExecutor  - Removing Query 19 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13272 DEBUG StandardExecutor  - Removing Ownership 19 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13272 INFO  StandardExecutor  - Query 19 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13272 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13272 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13273 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13273 INFO  StandardExecutor  - Removing Query 20 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13273 DEBUG StandardExecutor  - Removing Ownership 20 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13274 INFO  StandardExecutor  - Query 20 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13274 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b.bidder','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13274 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13274 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13274 INFO  StandardExecutor  - Removing Query 21 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13275 DEBUG StandardExecutor  - Removing Ownership 21 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13275 INFO  StandardExecutor  - Query 21 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13275 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = MAP({expressions=['p','b']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13275 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13275 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13275 INFO  StandardExecutor  - Removing Query 22 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13276 DEBUG StandardExecutor  - Removing Ownership 22 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13276 INFO  StandardExecutor  - Query 22 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13276 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['bid.bidder+bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13276 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13276 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13277 INFO  StandardExecutor  - Removing Query 23 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13277 DEBUG StandardExecutor  - Removing Ownership 23 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13277 INFO  StandardExecutor  - Query 23 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13277 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['123.4*bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13277 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13278 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13278 INFO  StandardExecutor  - Removing Query 24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13278 DEBUG StandardExecutor  - Removing Ownership 24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13278 INFO  StandardExecutor  - Query 24 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13278 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13278 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13279 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13279 INFO  StandardExecutor  - Removing Query 25 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13279 DEBUG StandardExecutor  - Removing Ownership 25 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13279 INFO  StandardExecutor  - Query 25 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13279 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13279 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13280 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13280 INFO  StandardExecutor  - Removing Query 26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13280 DEBUG StandardExecutor  - Removing Ownership 26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13280 INFO  StandardExecutor  - Query 26 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13281 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13281 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13281 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13281 INFO  StandardExecutor  - Removing Query 27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13281 DEBUG StandardExecutor  - Removing Ownership 27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13281 INFO  StandardExecutor  - Query 27 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13282 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','d'],'bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13282 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13282 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13283 INFO  StandardExecutor  - Removing Query 28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13283 DEBUG StandardExecutor  - Removing Ownership 28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13283 INFO  StandardExecutor  - Query 28 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13283 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.auction','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13283 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13284 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13284 INFO  StandardExecutor  - Removing Query 29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13284 DEBUG StandardExecutor  - Removing Ownership 29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13284 INFO  StandardExecutor  - Query 29 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13284 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.price','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13284 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13285 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13285 INFO  StandardExecutor  - Removing Query 30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13285 DEBUG StandardExecutor  - Removing Ownership 30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13285 INFO  StandardExecutor  - Query 30 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13285 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price)*bid.auction','d'],'bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13285 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13286 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13286 INFO  StandardExecutor  - Removing Query 31 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13286 DEBUG StandardExecutor  - Removing Ownership 31 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13286 INFO  StandardExecutor  - Query 31 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13286 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(123.4)','d']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13286 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13287 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13287 INFO  StandardExecutor  - Removing Query 32 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13287 DEBUG StandardExecutor  - Removing Ownership 32 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13287 INFO  StandardExecutor  - Query 32 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13287 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13287 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13287 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13288 INFO  StandardExecutor  - Removing Query 33 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13288 DEBUG StandardExecutor  - Removing Ownership 33 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13288 INFO  StandardExecutor  - Query 33 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13288 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13288 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13288 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13289 INFO  StandardExecutor  - Removing Query 34 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13289 DEBUG StandardExecutor  - Removing Ownership 34 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13289 INFO  StandardExecutor  - Query 34 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13289 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13289 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13290 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13290 INFO  StandardExecutor  - Removing Query 35 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13290 DEBUG StandardExecutor  - Removing Ownership 35 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13290 INFO  StandardExecutor  - Query 35 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13290 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder>10'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13290 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13291 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13291 INFO  StandardExecutor  - Removing Query 36 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13291 DEBUG StandardExecutor  - Removing Ownership 36 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13291 INFO  StandardExecutor  - Query 36 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13291 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder>10'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13291 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13292 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13292 INFO  StandardExecutor  - Removing Query 37 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13292 DEBUG StandardExecutor  - Removing Ownership 37 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13292 INFO  StandardExecutor  - Query 37 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13292 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.price<150.0'},operator_1)
operator_3 = MAP({expressions=['b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13292 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13293 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13293 INFO  StandardExecutor  - Removing Query 38 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13293 DEBUG StandardExecutor  - Removing Ownership 38 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13293 INFO  StandardExecutor  - Query 38 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13293 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b.bidder','price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.bidder==1'},operator_1)
operator_3 = MAP({expressions=['b.bidder','b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13294 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13294 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13294 INFO  StandardExecutor  - Removing Query 39 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13294 DEBUG StandardExecutor  - Removing Ownership 39 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13295 INFO  StandardExecutor  - Query 39 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13295 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','b.timestamp','auction','b.auction','bidder','b.bidder','datetime','b.datetime','price','b.price'],pairs='true'},bid)
operator_2 = SELECT({predicate='b.price>100.0'},operator_1)
operator_3 = MAP({expressions=['b.timestamp','b.auction','b.bidder','b.datetime','b.price']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13295 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13296 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13296 INFO  StandardExecutor  - Removing Query 40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13296 DEBUG StandardExecutor  - Removing Ownership 40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13296 INFO  StandardExecutor  - Query 40 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13296 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='p<100'},operator_1)
operator_3 = MAP({expressions=['p']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13296 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13297 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13297 INFO  StandardExecutor  - Removing Query 41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13297 DEBUG StandardExecutor  - Removing Ownership 41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13297 INFO  StandardExecutor  - Query 41 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13297 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='p>100'},operator_1)
operator_3 = MAP({expressions=['p','bid.bidder']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13297 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13298 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13298 INFO  StandardExecutor  - Removing Query 42 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13298 DEBUG StandardExecutor  - Removing Ownership 42 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13298 INFO  StandardExecutor  - Query 42 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13298 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b','price','p'],pairs='true'},bid)
operator_2 = SELECT({predicate='b==1&&p<100'},operator_1)
operator_3 = MAP({expressions=['p','b']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13299 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13299 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13299 INFO  StandardExecutor  - Removing Query 43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13299 DEBUG StandardExecutor  - Removing Ownership 43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13299 INFO  StandardExecutor  - Query 43 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13299 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['aprice']},AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']]},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13300 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13304 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13305 INFO  StandardExecutor  - Removing Query 44 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13305 DEBUG StandardExecutor  - Removing Ownership 44 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13305 INFO  StandardExecutor  - Query 44 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13305 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['aprice']},AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13305 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13306 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13306 INFO  StandardExecutor  - Removing Query 45 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13306 DEBUG StandardExecutor  - Removing Ownership 45 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13306 INFO  StandardExecutor  - Query 45 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13306 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['bid.auction','aprice']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13306 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13307 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13307 INFO  StandardExecutor  - Removing Query 46 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13307 DEBUG StandardExecutor  - Removing Ownership 46 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13307 INFO  StandardExecutor  - Query 46 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13307 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({AGGREGATIONS=[['AVG','bid.price','aprice','Double']],GROUP_BY=['bid.auction']},bid)
operator_2 = MAP({expressions=['bid.auction','aprice']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13307 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13308 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13308 INFO  StandardExecutor  - Removing Query 47 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13308 DEBUG StandardExecutor  - Removing Ownership 47 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13308 INFO  StandardExecutor  - Query 47 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13308 DEBUG ReloadLog  - Removing query from log: operator_1 = SELECT({predicate='bid.bidder==person.id'},JOIN(bid,person))
operator_2 = MAP({expressions=['bid.auction','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13308 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13309 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13309 INFO  StandardExecutor  - Removing Query 48 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13309 DEBUG StandardExecutor  - Removing Ownership 48 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13309 INFO  StandardExecutor  - Query 48 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13309 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','b.bidder'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','p.id'],pairs='true'},person)
operator_3 = SELECT({predicate='b.bidder==p.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['bid.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13309 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13310 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13310 INFO  StandardExecutor  - Removing Query 49 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13310 DEBUG StandardExecutor  - Removing Ownership 49 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13310 INFO  StandardExecutor  - Query 49 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13310 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','a','bidder','b'],pairs='true'},bid)
operator_2 = SELECT({predicate='a==b'},JOIN(operator_1,person))
operator_3 = MAP({expressions=['a','b']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13310 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13311 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13311 INFO  StandardExecutor  - Removing Query 50 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13311 DEBUG StandardExecutor  - Removing Ownership 50 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13312 INFO  StandardExecutor  - Query 50 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13312 DEBUG ReloadLog  - Removing query from log: operator_1 = SELECT({predicate='bid.bidder==person.id'},JOIN(bid,person))
operator_2 = MAP({expressions=['bid.auction','bid.bidder']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13312 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13312 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13312 INFO  StandardExecutor  - Removing Query 51 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13312 DEBUG StandardExecutor  - Removing Ownership 51 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13313 INFO  StandardExecutor  - Query 51 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13313 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','left.bidder'],pairs='true'},bid)
operator_2 = RENAME({aliases=['bidder','right.bidder','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = SELECT({predicate='left.bidder==right.bidder'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13313 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13313 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@71a49dba[Locked by thread Thread-22] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
13313 INFO  StandardExecutor  - Removing Query 52 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
13313 DEBUG StandardExecutor  - Removing Ownership 52 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
13314 INFO  StandardExecutor  - Query 52 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
13314 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','aid'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','b.auction','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = SELECT({predicate='aid==b.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['aid']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
13314 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
13315 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
13315 DEBUG AbstractTestComponent  - Sub test "ProjectMapRename-Test.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
13316 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
13316 DEBUG AbstractTestComponent  - Stopping executor - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStopExecutor(AbstractTestComponent.java:110) 
13316 DEBUG SingleSchedulerManager  - Stop scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:304) 
13317 DEBUG AbstractSimpleThreadScheduler  - Stopping source treads - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:133) 
13318 DEBUG AbstractSimpleThreadScheduler  - Stopping scheduler executors - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:138) 
13318 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
13318 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
13318 DEBUG AbstractScheduler  - Stopping scheduling - de.uniol.inf.is.odysseus.core.server.scheduler.AbstractScheduler.stopScheduling(AbstractScheduler.java:216) 
13318 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
13318 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
13318 DEBUG AbstractSimpleThreadScheduler  - Setting new Plans to schedule :[] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:158) 
13319 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans done - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:178) 
13319 DEBUG SingleSchedulerManager  - Scheduling stopped. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:306) 
13323 DEBUG TestComponentRunner  - End Testcomponent 'Compile Test Component'. Duration = 3197 ms - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:73) 
13323 DEBUG TestRunnerApplication  - Total results for component "Compile Test Component" - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:103) 
13323 DEBUG TestRunnerApplication  - Sub test 1: ProjectMapRename-Test.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
13323 DEBUG TestRunnerApplication  - no components were added since 1009ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
14328 DEBUG TestRunnerApplication  - no components were added since 5219ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
15330 DEBUG TestRunnerApplication  - no components were added since 6221ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
16335 DEBUG TestRunnerApplication  - no components were added since 7226ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
17336 DEBUG TestRunnerApplication  - no components were added since 8227ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
18339 DEBUG TestRunnerApplication  - no components were added since 9230ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
19341 DEBUG TestRunnerApplication  - All tests were run. - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:74) 
19341 DEBUG TestRunnerApplication  -  Status                                                      Component      Time Error
--------------------------------------------------------------------------------------
     OK                                         Compile Test Component    3197ms
--------------------------------------------------------------------------------------
-                     OK                     ProjectMapRename-Test.qry    3187ms
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
     OK                                                                   3197ms 
 - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.printReports(TestRunnerApplication.java:205) 
19342 DEBUG TestRunnerApplication  - All tests finished with no errors. - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:87) 
19387 DEBUG MEP  - Remove Function Provider: && - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19388 DEBUG MEP  - Remove Function Provider: || - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19388 DEBUG MEP  - Remove Function Provider: ! - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19388 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19388 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19388 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19389 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19389 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19389 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19389 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19389 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19389 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19389 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19389 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19390 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19390 DEBUG MEP  - Remove Function Provider: <= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19390 DEBUG MEP  - Remove Function Provider: <= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19390 DEBUG MEP  - Remove Function Provider: < - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19390 DEBUG MEP  - Remove Function Provider: < - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19390 DEBUG MEP  - Remove Function Provider: >= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19391 DEBUG MEP  - Remove Function Provider: >= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19391 DEBUG MEP  - Remove Function Provider: > - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19391 DEBUG MEP  - Remove Function Provider: > - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19391 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19391 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19391 DEBUG MEP  - Remove Function Provider: toProbabilisticContinuousDouble - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19391 DEBUG MEP  - Remove Function Provider: toProbabilisticDiscreteDouble - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19391 DEBUG MEP  - Remove Function Provider: similarity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19392 DEBUG MEP  - Remove Function Provider: similarity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19392 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19392 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19392 DEBUG MEP  - Remove Function Provider: kl - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19392 DEBUG MEP  - Remove Function Provider: kl - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19392 DEBUG MEP  - Remove Function Provider: loglikelihood - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19392 DEBUG MEP  - Remove Function Provider: as2DVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19393 DEBUG MEP  - Remove Function Provider: as3DVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19393 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19393 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19393 DEBUG MEP  - Remove Function Provider: int - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19395 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19396 DEBUG MEP  - Remove Function Provider: path - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19396 DEBUG MEP  - Remove Function Provider: toKeyValue - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19396 DEBUG MEP  - Remove Function Provider: getElement - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19396 DEBUG MEP  - Remove Function Provider: getElements - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19408 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@26361827 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
19411 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@26361827 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
19414 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.app.AppCommands@7aa44eed - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
19414 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.app.AppCommands@7aa44eed - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
19414 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@3b915dc5 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
19414 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@3b915dc5 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
19414 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@3da24eee - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
19415 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@3da24eee - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
19415 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@10c89a76 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
19415 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@10c89a76 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
19416 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@3c7308ae - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
19416 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@3c7308ae - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
19416 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@13a5924 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
19416 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@13a5924 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
19416 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@77e2a3ba - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
19416 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@77e2a3ba - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
19426 DEBUG MEP  - Remove Function Provider: MDAIndex - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19426 DEBUG MEP  - Remove Function Provider: MDAIndices - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19427 DEBUG MEP  - Remove Function Provider: MDADim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19427 DEBUG MEP  - Remove Function Provider: MDAInit - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19427 DEBUG MEP  - Remove Function Provider: MDADrop - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19427 DEBUG MEP  - Remove Function Provider: MDAAddDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19427 DEBUG MEP  - Remove Function Provider: MDAAddDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19427 DEBUG MEP  - Remove Function Provider: MDARemoveDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19427 DEBUG MEP  - Remove Function Provider: MDAExchangeDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19429 DEBUG MEP  - Remove Function Provider: binomialTest - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19440 DEBUG StandardExecutor  - Removing all queries before shutdown - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.deactivate(StandardExecutor.java:151) 
19445 DEBUG MEP  - Remove Function Provider: ContextStore - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19448 DEBUG ruleengine  - Rewrite - Removing rules for... de.uniol.inf.is.odysseus.relational.rewrite.RuleProvider@886c92f - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.unbindRuleProvider(AbstractInventory.java:218) 
19451 DEBUG ruleengine  - Rewrite - Removing rules for... de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RewriteRuleProvider@b2cc98d - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.unbindRuleProvider(AbstractInventory.java:218) 
19840 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
19840 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
19840 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
19840 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
19840 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
19846 DEBUG UserManagementProvider  - User management Memorystore removed - de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.unbindUserManagement(UserManagementProvider.java:134) 
19849 DEBUG MEP  - Remove Function Provider: retrieveQueryIDs - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19849 DEBUG MEP  - Remove Function Provider: filterQueryIDs - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19850 DEBUG MEP  - Remove Function Provider: QueryPriority - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19850 DEBUG MEP  - Remove Function Provider: IsACQuery - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19850 DEBUG MEP  - Remove Function Provider: QueryBasePriority - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19850 DEBUG MEP  - Remove Function Provider: QueryState - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19850 DEBUG MEP  - Remove Function Provider: QueryName - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19850 DEBUG MEP  - Remove Function Provider: QueryStartTS - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19850 DEBUG MEP  - Remove Function Provider: QueryLastStateChangeTS - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19850 DEBUG MEP  - Remove Function Provider: QuerySheddingFactor - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19851 DEBUG MEP  - Remove Function Provider: MaxSheddingFactor - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19851 DEBUG MEP  - Remove Function Provider: getSharedOpsCount - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19851 DEBUG MEP  - Remove Function Provider: getSourceCount - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19851 DEBUG MEP  - Remove Function Provider: DolToEur - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19851 DEBUG MEP  - Remove Function Provider: kvread - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19851 DEBUG MEP  - Remove Function Provider: kvwrite - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19851 DEBUG MEP  - Remove Function Provider: kvremove - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19852 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19852 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19852 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19852 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19852 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19852 DEBUG MEP  - Remove Function Provider: sub - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19852 DEBUG MEP  - Remove Function Provider: sub - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19852 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19852 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19853 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19853 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19853 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19853 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19853 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19853 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19853 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19853 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19853 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19853 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19854 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19854 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19854 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19854 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19854 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19854 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19854 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19854 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19854 DEBUG MEP  - Remove Function Provider: ^ - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19855 DEBUG MEP  - Remove Function Provider: dotProduct - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19855 DEBUG MEP  - Remove Function Provider: dotProduct - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19855 DEBUG MEP  - Remove Function Provider: Min - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19855 DEBUG MEP  - Remove Function Provider: Min - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19855 DEBUG MEP  - Remove Function Provider: Max - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19855 DEBUG MEP  - Remove Function Provider: Max - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19855 DEBUG MEP  - Remove Function Provider: Count - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19855 DEBUG MEP  - Remove Function Provider: Count - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19855 DEBUG MEP  - Remove Function Provider: Sum - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19855 DEBUG MEP  - Remove Function Provider: Sum - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19856 DEBUG MEP  - Remove Function Provider: AVG - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19856 DEBUG MEP  - Remove Function Provider: AVG - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19856 DEBUG MEP  - Remove Function Provider: Median - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19856 DEBUG MEP  - Remove Function Provider: Median - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19856 DEBUG MEP  - Remove Function Provider: StdDev - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19856 DEBUG MEP  - Remove Function Provider: StdDev - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19856 DEBUG MEP  - Remove Function Provider: Var - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19856 DEBUG MEP  - Remove Function Provider: Var - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19856 DEBUG MEP  - Remove Function Provider: toVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19857 DEBUG MEP  - Remove Function Provider: toMatrix - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19857 DEBUG MEP  - Remove Function Provider: toString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19857 DEBUG MEP  - Remove Function Provider: toString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19857 DEBUG MEP  - Remove Function Provider: vectorFromString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19857 DEBUG MEP  - Remove Function Provider: vectorFromString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19857 DEBUG MEP  - Remove Function Provider: readMatrix - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19857 DEBUG MEP  - Remove Function Provider: readVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19857 DEBUG MEP  - Remove Function Provider: readVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19857 DEBUG MEP  - Remove Function Provider: perms - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19858 DEBUG MEP  - Remove Function Provider: perm - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19858 DEBUG MEP  - Remove Function Provider: det - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19858 DEBUG MEP  - Remove Function Provider: tr - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19858 DEBUG MEP  - Remove Function Provider: trans - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19858 DEBUG MEP  - Remove Function Provider: inv - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19859 DEBUG MEP  - Remove Function Provider: identity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19859 DEBUG MEP  - Remove Function Provider: zeros - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19859 DEBUG MEP  - Remove Function Provider: ones - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19859 DEBUG MEP  - Remove Function Provider: eig - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19859 DEBUG MEP  - Remove Function Provider: ieig - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19859 DEBUG MEP  - Remove Function Provider: svd - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19860 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19860 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19860 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19860 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19861 DEBUG MEP  - Remove Function Provider: ^ - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19861 DEBUG MEP  - Remove Function Provider: union - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19861 DEBUG MEP  - Remove Function Provider: intersection - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19861 DEBUG MEP  - Remove Function Provider: difference - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
19861 DEBUG MEP  - Remove Function Provider: toInterval - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
