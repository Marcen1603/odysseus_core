Configuration location:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/
Configuration file:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/config.ini loaded
Install location:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/
Framework located:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/plugins/org.eclipse.osgi_3.10.101.v20150820-1432.jar
Framework classpath:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/plugins/org.eclipse.osgi_3.10.101.v20150820-1432.jar
Splash location:
    null
Debug options:
    file:/Applications/Eclipse.app/Contents/MacOS/.options not found
Time to load bundles: 6
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [bundleresource://75.fwk2107577743:2/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [bundleresource://75.fwk2107577743:6/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
0    DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@74a3909 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
4    DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@74a3909 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
4    DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@622b3154 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
5    DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@622b3154 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
!SESSION 2017-05-16 13:37:39.356 -----------------------------------------------
eclipse.buildId=unknown
java.version=1.8.0_112
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en
Framework arguments:  -product de.uniol.inf.is.odysseus.test.odysseustestproduct System manager
Command-line arguments:  -product de.uniol.inf.is.odysseus.test.odysseustestproduct -data /Users/jp/workspace/eclipse/odysseus/../runtime-TestRunnerProduct.product -dev file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/dev.properties -os macosx -ws cocoa -arch x86_64 -consoleLog -debug .options System manager -console

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:45.276
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.cql. The reference is: Reference[name = IVisitor, interface = de.uniol.inf.is.odysseus.parser.cql.IVisitor, policy = dynamic, cardinality = 0..n, target = null, bind = addVisitor, unbind = removeVisitor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:45.292
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.report.ReportProviderBinder. The reference is: Reference[name = IReportProvider, interface = de.uniol.inf.is.odysseus.report.IReportProvider, policy = dynamic, cardinality = 0..n, target = null, bind = bindReportProvider, unbind = unbindReportProvider]
73   DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@29db627b - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
73   DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@29db627b - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
243  INFO  Core  - Current size of heap: 	1.0 GB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:61) 
243  INFO  Core  - Maximum size of heap: 	1.9 GB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:64) 
244  INFO  Core  - Free memory of the heap: 	964.7 MB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:67) 
245  INFO  Core  - Running VM with: 	x86_64 - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:70) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:45.753
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.core.server.operatorbuilder. The reference is: Reference[name = IOperatorBuilder, interface = de.uniol.inf.is.odysseus.core.server.logicaloperator.builder.IOperatorBuilder, policy = dynamic, cardinality = 0..n, target = null, bind = addOperatorBuilder, unbind = removeOperatorBuilder]
635  DEBUG FileUtils  - Read from file /Users/jp/.odysseus/odysseus.conf - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 
679  INFO  OdysseusConfiguration  - Read config file from /Users/jp/.odysseus/odysseus.conf - de.uniol.inf.is.odysseus.core.server.OdysseusConfiguration.loadProperties(OdysseusConfiguration.java:85) 
719  DEBUG FileUtils  - Read from file /Users/jp/.odysseus/store/tenants.store - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:47.160
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLStatementGenerator. The reference is: Reference[name = IPQLStatementGenerator, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLStatementGenerator, policy = dynamic, cardinality = 0..n, target = null, bind = bindPQLStatementGenerator, unbind = unbindPQLStatementGenerator]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:47.375
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.relational_interval.ReplacementRegistry. The reference is: Reference[name = IReplacement, interface = de.uniol.inf.is.odysseus.relational_interval.replacement.IReplacement, policy = dynamic, cardinality = 0..n, target = null, bind = addReplacement, unbind = removeReplacement]
2147 DEBUG ruleengine  - Rewrite - Group added to workflow: PREPARE. New workflow is: [PREPARE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2148 DEBUG ruleengine  - Rewrite - Group added to workflow: DELETE. New workflow is: [PREPARE, DELETE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2149 DEBUG ruleengine  - Rewrite - Group added to workflow: SPLIT. New workflow is: [PREPARE, DELETE, SPLIT] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2153 DEBUG ruleengine  - Rewrite - Group added to workflow: PREGROUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2153 DEBUG ruleengine  - Rewrite - Group added to workflow: SWITCH. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2154 DEBUG ruleengine  - Rewrite - Group added to workflow: GROUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH, GROUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2154 DEBUG ruleengine  - Rewrite - Group added to workflow: CLEANUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH, GROUP, CLEANUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:47.429
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.Config. The reference is: Reference[name = IOdysseusScriptConfigSetting, interface = de.uniol.inf.is.odysseus.script.parser.IOdysseusScriptConfigSetting, policy = dynamic, cardinality = 0..n, target = null, bind = bindConfigSetting, unbind = unbindConfigSetting]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:47.439
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.ReplacementProviderManager. The reference is: Reference[name = IReplacementProvider, interface = de.uniol.inf.is.odysseus.script.parser.IReplacementProvider, policy = dynamic, cardinality = 0..n, target = null, bind = bindReplacementProvider, unbind = unbindReplacementProvider]
2202 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@cc407a5 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
2202 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@cc407a5 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:47.450
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.RecoveryConfigKeyword. The reference is: Reference[name = IRecoveryExecutor, interface = de.uniol.inf.is.odysseus.core.server.recovery.IRecoveryExecutor, policy = dynamic, cardinality = 0..n, target = null, bind = bindRecoveryExecutor, unbind = unbindRecoveryExecutor]
2321 DEBUG ruleengine  - Transform - Group added to workflow: SUBSTITUTION. New workflow is: [SUBSTITUTION] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2322 DEBUG ruleengine  - Transform - Group added to workflow: INIT. New workflow is: [SUBSTITUTION, INIT] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2322 DEBUG ruleengine  - Transform - Group added to workflow: ACCESS. New workflow is: [SUBSTITUTION, INIT, ACCESS] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2322 DEBUG ruleengine  - Transform - Group added to workflow: CREATE_METADATA. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2322 DEBUG ruleengine  - Transform - Group added to workflow: TRANSFORMATION. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2323 DEBUG ruleengine  - Transform - Group added to workflow: SENDER. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2323 DEBUG ruleengine  - Transform - Group added to workflow: SECURITY. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2323 DEBUG ruleengine  - Transform - Group added to workflow: METAOBJECTS. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2323 DEBUG ruleengine  - Transform - Group added to workflow: VALIDATE. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS, VALIDATE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2324 DEBUG ruleengine  - Transform - Group added to workflow: CLEANUP. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS, VALIDATE, CLEANUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2377 DEBUG ruleengine  - Transform - Loading rule - TAggregationAORule: "TAggregationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2379 DEBUG ruleengine  - Transform - Loading rule - TAggregationAORule: "TAggregationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2404 DEBUG ruleengine  - Transform - Loading rule - TSaseAOToPatternDetectAORule: "SASEAO --> PATTERNDETECTAO" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2407 DEBUG ruleengine  - Transform - Loading rule - TSaseAOToPatternDetectAORule: "SASEAO --> PATTERNDETECTAO" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2413 DEBUG ruleengine  - Transform - Loading rule - TPatternDetectAORule: "CepAO --> CepOperator (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2414 DEBUG ruleengine  - Transform - Loading rule - TPatternDetectAORule: "CepAO --> CepOperator (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2527 DEBUG UserManagementProvider  - Bound UserManagementService Memorystore - de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.bindUserManagement(UserManagementProvider.java:120) 
2732 DEBUG ruleengine  - Transform - Loading rule - TLatencyCalculationRule: "LatencyCalculationAO -> LatencyCalculationPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2736 DEBUG ruleengine  - Transform - Loading rule - TLatencyCalculationRule: "LatencyCalculationAO -> LatencyCalculationPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2747 DEBUG ruleengine  - Transform - Loading rule - TLatencyToPayloadAORule: "TLatencyToPayloadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2748 DEBUG ruleengine  - Transform - Loading rule - TLatencyToPayloadAORule: "TLatencyToPayloadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3043 DEBUG ruleengine  - Transform - Loading rule - TPatternMatchingAORule: "PatternMatchingAO -> PatternMatchingPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3046 DEBUG ruleengine  - Transform - Loading rule - TPatternMatchingAORule: "PatternMatchingAO -> PatternMatchingPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3099 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionAORule: "LinearRegressionAO -> LinearRegressionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3103 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionMergeAORule: "LinearRegressionMergeAO -> LinearRegressionMergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3127 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAOInsertLinearRegressionRule: "JoinAO -> Insert linear regression for Equi-Join" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
osgi> 3134 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAORule: "JoinAO -> Continuous probabilistic Equi-Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3134 DEBUG CommandProviderBinder  - Binding command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@671780e0 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
3137 DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@671780e0 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
3138 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetDMRule: "Insert DataMergeFunction (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3139 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3140 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO -> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3145 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3148 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteUnNestAORule: "UnNestAO -> ProbabilisticDiscreteUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3153 DEBUG ruleengine  - Transform - Loading rule - TAssignDistributionAORule: "AssignDistributionAO -> AssignDistributionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3154 DEBUG ruleengine  - Transform - Loading rule - TEMAORule: "EMAO -> EMPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3156 DEBUG ruleengine  - Transform - Loading rule - TKalmanFilterAORule: "KalmanFilterAO -> KalmanFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3166 DEBUG ruleengine  - Transform - Loading rule - TKDEAORule: "KDEAO -> KDEPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3180 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAggregateAORule: "AggregateTIPO use probabilistic aggregations (IProbabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3182 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAORule: "ProbabilisticAO -> MetadataUpdatePO(IProbabilistic)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3186 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticApplicationTimestampRule: "TProbabilisticApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3192 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAORule: "JoinAO -> probabilistic Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3194 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetDMRule: "Insert DataMergeFunction JoinTIPO (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3196 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3199 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticMapAORule: "MapAO -> ProbabilisticMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3202 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3206 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3210 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3216 DEBUG ruleengine  - Transform - Loading rule - TRelationalExistenceToPayloadRule: "ExistenceToPayloadAO --> RelationalExistenceToPayloadPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3219 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionAORule: "LinearRegressionAO -> LinearRegressionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3220 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionMergeAORule: "LinearRegressionMergeAO -> LinearRegressionMergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3220 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAOInsertLinearRegressionRule: "JoinAO -> Insert linear regression for Equi-Join" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3221 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAORule: "JoinAO -> Continuous probabilistic Equi-Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3222 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetDMRule: "Insert DataMergeFunction (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3222 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3223 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO -> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3223 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3224 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteUnNestAORule: "UnNestAO -> ProbabilisticDiscreteUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3224 DEBUG ruleengine  - Transform - Loading rule - TAssignDistributionAORule: "AssignDistributionAO -> AssignDistributionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3224 DEBUG ruleengine  - Transform - Loading rule - TEMAORule: "EMAO -> EMPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3224 DEBUG ruleengine  - Transform - Loading rule - TKalmanFilterAORule: "KalmanFilterAO -> KalmanFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3225 DEBUG ruleengine  - Transform - Loading rule - TKDEAORule: "KDEAO -> KDEPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3225 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAggregateAORule: "AggregateTIPO use probabilistic aggregations (IProbabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3225 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAORule: "ProbabilisticAO -> MetadataUpdatePO(IProbabilistic)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3225 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticApplicationTimestampRule: "TProbabilisticApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3226 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAORule: "JoinAO -> probabilistic Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3226 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetDMRule: "Insert DataMergeFunction JoinTIPO (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3227 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3227 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticMapAORule: "MapAO -> ProbabilisticMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3227 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3228 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3228 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3228 DEBUG ruleengine  - Transform - Loading rule - TRelationalExistenceToPayloadRule: "ExistenceToPayloadAO --> RelationalExistenceToPayloadPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3284 DEBUG ruleengine  - Transform - Loading rule - TAggregateAORule: "TAggregateAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3284 DEBUG ruleengine  - Transform - Loading rule - TAggregatePORule: "Insert RelationalTupleGroupingHelper" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3288 DEBUG ruleengine  - Transform - Loading rule - TAssociativeStorageAORule: "AssociativeStorageAO -> AssociativeStoragePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3291 DEBUG ruleengine  - Transform - Loading rule - TBloomFilterAORule: "BloomFilterAO -> RelationalBloomFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3293 DEBUG ruleengine  - Transform - Loading rule - TConvolutionFilterAORule: "ConvolutionFilterAO -> ConvolutionFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3294 DEBUG ruleengine  - Transform - Loading rule - TEnrichAddDataMergeFunctionRule: "Insert DataMerge Function Enrich (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3296 DEBUG ruleengine  - Transform - Loading rule - TGroupSplitFileWriter: "TGroupSplitFileWriter" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3298 DEBUG ruleengine  - Transform - Loading rule - TInitPredicateRule: "Init Predicates" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3299 DEBUG ruleengine  - Transform - Loading rule - TMapAORule: "MapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3300 DEBUG ruleengine  - Transform - Loading rule - TProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3302 DEBUG ruleengine  - Transform - Loading rule - TRelationalSocketSinkAORule: "SocketSinkAO -> SocketSinkPO (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3304 DEBUG ruleengine  - Transform - Loading rule - TStateMapAORule: "StateMapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3307 DEBUG ruleengine  - Transform - Loading rule - TToTupleAORule: "TToTupleAORule" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3308 DEBUG ruleengine  - Transform - Loading rule - TUnnestAORule: "UnNestAO -> RelationalUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3313 DEBUG ruleengine  - Transform - Loading rule - TAggregateAORule: "TAggregateAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3314 DEBUG ruleengine  - Transform - Loading rule - TAggregatePORule: "Insert RelationalTupleGroupingHelper" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3314 DEBUG ruleengine  - Transform - Loading rule - TAssociativeStorageAORule: "AssociativeStorageAO -> AssociativeStoragePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3314 DEBUG ruleengine  - Transform - Loading rule - TBloomFilterAORule: "BloomFilterAO -> RelationalBloomFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3315 DEBUG ruleengine  - Transform - Loading rule - TConvolutionFilterAORule: "ConvolutionFilterAO -> ConvolutionFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3315 DEBUG ruleengine  - Transform - Loading rule - TEnrichAddDataMergeFunctionRule: "Insert DataMerge Function Enrich (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3315 DEBUG ruleengine  - Transform - Loading rule - TGroupSplitFileWriter: "TGroupSplitFileWriter" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3316 DEBUG ruleengine  - Transform - Loading rule - TInitPredicateRule: "Init Predicates" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3316 DEBUG ruleengine  - Transform - Loading rule - TMapAORule: "MapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3317 DEBUG ruleengine  - Transform - Loading rule - TProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3317 DEBUG ruleengine  - Transform - Loading rule - TRelationalSocketSinkAORule: "SocketSinkAO -> SocketSinkPO (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3317 DEBUG ruleengine  - Transform - Loading rule - TStateMapAORule: "StateMapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3318 DEBUG ruleengine  - Transform - Loading rule - TToTupleAORule: "TToTupleAORule" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3318 DEBUG ruleengine  - Transform - Loading rule - TUnnestAORule: "UnNestAO -> RelationalUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3324 DEBUG ruleengine  - Transform - Loading rule - TApplicationTimestampRule: "TApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3326 DEBUG ruleengine  - Transform - Loading rule - TBufferedFilterAORule: "TBufferedFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3327 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateInsertDataMergeFunctionRule: "Insert DataMergeFunction ChangeCorrelate (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3328 DEBUG ruleengine  - Transform - Loading rule - TCombineAORule: "CombineAO -> CombinePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3330 DEBUG ruleengine  - Transform - Loading rule - TCompareSinkAO: "TCompareSinkAO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3332 DEBUG ruleengine  - Transform - Loading rule - TGeneratorAORule: "TGeneratorAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3335 DEBUG ruleengine  - Transform - Loading rule - TJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3338 DEBUG ruleengine  - Transform - Loading rule - TJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction JoinTIPO (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3340 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3341 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3352 DEBUG ruleengine  - Transform - Loading rule - TRelationalChangeDetectAORule: "TRelationalChangeDetectAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3354 DEBUG ruleengine  - Transform - Loading rule - TRelationalCreateNewFilenamePunctuationRule: "TRelationalCreateNewFilenamePunctuationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3355 DEBUG ruleengine  - Transform - Loading rule - TRelationalDistinctAORule: "TRelationalDistinctAORule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3359 DEBUG ruleengine  - Transform - Loading rule - TRelationalFastMedianAORule: "TRelationalFastMedianAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3361 DEBUG ruleengine  - Transform - Loading rule - TRelationalInsertGroupProcessorTIPORule: "TRelationalInsertGroupProcessorTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3363 DEBUG ruleengine  - Transform - Loading rule - TRelationalJoinAORule: "TRelationalJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3364 DEBUG ruleengine  - Transform - Loading rule - TRelationalTimestampToPayloadRule: "TRelationalTimestampToPayloadRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3368 DEBUG ruleengine  - Transform - Loading rule - TRelationalTupleAggregateTransformationRule: "TRelationalTupleAggregateTransformationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3370 DEBUG ruleengine  - Transform - Loading rule - TReplacementAORule: "TReplacementAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3372 DEBUG ruleengine  - Transform - Loading rule - TSetTransferAreaConvolutionFilterPO: "TSetTransferAreaConvolutionFilterPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3384 DEBUG ruleengine  - Transform - Loading rule - TSortAddComparatorRule: "TSortAddComparatorRule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3407 DEBUG ruleengine  - Transform - Loading rule - TTopKAORule: "TTopKAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3412 DEBUG ruleengine  - Transform - Loading rule - TApplicationTimestampRule: "TApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3413 DEBUG ruleengine  - Transform - Loading rule - TBufferedFilterAORule: "TBufferedFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3414 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateInsertDataMergeFunctionRule: "Insert DataMergeFunction ChangeCorrelate (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3415 DEBUG ruleengine  - Transform - Loading rule - TCombineAORule: "CombineAO -> CombinePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3416 DEBUG ruleengine  - Transform - Loading rule - TCompareSinkAO: "TCompareSinkAO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3416 DEBUG ruleengine  - Transform - Loading rule - TGeneratorAORule: "TGeneratorAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3417 DEBUG ruleengine  - Transform - Loading rule - TJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3417 DEBUG ruleengine  - Transform - Loading rule - TJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction JoinTIPO (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3418 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3418 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3419 DEBUG ruleengine  - Transform - Loading rule - TRelationalChangeDetectAORule: "TRelationalChangeDetectAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3419 DEBUG ruleengine  - Transform - Loading rule - TRelationalCreateNewFilenamePunctuationRule: "TRelationalCreateNewFilenamePunctuationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3420 DEBUG ruleengine  - Transform - Loading rule - TRelationalDistinctAORule: "TRelationalDistinctAORule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3420 DEBUG ruleengine  - Transform - Loading rule - TRelationalFastMedianAORule: "TRelationalFastMedianAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3420 DEBUG ruleengine  - Transform - Loading rule - TRelationalInsertGroupProcessorTIPORule: "TRelationalInsertGroupProcessorTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3421 DEBUG ruleengine  - Transform - Loading rule - TRelationalJoinAORule: "TRelationalJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3421 DEBUG ruleengine  - Transform - Loading rule - TRelationalTimestampToPayloadRule: "TRelationalTimestampToPayloadRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3422 DEBUG ruleengine  - Transform - Loading rule - TRelationalTupleAggregateTransformationRule: "TRelationalTupleAggregateTransformationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3422 DEBUG ruleengine  - Transform - Loading rule - TReplacementAORule: "TReplacementAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3422 DEBUG ruleengine  - Transform - Loading rule - TSetTransferAreaConvolutionFilterPO: "TSetTransferAreaConvolutionFilterPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3423 DEBUG ruleengine  - Transform - Loading rule - TSortAddComparatorRule: "TSortAddComparatorRule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3423 DEBUG ruleengine  - Transform - Loading rule - TTopKAORule: "TTopKAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3524 DEBUG ruleengine  - Transform - Loading rule - TJoinAONoIntervalRule: "TJoinAONoIntervalRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3524 DEBUG ruleengine  - Transform - Loading rule - TJoinAORule: "TJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3526 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAORule: "JoinAO -> JoinTIPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3533 DEBUG ruleengine  - Transform - Loading rule - TAggregationTIPORule: "TAggregationTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3535 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateAORule: "ChangeCorrelateAO -> ChangeCorrelatePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3537 DEBUG ruleengine  - Transform - Loading rule - TCoalesceAORule: "TCoalesceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3539 DEBUG ruleengine  - Transform - Loading rule - TDifferenceAORule: "TDifferenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3541 DEBUG ruleengine  - Transform - Loading rule - TDistinctAORule: "TDistinctAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3542 DEBUG ruleengine  - Transform - Loading rule - TDuplicateEliminationAORule: "TDuplicateEliminationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3543 DEBUG ruleengine  - Transform - Loading rule - TExistenceAORule: "TExistenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3545 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "TFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3546 DEBUG ruleengine  - Transform - Loading rule - THeartbeatAORule: "THeartbeatAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3547 DEBUG ruleengine  - Transform - Loading rule - TReOrderAORule: "ReOrderAO -> AssureOrderPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3548 DEBUG ruleengine  - Transform - Loading rule - TSameTimestampRule: "TSameTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3551 DEBUG ruleengine  - Transform - Loading rule - TSelectAddHeartbeatGenerationRule: "Insert HeartbeatGenerationStrategy in SelectPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3554 DEBUG ruleengine  - Transform - Loading rule - TSortAORule: "TSortAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3564 DEBUG ruleengine  - Transform - Loading rule - TSyncWithSystemTimeAORule: "TSyncWithSystemTimeAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3565 DEBUG ruleengine  - Transform - Loading rule - TSystemTimestampRule: "TimestampAO -> MetadataUpdatePO(system timestamp)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3566 DEBUG ruleengine  - Transform - Loading rule - TTimeStampOrderValdiatorRule: "TTimeStampOrderValdiatorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3570 DEBUG ruleengine  - Transform - Loading rule - TUnionTIPORule: "TUnionTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3571 DEBUG ruleengine  - Transform - Loading rule - TWatermarkAORule: "TWatermarkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3574 DEBUG ruleengine  - Transform - Loading rule - TWindowAORule: "TWindowAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3587 DEBUG ruleengine  - Transform - Loading rule - TJoinAONoIntervalRule: "TJoinAONoIntervalRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3591 DEBUG ruleengine  - Transform - Loading rule - TJoinAORule: "TJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3591 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAORule: "JoinAO -> JoinTIPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3592 DEBUG ruleengine  - Transform - Loading rule - TAggregationTIPORule: "TAggregationTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3600 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateAORule: "ChangeCorrelateAO -> ChangeCorrelatePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3603 DEBUG ruleengine  - Transform - Loading rule - TCoalesceAORule: "TCoalesceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3604 DEBUG ruleengine  - Transform - Loading rule - TDifferenceAORule: "TDifferenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3605 DEBUG ruleengine  - Transform - Loading rule - TDistinctAORule: "TDistinctAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3606 DEBUG ruleengine  - Transform - Loading rule - TDuplicateEliminationAORule: "TDuplicateEliminationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3606 DEBUG ruleengine  - Transform - Loading rule - TExistenceAORule: "TExistenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3612 DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.app.AppCommands@5aa108e6 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
3613 DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.app.AppCommands@5aa108e6 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
3612 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "TFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3619 DEBUG ruleengine  - Transform - Loading rule - THeartbeatAORule: "THeartbeatAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3621 DEBUG ruleengine  - Transform - Loading rule - TReOrderAORule: "ReOrderAO -> AssureOrderPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3623 DEBUG ruleengine  - Transform - Loading rule - TSameTimestampRule: "TSameTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3624 DEBUG ruleengine  - Transform - Loading rule - TSelectAddHeartbeatGenerationRule: "Insert HeartbeatGenerationStrategy in SelectPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3624 DEBUG ruleengine  - Transform - Loading rule - TSortAORule: "TSortAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3628 DEBUG ruleengine  - Transform - Loading rule - TSyncWithSystemTimeAORule: "TSyncWithSystemTimeAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3628 DEBUG ruleengine  - Transform - Loading rule - TSystemTimestampRule: "TimestampAO -> MetadataUpdatePO(system timestamp)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3629 DEBUG ruleengine  - Transform - Loading rule - TTimeStampOrderValdiatorRule: "TTimeStampOrderValdiatorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3630 DEBUG ruleengine  - Transform - Loading rule - TUnionTIPORule: "TUnionTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3630 DEBUG ruleengine  - Transform - Loading rule - TWatermarkAORule: "TWatermarkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3631 DEBUG ruleengine  - Transform - Loading rule - TWindowAORule: "TWindowAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3652 DEBUG ruleengine  - Transform - Loading rule - TJoinAOErrorRule: "TJoinAOErrorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3675 DEBUG ruleengine  - Transform - Loading rule - TKeyValueApplicationTimestampRule: "TKeyValueApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3677 DEBUG ruleengine  - Transform - Loading rule - TKeyValueMapRule: "MapAO --> KeyValueMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3680 DEBUG ruleengine  - Transform - Loading rule - TKeyValueProjectRule: "ProjectAO --> KeyValueProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3681 DEBUG ruleengine  - Transform - Loading rule - TKeyValueRenameRule: "RenameAO --> KeyValueRenamePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3683 DEBUG ruleengine  - Transform - Loading rule - TKeyValueSelectRule: "TKeyValueSelectRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3688 DEBUG ruleengine  - Transform - Loading rule - TKeyValueToTupleRule: "ToTupleAO --> KeyValueToTuplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3689 DEBUG ruleengine  - Transform - Loading rule - TKeyValueUnnestAORule: "TKeyValueUnnestAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3690 DEBUG ruleengine  - Transform - Loading rule - TTupleToKeyValueRule: "TTupleToKeyValueRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3692 DEBUG ruleengine  - Transform - Loading rule - TJoinAOErrorRule: "TJoinAOErrorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3693 DEBUG ruleengine  - Transform - Loading rule - TKeyValueApplicationTimestampRule: "TKeyValueApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3693 DEBUG ruleengine  - Transform - Loading rule - TKeyValueMapRule: "MapAO --> KeyValueMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3694 DEBUG ruleengine  - Transform - Loading rule - TKeyValueProjectRule: "ProjectAO --> KeyValueProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3694 DEBUG ruleengine  - Transform - Loading rule - TKeyValueRenameRule: "RenameAO --> KeyValueRenamePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3694 DEBUG ruleengine  - Transform - Loading rule - TKeyValueSelectRule: "TKeyValueSelectRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3695 DEBUG ruleengine  - Transform - Loading rule - TKeyValueToTupleRule: "ToTupleAO --> KeyValueToTuplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3695 DEBUG ruleengine  - Transform - Loading rule - TKeyValueUnnestAORule: "TKeyValueUnnestAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3695 DEBUG ruleengine  - Transform - Loading rule - TTupleToKeyValueRule: "TTupleToKeyValueRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3704 DEBUG ruleengine  - Transform - Loading rule - TReplicationMergeAORule: "ReplicationMergeAO -> ReplicationMergePO | ReplicationMergeWithTrustPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3705 DEBUG ruleengine  - Transform - Loading rule - TReplicationMergeAORule: "ReplicationMergeAO -> ReplicationMergePO | ReplicationMergeWithTrustPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:49.079
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.cache.RemovalStrategyRegistry. The reference is: Reference[name = IRemovalStrategy, interface = de.uniol.inf.is.odysseus.cache.removalstrategy.IRemovalStrategy, policy = dynamic, cardinality = 0..n, target = null, bind = register, unbind = remove]
3999 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4002 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4003 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4005 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4006 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4006 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4013 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4015 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4019 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4020 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4174 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4174 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4175 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4176 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4177 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4177 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4235 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4236 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4239 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4240 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4266 DEBUG ruleengine  - Transform - Loading rule - TAccessAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4269 DEBUG ruleengine  - Transform - Loading rule - TAppendQueryAORule: "TAppendQueryAORule" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4272 DEBUG ruleengine  - Transform - Loading rule - TAppendToPhysicalAORule: "AppendToPhysical" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4277 DEBUG ruleengine  - Transform - Loading rule - TBufferAORule: "BufferAO -> BufferedPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4283 DEBUG ruleengine  - Transform - Loading rule - TCacheAORule: "CacheAO --> CachePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4287 DEBUG ruleengine  - Transform - Loading rule - TChangeDetectAORule: "ChangeDetectAO -> ChangeDetectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4287 DEBUG AbstractExecutor  - Initializing Executor. - de.uniol.inf.is.odysseus.core.server.planmanagement.executor.AbstractExecutor.initialize(AbstractExecutor.java:271) 
4290 DEBUG AbstractExecutor  - Initializing Executor done. - de.uniol.inf.is.odysseus.core.server.planmanagement.executor.AbstractExecutor.initialize(AbstractExecutor.java:281) 
4309 DEBUG ruleengine  - Transform - Loading rule - TCloseStreamAORule: "TCloseStreamAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4313 DEBUG ruleengine  - Transform - Loading rule - TCommandAORule: "CommandAO --> CommandPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4321 DEBUG ruleengine  - Transform - Loading rule - TConsoleSinkAORule: "TConsoleSinkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4346 DEBUG ruleengine  - Transform - Loading rule - TConverterAORule: "ConverterAO --> ConverterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4348 DEBUG ruleengine  - Transform - Loading rule - TCSVFileSourceAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4349 DEBUG ruleengine  - Transform - Loading rule - TDeleteRenameAORule: "Delete Rename" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4352 DEBUG ruleengine  - Transform - Loading rule - TEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4354 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "FilterAO -> FilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4358 DEBUG ruleengine  - Transform - Loading rule - TMemStoreReadAORule: "TMemStoreReadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4359 DEBUG ruleengine  - Transform - Loading rule - TMemStoreWriteAORule: "TMemStoreWriteAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4361 DEBUG ruleengine  - Transform - Loading rule - TMergeAORule: "MergeAO --> MergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4365 DEBUG ruleengine  - Transform - Loading rule - TMetadataAOTransformation: "TMetadataAOTransformation" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4366 DEBUG ruleengine  - Transform - Loading rule - TPlanModificationActionAORule: "TPlanModificationActionAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4367 DEBUG ruleengine  - Transform - Loading rule - TRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4370 DEBUG ruleengine  - Transform - Loading rule - TRouteAORule: "RouteAO -> RoutePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4372 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO --> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4373 DEBUG ruleengine  - Transform - Loading rule - TSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4374 DEBUG ruleengine  - Transform - Loading rule - TSenderAOExistsRule: "Transform to existing SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4376 DEBUG ruleengine  - Transform - Loading rule - TSenderAOGenericRule: "AbstractSenderAO (generic) --> SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4378 DEBUG ruleengine  - Transform - Loading rule - TSenderAOViewRule: "Transform Sender View" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4380 DEBUG ruleengine  - Transform - Loading rule - TSetSystemTimeAORule: "SetSystemTimeAO -> SetSystemTimePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4382 DEBUG ruleengine  - Transform - Loading rule - TSetTimeProgressMarker: "TSetTimeProgressMarker" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4383 DEBUG ruleengine  - Transform - Loading rule - TSinkAORule: "SinkAO -> SinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4386 DEBUG ruleengine  - Transform - Loading rule - TSocketSinkAORule: "SocketSinkAO -> SocketSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4389 DEBUG ruleengine  - Transform - Loading rule - TStreamAORule: "Transform View or Stream" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4390 DEBUG ruleengine  - Transform - Loading rule - TTimeshiftAORule: "TimeshiftAO -> TimeshiftPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4391 DEBUG ruleengine  - Transform - Loading rule - TUserDefinedOperatorPO: "UdoAO -> UdoPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4393 DEBUG ruleengine  - Transform - Loading rule - TAccessAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4394 DEBUG ruleengine  - Transform - Loading rule - TAppendQueryAORule: "TAppendQueryAORule" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4394 DEBUG ruleengine  - Transform - Loading rule - TAppendToPhysicalAORule: "AppendToPhysical" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4394 DEBUG ruleengine  - Transform - Loading rule - TBufferAORule: "BufferAO -> BufferedPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4395 DEBUG ruleengine  - Transform - Loading rule - TCacheAORule: "CacheAO --> CachePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4395 DEBUG ruleengine  - Transform - Loading rule - TChangeDetectAORule: "ChangeDetectAO -> ChangeDetectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4396 DEBUG ruleengine  - Transform - Loading rule - TCloseStreamAORule: "TCloseStreamAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4396 DEBUG ruleengine  - Transform - Loading rule - TCommandAORule: "CommandAO --> CommandPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4396 DEBUG ruleengine  - Transform - Loading rule - TConsoleSinkAORule: "TConsoleSinkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4396 DEBUG ruleengine  - Transform - Loading rule - TConverterAORule: "ConverterAO --> ConverterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4397 DEBUG ruleengine  - Transform - Loading rule - TCSVFileSourceAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4397 DEBUG ruleengine  - Transform - Loading rule - TDeleteRenameAORule: "Delete Rename" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4397 DEBUG ruleengine  - Transform - Loading rule - TEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4397 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "FilterAO -> FilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4398 DEBUG ruleengine  - Transform - Loading rule - TMemStoreReadAORule: "TMemStoreReadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4398 DEBUG ruleengine  - Transform - Loading rule - TMemStoreWriteAORule: "TMemStoreWriteAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4398 DEBUG ruleengine  - Transform - Loading rule - TMergeAORule: "MergeAO --> MergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4399 DEBUG ruleengine  - Transform - Loading rule - TMetadataAOTransformation: "TMetadataAOTransformation" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4399 DEBUG ruleengine  - Transform - Loading rule - TPlanModificationActionAORule: "TPlanModificationActionAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4399 DEBUG ruleengine  - Transform - Loading rule - TRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4399 DEBUG ruleengine  - Transform - Loading rule - TRouteAORule: "RouteAO -> RoutePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4400 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO --> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4400 DEBUG ruleengine  - Transform - Loading rule - TSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4400 DEBUG ruleengine  - Transform - Loading rule - TSenderAOExistsRule: "Transform to existing SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4400 DEBUG ruleengine  - Transform - Loading rule - TSenderAOGenericRule: "AbstractSenderAO (generic) --> SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4400 DEBUG ruleengine  - Transform - Loading rule - TSenderAOViewRule: "Transform Sender View" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4400 DEBUG ruleengine  - Transform - Loading rule - TSetSystemTimeAORule: "SetSystemTimeAO -> SetSystemTimePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4401 DEBUG ruleengine  - Transform - Loading rule - TSetTimeProgressMarker: "TSetTimeProgressMarker" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4401 DEBUG ruleengine  - Transform - Loading rule - TSinkAORule: "SinkAO -> SinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4401 DEBUG ruleengine  - Transform - Loading rule - TSocketSinkAORule: "SocketSinkAO -> SocketSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4401 DEBUG ruleengine  - Transform - Loading rule - TStreamAORule: "Transform View or Stream" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4402 DEBUG ruleengine  - Transform - Loading rule - TTimeshiftAORule: "TimeshiftAO -> TimeshiftPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4402 DEBUG ruleengine  - Transform - Loading rule - TUserDefinedOperatorPO: "UdoAO -> UdoPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4432 INFO  WebServicePublisher  - Webservice published at http://0:0:0:0:0:0:0:0:9670/odysseus - de.uniol.inf.is.odysseus.planmanagement.executor.webservice.server.WebServicePublisher.publish(WebServicePublisher.java:106) 
4458 DEBUG ruleengine  - Transform - Loading rule - TDBEnrichAORule: "DBEnrichAO -> DBEnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4459 DEBUG ruleengine  - Transform - Loading rule - TDBEnrichAORule: "DBEnrichAO -> DBEnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7053 DEBUG ruleengine  - Rewrite - Loading rules for... de.uniol.inf.is.odysseus.relational.rewrite.RuleProvider@5d0e942a - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.bindRuleProvider(AbstractInventory.java:208) 
7058 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteProjectionWithoutFunctionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteProjectionWithoutFunctionRule" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7059 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteSelectionWithoutPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteSelectionWithoutPredicate" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7059 DEBUG ruleengine  - Rewrite - Loading rule - RMergeSelectionJoinRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RMergeSelectionJoinRule" for group: "GROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7059 DEBUG ruleengine  - Rewrite - Loading rule - RMergeSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RMergeSelectionRule" for group: "GROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7060 DEBUG ruleengine  - Rewrite - Loading rule - RSplitSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSplitSelectionRule" for group: "SPLIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7060 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionRenameRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionRenameRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7060 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionUnionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionUnionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7060 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionWindowRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionWindowRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7061 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionJoinRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionJoinRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7061 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionDifferenceRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionDifferenceRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7061 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionProjectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionProjectionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7061 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionRenameRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionRenameRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7062 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionUnionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionUnionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7062 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionWindowRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionWindowRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7062 DEBUG ruleengine  - Rewrite - Loading rule - RPrepareSelectionCNF: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPrepareSelectionCNF" for group: "PREPARE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7062 DEBUG ruleengine  - Rewrite - Loading rule - RPrepareJoinCNF: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPrepareJoinCNF" for group: "PREPARE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7063 DEBUG ruleengine  - Rewrite - Loading rule - ROptimizeSelectionPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.ROptimizeSelectionPredicate" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7063 DEBUG ruleengine  - Rewrite - Loading rule - ROptimizeJoinPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.ROptimizeJoinPredicate" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7063 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteRenameAORule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteRenameAORule" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7064 DEBUG ruleengine  - Rewrite - Loading rule - RPregroupJoinSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPregroupJoinSelectionRule" for group: "PREGROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
7065 DEBUG ruleengine  - Rewrite - Loading rules for... de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RewriteRuleProvider@6411bbff - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.bindRuleProvider(AbstractInventory.java:208) 
7067 DEBUG ruleengine  - Rewrite - Loading rule - RIntersectionAORule: "de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RIntersectionAORule" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:52.308
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.compiler.standardcompiler. The reference is: Reference[name = IPlanGenerator, interface = de.uniol.inf.is.odysseus.core.server.plangeneration.IPlanGenerator, policy = dynamic, cardinality = 0..1, target = null, bind = bindPlanGenerator, unbind = unbindPlanGenerator]
7095 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
7097 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
7098 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
7104 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
7106 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
7108 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
7110 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
7110 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
7110 DEBUG FileUtils  - Read from file /Users/jp/.odysseus/scheduling.conf - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 
7112 DEBUG SingleSchedulerManager  - Set active Scheduler Single Thread Scheduler RR Multi Source (Biggest Queue) - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.setActiveScheduler(SingleSchedulerManager.java:202) 
7119 INFO  SingleSchedulerManager  - Active scheduler. class de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SimpleThreadSchedulerMSLimitSourcesPerThread - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.activate(SingleSchedulerManager.java:141) 
7120 DEBUG SingleSchedulerManager  - Start scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:286) 
7122 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
7122 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
7122 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
7122 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
7122 DEBUG AbstractSimpleThreadScheduler  - Starting Scheduler with 4 thread(s). - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.startScheduling(AbstractSimpleThreadScheduler.java:119) 
7123 DEBUG SingleSchedulerManager  - Scheduling started. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:288) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:52.374
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.optimization.standardoptimizer. The reference is: Reference[name = IPostOptimizationAction, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.optimization.IPostOptimizationAction, policy = dynamic, cardinality = 0..n, target = null, bind = bindPostOptimizationAction, unbind = unbindPostOptimizationAction]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:52.379
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.optimization.standardoptimizer. The reference is: Reference[name = IElementCloningUpdater, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.optimization.elementcloning.IElementCloningUpdater, policy = dynamic, cardinality = 0..n, target = null, bind = bindElementCloningUpdater, unbind = unbindElementCloningUpdater]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:52.380
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = ISystemMonitorFactory, interface = de.uniol.inf.is.odysseus.core.server.monitoring.ISystemMonitorFactory, policy = dynamic, cardinality = 0..1, target = null, bind = bindSystemMonitorFactory, unbind = unbindSystemMonitorFactory]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:52.389
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IQueryDistributor, interface = de.uniol.inf.is.odysseus.core.server.distribution.IQueryDistributor, policy = dynamic, cardinality = 0..1, target = null, bind = bindQueryDistributor, unbind = unbindQueryDistributor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:52.391
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IPreTransformationHandler, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.executor.IPreTransformationHandler, policy = dynamic, cardinality = 0..n, target = null, bind = bindPreTransformationHandler, unbind = unbindPreTransformationHandler]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:52.391
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IRecoveryExecutor, interface = de.uniol.inf.is.odysseus.core.server.recovery.IRecoveryExecutor, policy = dynamic, cardinality = 0..n, target = null, bind = bindRecoveryExecutor, unbind = unbindRecoveryExecutor]
7168 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@620e52fd - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
7169 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@620e52fd - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:52.417
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLGenerator. The reference is: Reference[name = IPQLGeneratorPreProcessor, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLGeneratorPreProcessor, policy = dynamic, cardinality = 0..n, target = null, bind = bindPreProcessor, unbind = unbindPreProcessor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-05-16 13:37:52.418
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLGenerator. The reference is: Reference[name = IPQLGeneratorPostProcessor, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLGeneratorPostProcessor, policy = dynamic, cardinality = 0..n, target = null, bind = bindPostProcessor, unbind = unbindPostProcessor]
7180 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@69a60123 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
7180 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@69a60123 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 

!ENTRY org.eclipse.osgi 4 0 2017-05-16 13:37:52.476
!MESSAGE Could not find bundle: unknown
!STACK 0
org.osgi.framework.BundleException: Could not find bundle: unknown
	at org.eclipse.core.runtime.internal.adaptor.ConsoleManager.checkForConsoleBundle(ConsoleManager.java:58)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:331)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1488)
Starting application: 13127
7245 DEBUG TestRunnerApplication  - Starting Odysseus... - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:57) 
7257 DEBUG TestRunnerApplication  - Odysseus is up and running! - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:60) 
7258 DEBUG TestRunnerApplication  - Starting component tests... - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:71) 
7304 DEBUG TestRunnerApplication  - Starting a new component test: CQL Parser Test - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:100) 
7305 DEBUG TestRunnerApplication  - ####################################################################################### - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:101) 
7306 DEBUG TestComponentRunner  - Start Testcomponent 'CQL Parser Test' - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:52) 
7307 DEBUG AbstractTestComponent  - Starting executor... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStartExecutor(AbstractTestComponent.java:94) 
7309 DEBUG AbstractTestComponent  - Tue May 16 13:37:52 CEST 2017Running sub test 1 of 49: "CreateDatabaseConnectionTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
7309 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION jdbc1
#RUNQUERY
DROP DATABASE CONNECTION jdbc2
#RUNQUERY
DROP DATABASE CONNECTION jdbc3
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
DROP DATABASE CONNECTION con2
#RUNQUERY
DROP DATABASE CONNECTION con3
#RUNQUERY
DROP DATABASE CONNECTION con4
#RUNQUERY
CREATE DATABASE CONNECTION jdbc1 JDBC jdbc:mysql://localhost:3306/test
#RUNQUERY
CREATE DATABASE CONNECTION jdbc2 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION jdbc3 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword NO_LAZY_CONNECTION_CHECK
#RUNQUERY
CREATE DATABASE CONNECTION con1 AS mysql TO test1
#RUNQUERY
CREATE DATABASE CONNECTION con2 AS mysql TO test2 AT localhost : 3306
#RUNQUERY
CREATE DATABASE CONNECTION con3 AS mysql TO test3 AT localhost : 3306 WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION con4 AS mysql TO test4 WITH USER dbuser PASSWORD dbpassword
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
7310 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
7310 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
7311 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7318 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION jdbc1
#RUNQUERY
DROP DATABASE CONNECTION jdbc2
#RUNQUERY
DROP DATABASE CONNECTION jdbc3
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
DROP DATABASE CONNECTION con2
#RUNQUERY
DROP DATABASE CONNECTION con3
#RUNQUERY
DROP DATABASE CONNECTION con4
#RUNQUERY
CREATE DATABASE CONNECTION jdbc1 JDBC jdbc:mysql://localhost:3306/test
#RUNQUERY
CREATE DATABASE CONNECTION jdbc2 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION jdbc3 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword NO_LAZY_CONNECTION_CHECK
#RUNQUERY
CREATE DATABASE CONNECTION con1 AS mysql TO test1
#RUNQUERY
CREATE DATABASE CONNECTION con2 AS mysql TO test2 AT localhost : 3306
#RUNQUERY
CREATE DATABASE CONNECTION con3 AS mysql TO test3 AT localhost : 3306 WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION con4 AS mysql TO test4 WITH USER dbuser PASSWORD dbpassword
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7325 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7344 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7346 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7347 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@70f02c32 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7347 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7347 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION jdbc1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7348 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
log4j:WARN No appenders could be found for logger (org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser).
log4j:WARN Please initialize the log4j system properly.
CQLParser.getExecutorCommand(..) -> 
7704 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7704 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7706 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@63f8276e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7706 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7707 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION jdbc2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7707 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7711 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7712 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7712 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6127a7e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7712 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7712 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION jdbc3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7713 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7717 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7717 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7717 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@495fac5f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7718 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7718 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7718 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7722 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7723 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7723 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@635572a7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7723 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7723 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7723 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7727 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7728 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7728 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4dd02341 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7728 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7728 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7728 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7733 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7733 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7733 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7a1a3478 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7733 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7733 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7734 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7738 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7740 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7741 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@222eb8aa - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7741 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7742 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION jdbc1 JDBC jdbc:mysql://localhost:3306/test - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7742 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7753 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7753 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7753 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7203c7ff - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7754 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7754 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION jdbc2 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7754 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7758 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7758 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7758 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4b6690c0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7758 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7759 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION jdbc3 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword NO_LAZY_CONNECTION_CHECK - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7759 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7764 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7764 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7765 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2a76840c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7765 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7765 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con1 AS mysql TO test1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7765 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7775 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7775 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7776 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7cf6a5f9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7777 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7777 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con2 AS mysql TO test2 AT localhost : 3306 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7777 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7781 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7781 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7782 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2fc6f97f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7782 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7782 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con3 AS mysql TO test3 AT localhost : 3306 WITH USER dbuser PASSWORD dbpassword - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7782 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7786 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7786 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7786 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6179e425 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7786 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7787 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con4 AS mysql TO test4 WITH USER dbuser PASSWORD dbpassword - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7787 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
7791 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7792 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7792 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION jdbc1
#RUNQUERY
DROP DATABASE CONNECTION jdbc2
#RUNQUERY
DROP DATABASE CONNECTION jdbc3
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
DROP DATABASE CONNECTION con2
#RUNQUERY
DROP DATABASE CONNECTION con3
#RUNQUERY
DROP DATABASE CONNECTION con4
#RUNQUERY
CREATE DATABASE CONNECTION jdbc1 JDBC jdbc:mysql://localhost:3306/test
#RUNQUERY
CREATE DATABASE CONNECTION jdbc2 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION jdbc3 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword NO_LAZY_CONNECTION_CHECK
#RUNQUERY
CREATE DATABASE CONNECTION con1 AS mysql TO test1
#RUNQUERY
CREATE DATABASE CONNECTION con2 AS mysql TO test2 AT localhost : 3306
#RUNQUERY
CREATE DATABASE CONNECTION con3 AS mysql TO test3 AT localhost : 3306 WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION con4 AS mysql TO test4 WITH USER dbuser PASSWORD dbpassword
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7793 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7794 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7794 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
7795 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
7795 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
7795 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
7795 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
7796 DEBUG AbstractTestComponent  - Sub test "CreateDatabaseConnectionTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
7796 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
7796 DEBUG AbstractTestComponent  - Tue May 16 13:37:53 CEST 2017Running sub test 2 of 49: "CreateDatabaseSinkTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
7796 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
CREATE DATABASE SINK con1 AS oracle TO test
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
7796 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
7796 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
7796 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7796 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
CREATE DATABASE SINK con1 AS oracle TO test
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7797 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7798 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7798 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7798 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@49c6c24f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7798 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7798 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7799 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
8179 ERROR DatabaseConnectionDictionary  - Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server. - de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeConnection(DatabaseConnectionDictionary.java:146) 
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:407)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1116)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:346)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2334)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2371)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2163)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:407)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:378)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:305)
	at de.uniol.inf.is.odysseus.database.DataSourceFactoryRegistry.getConnection(DataSourceFactoryRegistry.java:30)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.assertConnection(DatabaseConnection.java:360)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.getConnection(DatabaseConnection.java:94)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeConnection(DatabaseConnectionDictionary.java:141)
	at de.uniol.inf.is.odysseus.parser.novel.cql.CQLParser.getExecutorCommand(CQLParser.java:329)
	at de.uniol.inf.is.odysseus.parser.novel.cql.CQLParser.parse(CQLParser.java:186)
	at de.uniol.inf.is.odysseus.planmanagement.compiler.standardcompiler.StandardCompiler.translateQuery(StandardCompiler.java:256)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:247)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:662)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:656)
	at de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand.execute(AddQueryCommand.java:47)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:480)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:665)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:656)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:644)
	at de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:43)
	at de.uniol.inf.is.odysseus.test.component.parser.cql.CQLParserTest.executeTestSet(CQLParserTest.java:72)
	at de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:1)
	at de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:133)
	at de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:57)
	at de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:102)
	at de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:73)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1488)
Caused by: java.net.NoRouteToHostException: Can't assign requested address (Address not available)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:254)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:295)
	... 47 more
8182 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8182 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
8182 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2ed3b1f5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8182 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8183 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE SINK con1 AS oracle TO test - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8183 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8191 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8191 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
8192 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
CREATE DATABASE SINK con1 AS oracle TO test
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8192 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8192 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8192 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8192 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8193 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8193 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8194 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8194 DEBUG AbstractTestComponent  - Sub test "CreateDatabaseSinkTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8194 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8194 DEBUG AbstractTestComponent  - Tue May 16 13:37:53 CEST 2017Running sub test 3 of 49: "CreateDatabaseSourceTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8194 DEBUG AbstractTestComponent  - #PARSER CQL
#ADDQUERY
CREATE DATABASE CONNECTIOn con1 as mysql
#ADDQUERY
CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8195 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8195 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8195 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8195 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#ADDQUERY
CREATE DATABASE CONNECTIOn con1 as mysql
#ADDQUERY
CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8195 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8196 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8197 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8197 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@76ba13c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8197 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8197 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTIOn con1 as mysql - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8197 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
8203 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8204 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
8204 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@42b64ab8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8204 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8204 DEBUG StandardExecutor  - Adding following query: CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8205 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [id, value]
[INTEGER, STRING]
,
registerOperator() -> VIEW_KEY_datastream
8218 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8218 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8218 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4ebea12c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8218 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8218 DEBUG StandardExecutor  - Adding following query: datastream := DATABASESOURCE({connection='con1',table='main',attributes=[['id','INTEGER'],['value','STRING']],waiteach=0})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8219 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8239 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8240 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8240 DEBUG StandardExecutor  - Executing Create VIEW datastream - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8245 DEBUG ReloadLog  - Query added to log: datastream := DATABASESOURCE({connection='con1',table='main',attributes=[['id','INTEGER'],['value','STRING']],waiteach=0})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8245 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8246 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8246 DEBUG ReloadLog  - Query added to log: CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8246 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8246 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8246 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#ADDQUERY
CREATE DATABASE CONNECTIOn con1 as mysql
#ADDQUERY
CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8247 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8247 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8247 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8247 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8248 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8248 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8248 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8248 DEBUG AbstractTestComponent  - Sub test "CreateDatabaseSourceTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8249 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8249 DEBUG AbstractTestComponent  - Tue May 16 13:37:53 CEST 2017Running sub test 4 of 49: "CreateStreamFromFileTest.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8249 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8249 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8249 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8249 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8249 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8249 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8250 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8250 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8250 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@743cb8e0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8250 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8250 DEBUG StandardExecutor  - Adding following query: CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8251 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [attr1]
[Integer]
,
registerOperator() -> VIEW_KEY_stream1
8264 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8264 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8265 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7e809b79 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8265 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8265 DEBUG StandardExecutor  - Adding following query: stream1 := ACCESS({source='stream1',wrapper='GenericPull',protocol='SimpleCSV',transport='File',datahandler='Tuple',schema=[['attr1','Integer']],options=[['filename','this/is/a/filename.file'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8265 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8268 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8269 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8269 DEBUG StandardExecutor  - Executing Create VIEW stream1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8273 DEBUG ReloadLog  - Query added to log: stream1 := ACCESS({source='stream1',wrapper='GenericPull',protocol='SimpleCSV',transport='File',datahandler='Tuple',schema=[['attr1','Integer']],options=[['filename','this/is/a/filename.file'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8273 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8273 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8274 DEBUG ReloadLog  - Query added to log: CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8274 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8274 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8274 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8275 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8275 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8275 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8275 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8276 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8276 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8276 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8276 DEBUG AbstractTestComponent  - Sub test "CreateStreamFromFileTest.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8276 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8276 DEBUG AbstractTestComponent  - Tue May 16 13:37:53 CEST 2017Running sub test 5 of 49: "CreateStreamTest.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8277 DEBUG AbstractTestComponent  - #PARSER CQL
#DROPALLQUERIES
#QUERY 
DROP STREAM person IF EXISTS
#QUERY
CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440
#QUERY 
DROP STREAM bid IF EXISTS
#QUERY
CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65442', 'host' 'localhost')
#QUERY 
DROP STREAM auction IF EXISTS
#QUERY
CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441
#QUERY 
DROP STREAM category IF EXISTS
#QUERY
CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65443', 'host' 'localhost')
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8277 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8277 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8277 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8277 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#DROPALLQUERIES
#QUERY 
DROP STREAM person IF EXISTS
#QUERY
CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440
#QUERY 
DROP STREAM bid IF EXISTS
#QUERY
CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65442', 'host' 'localhost')
#QUERY 
DROP STREAM auction IF EXISTS
#QUERY
CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441
#QUERY 
DROP STREAM category IF EXISTS
#QUERY
CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65443', 'host' 'localhost')
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8277 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8280 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8280 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8280 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.query.RemoveAllQueriesCommand@72bd06ca - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8280 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@89c10b7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8280 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8281 DEBUG StandardExecutor  - Adding following query: DROP STREAM person IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8281 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
8291 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8292 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8292 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@119f1f2a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8292 DEBUG ReloadLog  - Query added to log: DROP STREAM person IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8292 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8293 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8293 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1a1da881 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8293 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8293 DEBUG StandardExecutor  - Adding following query: CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8294 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [timestamp, id, name, email, creditcard, city, state]
[STARTTIMESTAMP, INTEGER, STRING, STRING, STRING, STRING, STRING]
,
registerOperator() -> VIEW_KEY_person
8301 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8301 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8301 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@165b8a71 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8301 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8301 DEBUG StandardExecutor  - Adding following query: person := ACCESS({source='person',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['name','STRING'],['email','STRING'],['creditcard','STRING'],['city','STRING'],['state','STRING']],options=[['port','65440'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8302 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8304 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8305 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8305 DEBUG StandardExecutor  - Executing Create VIEW person - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8311 DEBUG ReloadLog  - Query added to log: person := ACCESS({source='person',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['name','STRING'],['email','STRING'],['creditcard','STRING'],['city','STRING'],['state','STRING']],options=[['port','65440'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8311 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8312 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8312 DEBUG ReloadLog  - Query added to log: CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8312 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8312 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8312 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@756cf158 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8313 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8313 DEBUG StandardExecutor  - Adding following query: DROP STREAM bid IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8313 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
8318 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8319 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8319 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@751d3241 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8319 DEBUG ReloadLog  - Query added to log: DROP STREAM bid IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8320 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8320 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8321 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@76c7beb3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8321 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8321 DEBUG StandardExecutor  - Adding following query: CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE)
WRAPPER 'GenericPush'
PROTOCOL 'SizeByteBuffer'
TRANSPORT 'NonBlockingTcp'
DATAHANDLER 'Tuple'
OPTIONS ('port' '65442', 'host' 'localhost') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8322 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [timestamp, auction, bidder, datetime, price]
[STARTTIMESTAMP, INTEGER, INTEGER, LONG, DOUBLE]
,
generateKeyValueString()= [port, host]
[65442, localhost]
,
registerOperator() -> VIEW_KEY_bid
8341 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8341 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8341 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7b139eab - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8341 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8341 DEBUG StandardExecutor  - Adding following query: bid := ACCESS({source='bid',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['port','65442'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8342 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8343 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8344 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8344 DEBUG StandardExecutor  - Executing Create VIEW bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8345 DEBUG ReloadLog  - Query added to log: bid := ACCESS({source='bid',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['port','65442'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8345 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8346 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8346 DEBUG ReloadLog  - Query added to log: CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE)
WRAPPER 'GenericPush'
PROTOCOL 'SizeByteBuffer'
TRANSPORT 'NonBlockingTcp'
DATAHANDLER 'Tuple'
OPTIONS ('port' '65442', 'host' 'localhost') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8346 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8348 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8348 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5f2f577 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8349 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8349 DEBUG StandardExecutor  - Adding following query: DROP STREAM auction IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8349 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
8358 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8358 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8359 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@5d465e4b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8359 DEBUG ReloadLog  - Query added to log: DROP STREAM auction IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8359 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8360 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8361 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@53e211ee - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8361 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8361 DEBUG StandardExecutor  - Adding following query: CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8362 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [timestamp, id, itemname, description, initialbid, reserve, expires, seller, category]
[STARTTIMESTAMP, INTEGER, STRING, STRING, INTEGER, INTEGER, LONG, INTEGER, INTEGER]
,
registerOperator() -> VIEW_KEY_auction
8367 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8368 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8368 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3d8bbcdc - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8368 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8368 DEBUG StandardExecutor  - Adding following query: auction := ACCESS({source='auction',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['itemname','STRING'],['description','STRING'],['initialbid','INTEGER'],['reserve','INTEGER'],['expires','LONG'],['seller','INTEGER'],['category','INTEGER']],options=[['port','65441'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8368 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8371 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8371 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8371 DEBUG StandardExecutor  - Executing Create VIEW auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8372 DEBUG ReloadLog  - Query added to log: auction := ACCESS({source='auction',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['itemname','STRING'],['description','STRING'],['initialbid','INTEGER'],['reserve','INTEGER'],['expires','LONG'],['seller','INTEGER'],['category','INTEGER']],options=[['port','65441'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8372 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8373 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8373 DEBUG ReloadLog  - Query added to log: CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8373 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8374 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8374 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@18a3962d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8375 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8375 DEBUG StandardExecutor  - Adding following query: DROP STREAM category IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8375 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
8379 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8380 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8380 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@2a65bb85 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8380 DEBUG ReloadLog  - Query added to log: DROP STREAM category IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8380 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8381 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8386 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4b85880b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8386 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8386 DEBUG StandardExecutor  - Adding following query: CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'SizeByteBuffer'
TRANSPORT 'NonBlockingTcp'
DATAHANDLER 'Tuple'
OPTIONS ('port' '65443', 'host' 'localhost') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8387 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [id, name, description, parentid]
[INTEGER, STRING, STRING, INTEGER]
,
generateKeyValueString()= [port, host]
[65443, localhost]
,
registerOperator() -> VIEW_KEY_category
8398 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8399 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8400 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4215838f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8401 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8401 DEBUG StandardExecutor  - Adding following query: category := ACCESS({source='category',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['id','INTEGER'],['name','STRING'],['description','STRING'],['parentid','INTEGER']],options=[['port','65443'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8401 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8403 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8404 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8411 DEBUG StandardExecutor  - Executing Create VIEW category - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8411 DEBUG ReloadLog  - Query added to log: category := ACCESS({source='category',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['id','INTEGER'],['name','STRING'],['description','STRING'],['parentid','INTEGER']],options=[['port','65443'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8412 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8412 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8413 DEBUG ReloadLog  - Query added to log: CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'SizeByteBuffer'
TRANSPORT 'NonBlockingTcp'
DATAHANDLER 'Tuple'
OPTIONS ('port' '65443', 'host' 'localhost') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8413 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8413 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8414 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#DROPALLQUERIES
#QUERY 
DROP STREAM person IF EXISTS
#QUERY
CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440
#QUERY 
DROP STREAM bid IF EXISTS
#QUERY
CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65442', 'host' 'localhost')
#QUERY 
DROP STREAM auction IF EXISTS
#QUERY
CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441
#QUERY 
DROP STREAM category IF EXISTS
#QUERY
CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65443', 'host' 'localhost')
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8414 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8414 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8414 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8414 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8415 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8415 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8416 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8416 DEBUG AbstractTestComponent  - Sub test "CreateStreamTest.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8416 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8416 DEBUG AbstractTestComponent  - Tue May 16 13:37:53 CEST 2017Running sub test 6 of 49: "CreateStreamToDatabaseSinkTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8416 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
CREATE DATABASE CONNECTION con6 AS mysql
#QUERY
CREATE SINK dbsink AS DATABASE con6 TABLE example
#ADDQUERY
STREAM TO dbsink SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8416 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8416 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8416 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8417 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
CREATE DATABASE CONNECTION con6 AS mysql
#QUERY
CREATE SINK dbsink AS DATABASE con6 TABLE example
#ADDQUERY
STREAM TO dbsink SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8417 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8418 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8419 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8419 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@76a36b71 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8419 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8420 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con6 AS mysql - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8420 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
8424 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8424 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
8425 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@f9d87b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8425 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8425 DEBUG StandardExecutor  - Adding following query: CREATE SINK dbsink AS DATABASE con6 TABLE example - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8425 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8431 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8431 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
8432 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3e2943ab - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8432 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8432 DEBUG StandardExecutor  - Adding following query: STREAM TO dbsink SELECT * FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8432 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{}
getProjectionAttribute() -> bid.auction
{}
getProjectionAttribute() -> bid.bidder
{}
getProjectionAttribute() -> bid.datetime
{}
getProjectionAttribute() -> bid.price
{}
registerOperator() -> operator_1
registerOperator() -> dbsink
8465 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8466 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8466 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1ca25c47 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8466 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8466 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
dbsink = DATABASESINK({connection='con6',table='example',type='mysql'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8466 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8501 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8508 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8509 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8515 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8516 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8529 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8529 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8530 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8530 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8530 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8531 INFO  transform  - Starting transformation of Top@1373949107 OwnerIDs: 0... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8534 DEBUG transform  - Before transformation: 
TopAO (1373949107) Owner: 0
0 <- 0 DatabaseSinkAO (1189651769) Owner: 0
       0 <- 0 MapAO (1230013344) Owner: 0
              0 <- 0 AccessAO (1607869297) Owner: 0
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8606 DEBUG ruleengine  - Ruleengine needed 68 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8607 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8608 INFO  transform  - Transformation of Top@1373949107 OwnerIDs: 0 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8611 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8615 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8615 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8616 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8617 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8617 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
dbsink = DATABASESINK({connection='con6',table='example',type='mysql'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8617 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8618 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8618 DEBUG ReloadLog  - Query added to log: STREAM TO dbsink SELECT * FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8619 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8619 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8620 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
CREATE DATABASE CONNECTION con6 AS mysql
#QUERY
CREATE SINK dbsink AS DATABASE con6 TABLE example
#ADDQUERY
STREAM TO dbsink SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8620 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8621 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8621 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8621 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8621 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8621 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8622 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-28] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8623 INFO  StandardExecutor  - Removing Query 0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8623 DEBUG StandardExecutor  - Removing Ownership 0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8624 INFO  StandardExecutor  - Query 0 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8625 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
dbsink = DATABASESINK({connection='con6',table='example',type='mysql'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8625 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8626 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8626 DEBUG AbstractTestComponent  - Sub test "CreateStreamToDatabaseSinkTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8627 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8627 DEBUG AbstractTestComponent  - Tue May 16 13:37:53 CEST 2017Running sub test 7 of 49: "CreateViewTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8627 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
DROP VIEW view1 IF EXISTS
#QUERY
CREATE VIEW view1 FROM (SELECT * FROM bid)
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8627 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8627 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8627 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8627 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
DROP VIEW view1 IF EXISTS
#QUERY
CREATE VIEW view1 FROM (SELECT * FROM bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8628 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8629 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8629 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8629 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4a3e3e8b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8630 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8630 DEBUG StandardExecutor  - Adding following query: DROP VIEW view1 IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8630 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
8634 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8635 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8635 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropViewCommand@71104a4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8635 DEBUG ReloadLog  - Query added to log: DROP VIEW view1 IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8635 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8635 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8636 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4985cbcb - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8636 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8636 DEBUG StandardExecutor  - Adding following query: CREATE VIEW view1 FROM (SELECT * FROM bid) - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8636 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{}
getProjectionAttribute() -> bid.auction
{}
getProjectionAttribute() -> bid.bidder
{}
getProjectionAttribute() -> bid.datetime
{}
getProjectionAttribute() -> bid.price
{}
registerOperator() -> operator_1
8644 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8644 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8644 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@54361a9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8644 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8645 DEBUG StandardExecutor  - Adding following query: view1 := MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8645 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8659 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8659 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8660 DEBUG StandardExecutor  - Executing Create VIEW view1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8660 DEBUG ReloadLog  - Query added to log: view1 := MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8660 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8661 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8662 DEBUG ReloadLog  - Query added to log: CREATE VIEW view1 FROM (SELECT * FROM bid) - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8662 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8663 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8663 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
DROP VIEW view1 IF EXISTS
#QUERY
CREATE VIEW view1 FROM (SELECT * FROM bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8664 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8664 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8665 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8665 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8665 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8665 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8666 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8667 DEBUG AbstractTestComponent  - Sub test "CreateViewTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8667 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8667 DEBUG AbstractTestComponent  - Tue May 16 13:37:53 CEST 2017Running sub test 8 of 49: "ExistsTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8667 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder);
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8667 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8668 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8668 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8668 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder);
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8668 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8669 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8670 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8670 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2416a51 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8671 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8671 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8672 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.bidder
alias!
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.bidder]}, order= [B.bidder]
parsePredicate(List<Expressions>)
prepareParsingSelect()
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::P.id
alias!
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
getSelectedAttributes() -> map= {person=[P.id]}, order= [P.id]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> P.id,P
registerOperator() -> operator_1
getProjectionAttribute() -> P.id
{P.id=P, B.bidder=B}
registerOperator() -> operator_2
getAttributename() -> attributename=P.id, sourcename= null
getAttributename() -> attributename=B.bidder, sourcename= null
exists() -> P.id!=B.bidder
P.id
exists() -> P_id!=B.bidder
parsePredicate() -> 
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.bidder,B
registerOperator() -> operator_3
registerOperator() -> operator_4
getProjectionAttribute() -> B.bidder
{P.id=P, B.bidder=B}
registerOperator() -> operator_5
9196 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9196 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9196 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@644c78d4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9196 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9196 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.id']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9197 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9208 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9209 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9209 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9209 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9210 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9212 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9212 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9213 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9213 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9213 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9213 INFO  transform  - Starting transformation of Top@98351968 OwnerIDs: 1... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9214 DEBUG transform  - Before transformation: 
TopAO (98351968) Owner: 1
0 <- 0 MapAO (1278616846) Owner: 1
       0 <- 0 JoinAO (559050604) Owner: 1 Predicate: null
              0 <- 0 ExistenceAO (1240843015) Owner: 1
                     0 <- 0 MapAO (697460450) Owner: 1
                            0 <- 0 AccessAO (1416706187) Owner: 1
                     1 <- 0 AccessAO (1726616678) Owner: 1
              1 <- 0 AccessAO (1726616678) Owner: 1
                            [see above for following operators]
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9271 DEBUG ruleengine  - Ruleengine needed 56 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9272 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9272 INFO  transform  - Transformation of Top@98351968 OwnerIDs: 1 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9272 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9274 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9275 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9275 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9275 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9275 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.id']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9275 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9276 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9276 DEBUG ReloadLog  - Query added to log: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9276 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9277 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9277 INFO  StandardExecutor  - Starting query (ID: 1)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9278 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9278 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9296 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9297 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9298 INFO  StandardExecutor  - Query 1 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9299 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 1 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9300 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9306 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9309 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder);
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9309 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9313 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9317 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9321 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9322 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9323 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9324 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-30] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9325 INFO  StandardExecutor  - Stopping query (ID: 1).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9325 DEBUG StandardExecutor  - Try to stop query 1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9326 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9330 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9331 INFO  StandardExecutor  - Query 1 stopped. Execution time 33 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9332 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 1 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9332 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9332 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9332 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9333 INFO  StandardExecutor  - Removing Query 1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9333 DEBUG StandardExecutor  - Removing Ownership 1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9333 INFO  StandardExecutor  - Query 1 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9334 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.id']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9334 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9335 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9336 DEBUG AbstractTestComponent  - Sub test "ExistsTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9336 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9336 DEBUG AbstractTestComponent  - Tue May 16 13:37:54 CEST 2017Running sub test 9 of 49: "ExistsTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9336 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max');
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9337 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9337 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9338 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9338 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max');
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9338 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9340 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9340 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9340 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@302fec27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9341 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9341 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max'); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9341 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.bidder
alias!
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.bidder]}, order= [B.bidder]
parsePredicate(List<Expressions>)
prepareParsingSelect()
buildJoin() --> SimpleSource
buildRename() -> P.timestamp,P
buildRename() -> P.id,P
buildRename() -> P.name,P
buildRename() -> P.email,P
buildRename() -> P.creditcard,P
buildRename() -> P.city,P
buildRename() -> P.state,P
registerOperator() -> operator_1
getProjectionAttribute() -> P.timestamp
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.id
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.name
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.email
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.creditcard
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.city
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.state
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
registerOperator() -> operator_2
getAttributename() -> attributename=P.id, sourcename= null
getAttributename() -> attributename=B.bidder, sourcename= null
getAttributename() -> attributename=P.name, sourcename= null
exists() -> P.id!=B.bidder&&P.name!="Max"
P.timestamp
person.timestamp
P.id
person.id
P.name
person.name
P.email
person.email
P.creditcard
person.creditcard
P.city
person.city
P.state
person.state
exists() -> P_id!=B.bidder&&P_name!="Max"
parsePredicate() -> 
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.bidder,B
registerOperator() -> operator_3
registerOperator() -> operator_4
getProjectionAttribute() -> B.bidder
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
registerOperator() -> operator_5
9357 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9357 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9358 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5e77f0f4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9358 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9358 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.timestamp','P.id','P.name','P.email','P.creditcard','P.city','P.state']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder&&P_name!="Max"'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9358 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9378 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9379 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9379 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9380 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9381 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9383 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9384 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9384 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9385 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9385 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9387 INFO  transform  - Starting transformation of Top@567656864 OwnerIDs: 2... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9388 DEBUG transform  - Before transformation: 
TopAO (567656864) Owner: 2
0 <- 0 MapAO (1306535359) Owner: 2
       0 <- 0 JoinAO (1401295795) Owner: 2 Predicate: null
              0 <- 0 ExistenceAO (519019247) Owner: 2
                     0 <- 0 MapAO (288919635) Owner: 2
                            0 <- 0 AccessAO (1572442646) Owner: 2
                     1 <- 0 AccessAO (1052842393) Owner: 2
              1 <- 0 AccessAO (1052842393) Owner: 2
                            [see above for following operators]
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9413 DEBUG ruleengine  - Ruleengine needed 19 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9413 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9413 INFO  transform  - Transformation of Top@567656864 OwnerIDs: 2 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9414 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9415 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9415 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9416 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9416 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9416 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.timestamp','P.id','P.name','P.email','P.creditcard','P.city','P.state']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder&&P_name!="Max"'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9417 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9417 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9418 DEBUG ReloadLog  - Query added to log: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max'); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9418 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9419 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9419 INFO  StandardExecutor  - Starting query (ID: 2)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9421 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9422 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9425 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9426 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9428 INFO  StandardExecutor  - Query 2 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9432 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 2 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9432 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9433 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9433 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max');
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9434 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9435 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9436 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9436 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9436 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9436 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9438 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-31] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9438 INFO  StandardExecutor  - Stopping query (ID: 2).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9439 DEBUG StandardExecutor  - Try to stop query 2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9440 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9442 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9443 INFO  StandardExecutor  - Query 2 stopped. Execution time 15 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9443 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 2 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9443 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9443 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9443 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9444 INFO  StandardExecutor  - Removing Query 2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9444 DEBUG StandardExecutor  - Removing Ownership 2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9444 INFO  StandardExecutor  - Query 2 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9444 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.timestamp','P.id','P.name','P.email','P.creditcard','P.city','P.state']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder&&P_name!="Max"'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9444 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9445 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9447 DEBUG AbstractTestComponent  - Sub test "ExistsTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9447 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9447 DEBUG AbstractTestComponent  - Tue May 16 13:37:54 CEST 2017Running sub test 10 of 49: "ExistsTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9447 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9448 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9448 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9448 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9448 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9448 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9449 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9450 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9451 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6bc248ed - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9451 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9451 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9451 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.bidder
alias!
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.bidder]}, order= [B.bidder]
parsePredicate(List<Expressions>)
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= id, realSourcename= person, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= name, realSourcename= person, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {person=[id, name]}, order= [person.id, person.name]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
getProjectionAttribute() -> person.id
{P.city=P, B.price=B, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> person.name
{P.city=P, B.price=B, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
registerOperator() -> operator_1
getAttributename() -> attributename=id, sourcename= null
getAttributename() -> attributename=B.bidder, sourcename= null
getAttributename() -> attributename=name, sourcename= null
exists() -> person.id!=B.bidder&&person.name!="Max"
person.id
person.name
exists() -> person_id!=B.bidder&&person_name!="Max"
getAttributename() -> attributename=B.price, sourcename= null
parsePredicate() -> ||B.price>1000
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.bidder,B
buildRename() -> B.price,B
registerOperator() -> operator_2
registerOperator() -> operator_3
registerExistenceOperator() -> selectInput= operator_2
registerOperator() -> operator_4
getProjectionAttribute() -> B.bidder
{P.city=P, B.price=B, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
registerOperator() -> operator_5
9485 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9485 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9485 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1095f122 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9486 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9486 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['person.id','person.name']},person)
operator_2 = RENAME({aliases=['bidder','B.bidder','price','B.price','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='person_id!=B.bidder&&person_name!="Max"'},operator_1,operator_2)
operator_3 = SELECT({predicate='B.price>1000'},JOIN(operator_4,operator_2))
operator_5 = MAP({expressions=['B.bidder']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9486 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9495 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9495 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9495 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9496 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9497 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9506 DEBUG RelationalRestructHelper  - removing operator:Select@485686996 OwnerIDs: 3(B.price) > (1000) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9507 DEBUG ruleengine  - Ruleengine needed 10 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9508 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9508 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9508 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9508 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9509 INFO  transform  - Starting transformation of Top@2030138610 OwnerIDs: 3... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9509 DEBUG transform  - Before transformation: 
TopAO (2030138610) Owner: 3
0 <- 0 MapAO (1109752797) Owner: 3
       0 <- 0 JoinAO (1988746735) Owner: 3 Predicate: null
              0 <- 0 ExistenceAO (1752856108) Owner: 3
                     0 <- 0 MapAO (439232821) Owner: 3
                            0 <- 0 AccessAO (1933328958) Owner: 3
                     1 <- 0 AccessAO (1264754451) Owner: 3
              1 <- 0 SelectAO (1888639813) Owner: 
                     0 <- 0 AccessAO (1264754451) Owner: 3
                                   [see above for following operators]
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9527 DEBUG ruleengine  - Ruleengine needed 16 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9527 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9527 INFO  transform  - Transformation of Top@2030138610 OwnerIDs: 3 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9528 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9529 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9529 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9529 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9530 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9530 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['person.id','person.name']},person)
operator_2 = RENAME({aliases=['bidder','B.bidder','price','B.price','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='person_id!=B.bidder&&person_name!="Max"'},operator_1,operator_2)
operator_3 = SELECT({predicate='B.price>1000'},JOIN(operator_4,operator_2))
operator_5 = MAP({expressions=['B.bidder']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9530 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9531 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9531 DEBUG ReloadLog  - Query added to log: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9531 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9532 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9532 INFO  StandardExecutor  - Starting query (ID: 3)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9532 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9532 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9533 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9533 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9536 INFO  StandardExecutor  - Query 3 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9536 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 3 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9537 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9537 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9537 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9537 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9538 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9538 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9539 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9539 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9539 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9540 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-32] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9540 INFO  StandardExecutor  - Stopping query (ID: 3).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9541 DEBUG StandardExecutor  - Try to stop query 3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9542 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9543 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9545 INFO  StandardExecutor  - Query 3 stopped. Execution time 9 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9545 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 3 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9545 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9545 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9545 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9545 INFO  StandardExecutor  - Removing Query 3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9546 DEBUG StandardExecutor  - Removing Ownership 3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9546 INFO  StandardExecutor  - Query 3 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9546 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['person.id','person.name']},person)
operator_2 = RENAME({aliases=['bidder','B.bidder','price','B.price','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='person_id!=B.bidder&&person_name!="Max"'},operator_1,operator_2)
operator_3 = SELECT({predicate='B.price>1000'},JOIN(operator_4,operator_2))
operator_5 = MAP({expressions=['B.bidder']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9546 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9547 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9548 DEBUG AbstractTestComponent  - Sub test "ExistsTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9548 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9548 DEBUG AbstractTestComponent  - Tue May 16 13:37:54 CEST 2017Running sub test 11 of 49: "QuantificationTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9548 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.price 
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2);
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9548 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9548 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9548 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9549 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.price 
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2);
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9549 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9550 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9551 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9551 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@16afbd92 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9552 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9552 DEBUG StandardExecutor  - Adding following query: SELECT B.price
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9552 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.price
alias!
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.price]}, order= [B.price]
parsePredicate(List<Expressions>)
prepareParsingSelect()
findbyName::B2.price
alias!
registerAttributeAliases() -> attribute= B2.price, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B2.price]}, order= [B2.price]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.price,B
buildRename() -> B2.price,B2
registerOperator() -> operator_1
getProjectionAttribute() -> B2.price
{P.city=P, B.price=B, P.name=P, P.creditcard=P, B2.price=B2, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
registerOperator() -> operator_2
B2.price
parsePredicate() -> 
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.price,B
buildRename() -> B2.price,B2
registerOperator() -> operator_3
registerOperator() -> operator_4
getProjectionAttribute() -> B.price
{P.city=P, B.price=B, P.name=P, P.creditcard=P, B2.price=B2, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
registerOperator() -> operator_5
9567 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9568 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9568 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@74f7d1d2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9568 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9568 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','B2.price','timestamp','B2.timestamp','auction','B2.auction','bidder','B2.bidder','datetime','B2.datetime'],pairs='true'},bid)
operator_2 = MAP({expressions=['B2.price']},operator_1)
operator_3 = RENAME({aliases=['price','B.price','timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='NOT_EXISTS',predicate='B.price<=B2_price'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.price']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9568 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9573 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9574 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9574 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9574 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9575 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9576 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9576 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9576 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9576 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9576 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9577 INFO  transform  - Starting transformation of Top@792488644 OwnerIDs: 4... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9577 DEBUG transform  - Before transformation: 
TopAO (792488644) Owner: 4
0 <- 0 MapAO (780843029) Owner: 4
       0 <- 0 JoinAO (1739555643) Owner: 4 Predicate: null
              0 <- 0 ExistenceAO (220165304) Owner: 4
                     0 <- 0 MapAO (1094272405) Owner: 4
                            0 <- 0 AccessAO (973604791) Owner: 4
                     1 <- 0 AccessAO (564526486) Owner: 4
              1 <- 0 AccessAO (564526486) Owner: 4
                            [see above for following operators]
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9593 DEBUG ruleengine  - Ruleengine needed 15 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9593 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9594 INFO  transform  - Transformation of Top@792488644 OwnerIDs: 4 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9594 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9595 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9595 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9595 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9595 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9595 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','B2.price','timestamp','B2.timestamp','auction','B2.auction','bidder','B2.bidder','datetime','B2.datetime'],pairs='true'},bid)
operator_2 = MAP({expressions=['B2.price']},operator_1)
operator_3 = RENAME({aliases=['price','B.price','timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='NOT_EXISTS',predicate='B.price<=B2_price'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.price']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9595 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9596 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9596 DEBUG ReloadLog  - Query added to log: SELECT B.price
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9596 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9598 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9598 INFO  StandardExecutor  - Starting query (ID: 4)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9598 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9599 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9599 INFO  StandardExecutor  - Query 4 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9599 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 4 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9600 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9600 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9601 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.price 
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2);
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9601 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9601 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9602 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9602 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9602 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9602 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9603 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-33] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9603 INFO  StandardExecutor  - Stopping query (ID: 4).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9603 DEBUG StandardExecutor  - Try to stop query 4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9605 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9606 INFO  StandardExecutor  - Query 4 stopped. Execution time 7 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9606 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 4 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9606 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9606 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9607 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9607 INFO  StandardExecutor  - Removing Query 4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9607 DEBUG StandardExecutor  - Removing Ownership 4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9608 INFO  StandardExecutor  - Query 4 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9608 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','B2.price','timestamp','B2.timestamp','auction','B2.auction','bidder','B2.bidder','datetime','B2.datetime'],pairs='true'},bid)
operator_2 = MAP({expressions=['B2.price']},operator_1)
operator_3 = RENAME({aliases=['price','B.price','timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='NOT_EXISTS',predicate='B.price<=B2_price'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.price']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9608 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9609 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9610 DEBUG AbstractTestComponent  - Sub test "QuantificationTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9610 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9611 DEBUG AbstractTestComponent  - Tue May 16 13:37:54 CEST 2017Running sub test 12 of 49: "RenameTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9611 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9611 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9611 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9611 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9612 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9612 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9613 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9613 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9614 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@62da83ed - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9614 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9614 DEBUG StandardExecutor  - Adding following query: SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9615 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= C.id, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
findbyName::B.auction
alias!
findbyName::B.auction
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.bidder
alias!
findbyName::B.bidder
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::C.email
findbyName::C.email
alias!
registerAttributeAliases() -> attribute= C.email, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
findbyName::C.id
findbyName::C.id
alias!
registerAttributeAliases() -> attribute= C.id, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.auction, B.bidder], person=[C.email, C.id]}, order= [B.auction, B.bidder, C.email, C.id]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B.auction, sourcename= null
getAttributename() -> attributename=C.id, sourcename= null
parsePredicate() -> B.auction==C.id
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.auction,B
buildRename() -> B.bidder,B
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> C.id,C
buildRename() -> C.email,C
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> B.auction
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> B.bidder
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> C.email
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> C.id
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
registerOperator() -> operator_4
9627 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9627 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9628 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@14bb2297 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9628 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9628 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B.auction','bidder','B.bidder','timestamp','B.timestamp','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction','B.bidder','C.email','C.id']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9628 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9635 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9636 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9636 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9636 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9637 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9641 DEBUG RelationalRestructHelper  - removing operator:Select@47918293 OwnerIDs: 5(B.auction) = (C.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9642 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9643 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9644 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9644 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9644 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9647 INFO  transform  - Starting transformation of Top@1967432164 OwnerIDs: 5... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9648 DEBUG transform  - Before transformation: 
TopAO (1967432164) Owner: 5
0 <- 0 MapAO (1893772493) Owner: 5
       0 <- 0 JoinAO (2035801202) Owner: 5 Predicate: (B.auction) = (C.id) initialized = true
              0 <- 0 AccessAO (1790387225) Owner: 5
              1 <- 0 AccessAO (984412970) Owner: 5
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9691 DEBUG ruleengine  - Ruleengine needed 42 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9691 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9692 INFO  transform  - Transformation of Top@1967432164 OwnerIDs: 5 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9692 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9693 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9693 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9693 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9693 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9694 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B.auction','bidder','B.bidder','timestamp','B.timestamp','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction','B.bidder','C.email','C.id']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9694 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9694 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9695 DEBUG ReloadLog  - Query added to log: SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9695 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9696 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9696 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9696 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9697 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9697 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9697 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9697 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9697 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9697 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-34] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9698 INFO  StandardExecutor  - Removing Query 5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9698 DEBUG StandardExecutor  - Removing Ownership 5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9698 INFO  StandardExecutor  - Query 5 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9699 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B.auction','bidder','B.bidder','timestamp','B.timestamp','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction','B.bidder','C.email','C.id']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9699 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9702 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9709 DEBUG AbstractTestComponent  - Sub test "RenameTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9710 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9710 DEBUG AbstractTestComponent  - Tue May 16 13:37:54 CEST 2017Running sub test 13 of 49: "RenameTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9710 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id;
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9711 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9711 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9711 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9711 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id;
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9712 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9713 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9713 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9714 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@ec2bf82 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9714 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9714 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9714 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
findbyName::B.bidder
alias!
findbyName::B.bidder
registerAttributeAliases() -> attribute= auctioneer, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::C.email
findbyName::C.email
alias!
registerAttributeAliases() -> attribute= C.email, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer], person=[C.email]}, order= [auctioneer, C.email]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=id, sourcename= null
parsePredicate() -> B.auction==C.id
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> auctioneer,B
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> C.email,C
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> auctioneer
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> C.email
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
registerOperator() -> operator_4
9727 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9728 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9728 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@52c8295b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9728 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9728 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['email','C.email','timestamp','C.timestamp','id','C.id','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9728 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9740 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9741 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9741 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9743 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9743 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9745 DEBUG RelationalRestructHelper  - removing operator:Select@1128266449 OwnerIDs: 6(B.auction) = (C.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9746 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9746 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9746 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9746 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9746 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9747 INFO  transform  - Starting transformation of Top@1017792343 OwnerIDs: 6... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9747 DEBUG transform  - Before transformation: 
TopAO (1017792343) Owner: 6
0 <- 0 MapAO (1774468680) Owner: 6
       0 <- 0 JoinAO (402978317) Owner: 6 Predicate: (B.auction) = (C.id) initialized = true
              0 <- 0 AccessAO (981487964) Owner: 6
              1 <- 0 AccessAO (1417554340) Owner: 6
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9813 DEBUG ruleengine  - Ruleengine needed 9 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9814 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9814 INFO  transform  - Transformation of Top@1017792343 OwnerIDs: 6 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9815 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9815 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9815 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9815 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9816 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9816 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['email','C.email','timestamp','C.timestamp','id','C.id','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9816 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9818 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9818 DEBUG ReloadLog  - Query added to log: SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9818 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9819 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9819 INFO  StandardExecutor  - Starting query (ID: 6)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9819 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9820 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9822 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9823 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9824 INFO  StandardExecutor  - Query 6 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9824 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 6 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9825 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9825 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9825 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@25243bc1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9826 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9826 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9827 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= C.id, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
findbyName::B.bidder
alias!
findbyName::B.bidder
registerAttributeAliases() -> attribute= auctioneer, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::C.email
findbyName::C.email
alias!
registerAttributeAliases() -> attribute= C.email, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer], person=[C.email]}, order= [auctioneer, C.email]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=C.id, sourcename= null
parsePredicate() -> B.auction==C.id
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> auctioneer,B
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> C.id,C
buildRename() -> C.email,C
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> auctioneer
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> C.email
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
registerOperator() -> operator_4
9868 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9869 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9869 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@bae47a0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9870 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9871 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9872 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9891 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9892 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9893 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9896 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9896 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9899 DEBUG RelationalRestructHelper  - removing operator:Select@237484673 OwnerIDs: 7(B.auction) = (C.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9900 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9904 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9905 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9905 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9906 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9908 INFO  transform  - Starting transformation of Top@987595204 OwnerIDs: 7... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9909 DEBUG transform  - Before transformation: 
TopAO (987595204) Owner: 7
0 <- 0 MapAO (438123546) Owner: 7
       0 <- 0 JoinAO (29774113) Owner: 7 Predicate: (B.auction) = (C.id) initialized = true
              0 <- 0 AccessAO (22668134) Owner: 7
              1 <- 0 AccessAO (1474072872) Owner: 7
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9923 DEBUG ruleengine  - Ruleengine needed 12 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9924 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9925 INFO  transform  - Transformation of Top@987595204 OwnerIDs: 7 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9926 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9927 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9928 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9928 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9928 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9928 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9928 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9929 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9929 DEBUG ReloadLog  - Query added to log: SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9929 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9930 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9931 INFO  StandardExecutor  - Starting query (ID: 7)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9931 INFO  StandardExecutor  - Query 7 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9941 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 7 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9944 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9945 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9946 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id;
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9947 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9947 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9948 DEBUG AbstractTestComponent  - adding 2 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9948 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9948 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9948 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9951 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-35] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9952 INFO  StandardExecutor  - Stopping query (ID: 6).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9952 DEBUG StandardExecutor  - Try to stop query 6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9953 INFO  StandardExecutor  - Query 6 stopped. Execution time 129 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9953 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 6 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9953 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9953 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9953 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9953 INFO  StandardExecutor  - Removing Query 6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9954 DEBUG StandardExecutor  - Removing Ownership 6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9954 INFO  StandardExecutor  - Query 6 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9954 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['email','C.email','timestamp','C.timestamp','id','C.id','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9954 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9954 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-35] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9955 INFO  StandardExecutor  - Stopping query (ID: 7).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9955 DEBUG StandardExecutor  - Try to stop query 7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9955 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9955 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9956 INFO  StandardExecutor  - Query 7 stopped. Execution time 25 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9956 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 7 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9956 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9956 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9956 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9956 INFO  StandardExecutor  - Removing Query 7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9956 DEBUG StandardExecutor  - Removing Ownership 7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9957 INFO  StandardExecutor  - Query 7 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9957 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9957 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9958 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9959 DEBUG AbstractTestComponent  - Sub test "RenameTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9959 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9959 DEBUG AbstractTestComponent  - Tue May 16 13:37:55 CEST 2017Running sub test 14 of 49: "RenameTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9959 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction 
FROM bid AS B1, bid AS B2;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9960 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9960 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9960 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9960 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction 
FROM bid AS B1, bid AS B2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9960 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9961 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9966 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9966 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@25230246 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9966 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9967 DEBUG StandardExecutor  - Adding following query: SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9967 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
findbyName::B1.auction
alias!
findbyName::B1.auction
alias!
registerAttributeAliases() -> attribute= B1.auction, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B1.auction, B2.auction]}, order= [B1.auction, B2.auction]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> B2.auction,B2
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> B2.auction,B2
registerOperator() -> operator_2
getProjectionAttribute() -> B1.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
registerOperator() -> operator_3
9976 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9976 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9976 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@54f5f647 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9976 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9977 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','timestamp','B2.timestamp','bidder','B2.bidder','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = MAP({expressions=['B1.auction','B2.auction']},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9977 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9983 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9983 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9984 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9984 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9984 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9988 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9988 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9988 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9989 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9989 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9989 INFO  transform  - Starting transformation of Top@574077658 OwnerIDs: 8... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9990 DEBUG transform  - Before transformation: 
TopAO (574077658) Owner: 8
0 <- 0 MapAO (2011342562) Owner: 8
       0 <- 0 JoinAO (1460696714) Owner: 8 Predicate: null
              0 <- 0 AccessAO (429804587) Owner: 8
              1 <- 0 AccessAO (115397800) Owner: 8
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10000 DEBUG ruleengine  - Ruleengine needed 9 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10000 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10001 INFO  transform  - Transformation of Top@574077658 OwnerIDs: 8 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10001 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10001 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10002 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10002 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10002 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10002 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','timestamp','B2.timestamp','bidder','B2.bidder','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = MAP({expressions=['B1.auction','B2.auction']},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10003 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10003 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10004 DEBUG ReloadLog  - Query added to log: SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10004 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10005 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10005 INFO  StandardExecutor  - Starting query (ID: 8)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10006 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10006 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10007 INFO  StandardExecutor  - Query 8 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10007 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 8 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10008 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10009 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10009 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction 
FROM bid AS B1, bid AS B2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10009 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10010 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10010 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10011 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10011 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10011 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10011 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-36] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10012 INFO  StandardExecutor  - Stopping query (ID: 8).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10012 DEBUG StandardExecutor  - Try to stop query 8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10013 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10013 INFO  StandardExecutor  - Query 8 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10014 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 8 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10014 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10014 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10014 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10015 INFO  StandardExecutor  - Removing Query 8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10015 DEBUG StandardExecutor  - Removing Ownership 8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10015 INFO  StandardExecutor  - Query 8 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10015 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','timestamp','B2.timestamp','bidder','B2.bidder','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = MAP({expressions=['B1.auction','B2.auction']},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10015 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10016 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10016 DEBUG AbstractTestComponent  - Sub test "RenameTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10017 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10017 DEBUG AbstractTestComponent  - Tue May 16 13:37:55 CEST 2017Running sub test 15 of 49: "RenameTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10017 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10017 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10017 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10017 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10017 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10018 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10018 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10018 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10019 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@53cdecf6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10019 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10019 DEBUG StandardExecutor  - Adding following query: SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10019 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B1.bidder, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
registerAttributeAliases() -> attribute= B2.bidder, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B1.auction
alias!
findbyName::B1.auction
alias!
registerAttributeAliases() -> attribute= B1.auction, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B1.auction, B2.auction]}, order= [B1.auction, B2.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B1.bidder, sourcename= null
getAttributename() -> attributename=B2.bidder, sourcename= null
parsePredicate() -> B1.bidder!=B2.bidder
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> B2.auction,B2
buildRename() -> B1.bidder,B1
buildRename() -> B2.bidder,B2
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> B2.auction,B2
buildRename() -> B1.bidder,B1
buildRename() -> B2.bidder,B2
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> B1.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_4
10044 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10044 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10044 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@420745d7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10045 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10045 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B1.auction','bidder','B1.bidder','timestamp','B1.timestamp','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = SELECT({predicate='B1.bidder!=B2.bidder'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B1.auction','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10045 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10051 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10052 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10052 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10052 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10053 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10054 DEBUG RelationalRestructHelper  - removing operator:Select@889928215 OwnerIDs: 9(B1.bidder) != (B2.bidder) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10055 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10055 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10055 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10056 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10056 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10056 INFO  transform  - Starting transformation of Top@1736458419 OwnerIDs: 9... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10057 DEBUG transform  - Before transformation: 
TopAO (1736458419) Owner: 9
0 <- 0 MapAO (401891515) Owner: 9
       0 <- 0 JoinAO (1688310330) Owner: 9 Predicate: (B1.bidder) != (B2.bidder) initialized = true
              0 <- 0 AccessAO (2099932844) Owner: 9
              1 <- 0 AccessAO (415906914) Owner: 9
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10064 DEBUG ruleengine  - Ruleengine needed 7 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10065 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10065 INFO  transform  - Transformation of Top@1736458419 OwnerIDs: 9 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10065 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10066 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10066 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10066 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10066 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10066 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B1.auction','bidder','B1.bidder','timestamp','B1.timestamp','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = SELECT({predicate='B1.bidder!=B2.bidder'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B1.auction','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10066 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10067 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10067 DEBUG ReloadLog  - Query added to log: SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10067 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10069 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10069 INFO  StandardExecutor  - Starting query (ID: 9)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10069 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10070 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10073 INFO  StandardExecutor  - Query 9 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10085 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 9 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10090 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10094 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10094 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10094 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10095 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10096 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10096 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10096 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10096 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10097 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-37] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10097 INFO  StandardExecutor  - Stopping query (ID: 9).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10098 DEBUG StandardExecutor  - Try to stop query 9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10098 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10099 INFO  StandardExecutor  - Query 9 stopped. Execution time 26 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10099 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 9 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10099 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10100 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10100 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10100 INFO  StandardExecutor  - Removing Query 9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10100 DEBUG StandardExecutor  - Removing Ownership 9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10100 INFO  StandardExecutor  - Query 9 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10100 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B1.auction','bidder','B1.bidder','timestamp','B1.timestamp','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = SELECT({predicate='B1.bidder!=B2.bidder'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B1.auction','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10101 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10102 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10103 DEBUG AbstractTestComponent  - Sub test "RenameTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10103 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10104 DEBUG AbstractTestComponent  - Tue May 16 13:37:55 CEST 2017Running sub test 16 of 49: "RenameTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10104 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10104 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10104 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10104 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10104 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10105 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10106 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10107 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10107 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3359c978 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10107 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10107 DEBUG StandardExecutor  - Adding following query: SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10109 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B1.auction, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
registerAttributeAliases() -> attribute= B2.bidder, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B1.auction
alias!
findbyName::B1.auction
alias!
registerAttributeAliases() -> attribute= auctioneer, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer, B2.auction]}, order= [auctioneer, B2.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B1.auction, sourcename= null
getAttributename() -> attributename=B2.bidder, sourcename= null
parsePredicate() -> B1.auction!=B2.bidder
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> auctioneer,B1
buildRename() -> B2.auction,B2
buildRename() -> B2.bidder,B2
registerOperator() -> operator_1
registerOperator() -> operator_2
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> auctioneer,B1
buildRename() -> B2.auction,B2
buildRename() -> B2.bidder,B2
registerOperator() -> operator_3
registerOperator() -> operator_4
getProjectionAttribute() -> auctioneer
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_5
10132 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10132 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10132 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6f330eb9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10132 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10132 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','auctioneer','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_4 = SELECT({predicate='B1.auction!=B2.bidder'},JOIN(JOIN(operator_1,operator_2),operator_3))
operator_5 = MAP({expressions=['auctioneer','B2.auction']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10133 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10152 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10152 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10152 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10154 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10154 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10157 DEBUG RelationalRestructHelper  - removing operator:Select@2042979183 OwnerIDs: 10(B1.auction) != (B2.bidder) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10158 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10159 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10159 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10159 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10160 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10160 INFO  transform  - Starting transformation of Top@1060928475 OwnerIDs: 10... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10160 DEBUG transform  - Before transformation: 
TopAO (1060928475) Owner: 10
0 <- 0 MapAO (1164622694) Owner: 10
       0 <- 0 JoinAO (44278425) Owner: 10 Predicate: (B1.auction) != (B2.bidder) initialized = true
              0 <- 0 JoinAO (2107706203) Owner: 10 Predicate: null
                     0 <- 0 AccessAO (564086167) Owner: 10
                     1 <- 0 AccessAO (834562889) Owner: 10
              1 <- 0 AccessAO (773238925) Owner: 10
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10177 DEBUG ruleengine  - Ruleengine needed 15 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10177 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10177 INFO  transform  - Transformation of Top@1060928475 OwnerIDs: 10 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10178 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10178 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10178 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10178 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10178 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10178 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','auctioneer','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_4 = SELECT({predicate='B1.auction!=B2.bidder'},JOIN(JOIN(operator_1,operator_2),operator_3))
operator_5 = MAP({expressions=['auctioneer','B2.auction']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10179 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10179 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10180 DEBUG ReloadLog  - Query added to log: SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10180 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10180 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10180 INFO  StandardExecutor  - Starting query (ID: 10)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10181 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10181 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10181 INFO  StandardExecutor  - Query 10 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10182 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 10 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10182 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10182 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10183 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10183 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10183 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10184 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10184 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10184 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10184 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10184 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-38] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10185 INFO  StandardExecutor  - Stopping query (ID: 10).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10185 DEBUG StandardExecutor  - Try to stop query 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10186 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10187 INFO  StandardExecutor  - Query 10 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10187 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 10 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10187 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10187 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10187 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10187 INFO  StandardExecutor  - Removing Query 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10187 DEBUG StandardExecutor  - Removing Ownership 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10188 INFO  StandardExecutor  - Query 10 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10188 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','auctioneer','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_4 = SELECT({predicate='B1.auction!=B2.bidder'},JOIN(JOIN(operator_1,operator_2),operator_3))
operator_5 = MAP({expressions=['auctioneer','B2.auction']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10188 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10188 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10191 DEBUG AbstractTestComponent  - Sub test "RenameTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10191 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10191 DEBUG AbstractTestComponent  - Tue May 16 13:37:55 CEST 2017Running sub test 17 of 49: "RenameTest6.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10191 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10192 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10192 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10192 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10192 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10192 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10193 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10193 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10193 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7ea4d397 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10193 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10193 DEBUG StandardExecutor  - Adding following query: SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10194 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B1.bidder
alias!
findbyName::B1.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer1, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.bidder
alias!
findbyName::B2.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer2, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer1, auctioneer2, B2.auction]}, order= [auctioneer1, auctioneer2, B2.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auctioneer1, sourcename= null
getAttributename() -> attributename=B2.auction, sourcename= null
parsePredicate() -> auctioneer1==B2.auction
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B2.auction,B2
buildRename() -> auctioneer1,B1
buildRename() -> auctioneer2,B2
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> B2.auction,B2
buildRename() -> auctioneer1,B1
buildRename() -> auctioneer2,B2
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> auctioneer1
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, P.state=P, B1.auction=B1, auctioneer1=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer2
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, P.state=P, B1.auction=B1, auctioneer1=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, P.state=P, B1.auction=B1, auctioneer1=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_4
10220 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10220 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10220 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4a325eb9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10220 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10220 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer1','auctioneer2','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10221 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10286 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10287 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10287 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10288 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10288 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10290 DEBUG RelationalRestructHelper  - removing operator:Select@1157199772 OwnerIDs: 11(auctioneer1) = (B2.auction) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10291 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10291 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10291 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10292 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10292 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10292 INFO  transform  - Starting transformation of Top@75356024 OwnerIDs: 11... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10293 DEBUG transform  - Before transformation: 
TopAO (75356024) Owner: 11
0 <- 0 MapAO (357653585) Owner: 11
       0 <- 0 JoinAO (916958177) Owner: 11 Predicate: (auctioneer1) = (B2.auction) initialized = true
              0 <- 0 TimeWindowAO (1688770224) Owner: 11
                     0 <- 0 AccessAO (235162442) Owner: 11
              1 <- 0 TimeWindowAO (296234255) Owner: 11
                     0 <- 0 AccessAO (450589816) Owner: 11
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10314 DEBUG ruleengine  - Ruleengine needed 20 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10314 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10315 INFO  transform  - Transformation of Top@75356024 OwnerIDs: 11 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10315 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10316 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10316 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10317 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10317 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10317 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer1','auctioneer2','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10317 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10318 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10318 DEBUG ReloadLog  - Query added to log: SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10318 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10319 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10319 INFO  StandardExecutor  - Starting query (ID: 11)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10319 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10319 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10321 INFO  StandardExecutor  - Query 11 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10321 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 11 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10322 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10322 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10322 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10322 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10323 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10323 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10324 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10324 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10324 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10325 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-39] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10325 INFO  StandardExecutor  - Stopping query (ID: 11).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10325 DEBUG StandardExecutor  - Try to stop query 11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10326 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10327 INFO  StandardExecutor  - Query 11 stopped. Execution time 7 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10327 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 11 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10327 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10328 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10328 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10328 INFO  StandardExecutor  - Removing Query 11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10328 DEBUG StandardExecutor  - Removing Ownership 11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10329 INFO  StandardExecutor  - Query 11 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10329 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer1','auctioneer2','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10329 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10331 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10331 DEBUG AbstractTestComponent  - Sub test "RenameTest6.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10332 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10332 DEBUG AbstractTestComponent  - Tue May 16 13:37:55 CEST 2017Running sub test 18 of 49: "RenameTest7.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10332 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10332 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10332 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10333 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10333 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10333 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10335 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10335 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10335 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@537b32ef - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10335 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10336 DEBUG StandardExecutor  - Adding following query: SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10336 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B1.bidder
alias!
findbyName::B1.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer1, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B1.bidder
alias!
findbyName::B1.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer11, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B1.bidder
alias!
findbyName::B1.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer111, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.bidder
alias!
findbyName::B2.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer2, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B2.bidder
alias!
findbyName::B2.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer22, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer1, auctioneer11, auctioneer111, auctioneer2, auctioneer22, B2.auction]}, order= [auctioneer1, auctioneer11, auctioneer111, auctioneer2, auctioneer22, B2.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auctioneer1, sourcename= null
getAttributename() -> attributename=B2.auction, sourcename= null
parsePredicate() -> auctioneer1==B2.auction
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B2.auction,B2
buildRename() -> auctioneer1,B1
buildRename() -> auctioneer11,B1
buildRename() -> auctioneer111,B1
buildRename() -> auctioneer2,B2
buildRename() -> auctioneer22,B2
registerOperator() -> operator_1
registerOperator() -> operator_2
registerOperator() -> operator_3
buildJoin() --> SimpleSource
buildRename() -> B2.auction,B2
buildRename() -> auctioneer1,B1
buildRename() -> auctioneer11,B1
buildRename() -> auctioneer111,B1
buildRename() -> auctioneer2,B2
buildRename() -> auctioneer22,B2
registerOperator() -> operator_4
registerOperator() -> operator_5
registerOperator() -> operator_6
getProjectionAttribute() -> auctioneer1
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer11
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer111
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer2
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer22
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_7
10377 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10378 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10378 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6f815e7f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10378 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10378 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['bidder','auctioneer11','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = RENAME({aliases=['bidder','auctioneer111','timestamp','bid.timestamp#2','auction','bid.auction#2','datetime','bid.datetime#2','price','bid.price#2'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_5 = RENAME({aliases=['bidder','auctioneer22','timestamp','bid.timestamp#3','auction','bid.auction#3','datetime','bid.datetime#3','price','bid.price#3'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_6 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(JOIN(operator_1,JOIN(operator_2,operator_3)),JOIN(operator_4,operator_5)))
operator_7 = MAP({expressions=['auctioneer1','auctioneer11','auctioneer111','auctioneer2','auctioneer22','B2.auction']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10379 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10393 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10394 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10396 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10397 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10397 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10410 DEBUG RelationalRestructHelper  - removing operator:Select@1360533184 OwnerIDs: 12(auctioneer1) = (B2.auction) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10412 DEBUG ruleengine  - Ruleengine needed 10 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10412 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10412 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10413 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10413 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10413 INFO  transform  - Starting transformation of Top@1120670624 OwnerIDs: 12... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10414 DEBUG transform  - Before transformation: 
TopAO (1120670624) Owner: 12
0 <- 0 MapAO (855501888) Owner: 12
       0 <- 0 JoinAO (1746117425) Owner: 12 Predicate: (auctioneer1) = (B2.auction) initialized = true
              0 <- 0 JoinAO (467146800) Owner: 12 Predicate: null
                     0 <- 0 TimeWindowAO (967531000) Owner: 12
                            0 <- 0 AccessAO (1693003105) Owner: 12
                     1 <- 0 JoinAO (286658790) Owner: 12 Predicate: null
                            0 <- 0 TimeWindowAO (1255445356) Owner: 12
                                   0 <- 0 AccessAO (701724503) Owner: 12
                            1 <- 0 TimeWindowAO (83674409) Owner: 12
                                   0 <- 0 AccessAO (634156144) Owner: 12
              1 <- 0 JoinAO (1273879638) Owner: 12 Predicate: null
                     0 <- 0 TimeWindowAO (2041996211) Owner: 12
                            0 <- 0 AccessAO (461448225) Owner: 12
                     1 <- 0 TimeWindowAO (1562950869) Owner: 12
                            0 <- 0 AccessAO (2021835850) Owner: 12
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10459 DEBUG ruleengine  - Ruleengine needed 43 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10460 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10460 INFO  transform  - Transformation of Top@1120670624 OwnerIDs: 12 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10464 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10479 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10480 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10480 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10480 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10480 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['bidder','auctioneer11','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = RENAME({aliases=['bidder','auctioneer111','timestamp','bid.timestamp#2','auction','bid.auction#2','datetime','bid.datetime#2','price','bid.price#2'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_5 = RENAME({aliases=['bidder','auctioneer22','timestamp','bid.timestamp#3','auction','bid.auction#3','datetime','bid.datetime#3','price','bid.price#3'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_6 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(JOIN(operator_1,JOIN(operator_2,operator_3)),JOIN(operator_4,operator_5)))
operator_7 = MAP({expressions=['auctioneer1','auctioneer11','auctioneer111','auctioneer2','auctioneer22','B2.auction']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10480 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10481 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10482 DEBUG ReloadLog  - Query added to log: SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10482 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10482 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10483 INFO  StandardExecutor  - Starting query (ID: 12)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10483 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10483 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10485 INFO  StandardExecutor  - Query 12 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10486 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 12 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10486 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10486 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10486 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10486 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10487 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10488 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10488 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10488 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10488 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10489 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-40] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10489 INFO  StandardExecutor  - Stopping query (ID: 12).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10489 DEBUG StandardExecutor  - Try to stop query 12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10490 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10491 INFO  StandardExecutor  - Query 12 stopped. Execution time 7 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10492 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 12 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10492 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10493 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10493 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10493 INFO  StandardExecutor  - Removing Query 12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10493 DEBUG StandardExecutor  - Removing Ownership 12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10494 INFO  StandardExecutor  - Query 12 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10494 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['bidder','auctioneer11','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = RENAME({aliases=['bidder','auctioneer111','timestamp','bid.timestamp#2','auction','bid.auction#2','datetime','bid.datetime#2','price','bid.price#2'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_5 = RENAME({aliases=['bidder','auctioneer22','timestamp','bid.timestamp#3','auction','bid.auction#3','datetime','bid.datetime#3','price','bid.price#3'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_6 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(JOIN(operator_1,JOIN(operator_2,operator_3)),JOIN(operator_4,operator_5)))
operator_7 = MAP({expressions=['auctioneer1','auctioneer11','auctioneer111','auctioneer2','auctioneer22','B2.auction']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10494 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10502 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10513 DEBUG AbstractTestComponent  - Sub test "RenameTest7.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10513 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10513 DEBUG AbstractTestComponent  - Tue May 16 13:37:55 CEST 2017Running sub test 19 of 49: "SelectAggregationTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10513 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10514 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10514 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10514 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10514 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10515 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10515 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10515 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10515 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4a60ee36 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10516 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10516 DEBUG StandardExecutor  - Adding following query: SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10516 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [auctionCount]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@4dd94a58 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@2f4919b0 (operators: null)
getAttributename() -> attributename=auction, sourcename= null
10534 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10534 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
getAttributename() -> attributename=auction, sourcename= null
getDataTypeFrom() -> attribute= bid.auction, attributename= bid.auction
getAttributename() -> attributename=auction, sourcename= null
registerOperator() -> operator_1
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_1
[auctionCount]
[auctionCount]
getProjectionAttribute() -> auctionCount
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_2
10539 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10539 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10539 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@75b21c3b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10539 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10539 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({aggregations=[['COUNT','bid.auction','auctionCount','Integer']],group_by=['bid.auction']},bid)
operator_2 = MAP({expressions=['auctionCount']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10540 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10543 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10544 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10545 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10545 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10545 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10546 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10546 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10547 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10547 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10547 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10547 INFO  transform  - Starting transformation of Top@1080167822 OwnerIDs: 13... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10548 DEBUG transform  - Before transformation: 
TopAO (1080167822) Owner: 13
0 <- 0 MapAO (943666520) Owner: 13
       0 <- 0 AggregateAO (1236303587) Owner: 13
              0 <- 0 AccessAO (892231982) Owner: 13
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10572 DEBUG ruleengine  - Ruleengine needed 23 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10572 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10573 INFO  transform  - Transformation of Top@1080167822 OwnerIDs: 13 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10573 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10574 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10574 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10574 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10574 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10574 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({aggregations=[['COUNT','bid.auction','auctionCount','Integer']],group_by=['bid.auction']},bid)
operator_2 = MAP({expressions=['auctionCount']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10575 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10575 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10576 DEBUG ReloadLog  - Query added to log: SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10576 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10576 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10577 INFO  StandardExecutor  - Starting query (ID: 13)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10577 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10577 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10578 INFO  StandardExecutor  - Query 13 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10578 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 13 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10578 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10579 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10579 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10579 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10580 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10580 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10580 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10580 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10580 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10581 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-41] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10581 INFO  StandardExecutor  - Stopping query (ID: 13).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10581 DEBUG StandardExecutor  - Try to stop query 13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10582 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10582 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
10582 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
10583 INFO  StandardExecutor  - Query 13 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10583 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 13 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10583 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10583 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10584 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10584 INFO  StandardExecutor  - Removing Query 13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10584 DEBUG StandardExecutor  - Removing Ownership 13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10584 INFO  StandardExecutor  - Query 13 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10584 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({aggregations=[['COUNT','bid.auction','auctionCount','Integer']],group_by=['bid.auction']},bid)
operator_2 = MAP({expressions=['auctionCount']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10584 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10585 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10585 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10585 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10585 DEBUG AbstractTestComponent  - Tue May 16 13:37:55 CEST 2017Running sub test 20 of 49: "SelectAggregationTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10586 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10586 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10586 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10586 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10586 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10587 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10588 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10588 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10588 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@667e34b1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10589 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10589 DEBUG StandardExecutor  - Adding following query: SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10590 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auctioneer, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer, auction]}, order= [auctioneer, Counter]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@1efdcd5 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@1623bbe5 (operators: null)
getAttributename() -> attributename=auction, sourcename= null
10594 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10594 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
buildRename() -> auctioneer,bid
registerOperator() -> operator_1
getAttributename() -> attributename=auction, sourcename= null
getDataTypeFrom() -> attribute= bid.auction, attributename= bid.auction
registerOperator() -> operator_2
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_2
[auctioneer, Counter]
[Counter]
buildJoin() --> SimpleSource
buildRename() -> auctioneer,bid
registerOperator() -> operator_3
groupByyy
getProjectionAttribute() -> auctioneer
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> Counter
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_4
10596 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10596 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10596 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7af1cd63 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10596 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10596 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({aggregations=[['COUNT','bid.auction','Counter','Integer']]},operator_1)
operator_3 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['auctioneer','Counter']},JOIN(operator_2,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10597 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10602 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10602 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10602 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10603 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10603 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10604 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10604 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10604 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10604 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10605 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10605 INFO  transform  - Starting transformation of Top@2146613458 OwnerIDs: 14... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10605 DEBUG transform  - Before transformation: 
TopAO (2146613458) Owner: 14
0 <- 0 MapAO (115086468) Owner: 14
       0 <- 0 JoinAO (1855112877) Owner: 14 Predicate: null
              0 <- 0 AggregateAO (800456240) Owner: 14
                     0 <- 0 TimeWindowAO (1164699452) Owner: 14
                            0 <- 0 AccessAO (594916129) Owner: 14
              1 <- 0 TimeWindowAO (1537912396) Owner: 14
                     0 <- 0 AccessAO (1533972343) Owner: 14
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10613 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10614 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10614 INFO  transform  - Transformation of Top@2146613458 OwnerIDs: 14 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10614 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10615 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10615 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10616 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10616 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10616 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({aggregations=[['COUNT','bid.auction','Counter','Integer']]},operator_1)
operator_3 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['auctioneer','Counter']},JOIN(operator_2,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10616 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10617 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10617 DEBUG ReloadLog  - Query added to log: SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10618 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10620 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10620 INFO  StandardExecutor  - Starting query (ID: 14)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10620 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10621 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10621 INFO  StandardExecutor  - Query 14 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10621 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 14 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10623 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10623 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10623 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10623 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10624 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10624 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10624 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10625 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10625 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10625 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-42] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10625 INFO  StandardExecutor  - Stopping query (ID: 14).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10625 DEBUG StandardExecutor  - Try to stop query 14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10626 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10626 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
10626 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
10627 INFO  StandardExecutor  - Query 14 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10627 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 14 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10627 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10627 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10627 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10627 INFO  StandardExecutor  - Removing Query 14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10628 DEBUG StandardExecutor  - Removing Ownership 14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10628 INFO  StandardExecutor  - Query 14 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10628 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({aggregations=[['COUNT','bid.auction','Counter','Integer']]},operator_1)
operator_3 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['auctioneer','Counter']},JOIN(operator_2,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10628 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10629 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10629 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10629 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10629 DEBUG AbstractTestComponent  - Tue May 16 13:37:55 CEST 2017Running sub test 21 of 49: "SelectAggregationTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10629 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS Counter, city 
FROM bid , person
WHERE city != 'New York' 
HAVING Counter > 1000;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10629 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10631 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10631 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10631 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS Counter, city 
FROM bid , person
WHERE city != 'New York' 
HAVING Counter > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10631 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10632 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10632 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10633 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3a60c416 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10633 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10633 DEBUG StandardExecutor  - Adding following query: SELECT COUNT(auction) AS Counter, city
FROM bid , person
WHERE city != 'New York'
HAVING Counter > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10633 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= city, realSourcename= person, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction], person=[city]}, order= [Counter, person.city]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@6b410923 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@57bd2029 (operators: null)
getAttributename() -> attributename=auction, sourcename= null
10641 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10646 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getAttributename() -> attributename=auction, sourcename= null
getDataTypeFrom() -> attribute= bid.auction, attributename= bid.auction
registerOperator() -> operator_1
parsePredicate(List<Expressions>)
getAttributename() -> attributename=Counter, sourcename= null
parsePredicate()x -> Counter>1000&&
getAttributename() -> attributename=city, sourcename= null
parsePredicate() -> Counter>1000&&person.city!="New York"
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_1
[Counter, person.city]
[Counter]
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
groupByyy
registerOperator() -> operator_2
getProjectionAttribute() -> Counter
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> person.city
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_3
10651 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10651 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10651 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@203dd56b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10651 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10652 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({aggregations=[['COUNT','bid.auction','Counter','Integer']]},JOIN(bid,person))
operator_2 = SELECT({predicate='Counter>1000&&person.city!="NewYork"'},JOIN(operator_1,JOIN(bid,person)))
operator_3 = MAP({expressions=['Counter','person.city']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10652 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10660 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10660 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10660 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10661 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10662 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10683 DEBUG RelationalRestructHelper  - removing operator:Select@704869156 OwnerIDs: 15(Counter) > (1000) initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10688 DEBUG RelationalRestructHelper  - removing operator:Select@824357143 OwnerIDs: 15(person.city) != ("NewYork") initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10690 DEBUG RelationalRestructHelper  - removing operator:Select@1788034018 OwnerIDs: (person.city) != ("NewYork") initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10699 DEBUG ruleengine  - Ruleengine needed 20 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10699 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10700 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10700 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10700 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10701 INFO  transform  - Starting transformation of Top@2083154356 OwnerIDs: 15... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10701 DEBUG transform  - Before transformation: 
TopAO (2083154356) Owner: 15
0 <- 0 MapAO (10885570) Owner: 15
       0 <- 0 JoinAO (1687087217) Owner: 15 Predicate: null
              0 <- 0 SelectAO (928734079) Owner: 
                     0 <- 0 AggregateAO (403960809) Owner: 15
                            0 <- 0 JoinAO (684429600) Owner: 15 Predicate: null
                                   0 <- 0 AccessAO (991242536) Owner: 15
                                   1 <- 0 AccessAO (1450712470) Owner: 15
              1 <- 0 JoinAO (1366499339) Owner: 15 Predicate: null
                     0 <- 0 AccessAO (633727380) Owner: 15
                     1 <- 0 SelectAO (931911789) Owner: 
                            0 <- 0 AccessAO (562685863) Owner: 15
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10778 DEBUG ruleengine  - Ruleengine needed 71 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10778 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10779 INFO  transform  - Transformation of Top@2083154356 OwnerIDs: 15 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10779 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10780 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10780 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10780 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10781 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10781 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({aggregations=[['COUNT','bid.auction','Counter','Integer']]},JOIN(bid,person))
operator_2 = SELECT({predicate='Counter>1000&&person.city!="NewYork"'},JOIN(operator_1,JOIN(bid,person)))
operator_3 = MAP({expressions=['Counter','person.city']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10787 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10790 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10792 DEBUG ReloadLog  - Query added to log: SELECT COUNT(auction) AS Counter, city
FROM bid , person
WHERE city != 'New York'
HAVING Counter > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10792 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10793 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10794 INFO  StandardExecutor  - Starting query (ID: 15)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10794 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10794 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10796 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10796 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10801 INFO  StandardExecutor  - Query 15 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10801 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 15 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10802 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10802 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10803 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS Counter, city 
FROM bid , person
WHERE city != 'New York' 
HAVING Counter > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10803 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10805 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10806 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10806 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10814 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10820 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10867 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-43] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10868 INFO  StandardExecutor  - Stopping query (ID: 15).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10868 DEBUG StandardExecutor  - Try to stop query 15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10870 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
10870 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
10870 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10871 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10876 INFO  StandardExecutor  - Query 15 stopped. Execution time 76 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10877 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 15 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10877 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10877 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10877 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10877 INFO  StandardExecutor  - Removing Query 15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10878 DEBUG StandardExecutor  - Removing Ownership 15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10878 INFO  StandardExecutor  - Query 15 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10878 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({aggregations=[['COUNT','bid.auction','Counter','Integer']]},JOIN(bid,person))
operator_2 = SELECT({predicate='Counter>1000&&person.city!="NewYork"'},JOIN(operator_1,JOIN(bid,person)))
operator_3 = MAP({expressions=['Counter','person.city']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10878 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10879 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10887 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10888 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10888 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 22 of 49: "SelectAggregationTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10888 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT COUNT(*) AS count FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10889 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10889 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10889 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10890 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT COUNT(*) AS count FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10890 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10890 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10891 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10891 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6ac97b84 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10891 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10891 DEBUG StandardExecutor  - Adding following query: SELECT COUNT(*) AS count FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10892 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
getSelectedAttributes() -> map= {}, order= [count]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@4a699efa (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.StarExpressionImpl@38499e48 (operators: null)
buildJoin() --> SimpleSource
registerOperator() -> operator_1
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_1
[count]
[count]
getProjectionAttribute() -> count
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_2
10927 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10928 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10929 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4905c46b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10929 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10929 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({aggregations=[['COUNT','*','count']]},bid)
operator_2 = MAP({expressions=['count']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10929 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10934 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10934 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10934 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10935 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10935 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10937 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10937 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10938 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10938 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10938 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10939 INFO  transform  - Starting transformation of Top@1472036907 OwnerIDs: 16... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10939 DEBUG transform  - Before transformation: 
TopAO (1472036907) Owner: 16
0 <- 0 MapAO (1555793073) Owner: 16
       0 <- 0 AggregateAO (46627301) Owner: 16
              0 <- 0 AccessAO (1787083818) Owner: 16
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10944 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10946 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10947 INFO  transform  - Transformation of Top@1472036907 OwnerIDs: 16 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10947 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10948 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10948 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10948 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10948 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10949 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({aggregations=[['COUNT','*','count']]},bid)
operator_2 = MAP({expressions=['count']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10949 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10950 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10950 DEBUG ReloadLog  - Query added to log: SELECT COUNT(*) AS count FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10950 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10951 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10951 INFO  StandardExecutor  - Starting query (ID: 16)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10952 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10952 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10954 INFO  StandardExecutor  - Query 16 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10954 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 16 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10955 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10955 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10955 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT COUNT(*) AS count FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10955 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10957 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10957 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10957 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10958 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10958 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10959 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-44] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10960 INFO  StandardExecutor  - Stopping query (ID: 16).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10960 DEBUG StandardExecutor  - Try to stop query 16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10960 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10960 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
10961 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
10961 INFO  StandardExecutor  - Query 16 stopped. Execution time 7 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10961 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 16 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10961 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10961 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10961 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10962 INFO  StandardExecutor  - Removing Query 16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10962 DEBUG StandardExecutor  - Removing Ownership 16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10962 INFO  StandardExecutor  - Query 16 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10962 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({aggregations=[['COUNT','*','count']]},bid)
operator_2 = MAP({expressions=['count']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10962 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10964 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10964 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10965 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10965 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 23 of 49: "SelectAggregationTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10965 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT auction, AVG(auction) AS auctionAVG 
FROM bid 
GROUP BY auction
HAVING auctionAVG > 150
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10965 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10965 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10965 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10965 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT auction, AVG(auction) AS auctionAVG 
FROM bid 
GROUP BY auction
HAVING auctionAVG > 150
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10966 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10967 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10967 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10968 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6ce90bc5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10969 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10972 DEBUG StandardExecutor  - Adding following query: SELECT auction, AVG(auction) AS auctionAVG
FROM bid
GROUP BY auction
HAVING auctionAVG > 150 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10972 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [bid.auction, auctionAVG]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@6f8f8a80 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@4b1c0397 (operators: null)
getAttributename() -> attributename=auction, sourcename= null
10979 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10980 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10980 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
getAttributename() -> attributename=auction, sourcename= null
getDataTypeFrom() -> attribute= bid.auction, attributename= bid.auction
getAttributename() -> attributename=auction, sourcename= null
registerOperator() -> operator_1
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auctionAVG, sourcename= null
parsePredicate() -> auctionAVG>150
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_1
[bid.auction, auctionAVG]
[auctionAVG]
buildJoin() --> SimpleSource
groupByyy
registerOperator() -> operator_2
getProjectionAttribute() -> bid.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctionAVG
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_3
10983 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10984 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10984 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@72805168 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10984 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10984 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({aggregations=[['AVG','bid.auction','auctionAVG','Integer']],group_by=['bid.auction']},bid)
operator_2 = SELECT({predicate='auctionAVG>150'},JOIN(RENAME({aliases=['auction','auction_groupAttribute#0'],pairs='true'},operator_1),bid))
operator_3 = MAP({expressions=['bid.auction','auctionAVG']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10984 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10997 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10997 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10997 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10998 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10998 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10999 DEBUG RelationalRestructHelper  - removing operator:Select@1149388444 OwnerIDs: 17(auctionAVG) > (150) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
11001 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11002 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11003 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11003 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11003 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11004 INFO  transform  - Starting transformation of Top@1564078808 OwnerIDs: 17... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11004 DEBUG transform  - Before transformation: 
TopAO (1564078808) Owner: 17
0 <- 0 MapAO (1792473683) Owner: 17
       0 <- 0 JoinAO (1441410416) Owner: 17 Predicate: null
              0 <- 0 SelectAO (99042020) Owner: 
                     0 <- 0 AggregateAO (391827378) Owner: 17
                            0 <- 0 AccessAO (1241758568) Owner: 17
              1 <- 0 AccessAO (1317441269) Owner: 17
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11021 DEBUG ruleengine  - Ruleengine needed 16 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11022 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11022 INFO  transform  - Transformation of Top@1564078808 OwnerIDs: 17 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11023 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11026 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11026 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11028 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11029 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11029 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({aggregations=[['AVG','bid.auction','auctionAVG','Integer']],group_by=['bid.auction']},bid)
operator_2 = SELECT({predicate='auctionAVG>150'},JOIN(RENAME({aliases=['auction','auction_groupAttribute#0'],pairs='true'},operator_1),bid))
operator_3 = MAP({expressions=['bid.auction','auctionAVG']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11030 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11031 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11032 DEBUG ReloadLog  - Query added to log: SELECT auction, AVG(auction) AS auctionAVG
FROM bid
GROUP BY auction
HAVING auctionAVG > 150 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11032 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11034 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11034 INFO  StandardExecutor  - Starting query (ID: 17)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
11035 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
11035 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
11037 INFO  StandardExecutor  - Query 17 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
11037 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 17 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
11037 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
11037 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
11038 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT auction, AVG(auction) AS auctionAVG 
FROM bid 
GROUP BY auction
HAVING auctionAVG > 150
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11038 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11039 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11039 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11039 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11039 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11039 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11040 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-45] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11040 INFO  StandardExecutor  - Stopping query (ID: 17).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
11040 DEBUG StandardExecutor  - Try to stop query 17 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
11040 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
11041 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
11041 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
11042 INFO  StandardExecutor  - Query 17 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
11042 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 17 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
11042 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
11042 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
11042 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
11043 INFO  StandardExecutor  - Removing Query 17 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11043 DEBUG StandardExecutor  - Removing Ownership 17 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11043 INFO  StandardExecutor  - Query 17 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11043 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({aggregations=[['AVG','bid.auction','auctionAVG','Integer']],group_by=['bid.auction']},bid)
operator_2 = SELECT({predicate='auctionAVG>150'},JOIN(RENAME({aliases=['auction','auction_groupAttribute#0'],pairs='true'},operator_1),bid))
operator_3 = MAP({expressions=['bid.auction','auctionAVG']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11043 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11044 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11045 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11045 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11045 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 24 of 49: "SelectAllTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11045 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11045 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11045 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11045 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11046 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11046 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11047 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11047 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11047 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@189b5fb1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11047 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11047 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11048 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.bidder
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.datetime
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.price
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_1
11055 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11055 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11056 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@f973499 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11056 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11056 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11057 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11074 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11075 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11075 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11078 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11078 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11079 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11079 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11079 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11080 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11080 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11080 INFO  transform  - Starting transformation of Top@716972621 OwnerIDs: 18... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11080 DEBUG transform  - Before transformation: 
TopAO (716972621) Owner: 18
0 <- 0 MapAO (332234405) Owner: 18
       0 <- 0 AccessAO (271422148) Owner: 18
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11083 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11083 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11086 INFO  transform  - Transformation of Top@716972621 OwnerIDs: 18 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11087 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11088 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11088 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11088 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11089 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11091 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11091 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11092 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11092 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11093 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11094 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11094 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11094 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11095 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11096 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11096 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11096 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11096 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11097 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-46] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11097 INFO  StandardExecutor  - Removing Query 18 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11097 DEBUG StandardExecutor  - Removing Ownership 18 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11097 INFO  StandardExecutor  - Query 18 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11097 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11097 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11098 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11098 DEBUG AbstractTestComponent  - Sub test "SelectAllTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11098 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11099 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 25 of 49: "SelectAllTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11099 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT * FROM bid, person, auction;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11099 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11099 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11099 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11099 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT * FROM bid, person, auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11099 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11100 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11101 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11101 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@79767781 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11101 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11101 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid, person, auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11101 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
registerOperator() -> operator_1
11109 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11109 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11110 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@245a060f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11110 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11110 DEBUG StandardExecutor  - Adding following query: operator_1 = JOIN(bid,JOIN(person,auction))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11110 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11112 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11113 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11113 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11114 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11114 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11116 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11117 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11117 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11117 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11117 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11118 INFO  transform  - Starting transformation of Top@1861754673 OwnerIDs: 19... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11118 DEBUG transform  - Before transformation: 
TopAO (1861754673) Owner: 19
0 <- 0 JoinAO (1618326227) Owner: 19 Predicate: null
       0 <- 0 AccessAO (866901553) Owner: 19
       1 <- 0 JoinAO (160945458) Owner: 19 Predicate: null
              0 <- 0 AccessAO (657998502) Owner: 19
              1 <- 0 AccessAO (1788256184) Owner: 19
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11131 DEBUG ruleengine  - Ruleengine needed 12 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11132 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11132 INFO  transform  - Transformation of Top@1861754673 OwnerIDs: 19 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11133 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11133 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11133 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11133 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11134 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11134 DEBUG ReloadLog  - Query added to log: operator_1 = JOIN(bid,JOIN(person,auction))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11134 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11135 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11135 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid, person, auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11135 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11136 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11136 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT * FROM bid, person, auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11136 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11137 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11137 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11137 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11137 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11138 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11138 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-47] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11138 INFO  StandardExecutor  - Removing Query 19 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11138 DEBUG StandardExecutor  - Removing Ownership 19 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11138 INFO  StandardExecutor  - Query 19 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11138 DEBUG ReloadLog  - Removing query from log: operator_1 = JOIN(bid,JOIN(person,auction))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11139 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11139 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11140 DEBUG AbstractTestComponent  - Sub test "SelectAllTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11140 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11140 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 26 of 49: "SelectAllTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11140 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann';
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11140 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11140 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11140 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11140 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann';
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11141 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11141 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11141 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11141 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@56da52a7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11142 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11142 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann'; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11142 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=P.name, sourcename= null
parsePredicate() -> bid.auction>2&&P.name=="Max Mustermann"
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
buildRename() -> P.timestamp,P
buildRename() -> P.id,P
buildRename() -> P.name,P
buildRename() -> P.email,P
buildRename() -> P.creditcard,P
buildRename() -> P.city,P
buildRename() -> P.state,P
registerOperator() -> operator_1
buildJoin() --> SimpleSource
registerOperator() -> operator_2
11149 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11150 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11150 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@340b7ef6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11150 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11150 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = SELECT({predicate='bid.auction>2&&P.name=="MaxMustermann"'},JOIN(bid,JOIN(operator_1,category)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11150 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11168 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11168 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11168 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11170 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11170 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11176 DEBUG RelationalRestructHelper  - removing operator:Select@176097974 OwnerIDs: 20(bid.auction) > (2) initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
11177 DEBUG RelationalRestructHelper  - removing operator:Select@1145302895 OwnerIDs: 20(P.name) = ("MaxMustermann") initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
11178 DEBUG RelationalRestructHelper  - removing operator:Select@1113414982 OwnerIDs: (P.name) = ("MaxMustermann") initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
11180 DEBUG ruleengine  - Ruleengine needed 9 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11180 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11180 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11181 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11181 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11182 INFO  transform  - Starting transformation of Top@1521389237 OwnerIDs: 20... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11182 DEBUG transform  - Before transformation: 
TopAO (1521389237) Owner: 20
0 <- 0 JoinAO (1989495347) Owner: 20 Predicate: null
       0 <- 0 SelectAO (614635686) Owner: 
              0 <- 0 AccessAO (159562640) Owner: 20
       1 <- 0 JoinAO (670517043) Owner: 20 Predicate: null
              0 <- 0 SelectAO (2079278380) Owner: 
                     0 <- 0 AccessAO (1270383967) Owner: 20
              1 <- 0 AccessAO (1476061571) Owner: 20
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11199 DEBUG ruleengine  - Ruleengine needed 16 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11200 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11200 INFO  transform  - Transformation of Top@1521389237 OwnerIDs: 20 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11200 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11201 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11201 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11201 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11202 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11202 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = SELECT({predicate='bid.auction>2&&P.name=="MaxMustermann"'},JOIN(bid,JOIN(operator_1,category)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11202 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11203 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11204 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann'; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11204 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11204 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11205 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann';
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11205 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11206 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11206 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11206 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11206 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11207 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11208 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-48] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11208 INFO  StandardExecutor  - Removing Query 20 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11208 DEBUG StandardExecutor  - Removing Ownership 20 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11208 INFO  StandardExecutor  - Query 20 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11208 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = SELECT({predicate='bid.auction>2&&P.name=="MaxMustermann"'},JOIN(bid,JOIN(operator_1,category)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11208 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11209 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11209 DEBUG AbstractTestComponent  - Sub test "SelectAllTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11210 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11210 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 27 of 49: "SelectAllTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11210 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT bid.* FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11210 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11210 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11210 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11210 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT bid.* FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11211 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11211 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11211 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11211 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@dffa30b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11212 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11212 DEBUG StandardExecutor  - Adding following query: SELECT bid.* FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11212 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
findbyName::bid.*
registerAttributeAliases() -> attribute= null.timestamp, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= null.auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= null.bidder, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= null.datetime, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= null.price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[timestamp, auction, bidder, datetime, price]}, order= [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.bidder
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.datetime
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.price
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
registerOperator() -> operator_1
11218 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11218 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11218 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6b587673 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11219 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11219 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11219 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11223 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11223 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11224 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11224 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11224 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11225 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11225 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11225 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11225 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11225 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11226 INFO  transform  - Starting transformation of Top@1956060889 OwnerIDs: 21... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11226 DEBUG transform  - Before transformation: 
TopAO (1956060889) Owner: 21
0 <- 0 MapAO (320850799) Owner: 21
       0 <- 0 AccessAO (214768579) Owner: 21
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11228 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11228 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11229 INFO  transform  - Transformation of Top@1956060889 OwnerIDs: 21 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11229 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11229 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11229 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11229 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11229 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11229 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11229 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11230 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11230 DEBUG ReloadLog  - Query added to log: SELECT bid.* FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11230 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11231 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11231 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT bid.* FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11231 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11232 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11232 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11232 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11232 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11232 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11233 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-49] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11233 INFO  StandardExecutor  - Removing Query 21 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11233 DEBUG StandardExecutor  - Removing Ownership 21 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11233 INFO  StandardExecutor  - Query 21 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11233 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11234 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11234 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11235 DEBUG AbstractTestComponent  - Sub test "SelectAllTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11235 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11235 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 28 of 49: "SelectAllTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11235 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT B.* FROM bid as B
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11235 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11235 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11235 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11235 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT B.* FROM bid as B
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11236 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11238 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11238 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11238 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5cf8edcf - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11239 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11239 DEBUG StandardExecutor  - Adding following query: SELECT B.* FROM bid as B - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11239 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
findbyName::B.*
alias!
registerAttributeAliases() -> attribute= B.timestamp, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.datetime, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[timestamp, auction, bidder, datetime, price]}, order= [B.timestamp, B.auction, B.bidder, B.datetime, B.price]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.timestamp,B
buildRename() -> B.auction,B
buildRename() -> B.bidder,B
buildRename() -> B.datetime,B
buildRename() -> B.price,B
registerOperator() -> operator_1
getProjectionAttribute() -> B.timestamp
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> B.auction
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> B.bidder
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> B.datetime
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> B.price
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_2
11259 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11259 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11259 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1542af63 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11259 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11259 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['B.timestamp','B.auction','B.bidder','B.datetime','B.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11260 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11264 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11264 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11264 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11265 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11265 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11265 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11265 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11266 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11270 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11270 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11272 INFO  transform  - Starting transformation of Top@1677921169 OwnerIDs: 22... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11273 DEBUG transform  - Before transformation: 
TopAO (1677921169) Owner: 22
0 <- 0 MapAO (540206885) Owner: 22
       0 <- 0 AccessAO (1294139740) Owner: 22
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11280 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11280 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11280 INFO  transform  - Transformation of Top@1677921169 OwnerIDs: 22 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11281 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11281 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11281 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11281 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11281 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11281 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['B.timestamp','B.auction','B.bidder','B.datetime','B.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11281 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11282 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11282 DEBUG ReloadLog  - Query added to log: SELECT B.* FROM bid as B - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11283 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11283 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11284 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT B.* FROM bid as B
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11284 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11284 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11285 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11285 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11285 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11285 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11285 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-50] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11285 INFO  StandardExecutor  - Removing Query 22 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11286 DEBUG StandardExecutor  - Removing Ownership 22 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11286 INFO  StandardExecutor  - Query 22 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11286 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['B.timestamp','B.auction','B.bidder','B.datetime','B.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11286 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11287 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11287 DEBUG AbstractTestComponent  - Sub test "SelectAllTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11287 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11287 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 29 of 49: "SelectAllTest6.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11287 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11287 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11287 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11288 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11288 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11288 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11288 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11288 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11289 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@529cfee5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11289 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11289 DEBUG StandardExecutor  - Adding following query: SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11289 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
findbyName::B.*
alias!
findbyName::B.*
registerAttributeAliases() -> attribute= B.timestamp, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.datetime, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::P.*
findbyName::P.*
alias!
registerAttributeAliases() -> attribute= P.timestamp, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.name, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.email, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.creditcard, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.city, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.state, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[timestamp, auction, bidder, datetime, price], person=[timestamp, id, name, email, creditcard, city, state]}, order= [P.timestamp, P.id, P.name, P.email, P.creditcard, P.city, P.state]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B.auction, sourcename= null
getAttributename() -> attributename=P.id, sourcename= null
parsePredicate() -> B.auction>1000&&P.id==108
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.timestamp,B
buildRename() -> B.auction,B
buildRename() -> B.bidder,B
buildRename() -> B.datetime,B
buildRename() -> B.price,B
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> P.timestamp,P
buildRename() -> P.id,P
buildRename() -> P.name,P
buildRename() -> P.email,P
buildRename() -> P.creditcard,P
buildRename() -> P.city,P
buildRename() -> P.state,P
registerOperator() -> operator_2
registerOperator() -> operator_3
11297 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11297 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11297 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@660591fb - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11297 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11297 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction>1000&&P.id==108'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11297 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11300 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11300 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11301 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11301 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11301 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11313 DEBUG RelationalRestructHelper  - removing operator:Select@78377968 OwnerIDs: 23(B.auction) > (1000) initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
11314 DEBUG RelationalRestructHelper  - removing operator:Select@1449987177 OwnerIDs: 23(P.id) = (108) initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
11318 DEBUG ruleengine  - Ruleengine needed 14 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11318 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11318 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11319 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11319 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11319 INFO  transform  - Starting transformation of Top@1890318768 OwnerIDs: 23... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11320 DEBUG transform  - Before transformation: 
TopAO (1890318768) Owner: 23
0 <- 0 JoinAO (1779479139) Owner: 23 Predicate: null
       0 <- 0 SelectAO (1198442960) Owner: 
              0 <- 0 AccessAO (844872102) Owner: 23
       1 <- 0 SelectAO (487764004) Owner: 
              0 <- 0 AccessAO (1929284175) Owner: 23
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11329 DEBUG ruleengine  - Ruleengine needed 8 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11329 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11330 INFO  transform  - Transformation of Top@1890318768 OwnerIDs: 23 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11330 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11331 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11331 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11331 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11331 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11332 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction>1000&&P.id==108'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11332 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11332 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11333 DEBUG ReloadLog  - Query added to log: SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11333 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11334 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11334 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11334 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11335 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11335 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11335 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11336 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11336 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11336 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-51] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11336 INFO  StandardExecutor  - Removing Query 23 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11336 DEBUG StandardExecutor  - Removing Ownership 23 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11337 INFO  StandardExecutor  - Query 23 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11337 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction>1000&&P.id==108'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11337 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11337 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11337 DEBUG AbstractTestComponent  - Sub test "SelectAllTest6.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11338 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11338 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 30 of 49: "SelectExpressionTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11338 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT DolToEur(price) FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11338 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11338 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11338 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11338 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price) FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11339 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11340 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11340 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11340 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@432034a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11340 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11340 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price) FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11340 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
getSelectedAttributes() -> map= {bid=[price]}, order= [expression_0]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7d755813 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@69c93ca4 (operators: null)
getAttributename() -> attributename=price, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7d755813 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@69c93ca4 (operators: null)
getAttributename() -> attributename=price, sourcename= null
buildSelectInput() --> mapOperator= MAP({expressions=[['DolToEur(bid.price)','expression_0']]}), aggregateOperator= null
buildJoin() --> SimpleSource
registerOperator() -> operator_1
11353 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11353 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11353 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@63da207f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11354 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11354 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price)','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11354 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11358 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11358 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11358 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11359 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11359 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11361 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11361 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11362 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11362 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11362 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11363 INFO  transform  - Starting transformation of Top@2008907751 OwnerIDs: 24... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11363 DEBUG transform  - Before transformation: 
TopAO (2008907751) Owner: 24
0 <- 0 MapAO (903064416) Owner: 24
       0 <- 0 AccessAO (17331878) Owner: 24
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11367 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11368 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11368 INFO  transform  - Transformation of Top@2008907751 OwnerIDs: 24 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11368 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11369 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11369 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11369 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11369 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11369 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11370 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11370 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11370 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price) FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11371 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11371 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11371 INFO  StandardExecutor  - Starting query (ID: 24)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
11372 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
11372 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
11372 INFO  StandardExecutor  - Query 24 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
11373 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 24 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
11373 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
11374 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
11374 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price) FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11374 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11375 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11375 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11375 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11375 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11375 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11375 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-52] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11376 INFO  StandardExecutor  - Stopping query (ID: 24).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
11376 DEBUG StandardExecutor  - Try to stop query 24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
11376 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
11376 INFO  StandardExecutor  - Query 24 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
11376 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 24 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
11376 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
11377 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
11377 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
11377 INFO  StandardExecutor  - Removing Query 24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11377 DEBUG StandardExecutor  - Removing Ownership 24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11377 INFO  StandardExecutor  - Query 24 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11377 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11377 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11378 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11378 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11378 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11378 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 31 of 49: "SelectExpressionTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11378 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT price + price AS priceTwice FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11378 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11379 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11379 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11379 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT price + price AS priceTwice FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11379 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11380 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11380 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11380 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@c81fd12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11380 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11380 DEBUG StandardExecutor  - Adding following query: SELECT price + price AS priceTwice FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11380 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price]}, order= [priceTwice]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@652ab8d9 (operators: [+])
getAttributename() -> attributename=price, sourcename= null
getAttributename() -> attributename=price, sourcename= null
buildSelectInput() --> mapOperator= MAP({expressions=[['bid.price+bid.price','priceTwice']]}), aggregateOperator= null
buildJoin() --> SimpleSource
registerOperator() -> operator_1
11393 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11394 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11394 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@14fc5d40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11394 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11394 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['bid.price+bid.price','priceTwice']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11395 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11399 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11400 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11400 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11400 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11400 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11401 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11401 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11402 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11402 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11402 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11402 INFO  transform  - Starting transformation of Top@1998434604 OwnerIDs: 25... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11403 DEBUG transform  - Before transformation: 
TopAO (1998434604) Owner: 25
0 <- 0 MapAO (989520513) Owner: 25
       0 <- 0 AccessAO (648972298) Owner: 25
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11408 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11408 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11409 INFO  transform  - Transformation of Top@1998434604 OwnerIDs: 25 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11409 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11409 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11410 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11410 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11410 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11410 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['bid.price+bid.price','priceTwice']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11410 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11410 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11411 DEBUG ReloadLog  - Query added to log: SELECT price + price AS priceTwice FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11411 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11411 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11411 INFO  StandardExecutor  - Starting query (ID: 25)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
11412 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
11412 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
11412 INFO  StandardExecutor  - Query 25 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
11412 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 25 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
11412 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
11413 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
11413 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT price + price AS priceTwice FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11414 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11415 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11415 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11415 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11415 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11415 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11416 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-53] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11416 INFO  StandardExecutor  - Stopping query (ID: 25).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
11416 DEBUG StandardExecutor  - Try to stop query 25 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
11416 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
11417 INFO  StandardExecutor  - Query 25 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
11417 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 25 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
11417 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
11418 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
11418 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
11418 INFO  StandardExecutor  - Removing Query 25 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11418 DEBUG StandardExecutor  - Removing Ownership 25 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11418 INFO  StandardExecutor  - Query 25 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11418 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['bid.price+bid.price','priceTwice']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11419 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11420 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11420 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11420 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11420 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 32 of 49: "SelectExpressionTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11420 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro 
FROM bid, category;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11420 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11420 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11420 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11421 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro 
FROM bid, category;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11421 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11422 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11422 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11423 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@185f7840 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11423 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11423 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro
FROM bid, category; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11423 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= id, realSourcename= category, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price], category=[id]}, order= [complexPrice, priceToEuro]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3104351d (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@77d18d0b (operators: null)
getAttributename() -> attributename=price, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7a344b65 (operators: [-, +])
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7b7b3edb (operators: [*])
getAttributename() -> attributename=price, sourcename= null
getAttributename() -> attributename=price, sourcename= null
getAttributename() -> attributename=id, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3104351d (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@77d18d0b (operators: null)
getAttributename() -> attributename=price, sourcename= null
buildSelectInput() --> mapOperator= MAP({expressions=[['DolToEur(bid.price*2.5)-bid.price+category.id','complexPrice'],['DolToEur(bid.price)','priceToEuro']]}), aggregateOperator= null
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
registerOperator() -> operator_1
11432 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11432 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11432 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6b474074 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11432 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11432 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price*2.5)-bid.price+category.id','complexPrice'],['DolToEur(bid.price)','priceToEuro']]},JOIN(bid,category))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11433 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11439 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11440 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11440 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11440 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11440 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11441 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11441 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11441 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11441 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11441 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11441 INFO  transform  - Starting transformation of Top@1485624601 OwnerIDs: 26... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11441 DEBUG transform  - Before transformation: 
TopAO (1485624601) Owner: 26
0 <- 0 MapAO (1066582857) Owner: 26
       0 <- 0 JoinAO (1989826789) Owner: 26 Predicate: null
              0 <- 0 AccessAO (1442342557) Owner: 26
              1 <- 0 AccessAO (1809995046) Owner: 26
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11447 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11447 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11448 INFO  transform  - Transformation of Top@1485624601 OwnerIDs: 26 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11448 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11448 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11448 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11449 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11449 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11449 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price*2.5)-bid.price+category.id','complexPrice'],['DolToEur(bid.price)','priceToEuro']]},JOIN(bid,category))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11449 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11450 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11450 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro
FROM bid, category; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11450 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11451 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11451 INFO  StandardExecutor  - Starting query (ID: 26)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
11451 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
11456 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
11460 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
11461 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
11480 INFO  StandardExecutor  - Query 26 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
11577 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 26 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
11577 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
11579 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
11579 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro 
FROM bid, category;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11579 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11600 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11605 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11605 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11605 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11605 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11608 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-54] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11608 INFO  StandardExecutor  - Stopping query (ID: 26).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
11609 DEBUG StandardExecutor  - Try to stop query 26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
11609 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
11610 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
11611 INFO  StandardExecutor  - Query 26 stopped. Execution time 131 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
11611 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 26 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
11611 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
11612 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
11612 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
11612 INFO  StandardExecutor  - Removing Query 26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11612 DEBUG StandardExecutor  - Removing Ownership 26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11612 INFO  StandardExecutor  - Query 26 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11612 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price*2.5)-bid.price+category.id','complexPrice'],['DolToEur(bid.price)','priceToEuro']]},JOIN(bid,category))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11613 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11614 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11614 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11614 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11614 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 33 of 49: "SelectExpressionTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11615 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME];
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11615 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11615 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11615 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11615 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11615 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11616 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11616 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11616 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@27c04377 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11616 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11616 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11616 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
getSelectedAttributes() -> map= {bid=[price]}, order= [expression_0]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@5a6482a9 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7f9ab969 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@12f8b1d8 (operators: null)
getAttributename() -> attributename=price, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@5a6482a9 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7f9ab969 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@12f8b1d8 (operators: null)
getAttributename() -> attributename=price, sourcename= null
buildSelectInput() --> mapOperator= MAP({expressions=[['DolToEur(DolToEur(bid.price))','expression_0']]}), aggregateOperator= null
buildJoin() --> SimpleSource
registerOperator() -> operator_1
11623 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11623 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11623 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@746cd757 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11623 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11623 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(DolToEur(bid.price))','expression_0']]},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11625 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11629 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11629 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11630 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11630 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11630 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11631 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11631 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11631 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11632 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11632 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11632 INFO  transform  - Starting transformation of Top@1916720513 OwnerIDs: 27... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11633 DEBUG transform  - Before transformation: 
TopAO (1916720513) Owner: 27
0 <- 0 MapAO (1802896480) Owner: 27
       0 <- 0 TimeWindowAO (2036360618) Owner: 27
              0 <- 0 AccessAO (681979935) Owner: 27
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11637 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11637 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11637 INFO  transform  - Transformation of Top@1916720513 OwnerIDs: 27 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11638 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11638 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11638 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11638 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11638 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11639 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(DolToEur(bid.price))','expression_0']]},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11639 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11639 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11640 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11640 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11640 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11641 INFO  StandardExecutor  - Starting query (ID: 27)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
11641 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
11641 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
11642 INFO  StandardExecutor  - Query 27 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
11643 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 27 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
11643 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
11643 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
11644 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11644 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11645 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11645 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11645 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11645 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11645 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11646 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-55] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11646 INFO  StandardExecutor  - Stopping query (ID: 27).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
11646 DEBUG StandardExecutor  - Try to stop query 27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
11646 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
11647 INFO  StandardExecutor  - Query 27 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
11647 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 27 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
11647 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
11647 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
11648 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
11648 INFO  StandardExecutor  - Removing Query 27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11648 DEBUG StandardExecutor  - Removing Ownership 27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11648 INFO  StandardExecutor  - Query 27 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11648 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(DolToEur(bid.price))','expression_0']]},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11648 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11649 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11650 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11650 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11650 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 34 of 49: "SelectExpressionTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11650 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11650 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11650 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11650 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11650 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11651 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11651 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11651 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11657 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@54562ea6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11658 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11659 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11660 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
registerAttributeAliases() -> attribute= A, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
getSelectedAttributes() -> map= {bid=[price, A]}, order= [expression_0, avgPrice, A]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@2f7dcef2 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@4a3be6a5 (operators: null)
getAttributename() -> attributename=price, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7cf162bc (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3721177d (operators: null)
getAttributename() -> attributename=price, sourcename= null
11667 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
11668 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
11668 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@2f7dcef2 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@4a3be6a5 (operators: null)
getAttributename() -> attributename=price, sourcename= null
buildJoin() --> SimpleSource
buildRename() -> A,bid
registerOperator() -> operator_1
getAttributename() -> attributename=price, sourcename= null
getDataTypeFrom() -> attribute= bid.price, attributename= bid.price
getAttributename() -> attributename=A, sourcename= null
registerOperator() -> operator_2
parsePredicate(List<Expressions>)
getAttributename() -> attributename=avgPrice, sourcename= null
parsePredicate() -> avgPrice>150
buildSelectInput() --> mapOperator= MAP({expressions=[['DolToEur(bid.price)','expression_0']]}), aggregateOperator= operator_2
buildJoin() --> SimpleSource
buildRename() -> A,bid
registerOperator() -> operator_3
groupByyy
registerOperator() -> operator_4
getProjectionAttribute() -> avgPrice
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> A
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_5
11671 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11672 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11672 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@766a4535 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11672 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11672 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = AGGREGATE({aggregations=[['AVG','bid.price','avgPrice','Double']],group_by=['A']},operator_1)
operator_3 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = SELECT({predicate='avgPrice>150'},JOIN(RENAME({aliases=['A','A_groupAttribute#0'],pairs='true'},operator_2),operator_3))
operator_5 = MAP({expressions=[['DolToEur(bid.price)','expression_0'],'avgPrice','A']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11673 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11685 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11685 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11685 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11686 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11686 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11687 DEBUG RelationalRestructHelper  - removing operator:Select@1630968203 OwnerIDs: 28(avgPrice) > (150) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
11688 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11689 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11689 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11689 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11689 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11690 INFO  transform  - Starting transformation of Top@1735390128 OwnerIDs: 28... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11690 DEBUG transform  - Before transformation: 
TopAO (1735390128) Owner: 28
0 <- 0 MapAO (905940937) Owner: 28
       0 <- 0 JoinAO (1605834811) Owner: 28 Predicate: null
              0 <- 0 SelectAO (1198158701) Owner: 
                     0 <- 0 AggregateAO (1602288195) Owner: 28
                            0 <- 0 TimeWindowAO (382252989) Owner: 28
                                   0 <- 0 AccessAO (1901663135) Owner: 28
              1 <- 0 TimeWindowAO (1706883010) Owner: 28
                     0 <- 0 AccessAO (1035357140) Owner: 28
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11704 DEBUG ruleengine  - Ruleengine needed 13 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11704 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11705 INFO  transform  - Transformation of Top@1735390128 OwnerIDs: 28 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11705 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11707 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11707 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11708 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11708 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11708 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = AGGREGATE({aggregations=[['AVG','bid.price','avgPrice','Double']],group_by=['A']},operator_1)
operator_3 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = SELECT({predicate='avgPrice>150'},JOIN(RENAME({aliases=['A','A_groupAttribute#0'],pairs='true'},operator_2),operator_3))
operator_5 = MAP({expressions=[['DolToEur(bid.price)','expression_0'],'avgPrice','A']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11709 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11710 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11710 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11711 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11712 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11712 INFO  StandardExecutor  - Starting query (ID: 28)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
11713 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
11713 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
11713 INFO  StandardExecutor  - Query 28 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
11714 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 28 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
11715 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
11715 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
11715 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11715 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11716 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11716 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11716 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11716 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11716 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11717 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-56] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11717 INFO  StandardExecutor  - Stopping query (ID: 28).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
11717 DEBUG StandardExecutor  - Try to stop query 28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
11717 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
11718 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
11718 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
11718 INFO  StandardExecutor  - Query 28 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
11718 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 28 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
11718 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
11719 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
11719 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
11719 INFO  StandardExecutor  - Removing Query 28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11719 DEBUG StandardExecutor  - Removing Ownership 28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11719 INFO  StandardExecutor  - Query 28 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11719 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = AGGREGATE({aggregations=[['AVG','bid.price','avgPrice','Double']],group_by=['A']},operator_1)
operator_3 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = SELECT({predicate='avgPrice>150'},JOIN(RENAME({aliases=['A','A_groupAttribute#0'],pairs='true'},operator_2),operator_3))
operator_5 = MAP({expressions=[['DolToEur(bid.price)','expression_0'],'avgPrice','A']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11719 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11721 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11722 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11722 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11722 DEBUG AbstractTestComponent  - Tue May 16 13:37:56 CEST 2017Running sub test 35 of 49: "SelectExpressionTest6.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11722 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT 'hello' + 'world' FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11722 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11722 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11722 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11722 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT 'hello' + 'world' FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11723 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11724 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11724 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11724 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@22bb5646 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11724 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11724 DEBUG StandardExecutor  - Adding following query: SELECT 'hello' + 'world' FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11725 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
getSelectedAttributes() -> map= {}, order= [expression_0]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@153d4abb (operators: [+])
buildSelectInput() --> mapOperator= MAP({expressions=[['"hello"+"world"','expression_0']]}), aggregateOperator= null
buildJoin() --> SimpleSource
registerOperator() -> operator_1
11729 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11729 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11729 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6d4c273c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11730 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11730 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['"hello"+"world"','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11730 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11747 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11747 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11748 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11748 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11748 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11749 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11749 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11749 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11749 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11749 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11750 INFO  transform  - Starting transformation of Top@1123862502 OwnerIDs: 29... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11750 DEBUG transform  - Before transformation: 
TopAO (1123862502) Owner: 29
0 <- 0 MapAO (153443333) Owner: 29
       0 <- 0 AccessAO (1571278562) Owner: 29
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11756 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11756 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11756 INFO  transform  - Transformation of Top@1123862502 OwnerIDs: 29 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11757 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11757 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11757 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11757 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11758 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11758 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['"hello"+"world"','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11758 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11759 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11760 DEBUG ReloadLog  - Query added to log: SELECT 'hello' + 'world' FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11760 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11761 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11761 INFO  StandardExecutor  - Starting query (ID: 29)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
11762 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
11762 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
11763 INFO  StandardExecutor  - Query 29 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
11765 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 29 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
11766 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
11766 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
11766 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT 'hello' + 'world' FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11766 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11767 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11767 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11768 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11768 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11768 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11770 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-57] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11771 INFO  StandardExecutor  - Stopping query (ID: 29).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
11771 DEBUG StandardExecutor  - Try to stop query 29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
11771 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
11771 INFO  StandardExecutor  - Query 29 stopped. Execution time 8 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
11772 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 29 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
11772 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
11772 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
11772 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
11772 INFO  StandardExecutor  - Removing Query 29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11772 DEBUG StandardExecutor  - Removing Ownership 29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11772 INFO  StandardExecutor  - Query 29 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11772 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['"hello"+"world"','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11773 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11774 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11774 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest6.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11774 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11775 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 36 of 49: "SelectExpressionTest7.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11775 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction 
FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11776 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11776 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11776 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11776 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction 
FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11777 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11778 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11778 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11778 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@29a69a35 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11778 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11778 DEBUG StandardExecutor  - Adding following query: SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction
FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11779 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price, auction]}, order= [matrix, bid.price, bid.auction]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@108bdbd8 (operators: [+, *])
buildSelectInput() --> mapOperator= MAP({expressions=[['[1.0,2.0,3.0;3.0,4.0,6.0]+[2.0,4.0,5.0;12.0,5.0,1.0]*0.5','matrix']]}), aggregateOperator= null
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_1
11787 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11787 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11787 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6345e7b9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11788 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11788 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['[1.0,2.0,3.0;3.0,4.0,6.0]+[2.0,4.0,5.0;12.0,5.0,1.0]*0.5','matrix'],'bid.price','bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11788 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11814 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11814 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11815 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11815 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11815 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11816 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11816 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11816 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11816 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11817 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11817 INFO  transform  - Starting transformation of Top@1726519676 OwnerIDs: 30... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11817 DEBUG transform  - Before transformation: 
TopAO (1726519676) Owner: 30
0 <- 0 MapAO (1863103905) Owner: 30
       0 <- 0 AccessAO (455726379) Owner: 30
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11820 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11820 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11820 INFO  transform  - Transformation of Top@1726519676 OwnerIDs: 30 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11821 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11821 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11821 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11822 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11822 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11822 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['[1.0,2.0,3.0;3.0,4.0,6.0]+[2.0,4.0,5.0;12.0,5.0,1.0]*0.5','matrix'],'bid.price','bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11822 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11823 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11823 DEBUG ReloadLog  - Query added to log: SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction
FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11823 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11824 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11824 INFO  StandardExecutor  - Starting query (ID: 30)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
11824 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
11824 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
11825 INFO  StandardExecutor  - Query 30 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
11825 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 30 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
11826 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
11826 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
11826 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction 
FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11826 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11827 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11827 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11827 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11827 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11827 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11828 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-58] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11828 INFO  StandardExecutor  - Stopping query (ID: 30).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
11828 DEBUG StandardExecutor  - Try to stop query 30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
11828 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
11828 INFO  StandardExecutor  - Query 30 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
11828 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 30 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
11828 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
11829 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
11829 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
11829 INFO  StandardExecutor  - Removing Query 30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11829 DEBUG StandardExecutor  - Removing Ownership 30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11829 INFO  StandardExecutor  - Query 30 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11829 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['[1.0,2.0,3.0;3.0,4.0,6.0]+[2.0,4.0,5.0;12.0,5.0,1.0]*0.5','matrix'],'bid.price','bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11829 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11830 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11830 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest7.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11830 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11830 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 37 of 49: "SelectTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11830 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT auction FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11830 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11830 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11831 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11831 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT auction FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11831 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11832 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11832 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11832 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@50a3d0f6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11832 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11832 DEBUG StandardExecutor  - Adding following query: SELECT auction FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11833 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [bid.auction]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_1
11837 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11838 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11838 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6a0ac48e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11838 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11838 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11839 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11841 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11842 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11842 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11842 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11843 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11843 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11843 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11843 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11844 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11844 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11844 INFO  transform  - Starting transformation of Top@1333945918 OwnerIDs: 31... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11844 DEBUG transform  - Before transformation: 
TopAO (1333945918) Owner: 31
0 <- 0 MapAO (235195640) Owner: 31
       0 <- 0 AccessAO (1372668833) Owner: 31
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11847 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11848 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11848 INFO  transform  - Transformation of Top@1333945918 OwnerIDs: 31 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11849 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11849 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11850 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11850 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11850 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11850 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11850 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11851 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11851 DEBUG ReloadLog  - Query added to log: SELECT auction FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11851 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11852 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11852 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT auction FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11852 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11854 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11854 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11854 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11854 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11854 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11855 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-59] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11855 INFO  StandardExecutor  - Removing Query 31 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11855 DEBUG StandardExecutor  - Removing Ownership 31 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11855 INFO  StandardExecutor  - Query 31 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11856 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11856 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11857 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11857 DEBUG AbstractTestComponent  - Sub test "SelectTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11857 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11857 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 38 of 49: "SelectTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11857 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT auction FROM bid WHERE auction > 1000;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11858 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11858 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11858 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11858 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT auction FROM bid WHERE auction > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11858 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11859 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11859 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11859 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2116b68b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11859 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11860 DEBUG StandardExecutor  - Adding following query: SELECT auction FROM bid WHERE auction > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11860 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [bid.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
parsePredicate() -> bid.auction>1000
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
registerOperator() -> operator_1
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_2
11864 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11864 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11864 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@b8e246c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11864 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11865 DEBUG StandardExecutor  - Adding following query: operator_1 = SELECT({predicate='bid.auction>1000'},bid)
operator_2 = MAP({expressions=['bid.auction']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11865 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11868 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11868 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11869 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11870 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11871 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11871 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11872 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11872 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11872 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11872 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11873 INFO  transform  - Starting transformation of Top@1558133170 OwnerIDs: 32... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11873 DEBUG transform  - Before transformation: 
TopAO (1558133170) Owner: 32
0 <- 0 MapAO (351520508) Owner: 32
       0 <- 0 SelectAO (1020632821) Owner: 32
              0 <- 0 AccessAO (867205829) Owner: 32
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11876 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11877 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11877 INFO  transform  - Transformation of Top@1558133170 OwnerIDs: 32 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11878 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11878 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11878 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11879 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11879 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11879 DEBUG ReloadLog  - Query added to log: operator_1 = SELECT({predicate='bid.auction>1000'},bid)
operator_2 = MAP({expressions=['bid.auction']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11879 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11880 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11880 DEBUG ReloadLog  - Query added to log: SELECT auction FROM bid WHERE auction > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11880 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11881 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11881 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT auction FROM bid WHERE auction > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11881 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11882 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11882 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11882 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11882 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11882 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11883 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-60] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11883 INFO  StandardExecutor  - Removing Query 32 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11883 DEBUG StandardExecutor  - Removing Ownership 32 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11883 INFO  StandardExecutor  - Query 32 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11883 DEBUG ReloadLog  - Removing query from log: operator_1 = SELECT({predicate='bid.auction>1000'},bid)
operator_2 = MAP({expressions=['bid.auction']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11883 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11884 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11884 DEBUG AbstractTestComponent  - Sub test "SelectTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11884 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11884 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 39 of 49: "SelectTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11884 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11884 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11884 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11885 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11885 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11885 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11885 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11885 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11885 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4d774249 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11886 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11886 DEBUG StandardExecutor  - Adding following query: SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11886 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= bidder, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price, auction, bidder]}, order= [bid.price, avgPrice, bid.auction, bid.bidder]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@5136207f (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@26a4551a (operators: null)
getAttributename() -> attributename=price, sourcename= null
11889 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
11890 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
11890 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
getAttributename() -> attributename=price, sourcename= null
getDataTypeFrom() -> attribute= bid.price, attributename= bid.price
registerOperator() -> operator_1
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_1
[bid.price, avgPrice, bid.auction, bid.bidder]
[avgPrice]
buildJoin() --> SimpleSource
groupByyy
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> avgPrice
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_2
11892 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11892 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11892 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3fdecce - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11892 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11892 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({aggregations=[['AVG','bid.price','avgPrice','Double']]},bid)
operator_2 = MAP({expressions=['bid.price','avgPrice','bid.auction','bid.bidder']},JOIN(operator_1,bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11893 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11896 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11896 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11896 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11896 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11896 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11897 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11897 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11897 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11897 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11897 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11897 INFO  transform  - Starting transformation of Top@167692593 OwnerIDs: 33... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11898 DEBUG transform  - Before transformation: 
TopAO (167692593) Owner: 33
0 <- 0 MapAO (1555895711) Owner: 33
       0 <- 0 JoinAO (990226843) Owner: 33 Predicate: null
              0 <- 0 AggregateAO (46415544) Owner: 33
                     0 <- 0 AccessAO (2097989776) Owner: 33
              1 <- 0 AccessAO (1227438915) Owner: 33
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11901 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11901 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11901 INFO  transform  - Transformation of Top@167692593 OwnerIDs: 33 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11901 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11901 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11901 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11901 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11902 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11902 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({aggregations=[['AVG','bid.price','avgPrice','Double']]},bid)
operator_2 = MAP({expressions=['bid.price','avgPrice','bid.auction','bid.bidder']},JOIN(operator_1,bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11902 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11902 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11902 DEBUG ReloadLog  - Query added to log: SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11902 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11903 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11903 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11903 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11903 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11903 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11903 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11903 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11903 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11904 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-61] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11904 INFO  StandardExecutor  - Removing Query 33 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11904 DEBUG StandardExecutor  - Removing Ownership 33 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11904 INFO  StandardExecutor  - Query 33 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11904 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({aggregations=[['AVG','bid.price','avgPrice','Double']]},bid)
operator_2 = MAP({expressions=['bid.price','avgPrice','bid.auction','bid.bidder']},JOIN(operator_1,bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11904 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11904 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11904 DEBUG AbstractTestComponent  - Sub test "SelectTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11905 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11905 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 40 of 49: "SelectTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11905 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11905 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11905 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11905 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11905 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11905 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11905 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11905 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11906 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@540a903b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11906 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11906 DEBUG StandardExecutor  - Adding following query: SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11906 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction, price]}, order= [bid.auction, bid.price]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=auction, sourcename= null
getAttributename() -> attributename=auction, sourcename= null
parsePredicate() -> bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
registerOperator() -> operator_1
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
registerOperator() -> operator_2
11920 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11920 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11920 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@238acd0b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11920 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11921 DEBUG StandardExecutor  - Adding following query: operator_1 = SELECT({predicate='bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87'},bid)
operator_2 = MAP({expressions=['bid.auction','bid.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11921 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11930 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11930 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11931 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
11932 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
11932 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11970 DEBUG ruleengine  - Ruleengine needed 37 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11970 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11971 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11975 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11976 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11977 INFO  transform  - Starting transformation of Top@645015141 OwnerIDs: 34... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11977 DEBUG transform  - Before transformation: 
TopAO (645015141) Owner: 34
0 <- 0 MapAO (131096911) Owner: 34
       0 <- 0 SelectAO (1652393238) Owner: 34
              0 <- 0 AccessAO (1544562778) Owner: 34
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11982 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11982 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11982 INFO  transform  - Transformation of Top@645015141 OwnerIDs: 34 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11983 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11983 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11983 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11983 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11984 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11984 DEBUG ReloadLog  - Query added to log: operator_1 = SELECT({predicate='bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87'},bid)
operator_2 = MAP({expressions=['bid.auction','bid.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11984 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11984 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11985 DEBUG ReloadLog  - Query added to log: SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11985 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11986 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11986 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11986 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11987 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11987 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11987 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11988 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11988 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11988 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-62] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11989 INFO  StandardExecutor  - Removing Query 34 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11989 DEBUG StandardExecutor  - Removing Ownership 34 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11989 INFO  StandardExecutor  - Query 34 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11989 DEBUG ReloadLog  - Removing query from log: operator_1 = SELECT({predicate='bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87'},bid)
operator_2 = MAP({expressions=['bid.auction','bid.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11989 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11990 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11990 DEBUG AbstractTestComponent  - Sub test "SelectTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11991 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11991 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 41 of 49: "SelectTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
11991 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
11991 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
11992 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
11992 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11992 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11993 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
11994 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
11995 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
11996 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3e7545e8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
11997 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
11997 DEBUG StandardExecutor  - Adding following query: SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
11997 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
findbyName::P1.id
alias!
findbyName::P1.id
alias!
registerAttributeAliases() -> attribute= ID1, realSourcename= person, sourcenameAlias= P1, isFormSubQuery= false
findbyName::P2.id
alias!
findbyName::P2.id
alias!
registerAttributeAliases() -> attribute= ID2, realSourcename= person, sourcenameAlias= P2, isFormSubQuery= false
getSelectedAttributes() -> map= {person=[ID1, ID2]}, order= [ID1, ID2]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=ID1, sourcename= null
getAttributename() -> attributename=ID2, sourcename= null
parsePredicate() -> ID1==ID2
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> ID1,P1
buildRename() -> ID2,P2
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> ID1,P1
buildRename() -> ID2,P2
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> ID1
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> ID2
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
registerOperator() -> operator_4
12007 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12007 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12007 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@376e7531 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12007 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12007 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['id','ID1','timestamp','P1.timestamp','name','P1.name','email','P1.email','creditcard','P1.creditcard','city','P1.city','state','P1.state'],pairs='true'},person)
operator_2 = RENAME({aliases=['id','ID2','timestamp','P2.timestamp','name','P2.name','email','P2.email','creditcard','P2.creditcard','city','P2.city','state','P2.state'],pairs='true'},person)
operator_3 = SELECT({predicate='ID1==ID2'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['ID1','ID2']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12008 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12020 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12025 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12025 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12026 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12027 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12029 DEBUG RelationalRestructHelper  - removing operator:Select@1018067851 OwnerIDs: 35(ID1) = (ID2) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
12030 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12030 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12030 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12030 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12031 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12031 INFO  transform  - Starting transformation of Top@1289834245 OwnerIDs: 35... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12032 DEBUG transform  - Before transformation: 
TopAO (1289834245) Owner: 35
0 <- 0 MapAO (1910492961) Owner: 35
       0 <- 0 JoinAO (194402391) Owner: 35 Predicate: (ID1) = (ID2) initialized = true
              0 <- 0 AccessAO (1643646293) Owner: 35
              1 <- 0 AccessAO (665317128) Owner: 35
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12042 DEBUG ruleengine  - Ruleengine needed 10 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12043 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12044 INFO  transform  - Transformation of Top@1289834245 OwnerIDs: 35 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12045 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12050 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12050 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12050 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12051 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12051 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['id','ID1','timestamp','P1.timestamp','name','P1.name','email','P1.email','creditcard','P1.creditcard','city','P1.city','state','P1.state'],pairs='true'},person)
operator_2 = RENAME({aliases=['id','ID2','timestamp','P2.timestamp','name','P2.name','email','P2.email','creditcard','P2.creditcard','city','P2.city','state','P2.state'],pairs='true'},person)
operator_3 = SELECT({predicate='ID1==ID2'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['ID1','ID2']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12051 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12051 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12052 DEBUG ReloadLog  - Query added to log: SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12052 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12054 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12054 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12054 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12055 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12055 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
12055 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
12055 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
12055 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
12056 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-63] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
12056 INFO  StandardExecutor  - Removing Query 35 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
12056 DEBUG StandardExecutor  - Removing Ownership 35 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
12056 INFO  StandardExecutor  - Query 35 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
12056 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['id','ID1','timestamp','P1.timestamp','name','P1.name','email','P1.email','creditcard','P1.creditcard','city','P1.city','state','P1.state'],pairs='true'},person)
operator_2 = RENAME({aliases=['id','ID2','timestamp','P2.timestamp','name','P2.name','email','P2.email','creditcard','P2.creditcard','city','P2.city','state','P2.state'],pairs='true'},person)
operator_3 = SELECT({predicate='ID1==ID2'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['ID1','ID2']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
12057 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12057 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
12058 DEBUG AbstractTestComponent  - Sub test "SelectTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
12058 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
12058 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 42 of 49: "SelectTest6.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
12058 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
12058 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
12058 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
12058 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12058 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12059 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12059 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12059 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12059 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@680d4a6a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12059 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12060 DEBUG StandardExecutor  - Adding following query: SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12060 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [bid.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B.bidder, sourcename= null
getAttributename() -> attributename=P.id, sourcename= null
parsePredicate() -> B.bidder==P.id
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> B.bidder,B
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> P.id,P
registerOperator() -> operator_2
registerOperator() -> operator_3
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
registerOperator() -> operator_4
12073 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12073 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12073 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@37191ef0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12073 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12073 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.bidder==P.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12074 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12078 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12078 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12079 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12079 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12080 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12081 DEBUG RelationalRestructHelper  - removing operator:Select@2052452680 OwnerIDs: 36(B.bidder) = (P.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
12082 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12082 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12086 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12086 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12086 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12088 INFO  transform  - Starting transformation of Top@2088098699 OwnerIDs: 36... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12088 DEBUG transform  - Before transformation: 
TopAO (2088098699) Owner: 36
0 <- 0 MapAO (1253396693) Owner: 36
       0 <- 0 JoinAO (1020397237) Owner: 36 Predicate: (B.bidder) = (P.id) initialized = true
              0 <- 0 AccessAO (1491623023) Owner: 36
              1 <- 0 AccessAO (169049466) Owner: 36
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12097 DEBUG ruleengine  - Ruleengine needed 8 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12097 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12098 INFO  transform  - Transformation of Top@2088098699 OwnerIDs: 36 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12099 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12099 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12100 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12100 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12100 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12100 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.bidder==P.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12100 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12101 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12102 DEBUG ReloadLog  - Query added to log: SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12102 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12103 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12103 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12103 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12104 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12104 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
12104 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
12104 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
12104 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
12105 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-64] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
12105 INFO  StandardExecutor  - Removing Query 36 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
12105 DEBUG StandardExecutor  - Removing Ownership 36 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
12105 INFO  StandardExecutor  - Query 36 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
12105 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.bidder==P.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
12106 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12108 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
12108 DEBUG AbstractTestComponent  - Sub test "SelectTest6.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
12108 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
12109 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 43 of 49: "SelectTest7.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
12110 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT C.name FROM category AS C WHERE C.id != 108;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
12110 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
12111 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
12112 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12114 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT C.name FROM category AS C WHERE C.id != 108;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12115 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12115 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12116 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12116 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@9a6fbc0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12116 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12116 DEBUG StandardExecutor  - Adding following query: SELECT C.name FROM category AS C WHERE C.id != 108; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12116 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= C.id, realSourcename= category, sourcenameAlias= C, isFormSubQuery= false
findbyName::C.name
alias!
registerAttributeAliases() -> attribute= C.name, realSourcename= category, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {category=[C.name]}, order= [C.name]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=C.id, sourcename= null
parsePredicate() -> C.id!=108
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildRename() -> C.id,C
buildRename() -> C.name,C
registerOperator() -> operator_1
registerOperator() -> operator_2
getProjectionAttribute() -> C.name
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
registerOperator() -> operator_3
12120 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12120 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12121 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@35178483 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12121 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12121 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_2 = SELECT({predicate='C.id!=108'},operator_1)
operator_3 = MAP({expressions=['C.name']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12121 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12124 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12124 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12125 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12125 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12125 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12126 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12126 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12126 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12126 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12126 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12127 INFO  transform  - Starting transformation of Top@1813525162 OwnerIDs: 37... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12127 DEBUG transform  - Before transformation: 
TopAO (1813525162) Owner: 37
0 <- 0 MapAO (79620878) Owner: 37
       0 <- 0 SelectAO (1854577712) Owner: 37
              0 <- 0 AccessAO (1560406561) Owner: 37
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12133 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12134 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12134 INFO  transform  - Transformation of Top@1813525162 OwnerIDs: 37 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12134 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12134 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12135 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12135 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12135 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12135 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_2 = SELECT({predicate='C.id!=108'},operator_1)
operator_3 = MAP({expressions=['C.name']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12135 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12136 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12136 DEBUG ReloadLog  - Query added to log: SELECT C.name FROM category AS C WHERE C.id != 108; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12136 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12137 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12137 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT C.name FROM category AS C WHERE C.id != 108;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12137 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12137 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12137 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
12138 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
12138 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
12138 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
12138 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-65] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
12138 INFO  StandardExecutor  - Removing Query 37 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
12138 DEBUG StandardExecutor  - Removing Ownership 37 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
12139 INFO  StandardExecutor  - Query 37 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
12139 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_2 = SELECT({predicate='C.id!=108'},operator_1)
operator_3 = MAP({expressions=['C.name']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
12139 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12139 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
12140 DEBUG AbstractTestComponent  - Sub test "SelectTest7.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
12140 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
12141 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 44 of 49: "SetTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
12141 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT * FROM bid
UNION
SELECT * FROM person
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
12141 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
12142 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
12142 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12142 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT * FROM bid
UNION
SELECT * FROM person
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12142 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12143 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12143 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12143 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@50a691d3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12143 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12143 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid
UNION
SELECT * FROM person - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12144 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.datetime
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
registerOperator() -> operator_1
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> person.timestamp
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.id
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.name
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.email
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.creditcard
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.city
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.state
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
registerOperator() -> operator_2
registerOperator() -> operator_3
12149 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12149 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12149 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@537c8c7e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12150 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12150 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
operator_2 = MAP({expressions=['person.timestamp','person.id','person.name','person.email','person.creditcard','person.city','person.state']},person)
operator_3 = UNION(operator_1,operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12150 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12160 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12160 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12160 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12161 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12161 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12162 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12162 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12163 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12163 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12163 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12164 INFO  transform  - Starting transformation of Top@1164344728 OwnerIDs: 38... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12164 DEBUG transform  - Before transformation: 
TopAO (1164344728) Owner: 38
0 <- 0 UnionAO (1709882027) Owner: 38
       0 <- 0 MapAO (1898167916) Owner: 38
              0 <- 0 AccessAO (31366484) Owner: 38
       1 <- 0 MapAO (2007149130) Owner: 38
              0 <- 0 AccessAO (1202547191) Owner: 38
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12172 DEBUG ruleengine  - Ruleengine needed 7 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12172 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12173 INFO  transform  - Transformation of Top@1164344728 OwnerIDs: 38 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12173 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12173 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12174 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12177 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12177 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12177 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
operator_2 = MAP({expressions=['person.timestamp','person.id','person.name','person.email','person.creditcard','person.city','person.state']},person)
operator_3 = UNION(operator_1,operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12178 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12178 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12179 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid
UNION
SELECT * FROM person - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12179 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12180 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12180 INFO  StandardExecutor  - Starting query (ID: 38)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
12181 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
12181 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
12183 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
12184 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
12184 INFO  StandardExecutor  - Query 38 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
12185 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 38 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
12185 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
12186 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
12186 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT * FROM bid
UNION
SELECT * FROM person
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12186 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12187 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12187 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
12187 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
12187 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
12187 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
12188 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-66] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
12188 INFO  StandardExecutor  - Stopping query (ID: 38).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
12188 DEBUG StandardExecutor  - Try to stop query 38 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
12188 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
12189 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
12190 INFO  StandardExecutor  - Query 38 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
12190 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 38 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
12190 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
12190 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
12191 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
12191 INFO  StandardExecutor  - Removing Query 38 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
12191 DEBUG StandardExecutor  - Removing Ownership 38 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
12191 INFO  StandardExecutor  - Query 38 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
12191 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
operator_2 = MAP({expressions=['person.timestamp','person.id','person.name','person.email','person.creditcard','person.city','person.state']},person)
operator_3 = UNION(operator_1,operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
12192 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12192 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
12192 DEBUG AbstractTestComponent  - Sub test "SetTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
12193 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
12193 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 45 of 49: "StreamToTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
12193 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
DROP SINK out1 IF EXISTS
#QUERY
CREATE SINK out1 (attr1 INTEGER, attr2 INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'CSV'
TRANSPORT 'File'
DATAHANDLER 'TUPLE'
OPTIONS('filename' 'E:\\Users\\test.txt') 			
#QUERY
STREAM TO out1 SELECT auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
12193 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
12193 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
12193 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12193 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
DROP SINK out1 IF EXISTS
#QUERY
CREATE SINK out1 (attr1 INTEGER, attr2 INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'CSV'
TRANSPORT 'File'
DATAHANDLER 'TUPLE'
OPTIONS('filename' 'E:\\Users\\test.txt') 			
#QUERY
STREAM TO out1 SELECT auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12194 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12194 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12195 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12195 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@69fa8e76 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12195 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12195 DEBUG StandardExecutor  - Adding following query: DROP SINK out1 IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12195 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
CQLParser.getExecutorCommand(..) -> 
12200 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12200 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12200 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropSinkCommand@31f20c9f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12200 DEBUG ReloadLog  - Query added to log: DROP SINK out1 IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12201 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12201 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12202 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@f446158 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12202 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12203 DEBUG StandardExecutor  - Adding following query: CREATE SINK out1 (attr1 INTEGER, attr2 INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'CSV'
TRANSPORT 'File'
DATAHANDLER 'TUPLE'
OPTIONS('filename' 'E:\\Users\\test.txt') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12203 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [filename]
[E:\Users\test.txt]
,
12206 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12207 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
12207 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@504e1599 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12207 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12207 DEBUG StandardExecutor  - Adding following query: STREAM TO out1 SELECT auction, bidder FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12207 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= bidder, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction, bidder]}, order= [bid.auction, bid.bidder]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
registerOperator() -> operator_1
registerOperator() -> out1
12211 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12211 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12211 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@69e05f61 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12211 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12212 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.auction','bid.bidder']},bid)
out1 = SENDER({sink='out1',wrapper='GenericPush',protocol='CSV',transport='File',datahandler='TUPLE',options=[['filename','E:\Users\test.txt']]},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12212 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12215 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12215 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12215 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12216 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12216 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12217 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12217 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12217 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12217 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12218 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12218 INFO  transform  - Starting transformation of Top@413946856 OwnerIDs: 39... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12218 DEBUG transform  - Before transformation: 
TopAO (413946856) Owner: 39
0 <- 0 SenderAO (1286134778) Owner: 39
       0 <- 0 MapAO (1885562991) Owner: 39
              0 <- 0 AccessAO (204568533) Owner: 39
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12224 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12225 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12225 INFO  transform  - Transformation of Top@413946856 OwnerIDs: 39 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12225 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12226 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12226 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12226 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12226 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12226 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.auction','bid.bidder']},bid)
out1 = SENDER({sink='out1',wrapper='GenericPush',protocol='CSV',transport='File',datahandler='TUPLE',options=[['filename','E:\Users\test.txt']]},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12227 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12228 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12229 DEBUG ReloadLog  - Query added to log: STREAM TO out1 SELECT auction, bidder FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12229 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12230 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12230 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
DROP SINK out1 IF EXISTS
#QUERY
CREATE SINK out1 (attr1 INTEGER, attr2 INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'CSV'
TRANSPORT 'File'
DATAHANDLER 'TUPLE'
OPTIONS('filename' 'E:\\Users\\test.txt') 			
#QUERY
STREAM TO out1 SELECT auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12230 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12231 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12231 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
12231 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
12231 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
12231 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
12232 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-67] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
12232 INFO  StandardExecutor  - Removing Query 39 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
12232 DEBUG StandardExecutor  - Removing Ownership 39 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
12232 INFO  StandardExecutor  - Query 39 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
12233 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.auction','bid.bidder']},bid)
out1 = SENDER({sink='out1',wrapper='GenericPush',protocol='CSV',transport='File',datahandler='TUPLE',options=[['filename','E:\Users\test.txt']]},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
12233 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12233 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
12234 DEBUG AbstractTestComponent  - Sub test "StreamToTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
12234 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
12234 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 46 of 49: "SubQueryTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
12234 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
        FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
12234 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
12234 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
12234 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12234 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
        FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12235 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12235 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12235 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12235 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@b2f4ece - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12236 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12236 DEBUG StandardExecutor  - Adding following query: SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12236 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
prepareParsingSelect()
findbyName::B1.price
alias!
registerAttributeAliases() -> attribute= B1.price, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B1.auction
alias!
registerAttributeAliases() -> attribute= B1.auction, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B1.price, B1.auction]}, order= [B1.price, num]
AGGREGATEPATTERN::\b((SUM|COUNT|AVG|MEDIAN|MIN|MAX|STDDEV|COMPLETENESS|AMEDIAN2|AVG|SUM|COUNT|MIN|MAX|NEST|DISTINCTNEST|STDDEV|CORR|COV|VAR|LAST|FIRST|NTH|RATE|COMPLETENESS|MEDIAN|AMEDIAN)\([^\)]*\))
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@34fe326d (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@30a7c98f (operators: null)
getAttributename() -> attributename=B1.auction, sourcename= null
12242 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
12243 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
registerAttributeAliases() -> attribute= price2, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= true
getSelectedAttributes() -> map= {bid=[price2]}, order= [price2]
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> B1.price,B1
buildRename() -> price2,B2
registerOperator() -> operator_1
getAttributename() -> attributename=B1.auction, sourcename= null
getDataTypeFrom() -> attribute= B1.auction, attributename= B1.auction
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
registerOperator() -> operator_2
buildSelectInput() --> mapOperator= null, aggregateOperator= operator_2
[B1.price, num]
[num]
buildJoin() --> SimpleSource
buildRename() -> B1.auction,B1
buildRename() -> B1.price,B1
buildRename() -> price2,B2
registerOperator() -> operator_3
groupByyy
getProjectionAttribute() -> B1.price
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> num
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
registerOperator() -> operator_4
parsePredicate(List<Expressions>)
getAttributename() -> attributename=num, sourcename= null
parsePredicate() -> num>=200
buildSelectInput() --> mapOperator= null, aggregateOperator= null
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
registerOperator() -> operator_5
registerOperator() -> operator_6
getProjectionAttribute() -> price2
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
registerOperator() -> operator_7
12246 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12247 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12247 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@41fed14f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12247 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12247 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({aggregations=[['COUNT','B1.auction','num','Integer']]},operator_1)
operator_3 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['B1.price','num']},JOIN(operator_2,operator_3))
operator_5 = RENAME({aliases=['B1_price','price2'],pairs='true'},operator_4)
operator_6 = SELECT({predicate='num>=200'},operator_5)
operator_7 = MAP({expressions=['price2']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12248 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12253 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12254 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12254 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12254 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12254 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12255 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12256 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12256 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12256 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12256 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12258 INFO  transform  - Starting transformation of Top@1545644729 OwnerIDs: 40... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12259 DEBUG transform  - Before transformation: 
TopAO (1545644729) Owner: 40
0 <- 0 MapAO (1266435158) Owner: 40
       0 <- 0 SelectAO (745966298) Owner: 40
              0 <- 0 MapAO (203409962) Owner: 40
                     0 <- 0 JoinAO (1429462130) Owner: 40 Predicate: null
                            0 <- 0 AggregateAO (2084863094) Owner: 40
                                   0 <- 0 TimeWindowAO (1694239102) Owner: 40
                                          0 <- 0 AccessAO (373342545) Owner: 40
                            1 <- 0 TimeWindowAO (1566269351) Owner: 40
                                   0 <- 0 AccessAO (44249014) Owner: 40
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12270 DEBUG ruleengine  - Ruleengine needed 9 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12270 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12271 INFO  transform  - Transformation of Top@1545644729 OwnerIDs: 40 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12271 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12272 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12272 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12272 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12272 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12272 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({aggregations=[['COUNT','B1.auction','num','Integer']]},operator_1)
operator_3 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['B1.price','num']},JOIN(operator_2,operator_3))
operator_5 = RENAME({aliases=['B1_price','price2'],pairs='true'},operator_4)
operator_6 = SELECT({predicate='num>=200'},operator_5)
operator_7 = MAP({expressions=['price2']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12272 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12273 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12273 DEBUG ReloadLog  - Query added to log: SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12274 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12274 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12274 INFO  StandardExecutor  - Starting query (ID: 40)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
12275 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
12275 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
12276 INFO  StandardExecutor  - Query 40 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
12276 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 40 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
12277 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
12277 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
12277 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
        FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12277 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12278 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12278 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
12278 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
12278 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
12278 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
12279 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-68] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
12279 INFO  StandardExecutor  - Stopping query (ID: 40).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
12279 DEBUG StandardExecutor  - Try to stop query 40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
12279 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
12280 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
12280 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
12281 INFO  StandardExecutor  - Query 40 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
12281 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 40 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
12281 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
12281 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
12281 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
12282 INFO  StandardExecutor  - Removing Query 40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
12282 DEBUG StandardExecutor  - Removing Ownership 40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
12282 INFO  StandardExecutor  - Query 40 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
12282 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({aggregations=[['COUNT','B1.auction','num','Integer']]},operator_1)
operator_3 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['B1.price','num']},JOIN(operator_2,operator_3))
operator_5 = RENAME({aliases=['B1_price','price2'],pairs='true'},operator_4)
operator_6 = SELECT({predicate='num>=200'},operator_5)
operator_7 = MAP({expressions=['price2']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
12282 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12283 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
12283 DEBUG AbstractTestComponent  - Sub test "SubQueryTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
12283 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
12283 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 47 of 49: "WindowTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
12284 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT * FROM bid [UNBOUNDED];
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
12284 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
12285 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
12285 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12285 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT * FROM bid [UNBOUNDED];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12285 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12286 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12286 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12286 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@eb507b9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12287 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12287 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid [UNBOUNDED]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12287 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.datetime
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
registerOperator() -> operator_1
12310 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12310 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12310 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3ec2ecea - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12310 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12310 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12312 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12318 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12319 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12319 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12319 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12320 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12320 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12320 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12320 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12320 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12321 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12321 INFO  transform  - Starting transformation of Top@1237907176 OwnerIDs: 41... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12321 DEBUG transform  - Before transformation: 
TopAO (1237907176) Owner: 41
0 <- 0 MapAO (1795560878) Owner: 41
       0 <- 0 AccessAO (1316205906) Owner: 41
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12325 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12325 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12325 INFO  transform  - Transformation of Top@1237907176 OwnerIDs: 41 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12326 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12326 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12326 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12326 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12326 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12326 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12327 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12327 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12327 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid [UNBOUNDED]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12328 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12328 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12328 INFO  StandardExecutor  - Starting query (ID: 41)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
12329 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
12329 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
12330 INFO  StandardExecutor  - Query 41 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
12330 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 41 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
12331 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
12331 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
12331 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT * FROM bid [UNBOUNDED];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12332 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12332 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12332 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
12332 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
12332 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
12333 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
12333 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-69] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
12333 INFO  StandardExecutor  - Stopping query (ID: 41).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
12333 DEBUG StandardExecutor  - Try to stop query 41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
12334 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
12334 INFO  StandardExecutor  - Query 41 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
12334 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 41 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
12334 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
12334 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
12335 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
12335 INFO  StandardExecutor  - Removing Query 41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
12335 DEBUG StandardExecutor  - Removing Ownership 41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
12335 INFO  StandardExecutor  - Query 41 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
12335 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
12335 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12336 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
12336 DEBUG AbstractTestComponent  - Sub test "WindowTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
12336 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
12336 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 48 of 49: "WindowTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
12336 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT * FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
12336 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
12336 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
12336 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12336 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT * FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12337 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12337 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12337 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12337 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3d49fd31 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12337 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12337 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid [SIZE 5 MINUTES TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12338 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.datetime
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
registerOperator() -> operator_1
12346 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12346 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12347 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3ffb3598 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12347 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12347 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12348 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12351 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12351 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12352 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12352 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12352 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12352 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12353 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12353 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12353 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12353 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12354 INFO  transform  - Starting transformation of Top@1169894049 OwnerIDs: 42... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12354 DEBUG transform  - Before transformation: 
TopAO (1169894049) Owner: 42
0 <- 0 MapAO (1048842522) Owner: 42
       0 <- 0 TimeWindowAO (1260012504) Owner: 42
              0 <- 0 AccessAO (1873189623) Owner: 42
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12358 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12358 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12358 INFO  transform  - Transformation of Top@1169894049 OwnerIDs: 42 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12359 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12359 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12359 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12359 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12360 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12360 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12360 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12361 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12361 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid [SIZE 5 MINUTES TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12361 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12362 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12362 INFO  StandardExecutor  - Starting query (ID: 42)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
12363 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
12363 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
12368 INFO  StandardExecutor  - Query 42 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
12368 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 42 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
12368 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
12368 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
12368 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT * FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12368 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12369 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12369 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
12370 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
12371 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
12371 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
12372 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-70] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
12372 INFO  StandardExecutor  - Stopping query (ID: 42).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
12372 DEBUG StandardExecutor  - Try to stop query 42 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
12372 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
12372 INFO  StandardExecutor  - Query 42 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
12372 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 42 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
12373 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
12373 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
12373 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
12373 INFO  StandardExecutor  - Removing Query 42 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
12373 DEBUG StandardExecutor  - Removing Ownership 42 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
12373 INFO  StandardExecutor  - Query 42 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
12373 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
12374 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12375 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
12375 DEBUG AbstractTestComponent  - Sub test "WindowTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
12375 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
12375 DEBUG AbstractTestComponent  - Tue May 16 13:37:57 CEST 2017Running sub test 49 of 49: "WindowTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
12376 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT auction, bidder, P.id, C.id 
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
12376 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
12376 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
12376 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12376 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT auction, bidder, P.id, C.id 
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12377 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12377 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12378 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12378 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7c129ef6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12378 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12378 DEBUG StandardExecutor  - Adding following query: SELECT auction, bidder, P.id, C.id
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12378 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
prepareParsingSelect()
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= bidder, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
findbyName::P.id
findbyName::P.id
alias!
findbyName::P.id
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
findbyName::C.id
findbyName::C.id
findbyName::C.id
alias!
registerAttributeAliases() -> attribute= C.id, realSourcename= category, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction, bidder], category=[C.id], person=[P.id]}, order= [bid.auction, bid.bidder, P.id, C.id]
buildSelectInput() --> mapOperator= null, aggregateOperator= null
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
buildRename() -> P.id,P
registerOperator() -> operator_1
buildJoin() --> SimpleSource
buildRename() -> C.id,C
registerOperator() -> operator_2
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> P.id
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> C.id
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
registerOperator() -> operator_3
12392 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12393 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12393 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5b84f14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
12393 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
12393 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},person))
operator_2 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_3 = MAP({expressions=['bid.auction','bid.bidder','P.id','C.id']},JOIN(ELEMENTWINDOW({size=5,advance=1},bid),JOIN(operator_1,operator_2)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
12393 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
12400 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
12401 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
12401 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
12401 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
12401 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
12402 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12402 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12403 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
12403 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
12403 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
12403 INFO  transform  - Starting transformation of Top@891232836 OwnerIDs: 43... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
12404 DEBUG transform  - Before transformation: 
TopAO (891232836) Owner: 43
0 <- 0 MapAO (1419166053) Owner: 43
       0 <- 0 JoinAO (1369977147) Owner: 43 Predicate: null
              0 <- 0 ElementWindowAO (704894556) Owner: 43
                     0 <- 0 AccessAO (1715657818) Owner: 43
              1 <- 0 JoinAO (71148574) Owner: 43 Predicate: null
                     0 <- 0 TimeWindowAO (344751179) Owner: 43
                            0 <- 0 AccessAO (537524656) Owner: 43
                     1 <- 0 AccessAO (1356419559) Owner: 43
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
12418 DEBUG ruleengine  - Ruleengine needed 13 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
12418 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
12419 INFO  transform  - Transformation of Top@891232836 OwnerIDs: 43 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
12419 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
12420 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
12420 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
12420 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
12420 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
12420 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},person))
operator_2 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_3 = MAP({expressions=['bid.auction','bid.bidder','P.id','C.id']},JOIN(ELEMENTWINDOW({size=5,advance=1},bid),JOIN(operator_1,operator_2)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12420 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12421 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12421 DEBUG ReloadLog  - Query added to log: SELECT auction, bidder, P.id, C.id
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12421 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12422 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12422 INFO  StandardExecutor  - Starting query (ID: 43)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
12423 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
12423 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
12424 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
12424 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
12425 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
12426 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
12428 INFO  StandardExecutor  - Query 43 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
12435 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 43 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
12436 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
12436 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
12436 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT auction, bidder, P.id, C.id 
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
12436 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12438 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
12439 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
12442 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
12442 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
12442 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
12443 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@2dee44cc[Locked by thread Thread-71] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
12443 INFO  StandardExecutor  - Stopping query (ID: 43).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
12443 DEBUG StandardExecutor  - Try to stop query 43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
12443 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
12444 WARN  NonBlockingTcpClientHandler  -  - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.NonBlockingTcpClientHandler.socketException(NonBlockingTcpClientHandler.java:437) 
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.ensureReadOpen(SocketChannelImpl.java:257)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:300)
	at de.uniol.inf.is.odysseus.core.connection.NioTcpConnection.onRead(NioTcpConnection.java:58)
	at de.uniol.inf.is.odysseus.core.connection.SelectorThread.run(SelectorThread.java:276)
	at java.lang.Thread.run(Thread.java:745)
12444 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
12445 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
12446 INFO  StandardExecutor  - Query 43 stopped. Execution time 20 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
12446 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 43 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
12446 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
12446 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
12446 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
12447 INFO  StandardExecutor  - Removing Query 43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
12447 DEBUG StandardExecutor  - Removing Ownership 43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
12447 INFO  StandardExecutor  - Query 43 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
12447 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},person))
operator_2 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_3 = MAP({expressions=['bid.auction','bid.bidder','P.id','C.id']},JOIN(ELEMENTWINDOW({size=5,advance=1},bid),JOIN(operator_1,operator_2)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
12447 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
12448 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
12448 DEBUG AbstractTestComponent  - Sub test "WindowTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
12448 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
12449 DEBUG AbstractTestComponent  - Stopping executor - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStopExecutor(AbstractTestComponent.java:110) 
12449 DEBUG SingleSchedulerManager  - Stop scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:304) 
12449 DEBUG AbstractSimpleThreadScheduler  - Stopping source treads - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:133) 
12449 DEBUG AbstractSimpleThreadScheduler  - Stopping scheduler executors - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:138) 
12449 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
12449 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
12449 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
12449 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
12450 DEBUG AbstractScheduler  - Stopping scheduling - de.uniol.inf.is.odysseus.core.server.scheduler.AbstractScheduler.stopScheduling(AbstractScheduler.java:216) 
12450 DEBUG AbstractSimpleThreadScheduler  - Setting new Plans to schedule :[] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:158) 
12450 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans done - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:178) 
12450 DEBUG SingleSchedulerManager  - Scheduling stopped. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:306) 
12454 DEBUG TestComponentRunner  - End Testcomponent 'CQL Parser Test'. Duration = 5146 ms - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:73) 
12454 DEBUG TestRunnerApplication  - Total results for component "CQL Parser Test" - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:103) 
12454 DEBUG TestRunnerApplication  - Sub test 1: CreateDatabaseConnectionTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12454 DEBUG TestRunnerApplication  - Sub test 2: CreateDatabaseSinkTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12454 DEBUG TestRunnerApplication  - Sub test 3: CreateDatabaseSourceTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12455 DEBUG TestRunnerApplication  - Sub test 4: CreateStreamFromFileTest.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12455 DEBUG TestRunnerApplication  - Sub test 5: CreateStreamTest.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12455 DEBUG TestRunnerApplication  - Sub test 6: CreateStreamToDatabaseSinkTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12455 DEBUG TestRunnerApplication  - Sub test 7: CreateViewTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12455 DEBUG TestRunnerApplication  - Sub test 8: ExistsTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12455 DEBUG TestRunnerApplication  - Sub test 9: ExistsTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12455 DEBUG TestRunnerApplication  - Sub test 10: ExistsTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12455 DEBUG TestRunnerApplication  - Sub test 11: QuantificationTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12455 DEBUG TestRunnerApplication  - Sub test 12: RenameTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12455 DEBUG TestRunnerApplication  - Sub test 13: RenameTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12455 DEBUG TestRunnerApplication  - Sub test 14: RenameTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12455 DEBUG TestRunnerApplication  - Sub test 15: RenameTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 16: RenameTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 17: RenameTest6.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 18: RenameTest7.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 19: SelectAggregationTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 20: SelectAggregationTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 21: SelectAggregationTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 22: SelectAggregationTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 23: SelectAggregationTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 24: SelectAllTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 25: SelectAllTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 26: SelectAllTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 27: SelectAllTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 28: SelectAllTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 29: SelectAllTest6.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 30: SelectExpressionTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12456 DEBUG TestRunnerApplication  - Sub test 31: SelectExpressionTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 32: SelectExpressionTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 33: SelectExpressionTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 34: SelectExpressionTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 35: SelectExpressionTest6.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 36: SelectExpressionTest7.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 37: SelectTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 38: SelectTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 39: SelectTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 40: SelectTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 41: SelectTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 42: SelectTest6.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 43: SelectTest7.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 44: SetTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 45: StreamToTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12457 DEBUG TestRunnerApplication  - Sub test 46: SubQueryTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12462 DEBUG TestRunnerApplication  - Sub test 47: WindowTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12463 DEBUG TestRunnerApplication  - Sub test 48: WindowTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12463 DEBUG TestRunnerApplication  - Sub test 49: WindowTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
12463 DEBUG TestRunnerApplication  - no components were added since 13ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
13466 DEBUG TestRunnerApplication  - no components were added since 6221ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
14471 DEBUG TestRunnerApplication  - no components were added since 7226ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
15476 DEBUG TestRunnerApplication  - no components were added since 8231ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
16481 DEBUG TestRunnerApplication  - no components were added since 9236ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
17485 DEBUG TestRunnerApplication  - All tests were run. - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:74) 
17489 DEBUG TestRunnerApplication  -  Status                                                      Component      Time Error
--------------------------------------------------------------------------------------
     OK                                                CQL Parser Test    5146ms
--------------------------------------------------------------------------------------
-                     OK             CreateDatabaseConnectionTest1.qry     486ms
-                     OK                   CreateDatabaseSinkTest1.qry     397ms
-                     OK                 CreateDatabaseSourceTest1.qry      53ms
-                     OK                  CreateStreamFromFileTest.qry      27ms
-                     OK                          CreateStreamTest.qry     139ms
-                     OK           CreateStreamToDatabaseSinkTest1.qry     210ms
-                     OK                           CreateViewTest1.qry      39ms
-                     OK                               ExistsTest1.qry     668ms
-                     OK                               ExistsTest2.qry     109ms
-                     OK                               ExistsTest3.qry      99ms
-                     OK                       QuantificationTest1.qry      61ms
-                     OK                               RenameTest1.qry      98ms
-                     OK                               RenameTest2.qry     248ms
-                     OK                               RenameTest3.qry      56ms
-                     OK                               RenameTest4.qry      85ms
-                     OK                               RenameTest5.qry      86ms
-                     OK                               RenameTest6.qry     139ms
-                     OK                               RenameTest7.qry     180ms
-                     OK                    SelectAggregationTest1.qry      71ms
-                     OK                    SelectAggregationTest2.qry      43ms
-                     OK                    SelectAggregationTest3.qry     257ms
-                     OK                    SelectAggregationTest4.qry      75ms
-                     OK                    SelectAggregationTest5.qry      79ms
-                     OK                            SelectAllTest1.qry      53ms
-                     OK                            SelectAllTest2.qry      40ms
-                     OK                            SelectAllTest3.qry      69ms
-                     OK                            SelectAllTest4.qry      24ms
-                     OK                            SelectAllTest5.qry      51ms
-                     OK                            SelectAllTest6.qry      50ms
-                     OK                     SelectExpressionTest1.qry      39ms
-                     OK                     SelectExpressionTest2.qry      41ms
-                     OK                     SelectExpressionTest3.qry     193ms
-                     OK                     SelectExpressionTest4.qry      34ms
-                     OK                     SelectExpressionTest5.qry      71ms
-                     OK                     SelectExpressionTest6.qry      51ms
-                     OK                     SelectExpressionTest7.qry      54ms
-                     OK                               SelectTest1.qry      26ms
-                     OK                               SelectTest2.qry      26ms
-                     OK                               SelectTest3.qry      20ms
-                     OK                               SelectTest4.qry      85ms
-                     OK                               SelectTest5.qry      66ms
-                     OK                               SelectTest6.qry      49ms
-                     OK                               SelectTest7.qry      29ms
-                     OK                                  SetTest1.qry      51ms
-                     OK                             StreamToTest1.qry      40ms
-                     OK                             SubQueryTest1.qry      49ms
-                     OK                               WindowTest1.qry      51ms
-                     OK                               WindowTest2.qry      38ms
-                     OK                               WindowTest3.qry      72ms
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
     OK                                                                   5146ms 
 - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.printReports(TestRunnerApplication.java:205) 
17489 DEBUG TestRunnerApplication  - All tests finished with no errors. - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:87) 
17535 DEBUG MEP  - Remove Function Provider: && - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17535 DEBUG MEP  - Remove Function Provider: || - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17536 DEBUG MEP  - Remove Function Provider: ! - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17536 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17536 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17536 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17536 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17536 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17537 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17537 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17537 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17537 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17537 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17538 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17538 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17538 DEBUG MEP  - Remove Function Provider: <= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17538 DEBUG MEP  - Remove Function Provider: <= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17538 DEBUG MEP  - Remove Function Provider: < - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17538 DEBUG MEP  - Remove Function Provider: < - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17538 DEBUG MEP  - Remove Function Provider: >= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17539 DEBUG MEP  - Remove Function Provider: >= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17539 DEBUG MEP  - Remove Function Provider: > - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17539 DEBUG MEP  - Remove Function Provider: > - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17539 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17539 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17539 DEBUG MEP  - Remove Function Provider: toProbabilisticContinuousDouble - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17539 DEBUG MEP  - Remove Function Provider: toProbabilisticDiscreteDouble - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17540 DEBUG MEP  - Remove Function Provider: similarity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17540 DEBUG MEP  - Remove Function Provider: similarity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17540 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17540 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17540 DEBUG MEP  - Remove Function Provider: kl - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17541 DEBUG MEP  - Remove Function Provider: kl - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17541 DEBUG MEP  - Remove Function Provider: loglikelihood - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17541 DEBUG MEP  - Remove Function Provider: as2DVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17541 DEBUG MEP  - Remove Function Provider: as3DVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17541 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17541 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17541 DEBUG MEP  - Remove Function Provider: int - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17553 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17554 DEBUG MEP  - Remove Function Provider: path - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17555 DEBUG MEP  - Remove Function Provider: toKeyValue - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17555 DEBUG MEP  - Remove Function Provider: getElement - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17555 DEBUG MEP  - Remove Function Provider: getElements - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17571 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.app.AppCommands@5aa108e6 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17571 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.app.AppCommands@5aa108e6 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17575 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@74a3909 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17575 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@74a3909 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17575 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@620e52fd - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17575 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@620e52fd - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17575 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@29db627b - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17575 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@29db627b - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17576 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@cc407a5 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17576 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@cc407a5 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17576 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@622b3154 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17576 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@622b3154 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17578 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@671780e0 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17578 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@671780e0 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17579 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@69a60123 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17580 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@69a60123 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17585 DEBUG MEP  - Remove Function Provider: MDAIndex - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17585 DEBUG MEP  - Remove Function Provider: MDAIndices - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17585 DEBUG MEP  - Remove Function Provider: MDADim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17585 DEBUG MEP  - Remove Function Provider: MDAInit - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17585 DEBUG MEP  - Remove Function Provider: MDADrop - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17585 DEBUG MEP  - Remove Function Provider: MDAAddDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17585 DEBUG MEP  - Remove Function Provider: MDAAddDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17586 DEBUG MEP  - Remove Function Provider: MDARemoveDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17586 DEBUG MEP  - Remove Function Provider: MDAExchangeDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17587 DEBUG MEP  - Remove Function Provider: binomialTest - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17600 DEBUG StandardExecutor  - Removing all queries before shutdown - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.deactivate(StandardExecutor.java:151) 
17605 DEBUG MEP  - Remove Function Provider: ContextStore - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17608 DEBUG ruleengine  - Rewrite - Removing rules for... de.uniol.inf.is.odysseus.relational.rewrite.RuleProvider@5d0e942a - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.unbindRuleProvider(AbstractInventory.java:218) 
17615 DEBUG ruleengine  - Rewrite - Removing rules for... de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RewriteRuleProvider@6411bbff - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.unbindRuleProvider(AbstractInventory.java:218) 
18032 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
18032 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
18032 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
18032 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
18032 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
18040 DEBUG UserManagementProvider  - User management Memorystore removed - de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.unbindUserManagement(UserManagementProvider.java:134) 
18048 DEBUG MEP  - Remove Function Provider: DolToEur - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18048 DEBUG MEP  - Remove Function Provider: retrieveQueryIDs - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18049 DEBUG MEP  - Remove Function Provider: filterQueryIDs - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18049 DEBUG MEP  - Remove Function Provider: QueryPriority - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18049 DEBUG MEP  - Remove Function Provider: IsACQuery - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18049 DEBUG MEP  - Remove Function Provider: QueryBasePriority - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18049 DEBUG MEP  - Remove Function Provider: QueryState - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18049 DEBUG MEP  - Remove Function Provider: QueryName - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18049 DEBUG MEP  - Remove Function Provider: QueryStartTS - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18049 DEBUG MEP  - Remove Function Provider: QueryLastStateChangeTS - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18050 DEBUG MEP  - Remove Function Provider: QuerySheddingFactor - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18050 DEBUG MEP  - Remove Function Provider: MaxSheddingFactor - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18050 DEBUG MEP  - Remove Function Provider: getSharedOpsCount - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18050 DEBUG MEP  - Remove Function Provider: getSourceCount - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18050 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18050 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18050 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18050 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18051 DEBUG MEP  - Remove Function Provider: ^ - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18051 DEBUG MEP  - Remove Function Provider: union - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18051 DEBUG MEP  - Remove Function Provider: intersection - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18051 DEBUG MEP  - Remove Function Provider: difference - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18051 DEBUG MEP  - Remove Function Provider: toInterval - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18051 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18051 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18052 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18052 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18052 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18052 DEBUG MEP  - Remove Function Provider: sub - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18052 DEBUG MEP  - Remove Function Provider: sub - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18052 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18052 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18053 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18053 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18053 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18053 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18053 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18053 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18053 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18053 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18054 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18054 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18054 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18054 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18054 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18054 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18054 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18054 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18054 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18055 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18055 DEBUG MEP  - Remove Function Provider: ^ - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18055 DEBUG MEP  - Remove Function Provider: dotProduct - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18055 DEBUG MEP  - Remove Function Provider: dotProduct - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18055 DEBUG MEP  - Remove Function Provider: Min - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18055 DEBUG MEP  - Remove Function Provider: Min - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18055 DEBUG MEP  - Remove Function Provider: Max - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18055 DEBUG MEP  - Remove Function Provider: Max - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18056 DEBUG MEP  - Remove Function Provider: Count - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18056 DEBUG MEP  - Remove Function Provider: Count - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18056 DEBUG MEP  - Remove Function Provider: Sum - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18056 DEBUG MEP  - Remove Function Provider: Sum - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18056 DEBUG MEP  - Remove Function Provider: AVG - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18056 DEBUG MEP  - Remove Function Provider: AVG - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18056 DEBUG MEP  - Remove Function Provider: Median - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18057 DEBUG MEP  - Remove Function Provider: Median - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18057 DEBUG MEP  - Remove Function Provider: StdDev - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18057 DEBUG MEP  - Remove Function Provider: StdDev - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18057 DEBUG MEP  - Remove Function Provider: Var - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18057 DEBUG MEP  - Remove Function Provider: Var - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18057 DEBUG MEP  - Remove Function Provider: toVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18057 DEBUG MEP  - Remove Function Provider: toMatrix - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18057 DEBUG MEP  - Remove Function Provider: toString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18058 DEBUG MEP  - Remove Function Provider: toString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18058 DEBUG MEP  - Remove Function Provider: vectorFromString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18058 DEBUG MEP  - Remove Function Provider: vectorFromString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18058 DEBUG MEP  - Remove Function Provider: readMatrix - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18058 DEBUG MEP  - Remove Function Provider: readVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18058 DEBUG MEP  - Remove Function Provider: readVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18058 DEBUG MEP  - Remove Function Provider: perms - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18058 DEBUG MEP  - Remove Function Provider: perm - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18058 DEBUG MEP  - Remove Function Provider: det - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18058 DEBUG MEP  - Remove Function Provider: tr - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18059 DEBUG MEP  - Remove Function Provider: trans - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18059 DEBUG MEP  - Remove Function Provider: inv - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18059 DEBUG MEP  - Remove Function Provider: identity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18059 DEBUG MEP  - Remove Function Provider: zeros - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18059 DEBUG MEP  - Remove Function Provider: ones - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18059 DEBUG MEP  - Remove Function Provider: eig - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18059 DEBUG MEP  - Remove Function Provider: ieig - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18059 DEBUG MEP  - Remove Function Provider: svd - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18060 DEBUG MEP  - Remove Function Provider: kvread - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18060 DEBUG MEP  - Remove Function Provider: kvwrite - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
18060 DEBUG MEP  - Remove Function Provider: kvremove - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
