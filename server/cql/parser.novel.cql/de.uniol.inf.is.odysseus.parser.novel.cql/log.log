Configuration location:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/
Configuration file:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/config.ini loaded
Install location:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/
Framework located:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/plugins/org.eclipse.osgi_3.10.101.v20150820-1432.jar
Framework classpath:
    file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/plugins/org.eclipse.osgi_3.10.101.v20150820-1432.jar
Splash location:
    null
Debug options:
    file:/Applications/Eclipse.app/Contents/MacOS/.options not found
Time to load bundles: 6
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [bundleresource://75.fwk1889057031:2/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [bundleresource://75.fwk1889057031:6/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
0    DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@5886bc79 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
5    DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@5886bc79 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
5    DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@2eb8ac11 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
5    DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@2eb8ac11 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
!SESSION 2017-06-10 15:51:39.471 -----------------------------------------------
eclipse.buildId=unknown
java.version=1.8.0_112
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en
Framework arguments:  -product de.uniol.inf.is.odysseus.test.odysseustestproduct System manager
Command-line arguments:  -product de.uniol.inf.is.odysseus.test.odysseustestproduct -data /Users/jp/workspace/eclipse/odysseus/../runtime-TestRunnerProduct.product -dev file:/Users/jp/workspace/eclipse/odysseus/.metadata/.plugins/org.eclipse.pde.core/TestRunnerProduct.product/dev.properties -os macosx -ws cocoa -arch x86_64 -consoleLog -debug .options System manager -console

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:40.237
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.cql. The reference is: Reference[name = IVisitor, interface = de.uniol.inf.is.odysseus.parser.cql.IVisitor, policy = dynamic, cardinality = 0..n, target = null, bind = addVisitor, unbind = removeVisitor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:40.249
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.report.ReportProviderBinder. The reference is: Reference[name = IReportProvider, interface = de.uniol.inf.is.odysseus.report.IReportProvider, policy = dynamic, cardinality = 0..n, target = null, bind = bindReportProvider, unbind = unbindReportProvider]
43   DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@24102abb - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
43   DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@24102abb - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
132  DEBUG VisitorService  - Adding visitor for CQL: de.uniol.inf.is.odysseus.context.cql.ContextVisitor - de.uniol.inf.is.odysseus.parser.cql.VisitorService.addVisitor(VisitorService.java:48) 
248  DEBUG CommandProviderBinder  - Binding command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@667c4449 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
249  DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@667c4449 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
479  DEBUG CommandProviderBinder  - Binding command provider org.eclipse.equinox.internal.app.AppCommands@6a7331fb - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
480  DEBUG CommandProviderRegistry  - Registering command provider org.eclipse.equinox.internal.app.AppCommands@6a7331fb - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
554  INFO  ExtensionFactory  - added ContextParser for de.uniol.inf.is.odysseus.parser.novel.cql.server.CQLParser - de.uniol.inf.is.odysseus.parser.novel.cql.server.ExtensionFactory.addExtension(ExtensionFactory.java:24) 
558  INFO  ExtensionFactory  - added DatabaseParser for de.uniol.inf.is.odysseus.parser.novel.cql.server.CQLParser - de.uniol.inf.is.odysseus.parser.novel.cql.server.ExtensionFactory.addExtension(ExtensionFactory.java:24) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:40.919
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.core.server.operatorbuilder. The reference is: Reference[name = IOperatorBuilder, interface = de.uniol.inf.is.odysseus.core.server.logicaloperator.builder.IOperatorBuilder, policy = dynamic, cardinality = 0..n, target = null, bind = addOperatorBuilder, unbind = removeOperatorBuilder]
820  DEBUG FileUtils  - Read from file /Users/jp/.odysseus/odysseus.conf - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 
839  INFO  OdysseusConfiguration  - Read config file from /Users/jp/.odysseus/odysseus.conf - de.uniol.inf.is.odysseus.core.server.OdysseusConfiguration.loadProperties(OdysseusConfiguration.java:85) 
875  DEBUG FileUtils  - Read from file /Users/jp/.odysseus/store/tenants.store - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 
883  ERROR OsgiObjectInputStream  - Nullpointer finding class de.uniol.inf.is.odysseus.core.server.usermanagement.Tenant - de.uniol.inf.is.odysseus.core.util.OsgiObjectInputStream.resolveClass(OsgiObjectInputStream.java:53) 
884  ERROR OsgiObjectInputStream  - Nullpointer finding class de.uniol.inf.is.odysseus.core.server.usermanagement.AbstractTenant - de.uniol.inf.is.odysseus.core.util.OsgiObjectInputStream.resolveClass(OsgiObjectInputStream.java:53) 
885  ERROR FileStore  - Error reading from /Users/jp/.odysseus/store/tenants.store de.uniol.inf.is.odysseus.core.server.usermanagement.Tenant cannot be found by de.uniol.inf.is.odysseus.core_1.0.0.qualifier for key  - de.uniol.inf.is.odysseus.core.server.store.FileStore.loadCache(FileStore.java:102) 
java.lang.ClassNotFoundException: de.uniol.inf.is.odysseus.core.server.usermanagement.Tenant cannot be found by de.uniol.inf.is.odysseus.core_1.0.0.qualifier
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:439)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at java.io.ObjectInputStream.resolveClass(ObjectInputStream.java:628)
	at de.uniol.inf.is.odysseus.core.util.OsgiObjectInputStream.resolveClass(OsgiObjectInputStream.java:55)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1620)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1521)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1781)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1353)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:373)
	at de.uniol.inf.is.odysseus.core.server.store.FileStore.loadCache(FileStore.java:96)
	at de.uniol.inf.is.odysseus.core.server.store.FileStore.<init>(FileStore.java:75)
	at de.uniol.inf.is.odysseus.core.server.usermanagement.TenantDAO.<init>(TenantDAO.java:55)
	at de.uniol.inf.is.odysseus.core.server.usermanagement.TenantDAO.getInstance(TenantDAO.java:23)
	at de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.<clinit>(UserManagementProvider.java:41)
	at de.uniol.inf.is.odysseus.core.server.datadictionary.DataDictionaryProvider.bindDataDictionary(DataDictionaryProvider.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.internal.ds.model.ComponentReference.bind(ComponentReference.java:376)
	at org.eclipse.equinox.internal.ds.model.ServiceComponentProp.bindReference(ServiceComponentProp.java:430)
	at org.eclipse.equinox.internal.ds.model.ServiceComponentProp.bind(ServiceComponentProp.java:218)
	at org.eclipse.equinox.internal.ds.model.ServiceComponentProp.build(ServiceComponentProp.java:343)
	at org.eclipse.equinox.internal.ds.InstanceProcess.buildComponent(InstanceProcess.java:620)
	at org.eclipse.equinox.internal.ds.InstanceProcess.buildComponents(InstanceProcess.java:197)
	at org.eclipse.equinox.internal.ds.Resolver.getEligible(Resolver.java:343)
	at org.eclipse.equinox.internal.ds.SCRManager.serviceChanged(SCRManager.java:222)
	at org.eclipse.osgi.internal.serviceregistry.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:109)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.dispatchEvent(BundleContextImpl.java:914)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:148)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEventPrivileged(ServiceRegistry.java:862)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEvent(ServiceRegistry.java:801)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.register(ServiceRegistrationImpl.java:127)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.registerService(ServiceRegistry.java:225)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.registerService(BundleContextImpl.java:464)
	at org.eclipse.equinox.internal.ds.InstanceProcess.registerService(InstanceProcess.java:536)
	at org.eclipse.equinox.internal.ds.InstanceProcess.buildComponents(InstanceProcess.java:260)
	at org.eclipse.equinox.internal.ds.Resolver.buildNewlySatisfied(Resolver.java:473)
	at org.eclipse.equinox.internal.ds.Resolver.enableComponents(Resolver.java:217)
	at org.eclipse.equinox.internal.ds.SCRManager.performWork(SCRManager.java:816)
	at org.eclipse.equinox.internal.ds.SCRManager$QueuedJob.dispatch(SCRManager.java:783)
	at org.eclipse.equinox.internal.ds.WorkThread.run(WorkThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
887  ERROR FileStore  - Error reading from /Users/jp/.odysseus/store/tenants.store de.uniol.inf.is.odysseus.core.server.usermanagement.Tenant cannot be found by de.uniol.inf.is.odysseus.core_1.0.0.qualifier for key Marco1 - de.uniol.inf.is.odysseus.core.server.store.FileStore.loadCache(FileStore.java:102) 
java.lang.ClassNotFoundException: de.uniol.inf.is.odysseus.core.server.usermanagement.Tenant cannot be found by de.uniol.inf.is.odysseus.core_1.0.0.qualifier
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:439)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at java.io.ObjectInputStream.resolveClass(ObjectInputStream.java:628)
	at de.uniol.inf.is.odysseus.core.util.OsgiObjectInputStream.resolveClass(OsgiObjectInputStream.java:55)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1620)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1521)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1781)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1353)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:373)
	at de.uniol.inf.is.odysseus.core.server.store.FileStore.loadCache(FileStore.java:96)
	at de.uniol.inf.is.odysseus.core.server.store.FileStore.<init>(FileStore.java:75)
	at de.uniol.inf.is.odysseus.core.server.usermanagement.TenantDAO.<init>(TenantDAO.java:55)
	at de.uniol.inf.is.odysseus.core.server.usermanagement.TenantDAO.getInstance(TenantDAO.java:23)
	at de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.<clinit>(UserManagementProvider.java:41)
	at de.uniol.inf.is.odysseus.core.server.datadictionary.DataDictionaryProvider.bindDataDictionary(DataDictionaryProvider.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.internal.ds.model.ComponentReference.bind(ComponentReference.java:376)
	at org.eclipse.equinox.internal.ds.model.ServiceComponentProp.bindReference(ServiceComponentProp.java:430)
	at org.eclipse.equinox.internal.ds.model.ServiceComponentProp.bind(ServiceComponentProp.java:218)
	at org.eclipse.equinox.internal.ds.model.ServiceComponentProp.build(ServiceComponentProp.java:343)
	at org.eclipse.equinox.internal.ds.InstanceProcess.buildComponent(InstanceProcess.java:620)
	at org.eclipse.equinox.internal.ds.InstanceProcess.buildComponents(InstanceProcess.java:197)
	at org.eclipse.equinox.internal.ds.Resolver.getEligible(Resolver.java:343)
	at org.eclipse.equinox.internal.ds.SCRManager.serviceChanged(SCRManager.java:222)
	at org.eclipse.osgi.internal.serviceregistry.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:109)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.dispatchEvent(BundleContextImpl.java:914)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:148)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEventPrivileged(ServiceRegistry.java:862)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEvent(ServiceRegistry.java:801)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.register(ServiceRegistrationImpl.java:127)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.registerService(ServiceRegistry.java:225)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.registerService(BundleContextImpl.java:464)
	at org.eclipse.equinox.internal.ds.InstanceProcess.registerService(InstanceProcess.java:536)
	at org.eclipse.equinox.internal.ds.InstanceProcess.buildComponents(InstanceProcess.java:260)
	at org.eclipse.equinox.internal.ds.Resolver.buildNewlySatisfied(Resolver.java:473)
	at org.eclipse.equinox.internal.ds.Resolver.enableComponents(Resolver.java:217)
	at org.eclipse.equinox.internal.ds.SCRManager.performWork(SCRManager.java:816)
	at org.eclipse.equinox.internal.ds.SCRManager$QueuedJob.dispatch(SCRManager.java:783)
	at org.eclipse.equinox.internal.ds.WorkThread.run(WorkThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
889  ERROR FileStore  - Error reading from /Users/jp/.odysseus/store/tenants.store de.uniol.inf.is.odysseus.core.server.usermanagement.Tenant cannot be found by de.uniol.inf.is.odysseus.core_1.0.0.qualifier for key Marco2 - de.uniol.inf.is.odysseus.core.server.store.FileStore.loadCache(FileStore.java:102) 
java.lang.ClassNotFoundException: de.uniol.inf.is.odysseus.core.server.usermanagement.Tenant cannot be found by de.uniol.inf.is.odysseus.core_1.0.0.qualifier
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:439)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at java.io.ObjectInputStream.resolveClass(ObjectInputStream.java:628)
	at de.uniol.inf.is.odysseus.core.util.OsgiObjectInputStream.resolveClass(OsgiObjectInputStream.java:55)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1620)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1521)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1781)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1353)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:373)
	at de.uniol.inf.is.odysseus.core.server.store.FileStore.loadCache(FileStore.java:96)
	at de.uniol.inf.is.odysseus.core.server.store.FileStore.<init>(FileStore.java:75)
	at de.uniol.inf.is.odysseus.core.server.usermanagement.TenantDAO.<init>(TenantDAO.java:55)
	at de.uniol.inf.is.odysseus.core.server.usermanagement.TenantDAO.getInstance(TenantDAO.java:23)
	at de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.<clinit>(UserManagementProvider.java:41)
	at de.uniol.inf.is.odysseus.core.server.datadictionary.DataDictionaryProvider.bindDataDictionary(DataDictionaryProvider.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.internal.ds.model.ComponentReference.bind(ComponentReference.java:376)
	at org.eclipse.equinox.internal.ds.model.ServiceComponentProp.bindReference(ServiceComponentProp.java:430)
	at org.eclipse.equinox.internal.ds.model.ServiceComponentProp.bind(ServiceComponentProp.java:218)
	at org.eclipse.equinox.internal.ds.model.ServiceComponentProp.build(ServiceComponentProp.java:343)
	at org.eclipse.equinox.internal.ds.InstanceProcess.buildComponent(InstanceProcess.java:620)
	at org.eclipse.equinox.internal.ds.InstanceProcess.buildComponents(InstanceProcess.java:197)
	at org.eclipse.equinox.internal.ds.Resolver.getEligible(Resolver.java:343)
	at org.eclipse.equinox.internal.ds.SCRManager.serviceChanged(SCRManager.java:222)
	at org.eclipse.osgi.internal.serviceregistry.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:109)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.dispatchEvent(BundleContextImpl.java:914)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:148)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEventPrivileged(ServiceRegistry.java:862)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEvent(ServiceRegistry.java:801)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.register(ServiceRegistrationImpl.java:127)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.registerService(ServiceRegistry.java:225)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.registerService(BundleContextImpl.java:464)
	at org.eclipse.equinox.internal.ds.InstanceProcess.registerService(InstanceProcess.java:536)
	at org.eclipse.equinox.internal.ds.InstanceProcess.buildComponents(InstanceProcess.java:260)
	at org.eclipse.equinox.internal.ds.Resolver.buildNewlySatisfied(Resolver.java:473)
	at org.eclipse.equinox.internal.ds.Resolver.enableComponents(Resolver.java:217)
	at org.eclipse.equinox.internal.ds.SCRManager.performWork(SCRManager.java:816)
	at org.eclipse.equinox.internal.ds.SCRManager$QueuedJob.dispatch(SCRManager.java:783)
	at org.eclipse.equinox.internal.ds.WorkThread.run(WorkThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
891  ERROR FileStore  - Error reading from /Users/jp/.odysseus/store/tenants.store de.uniol.inf.is.odysseus.core.server.usermanagement.Tenant cannot be found by de.uniol.inf.is.odysseus.core_1.0.0.qualifier for key Marco3 - de.uniol.inf.is.odysseus.core.server.store.FileStore.loadCache(FileStore.java:102) 
java.lang.ClassNotFoundException: de.uniol.inf.is.odysseus.core.server.usermanagement.Tenant cannot be found by de.uniol.inf.is.odysseus.core_1.0.0.qualifier
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:439)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at java.io.ObjectInputStream.resolveClass(ObjectInputStream.java:628)
	at de.uniol.inf.is.odysseus.core.util.OsgiObjectInputStream.resolveClass(OsgiObjectInputStream.java:55)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1620)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1521)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1781)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1353)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:373)
	at de.uniol.inf.is.odysseus.core.server.store.FileStore.loadCache(FileStore.java:96)
	at de.uniol.inf.is.odysseus.core.server.store.FileStore.<init>(FileStore.java:75)
	at de.uniol.inf.is.odysseus.core.server.usermanagement.TenantDAO.<init>(TenantDAO.java:55)
	at de.uniol.inf.is.odysseus.core.server.usermanagement.TenantDAO.getInstance(TenantDAO.java:23)
	at de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.<clinit>(UserManagementProvider.java:41)
	at de.uniol.inf.is.odysseus.core.server.datadictionary.DataDictionaryProvider.bindDataDictionary(DataDictionaryProvider.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.internal.ds.model.ComponentReference.bind(ComponentReference.java:376)
	at org.eclipse.equinox.internal.ds.model.ServiceComponentProp.bindReference(ServiceComponentProp.java:430)
	at org.eclipse.equinox.internal.ds.model.ServiceComponentProp.bind(ServiceComponentProp.java:218)
	at org.eclipse.equinox.internal.ds.model.ServiceComponentProp.build(ServiceComponentProp.java:343)
	at org.eclipse.equinox.internal.ds.InstanceProcess.buildComponent(InstanceProcess.java:620)
	at org.eclipse.equinox.internal.ds.InstanceProcess.buildComponents(InstanceProcess.java:197)
	at org.eclipse.equinox.internal.ds.Resolver.getEligible(Resolver.java:343)
	at org.eclipse.equinox.internal.ds.SCRManager.serviceChanged(SCRManager.java:222)
	at org.eclipse.osgi.internal.serviceregistry.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:109)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.dispatchEvent(BundleContextImpl.java:914)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:148)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEventPrivileged(ServiceRegistry.java:862)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEvent(ServiceRegistry.java:801)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.register(ServiceRegistrationImpl.java:127)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.registerService(ServiceRegistry.java:225)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.registerService(BundleContextImpl.java:464)
	at org.eclipse.equinox.internal.ds.InstanceProcess.registerService(InstanceProcess.java:536)
	at org.eclipse.equinox.internal.ds.InstanceProcess.buildComponents(InstanceProcess.java:260)
	at org.eclipse.equinox.internal.ds.Resolver.buildNewlySatisfied(Resolver.java:473)
	at org.eclipse.equinox.internal.ds.Resolver.enableComponents(Resolver.java:217)
	at org.eclipse.equinox.internal.ds.SCRManager.performWork(SCRManager.java:816)
	at org.eclipse.equinox.internal.ds.SCRManager$QueuedJob.dispatch(SCRManager.java:783)
	at org.eclipse.equinox.internal.ds.WorkThread.run(WorkThread.java:89)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:42.620
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLStatementGenerator. The reference is: Reference[name = IPQLStatementGenerator, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLStatementGenerator, policy = dynamic, cardinality = 0..n, target = null, bind = bindPQLStatementGenerator, unbind = unbindPQLStatementGenerator]

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:42.688
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.relational_interval.ReplacementRegistry. The reference is: Reference[name = IReplacement, interface = de.uniol.inf.is.odysseus.relational_interval.replacement.IReplacement, policy = dynamic, cardinality = 0..n, target = null, bind = addReplacement, unbind = removeReplacement]
2477 DEBUG ruleengine  - Rewrite - Group added to workflow: PREPARE. New workflow is: [PREPARE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2477 DEBUG ruleengine  - Rewrite - Group added to workflow: DELETE. New workflow is: [PREPARE, DELETE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2477 DEBUG ruleengine  - Rewrite - Group added to workflow: SPLIT. New workflow is: [PREPARE, DELETE, SPLIT] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2477 DEBUG ruleengine  - Rewrite - Group added to workflow: PREGROUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2477 DEBUG ruleengine  - Rewrite - Group added to workflow: SWITCH. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2477 DEBUG ruleengine  - Rewrite - Group added to workflow: GROUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH, GROUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2478 DEBUG ruleengine  - Rewrite - Group added to workflow: CLEANUP. New workflow is: [PREPARE, DELETE, SPLIT, PREGROUP, SWITCH, GROUP, CLEANUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:42.728
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.Config. The reference is: Reference[name = IOdysseusScriptConfigSetting, interface = de.uniol.inf.is.odysseus.script.parser.IOdysseusScriptConfigSetting, policy = dynamic, cardinality = 0..n, target = null, bind = bindConfigSetting, unbind = unbindConfigSetting]

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:42.738
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.ReplacementProviderManager. The reference is: Reference[name = IReplacementProvider, interface = de.uniol.inf.is.odysseus.script.parser.IReplacementProvider, policy = dynamic, cardinality = 0..n, target = null, bind = bindReplacementProvider, unbind = unbindReplacementProvider]
2526 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@166a5d11 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
2527 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@166a5d11 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:42.758
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.script.parser.RecoveryConfigKeyword. The reference is: Reference[name = IRecoveryExecutor, interface = de.uniol.inf.is.odysseus.core.server.recovery.IRecoveryExecutor, policy = dynamic, cardinality = 0..n, target = null, bind = bindRecoveryExecutor, unbind = unbindRecoveryExecutor]
2692 DEBUG ruleengine  - Transform - Group added to workflow: SUBSTITUTION. New workflow is: [SUBSTITUTION] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2692 DEBUG ruleengine  - Transform - Group added to workflow: INIT. New workflow is: [SUBSTITUTION, INIT] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2692 DEBUG ruleengine  - Transform - Group added to workflow: ACCESS. New workflow is: [SUBSTITUTION, INIT, ACCESS] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2693 DEBUG ruleengine  - Transform - Group added to workflow: CREATE_METADATA. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2693 DEBUG ruleengine  - Transform - Group added to workflow: TRANSFORMATION. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2693 DEBUG ruleengine  - Transform - Group added to workflow: SENDER. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2693 DEBUG ruleengine  - Transform - Group added to workflow: SECURITY. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2693 DEBUG ruleengine  - Transform - Group added to workflow: METAOBJECTS. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2693 DEBUG ruleengine  - Transform - Group added to workflow: VALIDATE. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS, VALIDATE] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2694 DEBUG ruleengine  - Transform - Group added to workflow: CLEANUP. New workflow is: [SUBSTITUTION, INIT, ACCESS, CREATE_METADATA, TRANSFORMATION, SENDER, SECURITY, METAOBJECTS, VALIDATE, CLEANUP] - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRuleFlowGroup(AbstractInventory.java:101) 
2765 DEBUG ruleengine  - Transform - Loading rule - TAggregationAORule: "TAggregationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2768 DEBUG ruleengine  - Transform - Loading rule - TAggregationAORule: "TAggregationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2783 DEBUG ruleengine  - Transform - Loading rule - TSaseAOToPatternDetectAORule: "SASEAO --> PATTERNDETECTAO" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2786 DEBUG ruleengine  - Transform - Loading rule - TSaseAOToPatternDetectAORule: "SASEAO --> PATTERNDETECTAO" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2791 DEBUG ruleengine  - Transform - Loading rule - TPatternDetectAORule: "CepAO --> CepOperator (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2793 DEBUG ruleengine  - Transform - Loading rule - TPatternDetectAORule: "CepAO --> CepOperator (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2829 DEBUG UserManagementProvider  - Bound UserManagementService Memorystore - de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.bindUserManagement(UserManagementProvider.java:120) 
2940 DEBUG ruleengine  - Transform - Loading rule - TLatencyCalculationRule: "LatencyCalculationAO -> LatencyCalculationPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2942 DEBUG ruleengine  - Transform - Loading rule - TLatencyCalculationRule: "LatencyCalculationAO -> LatencyCalculationPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2955 DEBUG ruleengine  - Transform - Loading rule - TLatencyToPayloadAORule: "TLatencyToPayloadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
2957 DEBUG ruleengine  - Transform - Loading rule - TLatencyToPayloadAORule: "TLatencyToPayloadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
osgi> 
!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:43.320
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.cache.RemovalStrategyRegistry. The reference is: Reference[name = IRemovalStrategy, interface = de.uniol.inf.is.odysseus.cache.removalstrategy.IRemovalStrategy, policy = dynamic, cardinality = 0..n, target = null, bind = register, unbind = remove]
3146 DEBUG ruleengine  - Transform - Loading rule - TPatternMatchingAORule: "PatternMatchingAO -> PatternMatchingPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3153 DEBUG ruleengine  - Transform - Loading rule - TPatternMatchingAORule: "PatternMatchingAO -> PatternMatchingPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3318 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionAORule: "LinearRegressionAO -> LinearRegressionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3319 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionMergeAORule: "LinearRegressionMergeAO -> LinearRegressionMergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3325 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAOInsertLinearRegressionRule: "JoinAO -> Insert linear regression for Equi-Join" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3329 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAORule: "JoinAO -> Continuous probabilistic Equi-Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3332 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetDMRule: "Insert DataMergeFunction (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3334 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3336 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO -> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3343 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3345 INFO  Core  - Current size of heap: 	1.0 GB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:61) 
3345 INFO  Core  - Maximum size of heap: 	1.9 GB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:64) 
3345 INFO  Core  - Free memory of the heap: 	779.4 MB - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:67) 
3346 INFO  Core  - Running VM with: 	x86_64 - de.uniol.inf.is.odysseus.core.Activator.start(Activator.java:70) 
3346 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteUnNestAORule: "UnNestAO -> ProbabilisticDiscreteUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3351 DEBUG ruleengine  - Transform - Loading rule - TAssignDistributionAORule: "AssignDistributionAO -> AssignDistributionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3353 DEBUG ruleengine  - Transform - Loading rule - TEMAORule: "EMAO -> EMPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3354 DEBUG ruleengine  - Transform - Loading rule - TKalmanFilterAORule: "KalmanFilterAO -> KalmanFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3358 DEBUG ruleengine  - Transform - Loading rule - TKDEAORule: "KDEAO -> KDEPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3364 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAggregateAORule: "AggregateTIPO use probabilistic aggregations (IProbabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3365 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAORule: "ProbabilisticAO -> MetadataUpdatePO(IProbabilistic)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3370 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticApplicationTimestampRule: "TProbabilisticApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3377 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAORule: "JoinAO -> probabilistic Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3378 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetDMRule: "Insert DataMergeFunction JoinTIPO (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3379 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3386 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticMapAORule: "MapAO -> ProbabilisticMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3389 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3398 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3402 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3404 DEBUG ruleengine  - Transform - Loading rule - TRelationalExistenceToPayloadRule: "ExistenceToPayloadAO --> RelationalExistenceToPayloadPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3406 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionAORule: "LinearRegressionAO -> LinearRegressionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3407 DEBUG ruleengine  - Transform - Loading rule - TLinearRegressionMergeAORule: "LinearRegressionMergeAO -> LinearRegressionMergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3407 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAOInsertLinearRegressionRule: "JoinAO -> Insert linear regression for Equi-Join" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3407 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousEquiJoinAORule: "JoinAO -> Continuous probabilistic Equi-Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3408 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetDMRule: "Insert DataMergeFunction (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3408 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticContinuousLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3409 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO -> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3409 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3409 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticDiscreteUnNestAORule: "UnNestAO -> ProbabilisticDiscreteUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3410 DEBUG ruleengine  - Transform - Loading rule - TAssignDistributionAORule: "AssignDistributionAO -> AssignDistributionPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3410 DEBUG ruleengine  - Transform - Loading rule - TEMAORule: "EMAO -> EMPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3410 DEBUG ruleengine  - Transform - Loading rule - TKalmanFilterAORule: "KalmanFilterAO -> KalmanFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3411 DEBUG ruleengine  - Transform - Loading rule - TKDEAORule: "KDEAO -> KDEPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3411 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAggregateAORule: "AggregateTIPO use probabilistic aggregations (IProbabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3412 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticAORule: "ProbabilisticAO -> MetadataUpdatePO(IProbabilistic)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3412 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticApplicationTimestampRule: "TProbabilisticApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3412 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAORule: "JoinAO -> probabilistic Join" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3413 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetDMRule: "Insert DataMergeFunction JoinTIPO (Probabilistic)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3413 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3413 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticMapAORule: "MapAO -> ProbabilisticMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3414 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3414 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3414 DEBUG ruleengine  - Transform - Loading rule - TProbabilisticSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3414 DEBUG ruleengine  - Transform - Loading rule - TRelationalExistenceToPayloadRule: "ExistenceToPayloadAO --> RelationalExistenceToPayloadPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3486 DEBUG ruleengine  - Transform - Loading rule - TAggregateAORule: "TAggregateAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3487 DEBUG ruleengine  - Transform - Loading rule - TAggregatePORule: "Insert RelationalTupleGroupingHelper" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3489 DEBUG ruleengine  - Transform - Loading rule - TAssociativeStorageAORule: "AssociativeStorageAO -> AssociativeStoragePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3492 DEBUG ruleengine  - Transform - Loading rule - TBloomFilterAORule: "BloomFilterAO -> RelationalBloomFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3494 DEBUG ruleengine  - Transform - Loading rule - TConvolutionFilterAORule: "ConvolutionFilterAO -> ConvolutionFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3495 DEBUG ruleengine  - Transform - Loading rule - TEnrichAddDataMergeFunctionRule: "Insert DataMerge Function Enrich (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3496 DEBUG ruleengine  - Transform - Loading rule - TGroupSplitFileWriter: "TGroupSplitFileWriter" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3499 DEBUG ruleengine  - Transform - Loading rule - TInitPredicateRule: "Init Predicates" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3500 DEBUG ruleengine  - Transform - Loading rule - TMapAORule: "MapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3500 DEBUG ruleengine  - Transform - Loading rule - TProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3502 DEBUG ruleengine  - Transform - Loading rule - TRelationalSocketSinkAORule: "SocketSinkAO -> SocketSinkPO (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3504 DEBUG ruleengine  - Transform - Loading rule - TStateMapAORule: "StateMapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3508 DEBUG ruleengine  - Transform - Loading rule - TToTupleAORule: "TToTupleAORule" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3508 DEBUG ruleengine  - Transform - Loading rule - TUnnestAORule: "UnNestAO -> RelationalUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3514 DEBUG ruleengine  - Transform - Loading rule - TAggregateAORule: "TAggregateAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3514 DEBUG ruleengine  - Transform - Loading rule - TAggregatePORule: "Insert RelationalTupleGroupingHelper" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3515 DEBUG ruleengine  - Transform - Loading rule - TAssociativeStorageAORule: "AssociativeStorageAO -> AssociativeStoragePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3515 DEBUG ruleengine  - Transform - Loading rule - TBloomFilterAORule: "BloomFilterAO -> RelationalBloomFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3515 DEBUG ruleengine  - Transform - Loading rule - TConvolutionFilterAORule: "ConvolutionFilterAO -> ConvolutionFilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3516 DEBUG ruleengine  - Transform - Loading rule - TEnrichAddDataMergeFunctionRule: "Insert DataMerge Function Enrich (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3516 DEBUG ruleengine  - Transform - Loading rule - TGroupSplitFileWriter: "TGroupSplitFileWriter" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3516 DEBUG ruleengine  - Transform - Loading rule - TInitPredicateRule: "Init Predicates" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3517 DEBUG ruleengine  - Transform - Loading rule - TMapAORule: "MapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3517 DEBUG ruleengine  - Transform - Loading rule - TProjectAORule: "ProjectAO -> RelationalProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3517 DEBUG ruleengine  - Transform - Loading rule - TRelationalSocketSinkAORule: "SocketSinkAO -> SocketSinkPO (Relational)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3518 DEBUG ruleengine  - Transform - Loading rule - TStateMapAORule: "StateMapAO -> RelationalMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3518 DEBUG ruleengine  - Transform - Loading rule - TToTupleAORule: "TToTupleAORule" for group: "SUBSTITUTION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3518 DEBUG ruleengine  - Transform - Loading rule - TUnnestAORule: "UnNestAO -> RelationalUnNestPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3531 DEBUG ruleengine  - Transform - Loading rule - TApplicationTimestampRule: "TApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3534 DEBUG ruleengine  - Transform - Loading rule - TBufferedFilterAORule: "TBufferedFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3539 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateInsertDataMergeFunctionRule: "Insert DataMergeFunction ChangeCorrelate (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3544 DEBUG ruleengine  - Transform - Loading rule - TCombineAORule: "CombineAO -> CombinePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3550 DEBUG ruleengine  - Transform - Loading rule - TCompareSinkAO: "TCompareSinkAO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3551 DEBUG ruleengine  - Transform - Loading rule - TGeneratorAORule: "TGeneratorAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3552 DEBUG ruleengine  - Transform - Loading rule - TJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3554 DEBUG ruleengine  - Transform - Loading rule - TJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction JoinTIPO (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3558 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3560 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3577 DEBUG ruleengine  - Transform - Loading rule - TRelationalChangeDetectAORule: "TRelationalChangeDetectAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3587 DEBUG ruleengine  - Transform - Loading rule - TRelationalCreateNewFilenamePunctuationRule: "TRelationalCreateNewFilenamePunctuationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3713 DEBUG ruleengine  - Transform - Loading rule - TRelationalDistinctAORule: "TRelationalDistinctAORule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3733 DEBUG ruleengine  - Transform - Loading rule - TRelationalFastMedianAORule: "TRelationalFastMedianAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3741 DEBUG ruleengine  - Transform - Loading rule - TRelationalInsertGroupProcessorTIPORule: "TRelationalInsertGroupProcessorTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3743 DEBUG ruleengine  - Transform - Loading rule - TRelationalJoinAORule: "TRelationalJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3744 DEBUG ruleengine  - Transform - Loading rule - TRelationalTimestampToPayloadRule: "TRelationalTimestampToPayloadRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3746 DEBUG ruleengine  - Transform - Loading rule - TRelationalTupleAggregateTransformationRule: "TRelationalTupleAggregateTransformationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3747 DEBUG ruleengine  - Transform - Loading rule - TReplacementAORule: "TReplacementAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3748 DEBUG ruleengine  - Transform - Loading rule - TSetTransferAreaConvolutionFilterPO: "TSetTransferAreaConvolutionFilterPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3749 DEBUG ruleengine  - Transform - Loading rule - TSortAddComparatorRule: "TSortAddComparatorRule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3759 DEBUG ruleengine  - Transform - Loading rule - TTopKAORule: "TTopKAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3763 DEBUG ruleengine  - Transform - Loading rule - TApplicationTimestampRule: "TApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3764 DEBUG ruleengine  - Transform - Loading rule - TBufferedFilterAORule: "TBufferedFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3764 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateInsertDataMergeFunctionRule: "Insert DataMergeFunction ChangeCorrelate (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3764 DEBUG ruleengine  - Transform - Loading rule - TCombineAORule: "CombineAO -> CombinePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3765 DEBUG ruleengine  - Transform - Loading rule - TCompareSinkAO: "TCompareSinkAO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3765 DEBUG ruleengine  - Transform - Loading rule - TGeneratorAORule: "TGeneratorAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3765 DEBUG ruleengine  - Transform - Loading rule - TJoinAOSetSARule: "JoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3766 DEBUG ruleengine  - Transform - Loading rule - TJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction JoinTIPO (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3766 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAOSetSARule: "LeftJoinTIPO set SweepArea" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3766 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinTIPOInsertDataMergeRule: "Insert DataMergeFunction (Relational)" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3766 DEBUG ruleengine  - Transform - Loading rule - TRelationalChangeDetectAORule: "TRelationalChangeDetectAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3767 DEBUG ruleengine  - Transform - Loading rule - TRelationalCreateNewFilenamePunctuationRule: "TRelationalCreateNewFilenamePunctuationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3767 DEBUG ruleengine  - Transform - Loading rule - TRelationalDistinctAORule: "TRelationalDistinctAORule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3767 DEBUG ruleengine  - Transform - Loading rule - TRelationalFastMedianAORule: "TRelationalFastMedianAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3768 DEBUG ruleengine  - Transform - Loading rule - TRelationalInsertGroupProcessorTIPORule: "TRelationalInsertGroupProcessorTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3768 DEBUG ruleengine  - Transform - Loading rule - TRelationalJoinAORule: "TRelationalJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3768 DEBUG ruleengine  - Transform - Loading rule - TRelationalTimestampToPayloadRule: "TRelationalTimestampToPayloadRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3769 DEBUG ruleengine  - Transform - Loading rule - TRelationalTupleAggregateTransformationRule: "TRelationalTupleAggregateTransformationRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3769 DEBUG ruleengine  - Transform - Loading rule - TReplacementAORule: "TReplacementAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3769 DEBUG ruleengine  - Transform - Loading rule - TSetTransferAreaConvolutionFilterPO: "TSetTransferAreaConvolutionFilterPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3770 DEBUG ruleengine  - Transform - Loading rule - TSortAddComparatorRule: "TSortAddComparatorRule" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3770 DEBUG ruleengine  - Transform - Loading rule - TTopKAORule: "TTopKAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3870 DEBUG ruleengine  - Transform - Loading rule - TJoinAONoIntervalRule: "TJoinAONoIntervalRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3870 DEBUG ruleengine  - Transform - Loading rule - TJoinAORule: "TJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3872 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAORule: "JoinAO -> JoinTIPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3889 DEBUG ruleengine  - Transform - Loading rule - TAggregationTIPORule: "TAggregationTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3890 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateAORule: "ChangeCorrelateAO -> ChangeCorrelatePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3892 DEBUG ruleengine  - Transform - Loading rule - TCoalesceAORule: "TCoalesceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3894 DEBUG ruleengine  - Transform - Loading rule - TDifferenceAORule: "TDifferenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3895 DEBUG ruleengine  - Transform - Loading rule - TDistinctAORule: "TDistinctAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3897 DEBUG ruleengine  - Transform - Loading rule - TDuplicateEliminationAORule: "TDuplicateEliminationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3899 DEBUG ruleengine  - Transform - Loading rule - TExistenceAORule: "TExistenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3901 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "TFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3902 DEBUG ruleengine  - Transform - Loading rule - THeartbeatAORule: "THeartbeatAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3904 DEBUG ruleengine  - Transform - Loading rule - TReOrderAORule: "ReOrderAO -> AssureOrderPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3906 DEBUG ruleengine  - Transform - Loading rule - TSameTimestampRule: "TSameTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3907 DEBUG ruleengine  - Transform - Loading rule - TSelectAddHeartbeatGenerationRule: "Insert HeartbeatGenerationStrategy in SelectPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3908 DEBUG ruleengine  - Transform - Loading rule - TSortAORule: "TSortAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3909 DEBUG ruleengine  - Transform - Loading rule - TSyncWithSystemTimeAORule: "TSyncWithSystemTimeAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3912 DEBUG ruleengine  - Transform - Loading rule - TSystemTimestampRule: "TimestampAO -> MetadataUpdatePO(system timestamp)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3914 DEBUG ruleengine  - Transform - Loading rule - TTimeStampOrderValdiatorRule: "TTimeStampOrderValdiatorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3915 DEBUG ruleengine  - Transform - Loading rule - TUnionTIPORule: "TUnionTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3916 DEBUG ruleengine  - Transform - Loading rule - TWatermarkAORule: "TWatermarkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3917 DEBUG ruleengine  - Transform - Loading rule - TWindowAORule: "TWindowAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3922 DEBUG ruleengine  - Transform - Loading rule - TJoinAONoIntervalRule: "TJoinAONoIntervalRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3923 DEBUG ruleengine  - Transform - Loading rule - TJoinAORule: "TJoinAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3923 DEBUG ruleengine  - Transform - Loading rule - TLeftJoinAORule: "JoinAO -> JoinTIPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3924 DEBUG ruleengine  - Transform - Loading rule - TAggregationTIPORule: "TAggregationTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3924 DEBUG ruleengine  - Transform - Loading rule - TChangeCorrelateAORule: "ChangeCorrelateAO -> ChangeCorrelatePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3924 DEBUG ruleengine  - Transform - Loading rule - TCoalesceAORule: "TCoalesceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3925 DEBUG ruleengine  - Transform - Loading rule - TDifferenceAORule: "TDifferenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3925 DEBUG ruleengine  - Transform - Loading rule - TDistinctAORule: "TDistinctAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3925 DEBUG ruleengine  - Transform - Loading rule - TDuplicateEliminationAORule: "TDuplicateEliminationAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3926 DEBUG ruleengine  - Transform - Loading rule - TExistenceAORule: "TExistenceAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3926 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "TFilterAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3926 DEBUG ruleengine  - Transform - Loading rule - THeartbeatAORule: "THeartbeatAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3927 DEBUG ruleengine  - Transform - Loading rule - TReOrderAORule: "ReOrderAO -> AssureOrderPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3927 DEBUG ruleengine  - Transform - Loading rule - TSameTimestampRule: "TSameTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3927 DEBUG ruleengine  - Transform - Loading rule - TSelectAddHeartbeatGenerationRule: "Insert HeartbeatGenerationStrategy in SelectPO" for group: "METAOBJECTS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3928 DEBUG ruleengine  - Transform - Loading rule - TSortAORule: "TSortAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3928 DEBUG ruleengine  - Transform - Loading rule - TSyncWithSystemTimeAORule: "TSyncWithSystemTimeAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3929 DEBUG ruleengine  - Transform - Loading rule - TSystemTimestampRule: "TimestampAO -> MetadataUpdatePO(system timestamp)" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3929 DEBUG ruleengine  - Transform - Loading rule - TTimeStampOrderValdiatorRule: "TTimeStampOrderValdiatorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3929 DEBUG ruleengine  - Transform - Loading rule - TUnionTIPORule: "TUnionTIPORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3930 DEBUG ruleengine  - Transform - Loading rule - TWatermarkAORule: "TWatermarkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3930 DEBUG ruleengine  - Transform - Loading rule - TWindowAORule: "TWindowAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3949 DEBUG ruleengine  - Transform - Loading rule - TJoinAOErrorRule: "TJoinAOErrorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3952 DEBUG ruleengine  - Transform - Loading rule - TKeyValueApplicationTimestampRule: "TKeyValueApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3954 DEBUG ruleengine  - Transform - Loading rule - TKeyValueMapRule: "MapAO --> KeyValueMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3956 DEBUG ruleengine  - Transform - Loading rule - TKeyValueProjectRule: "ProjectAO --> KeyValueProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3957 DEBUG ruleengine  - Transform - Loading rule - TKeyValueRenameRule: "RenameAO --> KeyValueRenamePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3958 DEBUG ruleengine  - Transform - Loading rule - TKeyValueSelectRule: "TKeyValueSelectRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3960 DEBUG ruleengine  - Transform - Loading rule - TKeyValueToTupleRule: "ToTupleAO --> KeyValueToTuplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3961 DEBUG ruleengine  - Transform - Loading rule - TKeyValueUnnestAORule: "TKeyValueUnnestAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3963 DEBUG ruleengine  - Transform - Loading rule - TTupleToKeyValueRule: "TTupleToKeyValueRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3965 DEBUG ruleengine  - Transform - Loading rule - TJoinAOErrorRule: "TJoinAOErrorRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3965 DEBUG ruleengine  - Transform - Loading rule - TKeyValueApplicationTimestampRule: "TKeyValueApplicationTimestampRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3965 DEBUG ruleengine  - Transform - Loading rule - TKeyValueMapRule: "MapAO --> KeyValueMapPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3966 DEBUG ruleengine  - Transform - Loading rule - TKeyValueProjectRule: "ProjectAO --> KeyValueProjectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3966 DEBUG ruleengine  - Transform - Loading rule - TKeyValueRenameRule: "RenameAO --> KeyValueRenamePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3967 DEBUG ruleengine  - Transform - Loading rule - TKeyValueSelectRule: "TKeyValueSelectRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3968 DEBUG ruleengine  - Transform - Loading rule - TKeyValueToTupleRule: "ToTupleAO --> KeyValueToTuplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3968 DEBUG ruleengine  - Transform - Loading rule - TKeyValueUnnestAORule: "TKeyValueUnnestAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3969 DEBUG ruleengine  - Transform - Loading rule - TTupleToKeyValueRule: "TTupleToKeyValueRule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3973 DEBUG ruleengine  - Transform - Loading rule - TReplicationMergeAORule: "ReplicationMergeAO -> ReplicationMergePO | ReplicationMergeWithTrustPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
3974 DEBUG ruleengine  - Transform - Loading rule - TReplicationMergeAORule: "ReplicationMergeAO -> ReplicationMergePO | ReplicationMergeWithTrustPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4136 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4140 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4141 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4143 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4144 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4144 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4149 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4151 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4154 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4154 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4179 DEBUG ruleengine  - Transform - Loading rule - TDBEnrichAORule: "DBEnrichAO -> DBEnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4180 DEBUG ruleengine  - Transform - Loading rule - TDBEnrichAORule: "DBEnrichAO -> DBEnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4202 INFO  WebServicePublisher  - Webservice published at http://0:0:0:0:0:0:0:0:9670/odysseus - de.uniol.inf.is.odysseus.planmanagement.executor.webservice.server.WebServicePublisher.publish(WebServicePublisher.java:106) 
4299 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4299 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4299 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4301 DEBUG ruleengine  - Transform - Loading rule - TContextEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4301 DEBUG ruleengine  - Transform - Loading rule - TQueryStoreAORule: "QueryStoreAO -> QueryStorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4301 DEBUG ruleengine  - Transform - Loading rule - TStoreAORule: "StoreAO -> StorePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4322 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4323 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4325 DEBUG AbstractExecutor  - Initializing Executor. - de.uniol.inf.is.odysseus.core.server.planmanagement.executor.AbstractExecutor.initialize(AbstractExecutor.java:271) 
4325 DEBUG ruleengine  - Transform - Loading rule - TDatabaseDatabaseSinkAORule: "DatabaseSinkAO -> DatabaseSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4325 DEBUG AbstractExecutor  - Initializing Executor done. - de.uniol.inf.is.odysseus.core.server.planmanagement.executor.AbstractExecutor.initialize(AbstractExecutor.java:281) 
4325 DEBUG ruleengine  - Transform - Loading rule - TDatabaseSourceAORule: "DatabaseSourceAO -> DatabaseSourcePO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4353 DEBUG ruleengine  - Transform - Loading rule - TDBEnrichAORule: "DBEnrichAO -> DBEnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
4355 DEBUG ruleengine  - Transform - Loading rule - TDBEnrichAORule: "DBEnrichAO -> DBEnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6497 DEBUG ruleengine  - Rewrite - Loading rules for... de.uniol.inf.is.odysseus.relational.rewrite.RuleProvider@32deb4b0 - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.bindRuleProvider(AbstractInventory.java:208) 
6502 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteProjectionWithoutFunctionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteProjectionWithoutFunctionRule" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6502 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteSelectionWithoutPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteSelectionWithoutPredicate" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6503 DEBUG ruleengine  - Rewrite - Loading rule - RMergeSelectionJoinRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RMergeSelectionJoinRule" for group: "GROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6503 DEBUG ruleengine  - Rewrite - Loading rule - RMergeSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RMergeSelectionRule" for group: "GROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6503 DEBUG ruleengine  - Rewrite - Loading rule - RSplitSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSplitSelectionRule" for group: "SPLIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6504 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionRenameRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionRenameRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6504 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionUnionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionUnionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6504 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchProjectionWindowRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchProjectionWindowRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6505 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionJoinRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionJoinRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6505 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionDifferenceRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionDifferenceRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6505 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionProjectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionProjectionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6506 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionRenameRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionRenameRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6506 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionUnionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionUnionRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6506 DEBUG ruleengine  - Rewrite - Loading rule - RSwitchSelectionWindowRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RSwitchSelectionWindowRule" for group: "SWITCH" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6507 DEBUG ruleengine  - Rewrite - Loading rule - RPrepareSelectionCNF: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPrepareSelectionCNF" for group: "PREPARE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6507 DEBUG ruleengine  - Rewrite - Loading rule - RPrepareJoinCNF: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPrepareJoinCNF" for group: "PREPARE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6508 DEBUG ruleengine  - Rewrite - Loading rule - ROptimizeSelectionPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.ROptimizeSelectionPredicate" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6508 DEBUG ruleengine  - Rewrite - Loading rule - ROptimizeJoinPredicate: "de.uniol.inf.is.odysseus.relational.rewrite.rules.ROptimizeJoinPredicate" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6509 DEBUG ruleengine  - Rewrite - Loading rule - RDeleteRenameAORule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RDeleteRenameAORule" for group: "CLEANUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6509 DEBUG ruleengine  - Rewrite - Loading rule - RPregroupJoinSelectionRule: "de.uniol.inf.is.odysseus.relational.rewrite.rules.RPregroupJoinSelectionRule" for group: "PREGROUP" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6511 DEBUG ruleengine  - Rewrite - Loading rules for... de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RewriteRuleProvider@4297fd4 - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.bindRuleProvider(AbstractInventory.java:208) 
6513 DEBUG ruleengine  - Rewrite - Loading rule - RIntersectionAORule: "de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RIntersectionAORule" for group: "DELETE" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:46.733
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.compiler.standardcompiler. The reference is: Reference[name = IPlanGenerator, interface = de.uniol.inf.is.odysseus.core.server.plangeneration.IPlanGenerator, policy = dynamic, cardinality = 0..1, target = null, bind = bindPlanGenerator, unbind = unbindPlanGenerator]
6538 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6540 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6541 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6546 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6546 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6548 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6549 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6550 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
6550 DEBUG FileUtils  - Read from file /Users/jp/.odysseus/scheduling.conf - de.uniol.inf.is.odysseus.core.server.util.FileUtils.openOrCreateFile(FileUtils.java:59) 
6555 DEBUG SingleSchedulerManager  - Set active Scheduler Single Thread Scheduler RR Multi Source (Biggest Queue) - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.setActiveScheduler(SingleSchedulerManager.java:202) 
6562 INFO  SingleSchedulerManager  - Active scheduler. class de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SimpleThreadSchedulerMSLimitSourcesPerThread - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.activate(SingleSchedulerManager.java:141) 
6563 DEBUG SingleSchedulerManager  - Start scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:286) 
6565 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
6565 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
6565 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
6565 DEBUG SchedulingExecutor  -  Started  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:65) 
6565 DEBUG AbstractSimpleThreadScheduler  - Starting Scheduler with 4 thread(s). - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.startScheduling(AbstractSimpleThreadScheduler.java:119) 
6567 DEBUG SingleSchedulerManager  - Scheduling started. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startScheduling(SingleSchedulerManager.java:288) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:46.798
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.optimization.standardoptimizer. The reference is: Reference[name = IPostOptimizationAction, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.optimization.IPostOptimizationAction, policy = dynamic, cardinality = 0..n, target = null, bind = bindPostOptimizationAction, unbind = unbindPostOptimizationAction]

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:46.807
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.optimization.standardoptimizer. The reference is: Reference[name = IElementCloningUpdater, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.optimization.elementcloning.IElementCloningUpdater, policy = dynamic, cardinality = 0..n, target = null, bind = bindElementCloningUpdater, unbind = unbindElementCloningUpdater]

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:46.808
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = ISystemMonitorFactory, interface = de.uniol.inf.is.odysseus.core.server.monitoring.ISystemMonitorFactory, policy = dynamic, cardinality = 0..1, target = null, bind = bindSystemMonitorFactory, unbind = unbindSystemMonitorFactory]

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:46.819
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IQueryDistributor, interface = de.uniol.inf.is.odysseus.core.server.distribution.IQueryDistributor, policy = dynamic, cardinality = 0..1, target = null, bind = bindQueryDistributor, unbind = unbindQueryDistributor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:46.822
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IPreTransformationHandler, interface = de.uniol.inf.is.odysseus.core.server.planmanagement.executor.IPreTransformationHandler, policy = dynamic, cardinality = 0..n, target = null, bind = bindPreTransformationHandler, unbind = unbindPreTransformationHandler]

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:46.822
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor. The reference is: Reference[name = IRecoveryExecutor, interface = de.uniol.inf.is.odysseus.core.server.recovery.IRecoveryExecutor, policy = dynamic, cardinality = 0..n, target = null, bind = bindRecoveryExecutor, unbind = unbindRecoveryExecutor]
6616 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@6560cf36 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
6616 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@6560cf36 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:46.842
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLGenerator. The reference is: Reference[name = IPQLGeneratorPreProcessor, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLGeneratorPreProcessor, policy = dynamic, cardinality = 0..n, target = null, bind = bindPreProcessor, unbind = unbindPreProcessor]

!ENTRY org.eclipse.equinox.ds 1 0 2017-06-10 15:51:46.844
!MESSAGE Could not bind a reference of component de.uniol.inf.is.odysseus.parser.pql.generator.PQLGenerator. The reference is: Reference[name = IPQLGeneratorPostProcessor, interface = de.uniol.inf.is.odysseus.parser.pql.generator.IPQLGeneratorPostProcessor, policy = dynamic, cardinality = 0..n, target = null, bind = bindPostProcessor, unbind = unbindPostProcessor]
6625 DEBUG CommandProviderBinder  - Binding command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@5337ca1d - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.bindCommandProvider(CommandProviderBinder.java:12) 
6625 DEBUG CommandProviderRegistry  - Registering command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@5337ca1d - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.register(CommandProviderRegistry.java:27) 
6639 DEBUG ruleengine  - Transform - Loading rule - TAccessAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6645 DEBUG ruleengine  - Transform - Loading rule - TAppendQueryAORule: "TAppendQueryAORule" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6646 DEBUG ruleengine  - Transform - Loading rule - TAppendToPhysicalAORule: "AppendToPhysical" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6647 DEBUG ruleengine  - Transform - Loading rule - TBufferAORule: "BufferAO -> BufferedPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6648 DEBUG ruleengine  - Transform - Loading rule - TCacheAORule: "CacheAO --> CachePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6648 DEBUG ruleengine  - Transform - Loading rule - TChangeDetectAORule: "ChangeDetectAO -> ChangeDetectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6649 DEBUG ruleengine  - Transform - Loading rule - TCloseStreamAORule: "TCloseStreamAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6650 DEBUG ruleengine  - Transform - Loading rule - TCommandAORule: "CommandAO --> CommandPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6650 DEBUG ruleengine  - Transform - Loading rule - TConsoleSinkAORule: "TConsoleSinkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6651 DEBUG ruleengine  - Transform - Loading rule - TConverterAORule: "ConverterAO --> ConverterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6652 DEBUG ruleengine  - Transform - Loading rule - TCSVFileSourceAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6653 DEBUG ruleengine  - Transform - Loading rule - TDeleteRenameAORule: "Delete Rename" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6653 DEBUG ruleengine  - Transform - Loading rule - TEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6657 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "FilterAO -> FilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6658 DEBUG ruleengine  - Transform - Loading rule - TMemStoreReadAORule: "TMemStoreReadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6659 DEBUG ruleengine  - Transform - Loading rule - TMemStoreWriteAORule: "TMemStoreWriteAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6660 DEBUG ruleengine  - Transform - Loading rule - TMergeAORule: "MergeAO --> MergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6661 DEBUG ruleengine  - Transform - Loading rule - TMetadataAOTransformation: "TMetadataAOTransformation" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6662 DEBUG ruleengine  - Transform - Loading rule - TPlanModificationActionAORule: "TPlanModificationActionAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6662 DEBUG ruleengine  - Transform - Loading rule - TRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6663 DEBUG ruleengine  - Transform - Loading rule - TRouteAORule: "RouteAO -> RoutePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6665 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO --> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6666 DEBUG ruleengine  - Transform - Loading rule - TSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6667 DEBUG ruleengine  - Transform - Loading rule - TSenderAOExistsRule: "Transform to existing SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6669 DEBUG ruleengine  - Transform - Loading rule - TSenderAOGenericRule: "AbstractSenderAO (generic) --> SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6670 DEBUG ruleengine  - Transform - Loading rule - TSenderAOViewRule: "Transform Sender View" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6671 DEBUG ruleengine  - Transform - Loading rule - TSetSystemTimeAORule: "SetSystemTimeAO -> SetSystemTimePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6673 DEBUG ruleengine  - Transform - Loading rule - TSetTimeProgressMarker: "TSetTimeProgressMarker" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6674 DEBUG ruleengine  - Transform - Loading rule - TSinkAORule: "SinkAO -> SinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6678 DEBUG ruleengine  - Transform - Loading rule - TSocketSinkAORule: "SocketSinkAO -> SocketSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6679 DEBUG ruleengine  - Transform - Loading rule - TStreamAORule: "Transform View or Stream" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6680 DEBUG ruleengine  - Transform - Loading rule - TTimeshiftAORule: "TimeshiftAO -> TimeshiftPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6682 DEBUG ruleengine  - Transform - Loading rule - TUserDefinedOperatorPO: "UdoAO -> UdoPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6684 DEBUG ruleengine  - Transform - Loading rule - TAccessAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6684 DEBUG ruleengine  - Transform - Loading rule - TAppendQueryAORule: "TAppendQueryAORule" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6684 DEBUG ruleengine  - Transform - Loading rule - TAppendToPhysicalAORule: "AppendToPhysical" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6685 DEBUG ruleengine  - Transform - Loading rule - TBufferAORule: "BufferAO -> BufferedPipe" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6685 DEBUG ruleengine  - Transform - Loading rule - TCacheAORule: "CacheAO --> CachePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6685 DEBUG ruleengine  - Transform - Loading rule - TChangeDetectAORule: "ChangeDetectAO -> ChangeDetectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6685 DEBUG ruleengine  - Transform - Loading rule - TCloseStreamAORule: "TCloseStreamAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6685 DEBUG ruleengine  - Transform - Loading rule - TCommandAORule: "CommandAO --> CommandPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6685 DEBUG ruleengine  - Transform - Loading rule - TConsoleSinkAORule: "TConsoleSinkAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6686 DEBUG ruleengine  - Transform - Loading rule - TConverterAORule: "ConverterAO --> ConverterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6686 DEBUG ruleengine  - Transform - Loading rule - TCSVFileSourceAORule: "AccessAO (generic) --> AccessPO" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6686 DEBUG ruleengine  - Transform - Loading rule - TDeleteRenameAORule: "Delete Rename" for group: "INIT" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6686 DEBUG ruleengine  - Transform - Loading rule - TEnrichAORule: "EnrichAO -> EnrichPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6686 DEBUG ruleengine  - Transform - Loading rule - TFilterAORule: "FilterAO -> FilterPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6686 DEBUG ruleengine  - Transform - Loading rule - TMemStoreReadAORule: "TMemStoreReadAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6687 DEBUG ruleengine  - Transform - Loading rule - TMemStoreWriteAORule: "TMemStoreWriteAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6687 DEBUG ruleengine  - Transform - Loading rule - TMergeAORule: "MergeAO --> MergePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6687 DEBUG ruleengine  - Transform - Loading rule - TMetadataAOTransformation: "TMetadataAOTransformation" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6687 DEBUG ruleengine  - Transform - Loading rule - TPlanModificationActionAORule: "TPlanModificationActionAORule" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6688 DEBUG ruleengine  - Transform - Loading rule - TRenameAORule: "RenameAO --> TopPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6688 DEBUG ruleengine  - Transform - Loading rule - TRouteAORule: "RouteAO -> RoutePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6688 DEBUG ruleengine  - Transform - Loading rule - TSampleAORule: "SampleAO --> SamplePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6688 DEBUG ruleengine  - Transform - Loading rule - TSelectAORule: "SelectAO -> SelectPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6688 DEBUG ruleengine  - Transform - Loading rule - TSenderAOExistsRule: "Transform to existing SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6688 DEBUG ruleengine  - Transform - Loading rule - TSenderAOGenericRule: "AbstractSenderAO (generic) --> SenderPO" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6689 DEBUG ruleengine  - Transform - Loading rule - TSenderAOViewRule: "Transform Sender View" for group: "SENDER" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6689 DEBUG ruleengine  - Transform - Loading rule - TSetSystemTimeAORule: "SetSystemTimeAO -> SetSystemTimePO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6689 DEBUG ruleengine  - Transform - Loading rule - TSetTimeProgressMarker: "TSetTimeProgressMarker" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6689 DEBUG ruleengine  - Transform - Loading rule - TSinkAORule: "SinkAO -> SinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6689 DEBUG ruleengine  - Transform - Loading rule - TSocketSinkAORule: "SocketSinkAO -> SocketSinkPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6689 DEBUG ruleengine  - Transform - Loading rule - TStreamAORule: "Transform View or Stream" for group: "ACCESS" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6689 DEBUG ruleengine  - Transform - Loading rule - TTimeshiftAORule: "TimeshiftAO -> TimeshiftPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 
6690 DEBUG ruleengine  - Transform - Loading rule - TUserDefinedOperatorPO: "UdoAO -> UdoPO" for group: "TRANSFORMATION" - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.addRule(AbstractInventory.java:111) 

!ENTRY org.eclipse.osgi 4 0 2017-06-10 15:51:46.913
!MESSAGE Could not find bundle: unknown
!STACK 0
org.osgi.framework.BundleException: Could not find bundle: unknown
	at org.eclipse.core.runtime.internal.adaptor.ConsoleManager.checkForConsoleBundle(ConsoleManager.java:58)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:331)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1488)
Starting application: 7446
6697 DEBUG TestRunnerApplication  - Starting Odysseus... - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:57) 
6700 DEBUG TestRunnerApplication  - Odysseus is up and running! - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:60) 
6700 DEBUG TestRunnerApplication  - Starting component tests... - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:71) 
6750 DEBUG TestRunnerApplication  - Starting a new component test: CQL Parser Test - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:100) 
6750 DEBUG TestRunnerApplication  - ####################################################################################### - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:101) 
6750 DEBUG TestComponentRunner  - Start Testcomponent 'CQL Parser Test' - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:52) 
6751 DEBUG AbstractTestComponent  - Starting executor... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStartExecutor(AbstractTestComponent.java:94) 
6752 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:46 CEST 2017Running sub test 1 of 49: "CreateDatabaseConnectionTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
6752 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION jdbc1
#RUNQUERY
DROP DATABASE CONNECTION jdbc2
#RUNQUERY
DROP DATABASE CONNECTION jdbc3
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
DROP DATABASE CONNECTION con2
#RUNQUERY
DROP DATABASE CONNECTION con3
#RUNQUERY
DROP DATABASE CONNECTION con4
#RUNQUERY
CREATE DATABASE CONNECTION jdbc1 JDBC jdbc:mysql://localhost:3306/test
#RUNQUERY
CREATE DATABASE CONNECTION jdbc2 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION jdbc3 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword NO_LAZY_CONNECTION_CHECK
#RUNQUERY
CREATE DATABASE CONNECTION con1 AS mysql TO test1
#RUNQUERY
CREATE DATABASE CONNECTION con2 AS mysql TO test2 AT localhost : 3306
#RUNQUERY
CREATE DATABASE CONNECTION con3 AS mysql TO test3 AT localhost : 3306 WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION con4 AS mysql TO test4 WITH USER dbuser PASSWORD dbpassword
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
6752 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
6752 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
6753 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6753 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION jdbc1
#RUNQUERY
DROP DATABASE CONNECTION jdbc2
#RUNQUERY
DROP DATABASE CONNECTION jdbc3
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
DROP DATABASE CONNECTION con2
#RUNQUERY
DROP DATABASE CONNECTION con3
#RUNQUERY
DROP DATABASE CONNECTION con4
#RUNQUERY
CREATE DATABASE CONNECTION jdbc1 JDBC jdbc:mysql://localhost:3306/test
#RUNQUERY
CREATE DATABASE CONNECTION jdbc2 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION jdbc3 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword NO_LAZY_CONNECTION_CHECK
#RUNQUERY
CREATE DATABASE CONNECTION con1 AS mysql TO test1
#RUNQUERY
CREATE DATABASE CONNECTION con2 AS mysql TO test2 AT localhost : 3306
#RUNQUERY
CREATE DATABASE CONNECTION con3 AS mysql TO test3 AT localhost : 3306 WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION con4 AS mysql TO test4 WITH USER dbuser PASSWORD dbpassword
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6760 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
6778 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6784 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
6785 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1984b1f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6785 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6785 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION jdbc1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6785 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
log4j:WARN No appenders could be found for logger (org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser).
log4j:WARN Please initialize the log4j system properly.
6961 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6961 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6961 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@73194df - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6962 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6962 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION jdbc2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6962 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
6966 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6966 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6966 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3c9c0d96 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6967 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6968 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION jdbc3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6968 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
6970 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6971 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6971 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@31dadd46 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6971 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6971 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6971 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
6974 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6975 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6975 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@12f9af83 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6975 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6975 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6975 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
6978 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6978 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6978 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7e6ef134 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6979 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6979 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6979 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
6982 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6982 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6982 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@40db2a24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6983 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6983 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6983 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
6986 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6986 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6986 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1921ad94 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6986 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6986 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION jdbc1 JDBC jdbc:mysql://localhost:3306/test - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6987 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
6994 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6994 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6995 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7f132176 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6995 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6995 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION jdbc2 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6995 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
6998 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
6999 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
6999 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2631f68c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
6999 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
6999 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION jdbc3 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword NO_LAZY_CONNECTION_CHECK - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
6999 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7002 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7002 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7003 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@8ad6665 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7003 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7003 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con1 AS mysql TO test1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7003 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7009 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7009 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7010 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@bcef303 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7010 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7010 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con2 AS mysql TO test2 AT localhost : 3306 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7010 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7014 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7014 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7014 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@42039326 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7015 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7015 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con3 AS mysql TO test3 AT localhost : 3306 WITH USER dbuser PASSWORD dbpassword - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7015 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7018 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7019 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7019 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4f9a2c08 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7019 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7019 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con4 AS mysql TO test4 WITH USER dbuser PASSWORD dbpassword - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7020 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7023 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7023 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7024 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION jdbc1
#RUNQUERY
DROP DATABASE CONNECTION jdbc2
#RUNQUERY
DROP DATABASE CONNECTION jdbc3
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
DROP DATABASE CONNECTION con2
#RUNQUERY
DROP DATABASE CONNECTION con3
#RUNQUERY
DROP DATABASE CONNECTION con4
#RUNQUERY
CREATE DATABASE CONNECTION jdbc1 JDBC jdbc:mysql://localhost:3306/test
#RUNQUERY
CREATE DATABASE CONNECTION jdbc2 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION jdbc3 JDBC jdbc:mysql://localhost:3306/test WITH USER dbuser PASSWORD dbpassword NO_LAZY_CONNECTION_CHECK
#RUNQUERY
CREATE DATABASE CONNECTION con1 AS mysql TO test1
#RUNQUERY
CREATE DATABASE CONNECTION con2 AS mysql TO test2 AT localhost : 3306
#RUNQUERY
CREATE DATABASE CONNECTION con3 AS mysql TO test3 AT localhost : 3306 WITH USER dbuser PASSWORD dbpassword
#RUNQUERY
CREATE DATABASE CONNECTION con4 AS mysql TO test4 WITH USER dbuser PASSWORD dbpassword
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7027 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7027 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7028 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
7028 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
7028 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
7028 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
7029 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
7029 DEBUG AbstractTestComponent  - Sub test "CreateDatabaseConnectionTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
7029 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
7029 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:47 CEST 2017Running sub test 2 of 49: "CreateDatabaseSinkTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
7029 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
CREATE DATABASE SINK con1 AS oracle TO test
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
7029 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
7029 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
7030 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7030 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
CREATE DATABASE SINK con1 AS oracle TO test
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7030 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7032 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7032 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7032 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@48e92c5c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7032 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7032 DEBUG StandardExecutor  - Adding following query: DROP DATABASE CONNECTION con1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7033 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7382 ERROR DatabaseConnectionDictionary  - Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server. - de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeConnection(DatabaseConnectionDictionary.java:146) 
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:407)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1116)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:346)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2334)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2371)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2163)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:407)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:378)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:305)
	at de.uniol.inf.is.odysseus.database.DataSourceFactoryRegistry.getConnection(DataSourceFactoryRegistry.java:30)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.assertConnection(DatabaseConnection.java:360)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnection.getConnection(DatabaseConnection.java:94)
	at de.uniol.inf.is.odysseus.database.connection.DatabaseConnectionDictionary.removeConnection(DatabaseConnectionDictionary.java:141)
	at de.uniol.inf.is.odysseus.database.cql.DatabaseParser.parse(DatabaseParser.java:52)
	at de.uniol.inf.is.odysseus.parser.novel.cql.server.CQLParser.parseCommand(CQLParser.java:312)
	at de.uniol.inf.is.odysseus.parser.novel.cql.server.CQLParser.parse(CQLParser.java:196)
	at de.uniol.inf.is.odysseus.planmanagement.compiler.standardcompiler.StandardCompiler.translateQuery(StandardCompiler.java:256)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:247)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:662)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:656)
	at de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand.execute(AddQueryCommand.java:47)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:480)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:665)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:656)
	at de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:644)
	at de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:43)
	at de.uniol.inf.is.odysseus.test.component.parser.cql.CQLParserTest.executeTestSet(CQLParserTest.java:63)
	at de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:1)
	at de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:133)
	at de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:57)
	at de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:102)
	at de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:73)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1488)
Caused by: java.net.NoRouteToHostException: Can't assign requested address (Address not available)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:254)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:295)
	... 48 more
7386 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7386 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7386 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7a527389 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7386 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7387 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE SINK con1 AS oracle TO test - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7387 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7395 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7395 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7396 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
DROP DATABASE CONNECTION con1
#RUNQUERY
CREATE DATABASE SINK con1 AS oracle TO test
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7396 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7396 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7396 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
7396 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
7397 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
7397 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
7397 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
7398 DEBUG AbstractTestComponent  - Sub test "CreateDatabaseSinkTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
7398 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
7398 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:47 CEST 2017Running sub test 3 of 49: "CreateDatabaseSourceTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
7398 DEBUG AbstractTestComponent  - #PARSER CQL
#ADDQUERY
CREATE DATABASE CONNECTIOn con1 as mysql
#ADDQUERY
CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
7398 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
7398 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
7398 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7399 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#ADDQUERY
CREATE DATABASE CONNECTIOn con1 as mysql
#ADDQUERY
CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7399 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7400 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7400 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7400 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@553f1d75 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7400 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7400 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTIOn con1 as mysql - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7401 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7404 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7405 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7405 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4f071df8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7405 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7405 DEBUG StandardExecutor  - Adding following query: CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7405 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [id, value]
[INTEGER, STRING]
,
7419 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7419 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7420 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@40e10ff8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7420 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7420 DEBUG StandardExecutor  - Adding following query: datastream := DATABASESOURCE({connection='con1',table='main',attributes=[['id','INTEGER'],['value','STRING']],waiteach=0})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7420 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7456 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7456 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7456 DEBUG StandardExecutor  - Executing Create VIEW datastream - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7462 DEBUG ReloadLog  - Query added to log: datastream := DATABASESOURCE({connection='con1',table='main',attributes=[['id','INTEGER'],['value','STRING']],waiteach=0})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7462 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7462 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7462 DEBUG ReloadLog  - Query added to log: CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7463 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7463 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7463 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#ADDQUERY
CREATE DATABASE CONNECTIOn con1 as mysql
#ADDQUERY
CREATE STREAM datastream(id INTEGER, value STRING) DATABASE con1 TABLE main
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7463 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7464 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7464 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
7464 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
7464 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
7464 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
7465 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
7465 DEBUG AbstractTestComponent  - Sub test "CreateDatabaseSourceTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
7465 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
7465 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:47 CEST 2017Running sub test 4 of 49: "CreateStreamFromFileTest.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
7465 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
7465 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
7466 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
7466 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7466 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7466 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7467 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7467 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7467 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@31e75d13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7467 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7467 DEBUG StandardExecutor  - Adding following query: CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7468 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [attr1]
[Integer]
,
7482 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7483 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7483 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7829b776 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7483 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7483 DEBUG StandardExecutor  - Adding following query: stream1 := ACCESS({source='stream1',wrapper='GenericPull',protocol='SimpleCSV',transport='File',datahandler='Tuple',schema=[['attr1','Integer']],options=[['filename','this/is/a/filename.file'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7484 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7486 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7487 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7487 DEBUG StandardExecutor  - Executing Create VIEW stream1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7490 DEBUG ReloadLog  - Query added to log: stream1 := ACCESS({source='stream1',wrapper='GenericPull',protocol='SimpleCSV',transport='File',datahandler='Tuple',schema=[['attr1','Integer']],options=[['filename','this/is/a/filename.file'],['delimiter',';'],['textDelimiter',"'"]]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7490 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7491 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7491 DEBUG ReloadLog  - Query added to log: CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7491 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7492 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7492 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
CREATE STREAM stream1 (attr1 Integer) FILE 'this/is/a/filename.file' AS SimpleCSV;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7492 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7492 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7493 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
7493 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
7493 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
7493 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
7493 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
7494 DEBUG AbstractTestComponent  - Sub test "CreateStreamFromFileTest.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
7494 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
7494 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:47 CEST 2017Running sub test 5 of 49: "CreateStreamTest.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
7494 DEBUG AbstractTestComponent  - #PARSER CQL
#DROPALLQUERIES
#QUERY 
DROP STREAM person IF EXISTS
#QUERY
CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440
#QUERY 
DROP STREAM bid IF EXISTS
#QUERY
CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65442', 'host' 'localhost')
#QUERY 
DROP STREAM auction IF EXISTS
#QUERY
CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441
#QUERY 
DROP STREAM category IF EXISTS
#QUERY
CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65443', 'host' 'localhost')
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
7494 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
7494 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
7494 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7494 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#DROPALLQUERIES
#QUERY 
DROP STREAM person IF EXISTS
#QUERY
CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440
#QUERY 
DROP STREAM bid IF EXISTS
#QUERY
CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65442', 'host' 'localhost')
#QUERY 
DROP STREAM auction IF EXISTS
#QUERY
CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441
#QUERY 
DROP STREAM category IF EXISTS
#QUERY
CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65443', 'host' 'localhost')
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7495 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7499 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7499 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7500 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.query.RemoveAllQueriesCommand@4763c727 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7500 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@72445aba - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7500 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7500 DEBUG StandardExecutor  - Adding following query: DROP STREAM person IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7500 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7510 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7510 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7510 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@1252b961 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7510 DEBUG ReloadLog  - Query added to log: DROP STREAM person IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7511 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7511 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7511 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@9ed238c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7511 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7511 DEBUG StandardExecutor  - Adding following query: CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7512 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [timestamp, id, name, email, creditcard, city, state]
[STARTTIMESTAMP, INTEGER, STRING, STRING, STRING, STRING, STRING]
,
7518 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7518 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7519 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@56f6d40b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7519 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7519 DEBUG StandardExecutor  - Adding following query: person := ACCESS({source='person',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['name','STRING'],['email','STRING'],['creditcard','STRING'],['city','STRING'],['state','STRING']],options=[['port','65440'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7519 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7522 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7522 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7522 DEBUG StandardExecutor  - Executing Create VIEW person - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7537 DEBUG ReloadLog  - Query added to log: person := ACCESS({source='person',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['name','STRING'],['email','STRING'],['creditcard','STRING'],['city','STRING'],['state','STRING']],options=[['port','65440'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7538 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7538 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7538 DEBUG ReloadLog  - Query added to log: CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7538 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7539 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7539 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4d098f9b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7539 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7539 DEBUG StandardExecutor  - Adding following query: DROP STREAM bid IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7539 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7543 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7543 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7543 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@20b5f2ac - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7543 DEBUG ReloadLog  - Query added to log: DROP STREAM bid IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7543 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7544 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7544 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7fc44dec - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7544 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7544 DEBUG StandardExecutor  - Adding following query: CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE)
WRAPPER 'GenericPush'
PROTOCOL 'SizeByteBuffer'
TRANSPORT 'NonBlockingTcp'
DATAHANDLER 'Tuple'
OPTIONS ('port' '65442', 'host' 'localhost') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7545 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [timestamp, auction, bidder, datetime, price]
[STARTTIMESTAMP, INTEGER, INTEGER, LONG, DOUBLE]
,
generateKeyValueString()= [port, host]
[65442, localhost]
,
7556 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7556 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7557 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7b64240d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7557 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7557 DEBUG StandardExecutor  - Adding following query: bid := ACCESS({source='bid',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['port','65442'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7557 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7559 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7560 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7560 DEBUG StandardExecutor  - Executing Create VIEW bid - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7560 DEBUG ReloadLog  - Query added to log: bid := ACCESS({source='bid',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['auction','INTEGER'],['bidder','INTEGER'],['datetime','LONG'],['price','DOUBLE']],options=[['port','65442'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7561 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7561 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7561 DEBUG ReloadLog  - Query added to log: CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE)
WRAPPER 'GenericPush'
PROTOCOL 'SizeByteBuffer'
TRANSPORT 'NonBlockingTcp'
DATAHANDLER 'Tuple'
OPTIONS ('port' '65442', 'host' 'localhost') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7561 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7562 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7562 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@74cadd41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7562 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7562 DEBUG StandardExecutor  - Adding following query: DROP STREAM auction IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7562 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7567 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7567 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7568 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@55e8ec2f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7568 DEBUG ReloadLog  - Query added to log: DROP STREAM auction IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7568 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7569 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7569 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4f2613d1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7569 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7569 DEBUG StandardExecutor  - Adding following query: CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7570 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [timestamp, id, itemname, description, initialbid, reserve, expires, seller, category]
[STARTTIMESTAMP, INTEGER, STRING, STRING, INTEGER, INTEGER, LONG, INTEGER, INTEGER]
,
7575 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7575 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7575 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@65a4798f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7575 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7575 DEBUG StandardExecutor  - Adding following query: auction := ACCESS({source='auction',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['itemname','STRING'],['description','STRING'],['initialbid','INTEGER'],['reserve','INTEGER'],['expires','LONG'],['seller','INTEGER'],['category','INTEGER']],options=[['port','65441'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7576 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7578 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7578 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7578 DEBUG StandardExecutor  - Executing Create VIEW auction - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7579 DEBUG ReloadLog  - Query added to log: auction := ACCESS({source='auction',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['timestamp','STARTTIMESTAMP'],['id','INTEGER'],['itemname','STRING'],['description','STRING'],['initialbid','INTEGER'],['reserve','INTEGER'],['expires','LONG'],['seller','INTEGER'],['category','INTEGER']],options=[['port','65441'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7579 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7580 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7580 DEBUG ReloadLog  - Query added to log: CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7580 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7581 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7581 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@426b6a74 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7581 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7581 DEBUG StandardExecutor  - Adding following query: DROP STREAM category IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7582 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7586 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7586 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7586 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropStreamCommand@83298d7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7586 DEBUG ReloadLog  - Query added to log: DROP STREAM category IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7586 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7587 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7587 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@42a9e5d1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7587 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7587 DEBUG StandardExecutor  - Adding following query: CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'SizeByteBuffer'
TRANSPORT 'NonBlockingTcp'
DATAHANDLER 'Tuple'
OPTIONS ('port' '65443', 'host' 'localhost') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7588 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [id, name, description, parentid]
[INTEGER, STRING, STRING, INTEGER]
,
generateKeyValueString()= [port, host]
[65443, localhost]
,
7594 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7595 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7595 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@773cbf4f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7595 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7595 DEBUG StandardExecutor  - Adding following query: category := ACCESS({source='category',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['id','INTEGER'],['name','STRING'],['description','STRING'],['parentid','INTEGER']],options=[['port','65443'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7595 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7597 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7597 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7597 DEBUG StandardExecutor  - Executing Create VIEW category - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7598 DEBUG ReloadLog  - Query added to log: category := ACCESS({source='category',wrapper='GenericPush',protocol='SizeByteBuffer',transport='NonBlockingTcp',datahandler='Tuple',schema=[['id','INTEGER'],['name','STRING'],['description','STRING'],['parentid','INTEGER']],options=[['port','65443'],['host','localhost']]})
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7598 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7599 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7599 DEBUG ReloadLog  - Query added to log: CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'SizeByteBuffer'
TRANSPORT 'NonBlockingTcp'
DATAHANDLER 'Tuple'
OPTIONS ('port' '65443', 'host' 'localhost') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7599 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7600 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7600 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#DROPALLQUERIES
#QUERY 
DROP STREAM person IF EXISTS
#QUERY
CREATE STREAM person (timestamp STARTTIMESTAMP, id INTEGER, name STRING, email STRING, creditcard STRING, city STRING, state STRING) CHANNEL localhost : 65440
#QUERY 
DROP STREAM bid IF EXISTS
#QUERY
CREATE STREAM bid (timestamp STARTTIMESTAMP, auction INTEGER, bidder INTEGER, datetime LONG, price DOUBLE) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65442', 'host' 'localhost')
#QUERY 
DROP STREAM auction IF EXISTS
#QUERY
CREATE STREAM auction (timestamp STARTTIMESTAMP, id INTEGER, itemname STRING, description STRING, initialbid INTEGER, reserve INTEGER, expires LONG, seller INTEGER, category INTEGER) CHANNEL localhost : 65441
#QUERY 
DROP STREAM category IF EXISTS
#QUERY
CREATE STREAM category (id INTEGER, name STRING, description STRING, parentid INTEGER) 
    		WRAPPER 'GenericPush'
		    PROTOCOL 'SizeByteBuffer'
		    TRANSPORT 'NonBlockingTcp'
		    DATAHANDLER 'Tuple'
    		OPTIONS ('port' '65443', 'host' 'localhost')
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
7600 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
7601 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
7601 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
7601 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
7601 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
7601 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
7602 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
7602 DEBUG AbstractTestComponent  - Sub test "CreateStreamTest.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
7602 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
7603 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:47 CEST 2017Running sub test 6 of 49: "CreateStreamToDatabaseSinkTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
7603 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
CREATE DATABASE CONNECTION con6 AS mysql
#QUERY
CREATE SINK dbsink AS DATABASE con6 TABLE example
#ADDQUERY
STREAM TO dbsink SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
7603 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
7603 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
7603 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7603 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
CREATE DATABASE CONNECTION con6 AS mysql
#QUERY
CREATE SINK dbsink AS DATABASE con6 TABLE example
#ADDQUERY
STREAM TO dbsink SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7604 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7604 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7605 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7605 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7d3430a7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7605 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7605 DEBUG StandardExecutor  - Adding following query: CREATE DATABASE CONNECTION con6 AS mysql - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7605 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7609 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7609 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7610 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2756c0a7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7610 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7610 DEBUG StandardExecutor  - Adding following query: CREATE SINK dbsink AS DATABASE con6 TABLE example - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7610 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7616 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7616 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
7616 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@71984c3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7617 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7617 DEBUG StandardExecutor  - Adding following query: STREAM TO dbsink SELECT * FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7617 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
getAttibutename() -> map = {bid=[timestamp, auction, bidder, datetime, price]}
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{}
getProjectionAttribute() -> bid.auction
{}
getProjectionAttribute() -> bid.bidder
{}
getProjectionAttribute() -> bid.datetime
{}
getProjectionAttribute() -> bid.price
{}
7649 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7649 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7649 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2cac4385 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
7649 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
7649 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
dbsink = DATABASESINK({connection='con6',table='example',type='mysql'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
7650 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
7672 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
7675 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
7675 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
7678 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
7678 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
7686 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
7686 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
7686 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
7687 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
7687 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
7687 INFO  transform  - Starting transformation of Top@15892131 OwnerIDs: 0... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
7688 DEBUG transform  - Before transformation: 
TopAO (15892131) Owner: 0
0 <- 0 DatabaseSinkAO (484841769) Owner: 0
       0 <- 0 MapAO (879311295) Owner: 0
              0 <- 0 AccessAO (1274247563) Owner: 0
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8329 DEBUG ruleengine  - Ruleengine needed 639 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8330 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8331 INFO  transform  - Transformation of Top@15892131 OwnerIDs: 0 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8334 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8349 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8350 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8350 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8351 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8351 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
dbsink = DATABASESINK({connection='con6',table='example',type='mysql'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8351 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8352 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8352 DEBUG ReloadLog  - Query added to log: STREAM TO dbsink SELECT * FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8352 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8353 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8353 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
CREATE DATABASE CONNECTION con6 AS mysql
#QUERY
CREATE SINK dbsink AS DATABASE con6 TABLE example
#ADDQUERY
STREAM TO dbsink SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8353 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8353 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8354 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8354 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8354 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8354 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8354 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-28] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8355 INFO  StandardExecutor  - Removing Query 0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8355 DEBUG StandardExecutor  - Removing Ownership 0 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8356 INFO  StandardExecutor  - Query 0 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8356 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
dbsink = DATABASESINK({connection='con6',table='example',type='mysql'},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8357 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8358 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8358 DEBUG AbstractTestComponent  - Sub test "CreateStreamToDatabaseSinkTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8358 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8359 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:48 CEST 2017Running sub test 7 of 49: "CreateViewTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8359 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
DROP VIEW view1 IF EXISTS
#QUERY
CREATE VIEW view1 FROM (SELECT * FROM bid)
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8359 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8359 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8359 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8359 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
DROP VIEW view1 IF EXISTS
#QUERY
CREATE VIEW view1 FROM (SELECT * FROM bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8360 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8361 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8361 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8361 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@bcec031 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8361 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8361 DEBUG StandardExecutor  - Adding following query: DROP VIEW view1 IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8362 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8369 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8370 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8370 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropViewCommand@32f0fba8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8370 DEBUG ReloadLog  - Query added to log: DROP VIEW view1 IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8370 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8371 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8371 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@545de5a4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8371 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8371 DEBUG StandardExecutor  - Adding following query: CREATE VIEW view1 FROM (SELECT * FROM bid) - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8371 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
getAttibutename() -> map = {bid=[timestamp, auction, bidder, datetime, price]}
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{}
getProjectionAttribute() -> bid.auction
{}
getProjectionAttribute() -> bid.bidder
{}
getProjectionAttribute() -> bid.datetime
{}
getProjectionAttribute() -> bid.price
{}
8385 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8386 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8386 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@569bf9eb - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8386 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8386 DEBUG StandardExecutor  - Adding following query: view1 := MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8386 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8392 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8392 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8393 DEBUG StandardExecutor  - Executing Create VIEW view1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8393 DEBUG ReloadLog  - Query added to log: view1 := MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8393 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8394 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8394 DEBUG ReloadLog  - Query added to log: CREATE VIEW view1 FROM (SELECT * FROM bid) - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8394 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8395 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8395 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
DROP VIEW view1 IF EXISTS
#QUERY
CREATE VIEW view1 FROM (SELECT * FROM bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8395 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8396 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8396 DEBUG AbstractTestComponent  - adding 0 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8396 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8396 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8397 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8397 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8397 DEBUG AbstractTestComponent  - Sub test "CreateViewTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8397 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8398 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:48 CEST 2017Running sub test 8 of 49: "ExistsTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8398 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder);
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8398 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8398 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8398 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8398 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder);
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8398 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8399 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8399 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8399 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7c351808 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8400 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8400 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8401 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.bidder
alias!
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.bidder]}, order= [B.bidder]
parsePredicate(List<Expressions>)
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::P.id
alias!
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
getSelectedAttributes() -> map= {person=[P.id]}, order= [P.id]
buildInput() -> skip
buildJoin() --> SimpleSource
getProjectionAttribute() -> P.id
{P.id=P, B.bidder=B}
getAttributename() -> attributename=P.id, sourcename= null
P.id
getAttributename() -> attributename=B.bidder, sourcename= null
P.id!=B.bidder
P.id!=B.bidder
exists() -> P.id!=B.bidder
P.id
exists() -> P_id!=B.bidder

parsePredicate() -> 
buildInput() -> skip
buildJoin() --> SimpleSource
getProjectionAttribute() -> B.bidder
{P.id=P, B.bidder=B}
8422 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8422 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8422 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@625e134e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8423 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8423 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.id']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8423 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8431 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8432 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8432 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8433 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8433 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8435 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8435 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8435 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8436 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8436 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8436 INFO  transform  - Starting transformation of Top@413373997 OwnerIDs: 1... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8437 DEBUG transform  - Before transformation: 
TopAO (413373997) Owner: 1
0 <- 0 MapAO (2024711353) Owner: 1
       0 <- 0 JoinAO (711310213) Owner: 1 Predicate: null
              0 <- 0 ExistenceAO (1267042315) Owner: 1
                     0 <- 0 MapAO (1335061928) Owner: 1
                            0 <- 0 AccessAO (1108706191) Owner: 1
                     1 <- 0 AccessAO (1160487387) Owner: 1
              1 <- 0 AccessAO (1160487387) Owner: 1
                            [see above for following operators]
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8488 DEBUG ruleengine  - Ruleengine needed 50 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8488 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8489 INFO  transform  - Transformation of Top@413373997 OwnerIDs: 1 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8489 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8490 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8490 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8490 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8491 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8491 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.id']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8491 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8491 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8492 DEBUG ReloadLog  - Query added to log: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8492 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8492 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8493 INFO  StandardExecutor  - Starting query (ID: 1)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
8494 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8494 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8499 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8499 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8500 INFO  StandardExecutor  - Query 1 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
8500 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 1 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
8501 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
8510 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
8510 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT P.id FROM person AS P WHERE P.id!= B.bidder);
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8511 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8511 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8512 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8512 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8512 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8512 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8512 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-30] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8513 INFO  StandardExecutor  - Stopping query (ID: 1).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
8513 DEBUG StandardExecutor  - Try to stop query 1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
8514 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8519 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8520 INFO  StandardExecutor  - Query 1 stopped. Execution time 20 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
8520 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 1 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
8520 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
8520 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
8521 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
8521 INFO  StandardExecutor  - Removing Query 1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8521 DEBUG StandardExecutor  - Removing Ownership 1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8522 INFO  StandardExecutor  - Query 1 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8522 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.id']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8522 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8523 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8524 DEBUG AbstractTestComponent  - Sub test "ExistsTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8524 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8525 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:48 CEST 2017Running sub test 9 of 49: "ExistsTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8525 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max');
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8525 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8525 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8525 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8525 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max');
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8525 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8526 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8526 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8527 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1e044120 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8527 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8527 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max'); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8527 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.bidder
alias!
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.bidder]}, order= [B.bidder]
parsePredicate(List<Expressions>)
getAttibutename() -> map = {person=[P.timestamp, timestamp, P.id, id, P.name, name, P.email, email, P.creditcard, creditcard, P.city, city, P.state, state]}
buildJoin() --> SimpleSource
getProjectionAttribute() -> P.timestamp
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.id
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.name
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.email
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.creditcard
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.city
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> P.state
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getAttributename() -> attributename=P.id, sourcename= null
P.id
getAttributename() -> attributename=B.bidder, sourcename= null
P.id!=B.bidder
P.id!=B.bidder
getAttributename() -> attributename=P.name, sourcename= null
P.id!=B.bidder&&P.name
P.id!=B.bidder&&P.name!="Max"
P.id!=B.bidder&&P.name!="Max"
P.id!=B.bidder&&P.name!="Max"
exists() -> P.id!=B.bidder&&P.name!="Max"
P.timestamp
person.timestamp
P.id
person.id
P.name
person.name
P.email
person.email
P.creditcard
person.creditcard
P.city
person.city
P.state
person.state
exists() -> P_id!=B.bidder&&P_name!="Max"

parsePredicate() -> 
buildInput() -> skip
buildJoin() --> SimpleSource
getProjectionAttribute() -> B.bidder
{P.city=P, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
8543 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8543 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8543 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2b62442c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8543 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8544 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.timestamp','P.id','P.name','P.email','P.creditcard','P.city','P.state']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder&&P_name!="Max"'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8544 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8562 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8562 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8562 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8563 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8563 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8565 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8565 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8565 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8565 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8565 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8566 INFO  transform  - Starting transformation of Top@852190062 OwnerIDs: 2... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8567 DEBUG transform  - Before transformation: 
TopAO (852190062) Owner: 2
0 <- 0 MapAO (1674403916) Owner: 2
       0 <- 0 JoinAO (1088239991) Owner: 2 Predicate: null
              0 <- 0 ExistenceAO (61137731) Owner: 2
                     0 <- 0 MapAO (1780293706) Owner: 2
                            0 <- 0 AccessAO (1658511941) Owner: 2
                     1 <- 0 AccessAO (1264941544) Owner: 2
              1 <- 0 AccessAO (1264941544) Owner: 2
                            [see above for following operators]
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8586 DEBUG ruleengine  - Ruleengine needed 14 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8586 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8587 INFO  transform  - Transformation of Top@852190062 OwnerIDs: 2 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8587 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8588 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8588 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8588 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8588 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8588 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.timestamp','P.id','P.name','P.email','P.creditcard','P.city','P.state']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder&&P_name!="Max"'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8589 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8589 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8589 DEBUG ReloadLog  - Query added to log: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max'); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8590 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8591 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8591 INFO  StandardExecutor  - Starting query (ID: 2)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
8591 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8591 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8592 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8592 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8594 INFO  StandardExecutor  - Query 2 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
8595 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 2 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
8595 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
8595 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
8596 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT * FROM person AS P WHERE P.id!= B.bidder AND P.name != 'Max');
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8596 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8596 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8597 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8597 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8597 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8597 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8598 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-31] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8598 INFO  StandardExecutor  - Stopping query (ID: 2).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
8598 DEBUG StandardExecutor  - Try to stop query 2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
8599 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8600 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8601 INFO  StandardExecutor  - Query 2 stopped. Execution time 7 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
8601 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 2 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
8601 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
8601 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
8601 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
8601 INFO  StandardExecutor  - Removing Query 2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8601 DEBUG StandardExecutor  - Removing Ownership 2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8602 INFO  StandardExecutor  - Query 2 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8602 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = MAP({expressions=['P.timestamp','P.id','P.name','P.email','P.creditcard','P.city','P.state']},operator_1)
operator_3 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='P_id!=B.bidder&&P_name!="Max"'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.bidder']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8602 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8603 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8604 DEBUG AbstractTestComponent  - Sub test "ExistsTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8604 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8604 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:48 CEST 2017Running sub test 10 of 49: "ExistsTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8605 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8605 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8605 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8605 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8606 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8606 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8607 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8607 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8607 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@290b1b2e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8607 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8608 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8608 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.bidder
alias!
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.bidder]}, order= [B.bidder]
parsePredicate(List<Expressions>)
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= id, realSourcename= person, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= name, realSourcename= person, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {person=[id, name]}, order= [person.id, person.name]
buildInput() -> skip
buildJoin() --> SimpleSource
getProjectionAttribute() -> person.id
{P.city=P, B.price=B, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getProjectionAttribute() -> person.name
{P.city=P, B.price=B, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
getAttributename() -> attributename=id, sourcename= null
person.id
getAttributename() -> attributename=B.bidder, sourcename= null
person.id!=B.bidder
person.id!=B.bidder
getAttributename() -> attributename=name, sourcename= null
person.id!=B.bidder&&person.name
person.id!=B.bidder&&person.name!="Max"
person.id!=B.bidder&&person.name!="Max"
person.id!=B.bidder&&person.name!="Max"
exists() -> person.id!=B.bidder&&person.name!="Max"
person.id
person.name
exists() -> person_id!=B.bidder&&person_name!="Max"

getAttributename() -> attributename=B.price, sourcename= null
||B.price
||B.price>1000
||B.price>1000
||B.price>1000
parsePredicate() -> ||B.price>1000
buildInput() -> skip
buildJoin() --> SimpleSource
registerExistenceOperator() -> selectInput= operator_2
getProjectionAttribute() -> B.bidder
{P.city=P, B.price=B, P.name=P, P.creditcard=P, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
8629 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8629 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8629 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6fefce9e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8630 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8630 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['person.id','person.name']},person)
operator_2 = RENAME({aliases=['bidder','B.bidder','price','B.price','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='person_id!=B.bidder&&person_name!="Max"'},operator_1,operator_2)
operator_3 = SELECT({predicate='B.price>1000'},JOIN(operator_4,operator_2))
operator_5 = MAP({expressions=['B.bidder']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8630 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8644 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8645 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8645 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8648 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8648 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8656 DEBUG RelationalRestructHelper  - removing operator:Select@1175418534 OwnerIDs: 3(B.price) > (1000) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
8657 DEBUG ruleengine  - Ruleengine needed 8 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8658 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8658 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8658 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8658 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8659 INFO  transform  - Starting transformation of Top@1241938981 OwnerIDs: 3... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8659 DEBUG transform  - Before transformation: 
TopAO (1241938981) Owner: 3
0 <- 0 MapAO (168957945) Owner: 3
       0 <- 0 JoinAO (1004430079) Owner: 3 Predicate: null
              0 <- 0 ExistenceAO (1379148981) Owner: 3
                     0 <- 0 MapAO (732597634) Owner: 3
                            0 <- 0 AccessAO (832432849) Owner: 3
                     1 <- 0 AccessAO (2031927175) Owner: 3
              1 <- 0 SelectAO (176041373) Owner: 
                     0 <- 0 AccessAO (2031927175) Owner: 3
                                   [see above for following operators]
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8673 DEBUG ruleengine  - Ruleengine needed 12 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8673 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8674 INFO  transform  - Transformation of Top@1241938981 OwnerIDs: 3 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8674 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8675 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8675 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8675 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8676 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8676 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['person.id','person.name']},person)
operator_2 = RENAME({aliases=['bidder','B.bidder','price','B.price','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='person_id!=B.bidder&&person_name!="Max"'},operator_1,operator_2)
operator_3 = SELECT({predicate='B.price>1000'},JOIN(operator_4,operator_2))
operator_5 = MAP({expressions=['B.bidder']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8676 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8677 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8677 DEBUG ReloadLog  - Query added to log: SELECT B.bidder FROM bid AS B
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8677 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8678 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8678 INFO  StandardExecutor  - Starting query (ID: 3)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
8678 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8678 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8679 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8680 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8681 INFO  StandardExecutor  - Query 3 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
8682 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 3 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
8682 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
8682 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
8682 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.bidder FROM bid AS B 
WHERE EXISTS(SELECT id, name FROM person WHERE id!= B.bidder AND name != 'Max') OR B.price > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8682 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8683 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8683 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8683 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8683 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8683 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8684 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-32] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8684 INFO  StandardExecutor  - Stopping query (ID: 3).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
8685 DEBUG StandardExecutor  - Try to stop query 3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
8685 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8686 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8687 INFO  StandardExecutor  - Query 3 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
8687 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 3 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
8687 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
8688 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
8688 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
8688 INFO  StandardExecutor  - Removing Query 3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8688 DEBUG StandardExecutor  - Removing Ownership 3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8688 INFO  StandardExecutor  - Query 3 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8688 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['person.id','person.name']},person)
operator_2 = RENAME({aliases=['bidder','B.bidder','price','B.price','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='EXISTS',predicate='person_id!=B.bidder&&person_name!="Max"'},operator_1,operator_2)
operator_3 = SELECT({predicate='B.price>1000'},JOIN(operator_4,operator_2))
operator_5 = MAP({expressions=['B.bidder']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8689 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8689 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8690 DEBUG AbstractTestComponent  - Sub test "ExistsTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8690 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8690 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:48 CEST 2017Running sub test 11 of 49: "QuantificationTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8690 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.price 
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2);
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8690 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8691 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8691 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8691 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.price 
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2);
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8691 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8692 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8693 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8693 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@782a4fff - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8694 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8694 DEBUG StandardExecutor  - Adding following query: SELECT B.price
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8694 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.price
alias!
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.price]}, order= [B.price]
parsePredicate(List<Expressions>)
findbyName::B2.price
alias!
registerAttributeAliases() -> attribute= B2.price, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B2.price]}, order= [B2.price]
buildInput() -> skip
buildJoin() --> SimpleSource
getProjectionAttribute() -> B2.price
{P.city=P, B.price=B, P.name=P, P.creditcard=P, B2.price=B2, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
B2.price

parsePredicate() -> 
buildInput() -> skip
buildJoin() --> SimpleSource
getProjectionAttribute() -> B.price
{P.city=P, B.price=B, P.name=P, P.creditcard=P, B2.price=B2, P.timestamp=P, P.id=P, B.bidder=B, P.email=P, P.state=P}
8710 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8710 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8710 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6063d80a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8711 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8711 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['price','B2.price','timestamp','B2.timestamp','auction','B2.auction','bidder','B2.bidder','datetime','B2.datetime'],pairs='true'},bid)
operator_2 = MAP({expressions=['B2.price']},operator_1)
operator_3 = RENAME({aliases=['price','B.price','timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='NOT_EXISTS',predicate='B.price<=B2_price'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.price']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8711 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8718 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8718 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8718 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8719 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8719 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8721 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8721 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8721 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8721 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8721 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8722 INFO  transform  - Starting transformation of Top@1228963996 OwnerIDs: 4... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8723 DEBUG transform  - Before transformation: 
TopAO (1228963996) Owner: 4
0 <- 0 MapAO (373437697) Owner: 4
       0 <- 0 JoinAO (82825098) Owner: 4 Predicate: null
              0 <- 0 ExistenceAO (2048102341) Owner: 4
                     0 <- 0 MapAO (932885627) Owner: 4
                            0 <- 0 AccessAO (813131188) Owner: 4
                     1 <- 0 AccessAO (1251897263) Owner: 4
              1 <- 0 AccessAO (1251897263) Owner: 4
                            [see above for following operators]
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8737 DEBUG ruleengine  - Ruleengine needed 13 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8738 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8738 INFO  transform  - Transformation of Top@1228963996 OwnerIDs: 4 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8738 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8739 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8739 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8739 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8739 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8740 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['price','B2.price','timestamp','B2.timestamp','auction','B2.auction','bidder','B2.bidder','datetime','B2.datetime'],pairs='true'},bid)
operator_2 = MAP({expressions=['B2.price']},operator_1)
operator_3 = RENAME({aliases=['price','B.price','timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='NOT_EXISTS',predicate='B.price<=B2_price'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.price']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8740 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8740 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8741 DEBUG ReloadLog  - Query added to log: SELECT B.price
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2); - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8741 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8742 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8742 INFO  StandardExecutor  - Starting query (ID: 4)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
8742 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8743 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8744 INFO  StandardExecutor  - Query 4 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
8744 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 4 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
8744 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
8745 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
8745 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.price 
FROM bid AS B
WHERE B.price > ALL (SELECT B2.price FROM bid AS B2);
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8745 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8746 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8746 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8746 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8746 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8746 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8747 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-33] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8747 INFO  StandardExecutor  - Stopping query (ID: 4).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
8748 DEBUG StandardExecutor  - Try to stop query 4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
8748 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8749 INFO  StandardExecutor  - Query 4 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
8749 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 4 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
8749 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
8749 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
8750 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
8750 INFO  StandardExecutor  - Removing Query 4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8750 DEBUG StandardExecutor  - Removing Ownership 4 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8750 INFO  StandardExecutor  - Query 4 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8750 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['price','B2.price','timestamp','B2.timestamp','auction','B2.auction','bidder','B2.bidder','datetime','B2.datetime'],pairs='true'},bid)
operator_2 = MAP({expressions=['B2.price']},operator_1)
operator_3 = RENAME({aliases=['price','B.price','timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime'],pairs='true'},bid)
operator_4 = EXISTENCE({type='NOT_EXISTS',predicate='B.price<=B2_price'},operator_2,operator_3)
operator_5 = MAP({expressions=['B.price']},JOIN(operator_4,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8750 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8752 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8753 DEBUG AbstractTestComponent  - Sub test "QuantificationTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8753 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8753 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:48 CEST 2017Running sub test 12 of 49: "RenameTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8753 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8753 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8753 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8753 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8754 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8754 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8754 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8755 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8755 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4152d38d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8755 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8755 DEBUG StandardExecutor  - Adding following query: SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8755 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= C.id, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
findbyName::B.auction
alias!
findbyName::B.auction
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::B.bidder
alias!
findbyName::B.bidder
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::C.email
findbyName::C.email
alias!
registerAttributeAliases() -> attribute= C.email, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
findbyName::C.id
findbyName::C.id
alias!
registerAttributeAliases() -> attribute= C.id, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B.auction, B.bidder], person=[C.email, C.id]}, order= [B.auction, B.bidder, C.email, C.id]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B.auction, sourcename= null
B.auction
getAttributename() -> attributename=C.id, sourcename= null
B.auction==C.id
B.auction==C.id
parsePredicate() -> B.auction==C.id
buildInput() -> skip
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> B.auction
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> B.bidder
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> C.email
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> C.id
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
8768 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8769 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8769 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@db44aa2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8769 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8769 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B.auction','bidder','B.bidder','timestamp','B.timestamp','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction','B.bidder','C.email','C.id']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8769 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8779 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8779 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8780 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8780 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8780 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8784 DEBUG RelationalRestructHelper  - removing operator:Select@32393008 OwnerIDs: 5(B.auction) = (C.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
8785 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8785 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8785 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8785 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8785 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8786 INFO  transform  - Starting transformation of Top@1934692470 OwnerIDs: 5... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8786 DEBUG transform  - Before transformation: 
TopAO (1934692470) Owner: 5
0 <- 0 MapAO (2032647583) Owner: 5
       0 <- 0 JoinAO (1395073533) Owner: 5 Predicate: (B.auction) = (C.id) initialized = true
              0 <- 0 AccessAO (68195659) Owner: 5
              1 <- 0 AccessAO (2142893855) Owner: 5
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8804 DEBUG ruleengine  - Ruleengine needed 16 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8804 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8805 INFO  transform  - Transformation of Top@1934692470 OwnerIDs: 5 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8805 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8805 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8805 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8805 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8806 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8806 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B.auction','bidder','B.bidder','timestamp','B.timestamp','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction','B.bidder','C.email','C.id']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8806 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8807 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8807 DEBUG ReloadLog  - Query added to log: SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8807 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8808 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8808 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT B.auction, B.bidder, C.email, C.id
FROM bid AS B, person AS C
WHERE B.auction=C.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8808 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8808 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8809 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8809 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8809 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8809 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8809 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-34] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8810 INFO  StandardExecutor  - Removing Query 5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8810 DEBUG StandardExecutor  - Removing Ownership 5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8810 INFO  StandardExecutor  - Query 5 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8810 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B.auction','bidder','B.bidder','timestamp','B.timestamp','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction','B.bidder','C.email','C.id']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8810 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8811 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8812 DEBUG AbstractTestComponent  - Sub test "RenameTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8812 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8812 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:49 CEST 2017Running sub test 13 of 49: "RenameTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8812 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id;
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8812 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8812 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8813 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8813 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id;
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8813 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8814 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8814 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8814 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7889a1ac - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8814 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8814 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8815 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::B.bidder
alias!
findbyName::B.bidder
registerAttributeAliases() -> attribute= auctioneer, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::C.email
findbyName::C.email
alias!
registerAttributeAliases() -> attribute= C.email, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer], person=[C.email]}, order= [auctioneer, C.email]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
B.auction
getAttributename() -> attributename=id, sourcename= null
B.auction==C.id
B.auction==C.id
parsePredicate() -> B.auction==C.id
buildInput() -> skip
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> auctioneer
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> C.email
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
8836 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8836 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8836 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1494b84d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8836 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8836 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['email','C.email','timestamp','C.timestamp','id','C.id','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8837 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8844 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8844 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8844 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8845 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8845 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8846 DEBUG RelationalRestructHelper  - removing operator:Select@443491171 OwnerIDs: 6(B.auction) = (C.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
8847 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8847 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8847 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8848 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8848 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8848 INFO  transform  - Starting transformation of Top@1520491508 OwnerIDs: 6... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8849 DEBUG transform  - Before transformation: 
TopAO (1520491508) Owner: 6
0 <- 0 MapAO (380616082) Owner: 6
       0 <- 0 JoinAO (744316958) Owner: 6 Predicate: (B.auction) = (C.id) initialized = true
              0 <- 0 AccessAO (2145420209) Owner: 6
              1 <- 0 AccessAO (600017090) Owner: 6
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8891 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8891 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8892 INFO  transform  - Transformation of Top@1520491508 OwnerIDs: 6 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8892 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8892 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8893 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8893 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8893 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8893 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['email','C.email','timestamp','C.timestamp','id','C.id','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8893 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8894 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8894 DEBUG ReloadLog  - Query added to log: SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8894 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8895 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8896 INFO  StandardExecutor  - Starting query (ID: 6)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
8896 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8896 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8896 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
8897 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
8898 INFO  StandardExecutor  - Query 6 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
8898 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 6 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
8898 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
8899 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
8899 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2a7b6f69 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8899 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8899 DEBUG StandardExecutor  - Adding following query: SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8899 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= C.id, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
findbyName::B.bidder
alias!
findbyName::B.bidder
registerAttributeAliases() -> attribute= auctioneer, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::C.email
findbyName::C.email
alias!
registerAttributeAliases() -> attribute= C.email, realSourcename= person, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer], person=[C.email]}, order= [auctioneer, C.email]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
B.auction
getAttributename() -> attributename=C.id, sourcename= null
B.auction==C.id
B.auction==C.id
parsePredicate() -> B.auction==C.id
buildInput() -> skip
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> auctioneer
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> C.email
{B.price=B, B2.price=B2, P.timestamp=P, P.email=P, P.state=P, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
8908 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8908 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8908 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@32f61a31 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
8909 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8909 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
8909 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
8919 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
8919 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
8919 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
8921 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
8922 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
8924 DEBUG RelationalRestructHelper  - removing operator:Select@2008159348 OwnerIDs: 7(B.auction) = (C.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
8926 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8927 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8927 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
8927 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
8927 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
8930 INFO  transform  - Starting transformation of Top@936628786 OwnerIDs: 7... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
8930 DEBUG transform  - Before transformation: 
TopAO (936628786) Owner: 7
0 <- 0 MapAO (817941759) Owner: 7
       0 <- 0 JoinAO (1478334108) Owner: 7 Predicate: (B.auction) = (C.id) initialized = true
              0 <- 0 AccessAO (36550900) Owner: 7
              1 <- 0 AccessAO (726051009) Owner: 7
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
8967 DEBUG ruleengine  - Ruleengine needed 30 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
8968 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
8969 INFO  transform  - Transformation of Top@936628786 OwnerIDs: 7 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
8969 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
8971 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
8971 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
8971 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
8971 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
8972 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8972 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8973 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8973 DEBUG ReloadLog  - Query added to log: SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8973 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8975 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8976 INFO  StandardExecutor  - Starting query (ID: 7)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
8977 INFO  StandardExecutor  - Query 7 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
8982 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 7 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
8982 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
8982 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
8983 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=id;
#RUNQUERY
SELECT B.bidder AS auctioneer, C.email
FROM bid AS B, person AS C
WHERE auction=C.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
8984 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8985 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
8986 DEBUG AbstractTestComponent  - adding 2 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
8986 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
8987 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
8987 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
8990 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-35] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8991 INFO  StandardExecutor  - Stopping query (ID: 6).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
8991 DEBUG StandardExecutor  - Try to stop query 6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
8991 INFO  StandardExecutor  - Query 6 stopped. Execution time 93 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
8992 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 6 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
8992 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
8992 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
8992 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
8992 INFO  StandardExecutor  - Removing Query 6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8992 DEBUG StandardExecutor  - Removing Ownership 6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8993 INFO  StandardExecutor  - Query 6 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8993 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['email','C.email','timestamp','C.timestamp','id','C.id','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8993 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8994 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-35] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
8994 INFO  StandardExecutor  - Stopping query (ID: 7).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
8994 DEBUG StandardExecutor  - Try to stop query 7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
8994 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8995 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
8995 INFO  StandardExecutor  - Query 7 stopped. Execution time 18 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
8996 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 7 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
8996 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
8996 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
8996 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
8996 INFO  StandardExecutor  - Removing Query 7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
8996 DEBUG StandardExecutor  - Removing Ownership 7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
8997 INFO  StandardExecutor  - Query 7 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
8997 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','C.id','email','C.email','timestamp','C.timestamp','name','C.name','creditcard','C.creditcard','city','C.city','state','C.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction==C.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer','C.email']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
8997 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
8998 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
8998 DEBUG AbstractTestComponent  - Sub test "RenameTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
8998 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
8999 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:49 CEST 2017Running sub test 14 of 49: "RenameTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
8999 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction 
FROM bid AS B1, bid AS B2;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
8999 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
8999 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
8999 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
8999 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction 
FROM bid AS B1, bid AS B2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9000 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9000 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9001 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9001 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@255990cc - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9001 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9001 DEBUG StandardExecutor  - Adding following query: SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9002 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::B1.auction
alias!
findbyName::B1.auction
alias!
registerAttributeAliases() -> attribute= B1.auction, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B1.auction, B2.auction]}, order= [B1.auction, B2.auction]
buildInput() -> skip
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> B1.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B}
9010 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9010 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9010 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@29d2d081 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9010 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9010 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','timestamp','B2.timestamp','bidder','B2.bidder','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = MAP({expressions=['B1.auction','B2.auction']},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9011 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9015 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9015 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9015 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9015 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9016 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9017 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9017 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9017 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9017 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9018 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9018 INFO  transform  - Starting transformation of Top@503144273 OwnerIDs: 8... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9018 DEBUG transform  - Before transformation: 
TopAO (503144273) Owner: 8
0 <- 0 MapAO (1009916891) Owner: 8
       0 <- 0 JoinAO (612716569) Owner: 8 Predicate: null
              0 <- 0 AccessAO (985487390) Owner: 8
              1 <- 0 AccessAO (1296928719) Owner: 8
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9027 DEBUG ruleengine  - Ruleengine needed 8 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9027 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9028 INFO  transform  - Transformation of Top@503144273 OwnerIDs: 8 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9028 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9029 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9030 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9030 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9030 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9030 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','timestamp','B2.timestamp','bidder','B2.bidder','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = MAP({expressions=['B1.auction','B2.auction']},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9031 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9031 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9031 DEBUG ReloadLog  - Query added to log: SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9032 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9032 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9033 INFO  StandardExecutor  - Starting query (ID: 8)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9033 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9033 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9034 INFO  StandardExecutor  - Query 8 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9035 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 8 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9035 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9035 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9035 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction 
FROM bid AS B1, bid AS B2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9036 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9036 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9036 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9037 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9037 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9037 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9037 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-36] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9038 INFO  StandardExecutor  - Stopping query (ID: 8).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9038 DEBUG StandardExecutor  - Try to stop query 8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9038 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9039 INFO  StandardExecutor  - Query 8 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9039 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 8 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9039 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9039 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9039 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9040 INFO  StandardExecutor  - Removing Query 8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9040 DEBUG StandardExecutor  - Removing Ownership 8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9040 INFO  StandardExecutor  - Query 8 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9040 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','timestamp','B2.timestamp','bidder','B2.bidder','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = MAP({expressions=['B1.auction','B2.auction']},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9040 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9041 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9042 DEBUG AbstractTestComponent  - Sub test "RenameTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9043 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9043 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:49 CEST 2017Running sub test 15 of 49: "RenameTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9043 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9043 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9043 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9043 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9043 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9044 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9044 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9045 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9045 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5af5def9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9045 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9045 DEBUG StandardExecutor  - Adding following query: SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9045 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= B1.bidder, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
registerAttributeAliases() -> attribute= B2.bidder, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B1.auction
alias!
findbyName::B1.auction
alias!
registerAttributeAliases() -> attribute= B1.auction, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B1.auction, B2.auction]}, order= [B1.auction, B2.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B1.bidder, sourcename= null
B1.bidder
getAttributename() -> attributename=B2.bidder, sourcename= null
B1.bidder!=B2.bidder
B1.bidder!=B2.bidder
parsePredicate() -> B1.bidder!=B2.bidder
buildInput() -> skip
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> B1.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
9059 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9060 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9060 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@47a64f7d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9060 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9060 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B1.auction','bidder','B1.bidder','timestamp','B1.timestamp','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = SELECT({predicate='B1.bidder!=B2.bidder'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B1.auction','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9060 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9066 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9066 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9067 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9067 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9067 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9068 DEBUG RelationalRestructHelper  - removing operator:Select@653345773 OwnerIDs: 9(B1.bidder) != (B2.bidder) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9069 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9069 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9070 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9070 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9070 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9070 INFO  transform  - Starting transformation of Top@1779914089 OwnerIDs: 9... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9071 DEBUG transform  - Before transformation: 
TopAO (1779914089) Owner: 9
0 <- 0 MapAO (295055909) Owner: 9
       0 <- 0 JoinAO (1060935276) Owner: 9 Predicate: (B1.bidder) != (B2.bidder) initialized = true
              0 <- 0 AccessAO (300811000) Owner: 9
              1 <- 0 AccessAO (1090695601) Owner: 9
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9080 DEBUG ruleengine  - Ruleengine needed 7 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9080 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9080 INFO  transform  - Transformation of Top@1779914089 OwnerIDs: 9 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9080 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9081 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9081 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9081 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9081 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9081 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B1.auction','bidder','B1.bidder','timestamp','B1.timestamp','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = SELECT({predicate='B1.bidder!=B2.bidder'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B1.auction','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9081 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9082 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9082 DEBUG ReloadLog  - Query added to log: SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9082 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9084 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9085 INFO  StandardExecutor  - Starting query (ID: 9)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9085 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9085 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9086 INFO  StandardExecutor  - Query 9 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9087 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 9 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9087 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9087 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9087 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.auction, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.bidder!=B2.bidder;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9087 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9088 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9088 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9088 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9088 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9088 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9089 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-37] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9089 INFO  StandardExecutor  - Stopping query (ID: 9).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9089 DEBUG StandardExecutor  - Try to stop query 9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9090 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9091 INFO  StandardExecutor  - Query 9 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9091 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 9 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9091 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9091 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9091 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9091 INFO  StandardExecutor  - Removing Query 9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9091 DEBUG StandardExecutor  - Removing Ownership 9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9092 INFO  StandardExecutor  - Query 9 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9092 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B1.auction','bidder','B1.bidder','timestamp','B1.timestamp','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_3 = SELECT({predicate='B1.bidder!=B2.bidder'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B1.auction','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9092 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9092 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9093 DEBUG AbstractTestComponent  - Sub test "RenameTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9094 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9094 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:49 CEST 2017Running sub test 16 of 49: "RenameTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9094 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9094 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9094 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9094 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9094 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9094 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9095 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9096 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9096 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5aa360ea - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9096 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9096 DEBUG StandardExecutor  - Adding following query: SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9096 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= B1.auction, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
registerAttributeAliases() -> attribute= B2.bidder, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B1.auction
alias!
findbyName::B1.auction
alias!
registerAttributeAliases() -> attribute= auctioneer, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer, B2.auction]}, order= [auctioneer, B2.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B1.auction, sourcename= null
B1.auction
getAttributename() -> attributename=B2.bidder, sourcename= null
B1.auction!=B2.bidder
B1.auction!=B2.bidder
parsePredicate() -> B1.auction!=B2.bidder
buildInput() -> skip
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> auctioneer
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, P.state=P, B1.auction=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
9109 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9110 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9110 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@54336c81 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9110 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9110 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','auctioneer','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_4 = SELECT({predicate='B1.auction!=B2.bidder'},JOIN(JOIN(operator_1,operator_2),operator_3))
operator_5 = MAP({expressions=['auctioneer','B2.auction']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9110 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9119 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9119 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9119 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9120 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9120 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9121 DEBUG RelationalRestructHelper  - removing operator:Select@438123546 OwnerIDs: 10(B1.auction) != (B2.bidder) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9122 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9123 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9123 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9123 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9123 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9124 INFO  transform  - Starting transformation of Top@4181455 OwnerIDs: 10... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9124 DEBUG transform  - Before transformation: 
TopAO (4181455) Owner: 10
0 <- 0 MapAO (1986581856) Owner: 10
       0 <- 0 JoinAO (1177101170) Owner: 10 Predicate: (B1.auction) != (B2.bidder) initialized = true
              0 <- 0 JoinAO (309060377) Owner: 10 Predicate: null
                     0 <- 0 AccessAO (1816397102) Owner: 10
                     1 <- 0 AccessAO (1547116051) Owner: 10
              1 <- 0 AccessAO (1393198164) Owner: 10
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9136 DEBUG ruleengine  - Ruleengine needed 11 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9136 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9136 INFO  transform  - Transformation of Top@4181455 OwnerIDs: 10 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9137 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9137 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9138 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9138 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9138 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9138 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','auctioneer','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_4 = SELECT({predicate='B1.auction!=B2.bidder'},JOIN(JOIN(operator_1,operator_2),operator_3))
operator_5 = MAP({expressions=['auctioneer','B2.auction']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9138 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9139 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9139 DEBUG ReloadLog  - Query added to log: SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9139 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9140 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9140 INFO  StandardExecutor  - Starting query (ID: 10)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9141 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9141 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9141 INFO  StandardExecutor  - Query 10 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9142 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 10 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9142 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9142 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9143 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.auction AS auctioneer, B2.auction
FROM bid AS B1, bid AS B2
WHERE B1.auction!=B2.bidder
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9143 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9143 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9144 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9144 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9144 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9144 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9144 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-38] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9145 INFO  StandardExecutor  - Stopping query (ID: 10).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9145 DEBUG StandardExecutor  - Try to stop query 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9146 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9147 INFO  StandardExecutor  - Query 10 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9147 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 10 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9147 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9147 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9147 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9147 INFO  StandardExecutor  - Removing Query 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9147 DEBUG StandardExecutor  - Removing Ownership 10 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9148 INFO  StandardExecutor  - Query 10 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9148 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B1.auction','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime','price','B1.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['auction','auctioneer','timestamp','bid.timestamp#1','bidder','bid.bidder#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},bid)
operator_3 = RENAME({aliases=['auction','B2.auction','bidder','B2.bidder','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},bid)
operator_4 = SELECT({predicate='B1.auction!=B2.bidder'},JOIN(JOIN(operator_1,operator_2),operator_3))
operator_5 = MAP({expressions=['auctioneer','B2.auction']},operator_4)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9148 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9149 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9150 DEBUG AbstractTestComponent  - Sub test "RenameTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9150 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9150 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:49 CEST 2017Running sub test 17 of 49: "RenameTest6.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9150 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9150 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9150 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9151 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9151 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9151 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9151 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9152 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9152 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4c432866 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9152 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9152 DEBUG StandardExecutor  - Adding following query: SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9152 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B1.bidder
alias!
findbyName::B1.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer1, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.bidder
alias!
findbyName::B2.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer2, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer1, auctioneer2, B2.auction]}, order= [auctioneer1, auctioneer2, B2.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auctioneer1, sourcename= null
auctioneer1
getAttributename() -> attributename=B2.auction, sourcename= null
auctioneer1==B2.auction
auctioneer1==B2.auction
parsePredicate() -> auctioneer1==B2.auction
buildInput() -> skip
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> auctioneer1
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, P.state=P, B1.auction=B1, auctioneer1=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer2
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, P.state=P, B1.auction=B1, auctioneer1=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, P.state=P, B1.auction=B1, auctioneer1=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
9169 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9169 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9169 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@64d7b720 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9169 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9178 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer1','auctioneer2','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9179 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9187 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9187 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9188 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9188 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9188 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9203 DEBUG RelationalRestructHelper  - removing operator:Select@653515020 OwnerIDs: 11(auctioneer1) = (B2.auction) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9204 DEBUG ruleengine  - Ruleengine needed 15 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9204 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9205 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9205 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9205 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9205 INFO  transform  - Starting transformation of Top@589309113 OwnerIDs: 11... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9206 DEBUG transform  - Before transformation: 
TopAO (589309113) Owner: 11
0 <- 0 MapAO (1437129801) Owner: 11
       0 <- 0 JoinAO (708926121) Owner: 11 Predicate: (auctioneer1) = (B2.auction) initialized = true
              0 <- 0 TimeWindowAO (1406004470) Owner: 11
                     0 <- 0 AccessAO (1911168986) Owner: 11
              1 <- 0 TimeWindowAO (1655955258) Owner: 11
                     0 <- 0 AccessAO (1107772887) Owner: 11
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9224 DEBUG ruleengine  - Ruleengine needed 18 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9224 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9225 INFO  transform  - Transformation of Top@589309113 OwnerIDs: 11 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9225 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9225 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9226 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9226 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9226 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9226 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer1','auctioneer2','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9227 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9227 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9227 DEBUG ReloadLog  - Query added to log: SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9228 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9228 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9229 INFO  StandardExecutor  - Starting query (ID: 11)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9229 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9229 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9230 INFO  StandardExecutor  - Query 11 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9231 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 11 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9231 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9231 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9231 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B2.bidder AS auctioneer2, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9232 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9232 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9232 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9232 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9233 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9233 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9233 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-39] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9234 INFO  StandardExecutor  - Stopping query (ID: 11).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9234 DEBUG StandardExecutor  - Try to stop query 11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9235 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9235 INFO  StandardExecutor  - Query 11 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9236 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 11 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9236 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9236 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9236 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9236 INFO  StandardExecutor  - Removing Query 11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9236 DEBUG StandardExecutor  - Removing Ownership 11 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9237 INFO  StandardExecutor  - Query 11 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9237 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['auctioneer1','auctioneer2','B2.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9237 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9237 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9238 DEBUG AbstractTestComponent  - Sub test "RenameTest6.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9238 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9238 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:49 CEST 2017Running sub test 18 of 49: "RenameTest7.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9238 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9238 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9238 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9238 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9238 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9239 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9239 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9240 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9240 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7a9c84a5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9240 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9240 DEBUG StandardExecutor  - Adding following query: SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9240 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B1.bidder
alias!
findbyName::B1.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer1, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B1.bidder
alias!
findbyName::B1.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer11, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B1.bidder
alias!
findbyName::B1.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer111, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B2.bidder
alias!
findbyName::B2.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer2, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B2.bidder
alias!
findbyName::B2.bidder
alias!
registerAttributeAliases() -> attribute= auctioneer22, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
findbyName::B2.auction
alias!
findbyName::B2.auction
alias!
registerAttributeAliases() -> attribute= B2.auction, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer1, auctioneer11, auctioneer111, auctioneer2, auctioneer22, B2.auction]}, order= [auctioneer1, auctioneer11, auctioneer111, auctioneer2, auctioneer22, B2.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auctioneer1, sourcename= null
auctioneer1
getAttributename() -> attributename=B2.auction, sourcename= null
auctioneer1==B2.auction
auctioneer1==B2.auction
parsePredicate() -> auctioneer1==B2.auction
buildInput() -> skip
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> auctioneer1
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer11
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer111
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer2
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctioneer22
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> B2.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
9254 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9254 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9255 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7e053511 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9255 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9255 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['bidder','auctioneer11','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = RENAME({aliases=['bidder','auctioneer111','timestamp','bid.timestamp#2','auction','bid.auction#2','datetime','bid.datetime#2','price','bid.price#2'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_5 = RENAME({aliases=['bidder','auctioneer22','timestamp','bid.timestamp#3','auction','bid.auction#3','datetime','bid.datetime#3','price','bid.price#3'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_6 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(JOIN(operator_1,JOIN(operator_2,operator_3)),JOIN(operator_4,operator_5)))
operator_7 = MAP({expressions=['auctioneer1','auctioneer11','auctioneer111','auctioneer2','auctioneer22','B2.auction']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9255 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9272 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9272 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9272 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9273 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9273 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9275 DEBUG RelationalRestructHelper  - removing operator:Select@308021294 OwnerIDs: 12(auctioneer1) = (B2.auction) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9276 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9276 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9276 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9276 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9276 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9277 INFO  transform  - Starting transformation of Top@1437983537 OwnerIDs: 12... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9277 DEBUG transform  - Before transformation: 
TopAO (1437983537) Owner: 12
0 <- 0 MapAO (1614079837) Owner: 12
       0 <- 0 JoinAO (23053378) Owner: 12 Predicate: (auctioneer1) = (B2.auction) initialized = true
              0 <- 0 JoinAO (1060928475) Owner: 12 Predicate: null
                     0 <- 0 TimeWindowAO (1164622694) Owner: 12
                            0 <- 0 AccessAO (44278425) Owner: 12
                     1 <- 0 JoinAO (2107706203) Owner: 12 Predicate: null
                            0 <- 0 TimeWindowAO (564086167) Owner: 12
                                   0 <- 0 AccessAO (834562889) Owner: 12
                            1 <- 0 TimeWindowAO (773238925) Owner: 12
                                   0 <- 0 AccessAO (1536728519) Owner: 12
              1 <- 0 JoinAO (7395550) Owner: 12 Predicate: null
                     0 <- 0 TimeWindowAO (1112940474) Owner: 12
                            0 <- 0 AccessAO (1499418021) Owner: 12
                     1 <- 0 TimeWindowAO (1186371052) Owner: 12
                            0 <- 0 AccessAO (1082528716) Owner: 12
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9315 DEBUG ruleengine  - Ruleengine needed 34 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9316 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9316 INFO  transform  - Transformation of Top@1437983537 OwnerIDs: 12 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9317 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9319 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9319 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9319 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9319 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9320 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['bidder','auctioneer11','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = RENAME({aliases=['bidder','auctioneer111','timestamp','bid.timestamp#2','auction','bid.auction#2','datetime','bid.datetime#2','price','bid.price#2'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_5 = RENAME({aliases=['bidder','auctioneer22','timestamp','bid.timestamp#3','auction','bid.auction#3','datetime','bid.datetime#3','price','bid.price#3'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_6 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(JOIN(operator_1,JOIN(operator_2,operator_3)),JOIN(operator_4,operator_5)))
operator_7 = MAP({expressions=['auctioneer1','auctioneer11','auctioneer111','auctioneer2','auctioneer22','B2.auction']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9320 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9320 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9321 DEBUG ReloadLog  - Query added to log: SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9321 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9321 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9322 INFO  StandardExecutor  - Starting query (ID: 12)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9322 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9322 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9323 INFO  StandardExecutor  - Query 12 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9324 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 12 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9324 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9324 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9324 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B1.bidder AS auctioneer1, B1.bidder AS auctioneer11, B1.bidder AS auctioneer111, B2.bidder AS auctioneer2, B2.bidder AS auctioneer22, B2.auction 
FROM bid [SIZE 5 SECONDS TIME] AS B1, bid [SIZE 15 SECONDS TIME] AS B2 WHERE auctioneer1=B2.auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9324 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9325 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9325 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9325 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9325 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9326 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9326 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-40] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9326 INFO  StandardExecutor  - Stopping query (ID: 12).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9326 DEBUG StandardExecutor  - Try to stop query 12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9327 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9328 INFO  StandardExecutor  - Query 12 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9328 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 12 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9328 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9328 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9328 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9328 INFO  StandardExecutor  - Removing Query 12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9328 DEBUG StandardExecutor  - Removing Ownership 12 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9329 INFO  StandardExecutor  - Query 12 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9329 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer1','timestamp','B1.timestamp','auction','B1.auction','datetime','B1.datetime','price','B1.price'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = RENAME({aliases=['bidder','auctioneer11','timestamp','bid.timestamp#1','auction','bid.auction#1','datetime','bid.datetime#1','price','bid.price#1'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_3 = RENAME({aliases=['bidder','auctioneer111','timestamp','bid.timestamp#2','auction','bid.auction#2','datetime','bid.datetime#2','price','bid.price#2'],pairs='true'},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = RENAME({aliases=['auction','B2.auction','bidder','auctioneer2','timestamp','B2.timestamp','datetime','B2.datetime','price','B2.price'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_5 = RENAME({aliases=['bidder','auctioneer22','timestamp','bid.timestamp#3','auction','bid.auction#3','datetime','bid.datetime#3','price','bid.price#3'],pairs='true'},TIMEWINDOW({size=[15,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_6 = SELECT({predicate='auctioneer1==B2.auction'},JOIN(JOIN(operator_1,JOIN(operator_2,operator_3)),JOIN(operator_4,operator_5)))
operator_7 = MAP({expressions=['auctioneer1','auctioneer11','auctioneer111','auctioneer2','auctioneer22','B2.auction']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9329 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9330 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9330 DEBUG AbstractTestComponent  - Sub test "RenameTest7.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9330 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9331 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:49 CEST 2017Running sub test 19 of 49: "SelectAggregationTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9331 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9331 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9331 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9331 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9332 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9332 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9332 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9333 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9333 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@22d6cac2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9333 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9333 DEBUG StandardExecutor  - Adding following query: SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9334 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [auctionCount]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@4c9e9fb8 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@9ec531 (operators: null)
getAttributename() -> attributename=auction, sourcename= null
9344 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
9344 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
getAttributename() -> attributename=auction, sourcename= null
getDataTypeFrom() -> attribute= bid.auction, attributename= bid.auction
getAttributename() -> attributename=auction, sourcename= null
buildInput() -> aggregate 
buildInput() -> aggregate : contains all project attributes
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> auctionCount
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=B1, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
9348 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9349 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9349 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@210f0cc1 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9349 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9349 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({aggregations=[['COUNT','bid.auction','auctionCount','Integer']],group_by=['bid.auction']},bid)
operator_2 = MAP({expressions=['auctionCount']},JOIN(RENAME({aliases=['auction','auction_groupAttribute#0'],pairs='true'},operator_1),bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9351 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9355 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9356 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9356 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9357 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9357 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9358 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9359 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9359 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9359 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9359 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9360 INFO  transform  - Starting transformation of Top@238467882 OwnerIDs: 13... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9360 DEBUG transform  - Before transformation: 
TopAO (238467882) Owner: 13
0 <- 0 MapAO (962700314) Owner: 13
       0 <- 0 JoinAO (1515116175) Owner: 13 Predicate: null
              0 <- 0 AggregateAO (913806791) Owner: 13
                     0 <- 0 AccessAO (220432328) Owner: 13
              1 <- 0 AccessAO (961983234) Owner: 13
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9378 DEBUG ruleengine  - Ruleengine needed 17 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9378 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9379 INFO  transform  - Transformation of Top@238467882 OwnerIDs: 13 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9379 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9379 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9379 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9379 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9380 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9380 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({aggregations=[['COUNT','bid.auction','auctionCount','Integer']],group_by=['bid.auction']},bid)
operator_2 = MAP({expressions=['auctionCount']},JOIN(RENAME({aliases=['auction','auction_groupAttribute#0'],pairs='true'},operator_1),bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9380 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9381 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9381 DEBUG ReloadLog  - Query added to log: SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9381 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9382 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9382 INFO  StandardExecutor  - Starting query (ID: 13)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9383 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9383 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9383 INFO  StandardExecutor  - Query 13 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9383 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 13 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9384 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9384 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9385 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS auctionCount FROM bid GROUP BY auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9385 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9385 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9385 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9386 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9386 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9386 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9386 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-41] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9386 INFO  StandardExecutor  - Stopping query (ID: 13).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9387 DEBUG StandardExecutor  - Try to stop query 13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9387 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
9387 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
9387 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9388 INFO  StandardExecutor  - Query 13 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9388 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 13 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9388 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9388 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9389 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9389 INFO  StandardExecutor  - Removing Query 13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9389 DEBUG StandardExecutor  - Removing Ownership 13 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9389 INFO  StandardExecutor  - Query 13 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9389 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({aggregations=[['COUNT','bid.auction','auctionCount','Integer']],group_by=['bid.auction']},bid)
operator_2 = MAP({expressions=['auctionCount']},JOIN(RENAME({aliases=['auction','auction_groupAttribute#0'],pairs='true'},operator_1),bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9389 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9390 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9390 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9390 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9391 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:49 CEST 2017Running sub test 20 of 49: "SelectAggregationTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9391 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9391 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9391 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9391 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9391 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9392 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9392 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9392 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9393 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7daa61f3 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9393 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9393 DEBUG StandardExecutor  - Adding following query: SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9393 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= auctioneer, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auctioneer, auction]}, order= [auctioneer, Counter]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@56f2bbea (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@78f9ed3e (operators: null)
getAttributename() -> attributename=auction, sourcename= null
9398 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
9398 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
getAttributename() -> attributename=auction, sourcename= null
getDataTypeFrom() -> attribute= bid.auction, attributename= bid.auction
buildInput() -> aggregate 
buildInput() -> aggregate : !(contains all project attributes)
buildJoin() --> SimpleSource
getProjectionAttribute() -> auctioneer
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> Counter
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
9401 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9401 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9402 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1059754c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9402 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9402 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({aggregations=[['COUNT','bid.auction','Counter','Integer']]},operator_1)
operator_3 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['auctioneer','Counter']},JOIN(operator_2,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9402 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9476 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9476 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9476 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9477 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9478 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9479 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9479 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9480 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9480 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9480 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9481 INFO  transform  - Starting transformation of Top@1769227988 OwnerIDs: 14... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9481 DEBUG transform  - Before transformation: 
TopAO (1769227988) Owner: 14
0 <- 0 MapAO (1991094835) Owner: 14
       0 <- 0 JoinAO (906448455) Owner: 14 Predicate: null
              0 <- 0 AggregateAO (910504711) Owner: 14
                     0 <- 0 TimeWindowAO (2110558717) Owner: 14
                            0 <- 0 AccessAO (1726715997) Owner: 14
              1 <- 0 TimeWindowAO (1787987889) Owner: 14
                     0 <- 0 AccessAO (1968196847) Owner: 14
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9489 DEBUG ruleengine  - Ruleengine needed 7 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9489 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9489 INFO  transform  - Transformation of Top@1769227988 OwnerIDs: 14 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9490 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9490 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9490 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9490 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9491 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9491 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({aggregations=[['COUNT','bid.auction','Counter','Integer']]},operator_1)
operator_3 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['auctioneer','Counter']},JOIN(operator_2,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9491 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9491 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9492 DEBUG ReloadLog  - Query added to log: SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9492 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9492 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9492 INFO  StandardExecutor  - Starting query (ID: 14)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9493 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9496 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9500 INFO  StandardExecutor  - Query 14 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9500 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 14 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9500 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9500 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9500 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT bidder AS auctioneer, COUNT(auction) AS Counter FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9501 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9508 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9509 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9509 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9509 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9509 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9522 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-42] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9523 INFO  StandardExecutor  - Stopping query (ID: 14).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9523 DEBUG StandardExecutor  - Try to stop query 14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9523 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9544 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
9544 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
9544 INFO  StandardExecutor  - Query 14 stopped. Execution time 44 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9544 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 14 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9544 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9545 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9545 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9545 INFO  StandardExecutor  - Removing Query 14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9545 DEBUG StandardExecutor  - Removing Ownership 14 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9545 INFO  StandardExecutor  - Query 14 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9545 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({aggregations=[['COUNT','bid.auction','Counter','Integer']]},operator_1)
operator_3 = RENAME({aliases=['bidder','auctioneer'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['auctioneer','Counter']},JOIN(operator_2,operator_3))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9545 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9552 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9553 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9553 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9553 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:49 CEST 2017Running sub test 21 of 49: "SelectAggregationTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9553 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS Counter, city 
FROM bid , person
WHERE city != 'New York' 
HAVING Counter > 1000;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9553 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9553 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9553 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9553 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS Counter, city 
FROM bid , person
WHERE city != 'New York' 
HAVING Counter > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9554 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9554 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9554 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9555 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@241a0c3a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9555 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9555 DEBUG StandardExecutor  - Adding following query: SELECT COUNT(auction) AS Counter, city
FROM bid , person
WHERE city != 'New York'
HAVING Counter > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9555 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= city, realSourcename= person, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction], person=[city]}, order= [Counter, person.city]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7fae4d4a (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@ba1f559 (operators: null)
getAttributename() -> attributename=auction, sourcename= null
9565 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
9565 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getAttributename() -> attributename=auction, sourcename= null
getDataTypeFrom() -> attribute= bid.auction, attributename= bid.auction
parsePredicate(List<Expressions>)
getAttributename() -> attributename=Counter, sourcename= null
Counter
Counter>1000
Counter>1000
parsePredicate()x -> Counter>1000&&
getAttributename() -> attributename=city, sourcename= null
Counter>1000&&person.city
Counter>1000&&person.city!="New York"
Counter>1000&&person.city!="New York"
parsePredicate() -> Counter>1000&&person.city!="New York"
buildInput() -> aggregate 
buildInput() -> aggregate : !(contains all project attributes)
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> Counter
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> person.city
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
9571 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9572 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9572 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@46baf579 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9572 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9572 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({aggregations=[['COUNT','bid.auction','Counter','Integer']]},JOIN(bid,person))
operator_2 = SELECT({predicate='Counter>1000&&person.city!="NewYork"'},JOIN(operator_1,JOIN(bid,person)))
operator_3 = MAP({expressions=['Counter','person.city']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9572 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9583 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9584 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9584 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9585 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9585 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9593 DEBUG RelationalRestructHelper  - removing operator:Select@675833472 OwnerIDs: 15(person.city) != ("NewYork") initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9594 DEBUG RelationalRestructHelper  - removing operator:Select@358420513 OwnerIDs: 15(Counter) > (1000) initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9595 DEBUG RelationalRestructHelper  - removing operator:Select@1853422837 OwnerIDs: (person.city) != ("NewYork") initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9596 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9596 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9596 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9596 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9596 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9597 INFO  transform  - Starting transformation of Top@2076829355 OwnerIDs: 15... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9597 DEBUG transform  - Before transformation: 
TopAO (2076829355) Owner: 15
0 <- 0 MapAO (1418245573) Owner: 15
       0 <- 0 JoinAO (1112075608) Owner: 15 Predicate: null
              0 <- 0 SelectAO (1898751355) Owner: 
                     0 <- 0 AggregateAO (1164241227) Owner: 15
                            0 <- 0 JoinAO (1414744767) Owner: 15 Predicate: null
                                   0 <- 0 AccessAO (1366581056) Owner: 15
                                   1 <- 0 AccessAO (1164394344) Owner: 15
              1 <- 0 JoinAO (665565246) Owner: 15 Predicate: null
                     0 <- 0 AccessAO (1776486598) Owner: 15
                     1 <- 0 SelectAO (438228197) Owner: 
                            0 <- 0 AccessAO (1719547057) Owner: 15
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9613 DEBUG ruleengine  - Ruleengine needed 15 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9614 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9614 INFO  transform  - Transformation of Top@2076829355 OwnerIDs: 15 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9614 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9615 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9615 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9615 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9615 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9615 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({aggregations=[['COUNT','bid.auction','Counter','Integer']]},JOIN(bid,person))
operator_2 = SELECT({predicate='Counter>1000&&person.city!="NewYork"'},JOIN(operator_1,JOIN(bid,person)))
operator_3 = MAP({expressions=['Counter','person.city']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9616 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9616 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9617 DEBUG ReloadLog  - Query added to log: SELECT COUNT(auction) AS Counter, city
FROM bid , person
WHERE city != 'New York'
HAVING Counter > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9617 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9617 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9618 INFO  StandardExecutor  - Starting query (ID: 15)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9618 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9618 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9618 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9619 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9620 INFO  StandardExecutor  - Query 15 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9620 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 15 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9620 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9621 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9621 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT COUNT(auction) AS Counter, city 
FROM bid , person
WHERE city != 'New York' 
HAVING Counter > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9621 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9622 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9622 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9622 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9623 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9623 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9623 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-43] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9624 INFO  StandardExecutor  - Stopping query (ID: 15).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9624 DEBUG StandardExecutor  - Try to stop query 15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9624 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
9625 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
9625 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9625 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9626 INFO  StandardExecutor  - Query 15 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9626 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 15 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9626 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9626 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9626 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9626 INFO  StandardExecutor  - Removing Query 15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9626 DEBUG StandardExecutor  - Removing Ownership 15 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9627 INFO  StandardExecutor  - Query 15 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9627 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({aggregations=[['COUNT','bid.auction','Counter','Integer']]},JOIN(bid,person))
operator_2 = SELECT({predicate='Counter>1000&&person.city!="NewYork"'},JOIN(operator_1,JOIN(bid,person)))
operator_3 = MAP({expressions=['Counter','person.city']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9627 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9628 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9628 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9628 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9628 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:49 CEST 2017Running sub test 22 of 49: "SelectAggregationTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9628 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT COUNT(*) AS count FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9629 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9629 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9629 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9629 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT COUNT(*) AS count FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9629 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9630 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9630 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9630 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@213deac2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9632 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9632 DEBUG StandardExecutor  - Adding following query: SELECT COUNT(*) AS count FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9632 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
getSelectedAttributes() -> map= {}, order= [count]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@4159e81b (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.StarExpressionImpl@5b5caf08 (operators: null)
buildJoin() --> SimpleSource
buildInput() -> aggregate 
buildInput() -> aggregate : contains all project attributes
buildJoin() --> SimpleSource
getProjectionAttribute() -> count
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
9642 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9643 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9643 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@23cd4ff2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9643 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9643 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({aggregations=[['COUNT','*','count']]},bid)
operator_2 = MAP({expressions=['count']},JOIN(operator_1,bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9643 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9647 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9647 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9647 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9647 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9648 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9648 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9649 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9649 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9649 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9649 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9650 INFO  transform  - Starting transformation of Top@559998250 OwnerIDs: 16... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9650 DEBUG transform  - Before transformation: 
TopAO (559998250) Owner: 16
0 <- 0 MapAO (703627308) Owner: 16
       0 <- 0 JoinAO (979420182) Owner: 16 Predicate: null
              0 <- 0 AggregateAO (1626529981) Owner: 16
                     0 <- 0 AccessAO (1184694332) Owner: 16
              1 <- 0 AccessAO (1799424291) Owner: 16
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9655 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9655 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9655 INFO  transform  - Transformation of Top@559998250 OwnerIDs: 16 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9656 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9656 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9656 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9657 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9657 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9658 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({aggregations=[['COUNT','*','count']]},bid)
operator_2 = MAP({expressions=['count']},JOIN(operator_1,bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9658 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9658 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9659 DEBUG ReloadLog  - Query added to log: SELECT COUNT(*) AS count FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9659 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9660 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9660 INFO  StandardExecutor  - Starting query (ID: 16)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9660 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9660 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9661 INFO  StandardExecutor  - Query 16 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9661 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 16 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9662 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9662 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9662 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT COUNT(*) AS count FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9662 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9663 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9663 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9663 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9663 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9663 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9664 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-44] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9664 INFO  StandardExecutor  - Stopping query (ID: 16).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9664 DEBUG StandardExecutor  - Try to stop query 16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9664 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
9665 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
9665 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9665 INFO  StandardExecutor  - Query 16 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9665 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 16 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9666 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9666 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9666 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9666 INFO  StandardExecutor  - Removing Query 16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9666 DEBUG StandardExecutor  - Removing Ownership 16 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9666 INFO  StandardExecutor  - Query 16 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9666 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({aggregations=[['COUNT','*','count']]},bid)
operator_2 = MAP({expressions=['count']},JOIN(operator_1,bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9667 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9667 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9668 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9668 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9668 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:49 CEST 2017Running sub test 23 of 49: "SelectAggregationTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9668 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT auction, AVG(auction) AS auctionAVG 
FROM bid 
GROUP BY auction
HAVING auctionAVG > 150
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9668 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9668 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9668 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9668 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT auction, AVG(auction) AS auctionAVG 
FROM bid 
GROUP BY auction
HAVING auctionAVG > 150
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9669 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9670 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9670 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9670 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@736ac09a - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9670 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9670 DEBUG StandardExecutor  - Adding following query: SELECT auction, AVG(auction) AS auctionAVG
FROM bid
GROUP BY auction
HAVING auctionAVG > 150 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9671 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [bid.auction, auctionAVG]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@1ec7d8b3 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3b0ca5e1 (operators: null)
getAttributename() -> attributename=auction, sourcename= null
9675 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
9675 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
9676 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
getAttributename() -> attributename=auction, sourcename= null
getDataTypeFrom() -> attribute= bid.auction, attributename= bid.auction
getAttributename() -> attributename=auction, sourcename= null
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auctionAVG, sourcename= null
auctionAVG
auctionAVG>150
auctionAVG>150
parsePredicate() -> auctionAVG>150
buildInput() -> aggregate 
buildInput() -> aggregate : !(contains all project attributes)
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> auctionAVG
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
9682 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9683 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9683 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5bb3131b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9683 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9684 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({aggregations=[['AVG','bid.auction','auctionAVG','Integer']],group_by=['bid.auction']},bid)
operator_2 = SELECT({predicate='auctionAVG>150'},JOIN(RENAME({aliases=['auction','auction_groupAttribute#0'],pairs='true'},operator_1),bid))
operator_3 = MAP({expressions=['bid.auction','auctionAVG']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9684 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9690 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9690 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9690 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9691 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9691 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9692 DEBUG RelationalRestructHelper  - removing operator:Select@51376124 OwnerIDs: 17(auctionAVG) > (150) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9694 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9694 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9694 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9694 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9695 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9695 INFO  transform  - Starting transformation of Top@1300528434 OwnerIDs: 17... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9695 DEBUG transform  - Before transformation: 
TopAO (1300528434) Owner: 17
0 <- 0 MapAO (1598434875) Owner: 17
       0 <- 0 JoinAO (1031775150) Owner: 17 Predicate: null
              0 <- 0 SelectAO (1476812556) Owner: 
                     0 <- 0 AggregateAO (906347731) Owner: 17
                            0 <- 0 AccessAO (1482429406) Owner: 17
              1 <- 0 AccessAO (410958248) Owner: 17
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9705 DEBUG ruleengine  - Ruleengine needed 9 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9706 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9706 INFO  transform  - Transformation of Top@1300528434 OwnerIDs: 17 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9706 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9707 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9707 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9707 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9707 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9707 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({aggregations=[['AVG','bid.auction','auctionAVG','Integer']],group_by=['bid.auction']},bid)
operator_2 = SELECT({predicate='auctionAVG>150'},JOIN(RENAME({aliases=['auction','auction_groupAttribute#0'],pairs='true'},operator_1),bid))
operator_3 = MAP({expressions=['bid.auction','auctionAVG']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9708 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9708 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9709 DEBUG ReloadLog  - Query added to log: SELECT auction, AVG(auction) AS auctionAVG
FROM bid
GROUP BY auction
HAVING auctionAVG > 150 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9709 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9709 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9710 INFO  StandardExecutor  - Starting query (ID: 17)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
9710 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
9711 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
9712 INFO  StandardExecutor  - Query 17 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
9713 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 17 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
9713 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
9713 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
9713 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT auction, AVG(auction) AS auctionAVG 
FROM bid 
GROUP BY auction
HAVING auctionAVG > 150
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9713 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9714 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9714 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9714 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9714 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9714 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9715 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-45] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9715 INFO  StandardExecutor  - Stopping query (ID: 17).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
9715 DEBUG StandardExecutor  - Try to stop query 17 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
9715 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
9716 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
9716 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
9717 INFO  StandardExecutor  - Query 17 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
9717 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 17 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
9717 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
9717 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
9717 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
9717 INFO  StandardExecutor  - Removing Query 17 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9717 DEBUG StandardExecutor  - Removing Ownership 17 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9718 INFO  StandardExecutor  - Query 17 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9718 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({aggregations=[['AVG','bid.auction','auctionAVG','Integer']],group_by=['bid.auction']},bid)
operator_2 = SELECT({predicate='auctionAVG>150'},JOIN(RENAME({aliases=['auction','auction_groupAttribute#0'],pairs='true'},operator_1),bid))
operator_3 = MAP({expressions=['bid.auction','auctionAVG']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9718 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9719 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9720 DEBUG AbstractTestComponent  - Sub test "SelectAggregationTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9720 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9720 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:49 CEST 2017Running sub test 24 of 49: "SelectAllTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9720 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9720 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9720 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9720 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9720 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9721 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9727 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9728 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9728 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@17ae7628 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9728 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9728 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9728 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
getAttibutename() -> map = {bid=[timestamp, auction, bidder, datetime, price]}
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.bidder
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.datetime
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.price
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
9738 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9738 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9740 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2b87581 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9740 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9741 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9742 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9748 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9749 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9749 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9749 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9750 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9751 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9751 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9752 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9752 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9752 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9754 INFO  transform  - Starting transformation of Top@46627301 OwnerIDs: 18... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9757 DEBUG transform  - Before transformation: 
TopAO (46627301) Owner: 18
0 <- 0 MapAO (1787083818) Owner: 18
       0 <- 0 AccessAO (1367594377) Owner: 18
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9770 DEBUG ruleengine  - Ruleengine needed 12 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9771 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9771 INFO  transform  - Transformation of Top@46627301 OwnerIDs: 18 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9771 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9772 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9772 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9772 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9773 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9773 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9773 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9774 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9775 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9775 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9776 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9776 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT * FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9776 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9777 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9777 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9777 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9778 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9778 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9778 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-46] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9778 INFO  StandardExecutor  - Removing Query 18 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9779 DEBUG StandardExecutor  - Removing Ownership 18 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9779 INFO  StandardExecutor  - Query 18 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9779 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9779 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9780 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9780 DEBUG AbstractTestComponent  - Sub test "SelectAllTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9780 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9781 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 25 of 49: "SelectAllTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9781 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT * FROM bid, person, auction;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9781 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9781 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9781 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9781 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT * FROM bid, person, auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9781 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9782 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9783 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9783 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@773bd77b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9783 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9783 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid, person, auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9783 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
getAttibutename() -> map = {bid=[timestamp, auction, bidder, datetime, price], person=[timestamp, id, name, email, creditcard, city, state], auction=[timestamp, id, itemname, description, initialbid, reserve, expires, seller, category]}
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
9789 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9798 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9799 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6e6fce47 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9799 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9799 DEBUG StandardExecutor  - Adding following query: operator_1 = JOIN(bid,JOIN(person,auction))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9799 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9800 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9800 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9800 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9801 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9801 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9802 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9802 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9802 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9802 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9802 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9802 INFO  transform  - Starting transformation of Top@1260043537 OwnerIDs: 19... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9803 DEBUG transform  - Before transformation: 
TopAO (1260043537) Owner: 19
0 <- 0 JoinAO (1060549703) Owner: 19 Predicate: null
       0 <- 0 AccessAO (1682157864) Owner: 19
       1 <- 0 JoinAO (1592712032) Owner: 19 Predicate: null
              0 <- 0 AccessAO (1073878937) Owner: 19
              1 <- 0 AccessAO (1243350866) Owner: 19
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9813 DEBUG ruleengine  - Ruleengine needed 9 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9813 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9814 INFO  transform  - Transformation of Top@1260043537 OwnerIDs: 19 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9814 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9814 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9814 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9815 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9815 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9815 DEBUG ReloadLog  - Query added to log: operator_1 = JOIN(bid,JOIN(person,auction))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9815 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9830 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9830 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid, person, auction; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9830 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9831 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9832 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT * FROM bid, person, auction;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9832 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9833 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9833 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9833 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9834 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9834 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9834 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-47] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9834 INFO  StandardExecutor  - Removing Query 19 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9835 DEBUG StandardExecutor  - Removing Ownership 19 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9835 INFO  StandardExecutor  - Query 19 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9835 DEBUG ReloadLog  - Removing query from log: operator_1 = JOIN(bid,JOIN(person,auction))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9835 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9837 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9837 DEBUG AbstractTestComponent  - Sub test "SelectAllTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9838 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9838 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 26 of 49: "SelectAllTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9838 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann';
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9838 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9838 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9838 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9838 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann';
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9838 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9839 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9839 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9839 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@18a645fd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9840 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9840 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann'; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9840 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
getAttibutename() -> map = {bid=[timestamp, auction, bidder, datetime, price], category=[id, name, description, parentid], person=[P.timestamp, timestamp, P.id, id, P.name, name, P.email, email, P.creditcard, creditcard, P.city, city, P.state, state]}
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
bid.auction
bid.auction>2
bid.auction>2
getAttributename() -> attributename=P.name, sourcename= null
bid.auction>2&&P.name
bid.auction>2&&P.name=="Max Mustermann"
bid.auction>2&&P.name=="Max Mustermann"
bid.auction>2&&P.name=="Max Mustermann"
parsePredicate() -> bid.auction>2&&P.name=="Max Mustermann"
buildInput() -> skip
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
9860 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9860 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9860 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@25b865b5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9860 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9860 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = SELECT({predicate='bid.auction>2&&P.name=="MaxMustermann"'},JOIN(bid,JOIN(operator_1,category)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9860 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9869 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9869 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9870 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9870 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9870 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9874 DEBUG RelationalRestructHelper  - removing operator:Select@1137667747 OwnerIDs: 20(P.name) = ("MaxMustermann") initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9875 DEBUG RelationalRestructHelper  - removing operator:Select@2122991287 OwnerIDs: 20(bid.auction) > (2) initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9875 DEBUG RelationalRestructHelper  - removing operator:Select@1350720002 OwnerIDs: (P.name) = ("MaxMustermann") initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
9882 DEBUG ruleengine  - Ruleengine needed 11 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9882 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9883 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9884 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9884 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9886 INFO  transform  - Starting transformation of Top@731368479 OwnerIDs: 20... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9886 DEBUG transform  - Before transformation: 
TopAO (731368479) Owner: 20
0 <- 0 JoinAO (1618099562) Owner: 20 Predicate: null
       0 <- 0 SelectAO (405950359) Owner: 
              0 <- 0 AccessAO (1693799911) Owner: 20
       1 <- 0 JoinAO (1897368146) Owner: 20 Predicate: null
              0 <- 0 SelectAO (16736375) Owner: 
                     0 <- 0 AccessAO (180078856) Owner: 20
              1 <- 0 AccessAO (1152380885) Owner: 20
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9900 DEBUG ruleengine  - Ruleengine needed 12 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9901 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9901 INFO  transform  - Transformation of Top@731368479 OwnerIDs: 20 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9902 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9902 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9903 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9903 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9903 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9903 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = SELECT({predicate='bid.auction>2&&P.name=="MaxMustermann"'},JOIN(bid,JOIN(operator_1,category)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9903 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9904 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9904 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann'; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9905 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9905 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9906 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT * FROM bid, person AS P, category WHERE auction > 2 AND P.name = 'Max Mustermann';
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9906 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9907 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9907 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9907 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9907 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9907 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9908 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-48] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9908 INFO  StandardExecutor  - Removing Query 20 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9908 DEBUG StandardExecutor  - Removing Ownership 20 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9908 INFO  StandardExecutor  - Query 20 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9908 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_2 = SELECT({predicate='bid.auction>2&&P.name=="MaxMustermann"'},JOIN(bid,JOIN(operator_1,category)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9908 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9909 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9909 DEBUG AbstractTestComponent  - Sub test "SelectAllTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9909 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9910 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 27 of 49: "SelectAllTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9910 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT bid.* FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9910 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9910 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9910 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9910 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT bid.* FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9910 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9911 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9911 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9911 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@b558294 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9911 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9911 DEBUG StandardExecutor  - Adding following query: SELECT bid.* FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9912 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::bid.*
registerAttributeAliases() -> attribute= null.timestamp, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= null.auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= null.bidder, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= null.datetime, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= null.price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[timestamp, auction, bidder, datetime, price]}, order= [bid.timestamp, bid.auction, bid.bidder, bid.datetime, bid.price]
buildInput() -> skip
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.auction
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.bidder
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.datetime
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
getProjectionAttribute() -> bid.price
{B.price=B, B2.price=B2, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer2=B2, auctioneer11=B1, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer1=B1, auctioneer111=B1, B.auction=B, auctioneer=bid, P.city=P, C.email=C, P.name=P, P.creditcard=P, C.id=C, P.id=P, B.bidder=B, B1.bidder=B1, B2.bidder=B2}
9915 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9916 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9916 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@27aae97b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9916 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9916 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9916 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9922 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9922 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9922 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9922 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9922 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9923 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9923 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9923 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9924 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9924 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9924 INFO  transform  - Starting transformation of Top@2054787417 OwnerIDs: 21... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9924 DEBUG transform  - Before transformation: 
TopAO (2054787417) Owner: 21
0 <- 0 MapAO (67811496) Owner: 21
       0 <- 0 AccessAO (1878225987) Owner: 21
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9927 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9928 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9928 INFO  transform  - Transformation of Top@2054787417 OwnerIDs: 21 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9928 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9929 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9929 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9929 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9929 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9930 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9930 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9930 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9931 DEBUG ReloadLog  - Query added to log: SELECT bid.* FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9931 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9931 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9932 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT bid.* FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9932 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9932 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9932 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9932 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9932 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9933 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9933 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-49] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9933 INFO  StandardExecutor  - Removing Query 21 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9933 DEBUG StandardExecutor  - Removing Ownership 21 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9933 INFO  StandardExecutor  - Query 21 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9933 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9934 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9934 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9934 DEBUG AbstractTestComponent  - Sub test "SelectAllTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9935 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9935 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 28 of 49: "SelectAllTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9935 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT B.* FROM bid as B
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9935 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9935 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9935 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9935 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT B.* FROM bid as B
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9935 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9936 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9936 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9936 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@56da52a7 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9936 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9936 DEBUG StandardExecutor  - Adding following query: SELECT B.* FROM bid as B - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9936 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::B.*
alias!
registerAttributeAliases() -> attribute= B.timestamp, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.datetime, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[timestamp, auction, bidder, datetime, price]}, order= [B.timestamp, B.auction, B.bidder, B.datetime, B.price]
buildInput() -> skip
buildJoin() --> SimpleSource
getProjectionAttribute() -> B.timestamp
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> B.auction
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> B.bidder
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> B.datetime
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> B.price
{B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
9940 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9940 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9940 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@340b7ef6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9941 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9941 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['B.timestamp','B.auction','B.bidder','B.datetime','B.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9941 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9957 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9958 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9958 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
9958 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
9959 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
9959 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9960 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9960 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
9965 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
9975 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
9976 INFO  transform  - Starting transformation of Top@1317963297 OwnerIDs: 22... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
9976 DEBUG transform  - Before transformation: 
TopAO (1317963297) Owner: 22
0 <- 0 MapAO (205810452) Owner: 22
       0 <- 0 AccessAO (61814127) Owner: 22
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
9979 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
9980 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
9980 INFO  transform  - Transformation of Top@1317963297 OwnerIDs: 22 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
9980 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
9981 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
9981 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
9981 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
9981 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
9981 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['B.timestamp','B.auction','B.bidder','B.datetime','B.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9981 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9982 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9982 DEBUG ReloadLog  - Query added to log: SELECT B.* FROM bid as B - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9982 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9985 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9986 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT B.* FROM bid as B
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
9986 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9987 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
9987 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
9987 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
9987 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
9987 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
9988 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-50] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
9988 INFO  StandardExecutor  - Removing Query 22 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
9988 DEBUG StandardExecutor  - Removing Ownership 22 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
9988 INFO  StandardExecutor  - Query 22 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
9989 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = MAP({expressions=['B.timestamp','B.auction','B.bidder','B.datetime','B.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
9989 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
9990 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
9991 DEBUG AbstractTestComponent  - Sub test "SelectAllTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
9992 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
9992 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 29 of 49: "SelectAllTest6.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
9993 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
9993 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
9993 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
9993 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9993 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9994 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
9994 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
9995 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
9996 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@42c2f48c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
9996 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
9997 DEBUG StandardExecutor  - Adding following query: SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
9997 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
findbyName::B.*
alias!
findbyName::B.*
registerAttributeAliases() -> attribute= B.timestamp, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.auction, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.datetime, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= B.price, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
findbyName::P.*
findbyName::P.*
alias!
registerAttributeAliases() -> attribute= P.timestamp, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.name, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.email, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.creditcard, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.city, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.state, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[timestamp, auction, bidder, datetime, price], person=[timestamp, id, name, email, creditcard, city, state]}, order= [P.timestamp, P.id, P.name, P.email, P.creditcard, P.city, P.state]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B.auction, sourcename= null
B.auction
B.auction>1000
B.auction>1000
getAttributename() -> attributename=P.id, sourcename= null
B.auction>1000&&P.id
B.auction>1000&&P.id==108
B.auction>1000&&P.id==108
B.auction>1000&&P.id==108
parsePredicate() -> B.auction>1000&&P.id==108
buildInput() -> skip
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
10007 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10008 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10008 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@27f74733 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10008 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10008 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction>1000&&P.id==108'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10008 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10013 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10013 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10013 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10014 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10014 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10016 DEBUG RelationalRestructHelper  - removing operator:Select@194903130 OwnerIDs: 23(P.id) = (108) initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10016 DEBUG RelationalRestructHelper  - removing operator:Select@1651689839 OwnerIDs: 23(B.auction) > (1000) initialized = false - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10017 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10017 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10017 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10018 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10018 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10018 INFO  transform  - Starting transformation of Top@1455064947 OwnerIDs: 23... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10018 DEBUG transform  - Before transformation: 
TopAO (1455064947) Owner: 23
0 <- 0 JoinAO (1827371870) Owner: 23 Predicate: null
       0 <- 0 SelectAO (2110785285) Owner: 
              0 <- 0 AccessAO (253027775) Owner: 23
       1 <- 0 SelectAO (219638321) Owner: 
              0 <- 0 AccessAO (982634822) Owner: 23
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10034 DEBUG ruleengine  - Ruleengine needed 15 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10034 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10034 INFO  transform  - Transformation of Top@1455064947 OwnerIDs: 23 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10035 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10035 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10035 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10036 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10036 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10036 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction>1000&&P.id==108'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10038 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10041 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10041 DEBUG ReloadLog  - Query added to log: SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10041 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10042 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10042 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT B.*, P.* FROM bid AS B, person AS P WHERE B.auction > 1000 AND P.id = 108;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10042 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10043 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10043 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10043 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10043 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10044 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10044 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-51] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10044 INFO  StandardExecutor  - Removing Query 23 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10044 DEBUG StandardExecutor  - Removing Ownership 23 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10044 INFO  StandardExecutor  - Query 23 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10045 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['timestamp','B.timestamp','auction','B.auction','bidder','B.bidder','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['timestamp','P.timestamp','id','P.id','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.auction>1000&&P.id==108'},JOIN(operator_1,operator_2))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10045 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10045 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10046 DEBUG AbstractTestComponent  - Sub test "SelectAllTest6.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10046 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10046 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 30 of 49: "SelectExpressionTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10046 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT DolToEur(price) FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10046 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10046 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10046 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10046 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price) FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10046 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10047 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10047 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10047 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@629f066f - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10047 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10048 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price) FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10048 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price]}, order= [expression_0]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@20ed3303 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3adbe50f (operators: null)
getAttributename() -> attributename=price, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@20ed3303 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3adbe50f (operators: null)
getAttributename() -> attributename=price, sourcename= null
buildInput() -> map
buildJoin() --> SimpleSource
10053 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10053 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10053 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3a627c80 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10053 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10053 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price)','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10054 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10055 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10056 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10056 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10056 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10056 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10057 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10057 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10057 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10057 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10057 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10058 INFO  transform  - Starting transformation of Top@1294139740 OwnerIDs: 24... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10058 DEBUG transform  - Before transformation: 
TopAO (1294139740) Owner: 24
0 <- 0 MapAO (943659381) Owner: 24
       0 <- 0 AccessAO (1142735456) Owner: 24
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10061 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10061 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10061 INFO  transform  - Transformation of Top@1294139740 OwnerIDs: 24 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10062 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10062 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10062 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10062 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10062 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10063 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10063 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10063 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10064 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price) FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10064 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10064 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10069 INFO  StandardExecutor  - Starting query (ID: 24)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10069 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10069 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10071 INFO  StandardExecutor  - Query 24 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10071 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 24 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10071 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10072 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10072 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price) FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10072 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10073 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10073 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10073 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10073 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10073 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10074 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-52] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10074 INFO  StandardExecutor  - Stopping query (ID: 24).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10074 DEBUG StandardExecutor  - Try to stop query 24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10075 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10075 INFO  StandardExecutor  - Query 24 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10075 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 24 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10075 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10075 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10076 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10076 INFO  StandardExecutor  - Removing Query 24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10076 DEBUG StandardExecutor  - Removing Ownership 24 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10076 INFO  StandardExecutor  - Query 24 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10076 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price)','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10076 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10077 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10077 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10077 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10078 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 31 of 49: "SelectExpressionTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10078 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT price + price AS priceTwice FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10078 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10078 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10078 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10078 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT price + price AS priceTwice FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10078 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10079 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10079 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10079 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@748fe51d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10080 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10080 DEBUG StandardExecutor  - Adding following query: SELECT price + price AS priceTwice FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10080 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price]}, order= [priceTwice]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@af78c87 (operators: [+])
getAttributename() -> attributename=price, sourcename= null
getAttributename() -> attributename=price, sourcename= null
buildInput() -> map
buildJoin() --> SimpleSource
10088 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10088 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10088 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@773dab28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10089 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10089 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['bid.price+bid.price','priceTwice']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10089 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10098 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10098 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10098 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10098 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10099 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10099 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10099 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10100 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10100 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10100 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10100 INFO  transform  - Starting transformation of Top@604602011 OwnerIDs: 25... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10100 DEBUG transform  - Before transformation: 
TopAO (604602011) Owner: 25
0 <- 0 MapAO (1589214445) Owner: 25
       0 <- 0 AccessAO (1757032717) Owner: 25
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10105 DEBUG ruleengine  - Ruleengine needed 4 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10105 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10105 INFO  transform  - Transformation of Top@604602011 OwnerIDs: 25 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10106 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10106 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10106 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10106 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10106 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10106 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['bid.price+bid.price','priceTwice']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10107 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10107 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10107 DEBUG ReloadLog  - Query added to log: SELECT price + price AS priceTwice FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10108 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10108 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10109 INFO  StandardExecutor  - Starting query (ID: 25)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10109 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10109 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10110 INFO  StandardExecutor  - Query 25 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10111 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 25 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10111 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10111 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10111 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT price + price AS priceTwice FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10112 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10112 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10113 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10113 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10113 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10113 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10113 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-53] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10114 INFO  StandardExecutor  - Stopping query (ID: 25).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10114 DEBUG StandardExecutor  - Try to stop query 25 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10114 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10114 INFO  StandardExecutor  - Query 25 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10114 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 25 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10115 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10115 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10115 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10115 INFO  StandardExecutor  - Removing Query 25 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10115 DEBUG StandardExecutor  - Removing Ownership 25 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10115 INFO  StandardExecutor  - Query 25 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10115 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['bid.price+bid.price','priceTwice']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10116 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10116 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10116 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10117 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10117 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 32 of 49: "SelectExpressionTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10117 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro 
FROM bid, category;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10117 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10117 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10117 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10117 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro 
FROM bid, category;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10118 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10118 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10119 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10119 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@57c88764 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10119 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10119 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro
FROM bid, category; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10119 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= id, realSourcename= category, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price], category=[id]}, order= [complexPrice, priceToEuro]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@78c1a023 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@70abf9b0 (operators: null)
getAttributename() -> attributename=price, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@6a10b263 (operators: [-, +])
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@476ec9d0 (operators: [*])
getAttributename() -> attributename=price, sourcename= null
getAttributename() -> attributename=price, sourcename= null
getAttributename() -> attributename=id, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@78c1a023 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@70abf9b0 (operators: null)
getAttributename() -> attributename=price, sourcename= null
buildInput() -> map
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
10132 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10132 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10132 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@325bb9a6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10132 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10132 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(bid.price*2.5)-bid.price+category.id','complexPrice'],['DolToEur(bid.price)','priceToEuro']]},JOIN(bid,category))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10133 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10141 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10141 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10141 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10142 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10142 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10143 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10143 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10144 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10144 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10144 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10144 INFO  transform  - Starting transformation of Top@1941598182 OwnerIDs: 26... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10144 DEBUG transform  - Before transformation: 
TopAO (1941598182) Owner: 26
0 <- 0 MapAO (2041263297) Owner: 26
       0 <- 0 JoinAO (379115456) Owner: 26 Predicate: null
              0 <- 0 AccessAO (673129458) Owner: 26
              1 <- 0 AccessAO (142261320) Owner: 26
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10151 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10151 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10151 INFO  transform  - Transformation of Top@1941598182 OwnerIDs: 26 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10152 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10152 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10152 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10152 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10152 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10153 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(bid.price*2.5)-bid.price+category.id','complexPrice'],['DolToEur(bid.price)','priceToEuro']]},JOIN(bid,category))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10153 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10154 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10154 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro
FROM bid, category; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10154 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10155 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10155 INFO  StandardExecutor  - Starting query (ID: 26)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10155 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10155 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10156 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10157 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10166 INFO  StandardExecutor  - Query 26 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10167 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 26 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10167 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10167 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10168 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price * 2.5) - price + id AS complexPrice, DolToEur(price) AS priceToEuro 
FROM bid, category;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10168 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10170 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10170 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10171 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10171 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10171 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10173 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-54] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10173 INFO  StandardExecutor  - Stopping query (ID: 26).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10173 DEBUG StandardExecutor  - Try to stop query 26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10174 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10174 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10176 INFO  StandardExecutor  - Query 26 stopped. Execution time 10 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10176 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 26 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10176 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10176 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10176 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10176 INFO  StandardExecutor  - Removing Query 26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10176 DEBUG StandardExecutor  - Removing Ownership 26 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10177 INFO  StandardExecutor  - Query 26 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10177 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(bid.price*2.5)-bid.price+category.id','complexPrice'],['DolToEur(bid.price)','priceToEuro']]},JOIN(bid,category))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10177 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10178 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10178 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10178 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10178 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 33 of 49: "SelectExpressionTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10178 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME];
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10178 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10179 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10179 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10179 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10179 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10180 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10180 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10180 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@30506c0d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10180 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10180 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10180 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price]}, order= [expression_0]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@52a70627 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@6124287a (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@19569ebd (operators: null)
getAttributename() -> attributename=price, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@52a70627 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@6124287a (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@19569ebd (operators: null)
getAttributename() -> attributename=price, sourcename= null
buildInput() -> map
buildJoin() --> SimpleSource
10186 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10186 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10186 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4632cfc - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10186 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10187 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['DolToEur(DolToEur(bid.price))','expression_0']]},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10187 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10189 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10189 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10190 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10190 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10190 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10191 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10191 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10191 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10191 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10192 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10192 INFO  transform  - Starting transformation of Top@1373361892 OwnerIDs: 27... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10192 DEBUG transform  - Before transformation: 
TopAO (1373361892) Owner: 27
0 <- 0 MapAO (730583371) Owner: 27
       0 <- 0 TimeWindowAO (99695585) Owner: 27
              0 <- 0 AccessAO (1596997325) Owner: 27
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10215 DEBUG ruleengine  - Ruleengine needed 22 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10215 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10215 INFO  transform  - Transformation of Top@1373361892 OwnerIDs: 27 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10216 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10216 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10216 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10216 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10216 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10217 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['DolToEur(DolToEur(bid.price))','expression_0']]},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10217 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10218 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10218 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10218 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10221 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10221 INFO  StandardExecutor  - Starting query (ID: 27)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10221 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10222 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10222 INFO  StandardExecutor  - Query 27 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10223 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 27 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10223 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10223 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10223 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT DolToEur(DolToEur(price)) FROM bid [SIZE 5 SECONDS TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10224 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10224 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10224 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10224 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10224 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10224 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10225 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-55] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10225 INFO  StandardExecutor  - Stopping query (ID: 27).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10225 DEBUG StandardExecutor  - Try to stop query 27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10225 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10226 INFO  StandardExecutor  - Query 27 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10226 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 27 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10226 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10226 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10226 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10226 INFO  StandardExecutor  - Removing Query 27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10226 DEBUG StandardExecutor  - Removing Ownership 27 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10227 INFO  StandardExecutor  - Query 27 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10227 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['DolToEur(DolToEur(bid.price))','expression_0']]},TIMEWINDOW({size=[5,'SECONDS'],advance=[1,'SECONDS']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10227 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10227 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10228 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10228 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10228 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 34 of 49: "SelectExpressionTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10228 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10228 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10228 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10229 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10229 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10229 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10232 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10233 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10233 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@29c5ee1d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10240 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10240 DEBUG StandardExecutor  - Adding following query: SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10240 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= A, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price, A]}, order= [expression_0, avgPrice, A]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@185f7840 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@1e6cc850 (operators: null)
getAttributename() -> attributename=price, sourcename= null
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7e7f0f0a (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@7ec58feb (operators: null)
getAttributename() -> attributename=price, sourcename= null
10244 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10244 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10244 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@185f7840 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@1e6cc850 (operators: null)
getAttributename() -> attributename=price, sourcename= null
buildJoin() --> SimpleSource
getAttributename() -> attributename=price, sourcename= null
getDataTypeFrom() -> attribute= bid.price, attributename= bid.price
getAttributename() -> attributename=A, sourcename= null
parsePredicate(List<Expressions>)
getAttributename() -> attributename=avgPrice, sourcename= null
avgPrice
avgPrice>150
avgPrice>150
parsePredicate() -> avgPrice>150
buildInput() -> aggregate & map
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> avgPrice
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> A
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
10246 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10247 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10247 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1dbb650b - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10247 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10247 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = AGGREGATE({aggregations=[['AVG','bid.price','avgPrice','Double']],group_by=['A']},operator_1)
operator_3 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_5 = SELECT({predicate='avgPrice>150'},JOIN(RENAME({aliases=['A','A_groupAttribute#0'],pairs='true'},operator_2),operator_4))
operator_6 = MAP({expressions=[['DolToEur(bid.price)','expression_0'],'avgPrice','A']},operator_5)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10247 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10255 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10255 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10255 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10256 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10256 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10256 DEBUG RelationalRestructHelper  - removing operator:Select@1235686146 OwnerIDs: 28(avgPrice) > (150) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10257 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10257 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10257 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10258 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10258 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10258 INFO  transform  - Starting transformation of Top@278753868 OwnerIDs: 28... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10258 DEBUG transform  - Before transformation: 
TopAO (278753868) Owner: 28
0 <- 0 MapAO (386201215) Owner: 28
       0 <- 0 JoinAO (239937174) Owner: 28 Predicate: null
              0 <- 0 SelectAO (1846508205) Owner: 
                     0 <- 0 AggregateAO (368802354) Owner: 28
                            0 <- 0 TimeWindowAO (628933116) Owner: 28
                                   0 <- 0 AccessAO (1122118227) Owner: 28
              1 <- 0 TimeWindowAO (1471019696) Owner: 28
                     0 <- 0 AccessAO (424226973) Owner: 28
1 <- 0 RenameAO (1526296937) Owner: 28
       0 <- 0 TimeWindowAO (161118423) Owner: 28
              0 <- 0 AccessAO (836397870) Owner: 28
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10273 DEBUG ruleengine  - Ruleengine needed 14 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10273 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10273 INFO  transform  - Transformation of Top@278753868 OwnerIDs: 28 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10274 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10274 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10274 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10275 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10275 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10275 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = AGGREGATE({aggregations=[['AVG','bid.price','avgPrice','Double']],group_by=['A']},operator_1)
operator_3 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_5 = SELECT({predicate='avgPrice>150'},JOIN(RENAME({aliases=['A','A_groupAttribute#0'],pairs='true'},operator_2),operator_4))
operator_6 = MAP({expressions=[['DolToEur(bid.price)','expression_0'],'avgPrice','A']},operator_5)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10275 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10276 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10276 DEBUG ReloadLog  - Query added to log: SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10277 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10277 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10277 INFO  StandardExecutor  - Starting query (ID: 28)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10278 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10278 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10280 INFO  StandardExecutor  - Query 28 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10280 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 28 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10280 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10280 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10280 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT DolToEur(price), AVG(price) as avgPrice, auction as A
FROM bid [SIZE 1 SECONDS TIME]
GROUP BY A
HAVING avgPrice > 150
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10281 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10284 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10284 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10284 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10285 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10285 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10285 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-56] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10285 INFO  StandardExecutor  - Stopping query (ID: 28).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10285 DEBUG StandardExecutor  - Try to stop query 28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10286 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
10286 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
10287 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10287 INFO  StandardExecutor  - Query 28 stopped. Execution time 8 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10287 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 28 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10287 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10288 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10288 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10288 INFO  StandardExecutor  - Removing Query 28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10288 DEBUG StandardExecutor  - Removing Ownership 28 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10288 INFO  StandardExecutor  - Query 28 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10288 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_2 = AGGREGATE({aggregations=[['AVG','bid.price','avgPrice','Double']],group_by=['A']},operator_1)
operator_3 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_4 = RENAME({aliases=['auction','A'],pairs='true'},TIMEWINDOW({size=[1,'SECONDS'],advance=[1,'SECONDS']},bid))
operator_5 = SELECT({predicate='avgPrice>150'},JOIN(RENAME({aliases=['A','A_groupAttribute#0'],pairs='true'},operator_2),operator_4))
operator_6 = MAP({expressions=[['DolToEur(bid.price)','expression_0'],'avgPrice','A']},operator_5)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10289 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10295 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10295 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10295 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10295 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 35 of 49: "SelectExpressionTest6.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10296 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT 'hello' + 'world' FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10296 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10296 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10296 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10296 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT 'hello' + 'world' FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10296 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10297 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10297 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10297 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@f202d6d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10297 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10297 DEBUG StandardExecutor  - Adding following query: SELECT 'hello' + 'world' FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10297 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
getSelectedAttributes() -> map= {}, order= [expression_0]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@746b18fd (operators: [+])
buildInput() -> map
buildJoin() --> SimpleSource
10301 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10302 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10302 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7a2e0858 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10302 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10302 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['"hello"+"world"','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10302 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10309 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10310 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10310 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10310 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10310 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10311 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10311 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10311 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10311 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10311 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10312 INFO  transform  - Starting transformation of Top@1646234040 OwnerIDs: 29... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10312 DEBUG transform  - Before transformation: 
TopAO (1646234040) Owner: 29
0 <- 0 MapAO (255041198) Owner: 29
       0 <- 0 AccessAO (673367807) Owner: 29
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10315 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10315 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10315 INFO  transform  - Transformation of Top@1646234040 OwnerIDs: 29 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10315 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10316 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10316 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10316 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10316 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10316 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['"hello"+"world"','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10316 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10318 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10318 DEBUG ReloadLog  - Query added to log: SELECT 'hello' + 'world' FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10318 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10320 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10321 INFO  StandardExecutor  - Starting query (ID: 29)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10326 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10327 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10328 INFO  StandardExecutor  - Query 29 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10329 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 29 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10329 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10329 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10329 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT 'hello' + 'world' FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10331 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10332 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10332 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10332 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10332 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10332 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10333 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-57] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10333 INFO  StandardExecutor  - Stopping query (ID: 29).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10333 DEBUG StandardExecutor  - Try to stop query 29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10333 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10334 INFO  StandardExecutor  - Query 29 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10334 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 29 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10334 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10334 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10334 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10334 INFO  StandardExecutor  - Removing Query 29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10334 DEBUG StandardExecutor  - Removing Ownership 29 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10334 INFO  StandardExecutor  - Query 29 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10335 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['"hello"+"world"','expression_0']]},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10335 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10335 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10335 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest6.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10336 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10336 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 36 of 49: "SelectExpressionTest7.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10336 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction 
FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10336 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10336 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10336 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10336 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction 
FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10337 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10337 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10337 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10337 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@37c2eacb - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10338 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10338 DEBUG StandardExecutor  - Adding following query: SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction
FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10338 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price, auction]}, order= [matrix, bid.price, bid.auction]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@159a48a6 (operators: [+, *])
buildInput() -> map
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
10345 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10345 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10345 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@15bc339 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10346 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10346 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=[['[1.0,2.0,3.0;3.0,4.0,6.0]+[2.0,4.0,5.0;12.0,5.0,1.0]*0.5','matrix'],'bid.price','bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10346 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10372 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10372 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10372 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10372 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10372 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10373 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10373 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10373 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10374 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10374 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10374 INFO  transform  - Starting transformation of Top@734635893 OwnerIDs: 30... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10374 DEBUG transform  - Before transformation: 
TopAO (734635893) Owner: 30
0 <- 0 MapAO (665846007) Owner: 30
       0 <- 0 AccessAO (1123664282) Owner: 30
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10376 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10377 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10377 INFO  transform  - Transformation of Top@734635893 OwnerIDs: 30 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10377 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10378 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10378 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10378 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10378 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10378 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=[['[1.0,2.0,3.0;3.0,4.0,6.0]+[2.0,4.0,5.0;12.0,5.0,1.0]*0.5','matrix'],'bid.price','bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10378 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10379 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10380 DEBUG ReloadLog  - Query added to log: SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction
FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10381 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10381 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10382 INFO  StandardExecutor  - Starting query (ID: 30)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10382 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10382 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10384 INFO  StandardExecutor  - Query 30 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10384 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 30 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10384 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10384 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10385 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT [1.0,2.0,3.0;3.0,4.0,6.0] + [2.0,4.0,5.0;12.0,5.0,1.0] * 0.5 AS matrix, price, auction 
FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10385 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10386 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10386 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10386 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10386 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10386 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10387 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-58] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10387 INFO  StandardExecutor  - Stopping query (ID: 30).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10387 DEBUG StandardExecutor  - Try to stop query 30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10387 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10388 INFO  StandardExecutor  - Query 30 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10388 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 30 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10388 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10388 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10388 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10388 INFO  StandardExecutor  - Removing Query 30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10388 DEBUG StandardExecutor  - Removing Ownership 30 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10388 INFO  StandardExecutor  - Query 30 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10389 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=[['[1.0,2.0,3.0;3.0,4.0,6.0]+[2.0,4.0,5.0;12.0,5.0,1.0]*0.5','matrix'],'bid.price','bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10389 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10390 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10390 DEBUG AbstractTestComponent  - Sub test "SelectExpressionTest7.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10390 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10390 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 37 of 49: "SelectTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10390 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT auction FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10390 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10391 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10391 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10391 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT auction FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10391 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10392 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10392 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10392 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4a0df195 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10392 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10392 DEBUG StandardExecutor  - Adding following query: SELECT auction FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10393 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [bid.auction]
buildInput() -> skip
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
10397 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10398 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10398 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@5da7cee2 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10398 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10398 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10398 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10400 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10400 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10401 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10401 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10401 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10401 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10402 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10402 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10402 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10402 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10403 INFO  transform  - Starting transformation of Top@440295203 OwnerIDs: 31... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10403 DEBUG transform  - Before transformation: 
TopAO (440295203) Owner: 31
0 <- 0 MapAO (1653859230) Owner: 31
       0 <- 0 AccessAO (911561694) Owner: 31
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10407 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10407 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10408 INFO  transform  - Transformation of Top@440295203 OwnerIDs: 31 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10408 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10408 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10409 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10409 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10409 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10409 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10409 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10410 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10410 DEBUG ReloadLog  - Query added to log: SELECT auction FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10411 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10411 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10411 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT auction FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10411 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10412 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10412 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10412 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10412 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10413 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10413 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-59] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10413 INFO  StandardExecutor  - Removing Query 31 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10413 DEBUG StandardExecutor  - Removing Ownership 31 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10414 INFO  StandardExecutor  - Query 31 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10414 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.auction']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10414 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10415 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10415 DEBUG AbstractTestComponent  - Sub test "SelectTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10415 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10415 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 38 of 49: "SelectTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10415 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT auction FROM bid WHERE auction > 1000;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10415 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10415 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10415 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10416 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT auction FROM bid WHERE auction > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10416 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10416 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10416 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10417 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@27d57a2c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10417 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10417 DEBUG StandardExecutor  - Adding following query: SELECT auction FROM bid WHERE auction > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10417 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [bid.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
bid.auction
bid.auction>1000
bid.auction>1000
parsePredicate() -> bid.auction>1000
buildInput() -> skip
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
10420 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10421 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10421 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@58a4a74d - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10421 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10422 DEBUG StandardExecutor  - Adding following query: operator_1 = SELECT({predicate='bid.auction>1000'},bid)
operator_2 = MAP({expressions=['bid.auction']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10422 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10424 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10424 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10425 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10425 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10425 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10426 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10426 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10426 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10426 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10427 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10427 INFO  transform  - Starting transformation of Top@137659163 OwnerIDs: 32... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10427 DEBUG transform  - Before transformation: 
TopAO (137659163) Owner: 32
0 <- 0 MapAO (592088871) Owner: 32
       0 <- 0 SelectAO (1531782631) Owner: 32
              0 <- 0 AccessAO (834842620) Owner: 32
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10430 DEBUG ruleengine  - Ruleengine needed 2 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10430 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10431 INFO  transform  - Transformation of Top@137659163 OwnerIDs: 32 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10431 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10431 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10432 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10432 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10432 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10432 DEBUG ReloadLog  - Query added to log: operator_1 = SELECT({predicate='bid.auction>1000'},bid)
operator_2 = MAP({expressions=['bid.auction']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10432 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10433 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10433 DEBUG ReloadLog  - Query added to log: SELECT auction FROM bid WHERE auction > 1000; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10434 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10434 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10435 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT auction FROM bid WHERE auction > 1000;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10435 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10436 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10436 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10436 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10436 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10436 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10437 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-60] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10437 INFO  StandardExecutor  - Removing Query 32 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10437 DEBUG StandardExecutor  - Removing Ownership 32 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10437 INFO  StandardExecutor  - Query 32 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10437 DEBUG ReloadLog  - Removing query from log: operator_1 = SELECT({predicate='bid.auction>1000'},bid)
operator_2 = MAP({expressions=['bid.auction']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10438 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10438 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10439 DEBUG AbstractTestComponent  - Sub test "SelectTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10439 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10439 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 39 of 49: "SelectTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10439 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10439 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10439 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10439 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10440 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10440 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10440 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10441 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10441 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@655523dd - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10441 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10441 DEBUG StandardExecutor  - Adding following query: SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10441 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= bidder, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[price, auction, bidder]}, order= [bid.price, avgPrice, bid.auction, bid.bidder]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@5e1218b4 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@12958360 (operators: null)
getAttributename() -> attributename=price, sourcename= null
10447 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10447 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10447 DEBUG MEP  - No such function: AVG for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
buildJoin() --> SimpleSource
getAttributename() -> attributename=price, sourcename= null
getDataTypeFrom() -> attribute= bid.price, attributename= bid.price
buildInput() -> aggregate 
buildInput() -> aggregate : !(contains all project attributes)
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> avgPrice
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
10450 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10450 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10450 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@c6e0f32 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10450 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10450 DEBUG StandardExecutor  - Adding following query: operator_1 = AGGREGATE({aggregations=[['AVG','bid.price','avgPrice','Double']]},bid)
operator_2 = MAP({expressions=['bid.price','avgPrice','bid.auction','bid.bidder']},JOIN(operator_1,bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10451 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10458 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10459 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10459 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10459 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10459 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10460 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10460 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10460 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10460 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10461 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10461 INFO  transform  - Starting transformation of Top@1315038402 OwnerIDs: 33... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10461 DEBUG transform  - Before transformation: 
TopAO (1315038402) Owner: 33
0 <- 0 MapAO (208301085) Owner: 33
       0 <- 0 JoinAO (920632751) Owner: 33 Predicate: null
              0 <- 0 AggregateAO (1333945918) Owner: 33
                     0 <- 0 AccessAO (235195640) Owner: 33
              1 <- 0 AccessAO (1372668833) Owner: 33
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10468 DEBUG ruleengine  - Ruleengine needed 6 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10469 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10469 INFO  transform  - Transformation of Top@1315038402 OwnerIDs: 33 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10469 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10471 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10471 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10471 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10471 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10472 DEBUG ReloadLog  - Query added to log: operator_1 = AGGREGATE({aggregations=[['AVG','bid.price','avgPrice','Double']]},bid)
operator_2 = MAP({expressions=['bid.price','avgPrice','bid.auction','bid.bidder']},JOIN(operator_1,bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10472 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10473 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10473 DEBUG ReloadLog  - Query added to log: SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10473 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10474 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10474 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT price, AVG(price) AS avgPrice, auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10474 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10475 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10475 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10476 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10476 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10476 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10476 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-61] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10476 INFO  StandardExecutor  - Removing Query 33 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10476 DEBUG StandardExecutor  - Removing Ownership 33 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10477 INFO  StandardExecutor  - Query 33 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10477 DEBUG ReloadLog  - Removing query from log: operator_1 = AGGREGATE({aggregations=[['AVG','bid.price','avgPrice','Double']]},bid)
operator_2 = MAP({expressions=['bid.price','avgPrice','bid.auction','bid.bidder']},JOIN(operator_1,bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10477 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10478 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10478 DEBUG AbstractTestComponent  - Sub test "SelectTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10478 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10478 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 40 of 49: "SelectTest4.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10479 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10479 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10479 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10479 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10479 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10479 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10480 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10481 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10481 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@7918c7f8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10482 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10482 DEBUG StandardExecutor  - Adding following query: SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10482 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= price, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction, price]}, order= [bid.auction, bid.price]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=auction, sourcename= null
bid.auction
bid.auction==7
bid.auction==7
getAttributename() -> attributename=auction, sourcename= null
bid.auction==7||bid.auction
bid.auction==7||bid.auction==20
bid.auction==7||bid.auction==20
bid.auction==7||bid.auction==20
getAttributename() -> attributename=auction, sourcename= null
bid.auction==7||bid.auction==20||bid.auction
bid.auction==7||bid.auction==20||bid.auction==21
bid.auction==7||bid.auction==20||bid.auction==21
bid.auction==7||bid.auction==20||bid.auction==21
getAttributename() -> attributename=auction, sourcename= null
bid.auction==7||bid.auction==20||bid.auction==21||bid.auction
bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59
bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59
bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59
getAttributename() -> attributename=auction, sourcename= null
bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction
bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87
bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87
bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87
parsePredicate() -> bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87
buildInput() -> skip
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, C.id=C, B.bidder=B}
10488 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10489 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10489 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@345cf395 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10489 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10490 DEBUG StandardExecutor  - Adding following query: operator_1 = SELECT({predicate='bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87'},bid)
operator_2 = MAP({expressions=['bid.auction','bid.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10490 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10496 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10497 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10497 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10497 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10498 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10534 DEBUG ruleengine  - Ruleengine needed 36 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10534 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10534 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10534 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10534 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10535 INFO  transform  - Starting transformation of Top@660915526 OwnerIDs: 34... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10535 DEBUG transform  - Before transformation: 
TopAO (660915526) Owner: 34
0 <- 0 MapAO (1497983329) Owner: 34
       0 <- 0 SelectAO (1082886058) Owner: 34
              0 <- 0 AccessAO (2041611826) Owner: 34
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10539 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10539 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10540 INFO  transform  - Transformation of Top@660915526 OwnerIDs: 34 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10540 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10540 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10540 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10540 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10541 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10541 DEBUG ReloadLog  - Query added to log: operator_1 = SELECT({predicate='bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87'},bid)
operator_2 = MAP({expressions=['bid.auction','bid.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10541 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10542 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10542 DEBUG ReloadLog  - Query added to log: SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10542 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10543 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10544 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT auction, price FROM bid WHERE auction=7 OR auction=20 OR auction=21 OR auction=59 OR auction=87;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10544 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10545 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10545 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10545 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10545 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10545 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10546 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-62] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10546 INFO  StandardExecutor  - Removing Query 34 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10546 DEBUG StandardExecutor  - Removing Ownership 34 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10546 INFO  StandardExecutor  - Query 34 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10546 DEBUG ReloadLog  - Removing query from log: operator_1 = SELECT({predicate='bid.auction==7||bid.auction==20||bid.auction==21||bid.auction==59||bid.auction==87'},bid)
operator_2 = MAP({expressions=['bid.auction','bid.price']},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10547 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10548 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10548 DEBUG AbstractTestComponent  - Sub test "SelectTest4.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10548 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10548 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 41 of 49: "SelectTest5.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10548 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10548 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10549 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10549 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10549 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10549 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10549 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10550 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10550 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6df3e44c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10550 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10550 DEBUG StandardExecutor  - Adding following query: SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10550 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::P1.id
alias!
findbyName::P1.id
alias!
registerAttributeAliases() -> attribute= ID1, realSourcename= person, sourcenameAlias= P1, isFormSubQuery= false
findbyName::P2.id
alias!
findbyName::P2.id
alias!
registerAttributeAliases() -> attribute= ID2, realSourcename= person, sourcenameAlias= P2, isFormSubQuery= false
getSelectedAttributes() -> map= {person=[ID1, ID2]}, order= [ID1, ID2]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=ID1, sourcename= null
ID1
getAttributename() -> attributename=ID2, sourcename= null
ID1==ID2
ID1==ID2
parsePredicate() -> ID1==ID2
buildInput() -> skip
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> ID1
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> ID2
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
10556 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10557 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10557 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3c904f1e - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10557 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10557 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['id','ID1','timestamp','P1.timestamp','name','P1.name','email','P1.email','creditcard','P1.creditcard','city','P1.city','state','P1.state'],pairs='true'},person)
operator_2 = RENAME({aliases=['id','ID2','timestamp','P2.timestamp','name','P2.name','email','P2.email','creditcard','P2.creditcard','city','P2.city','state','P2.state'],pairs='true'},person)
operator_3 = SELECT({predicate='ID1==ID2'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['ID1','ID2']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10557 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10569 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10570 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10570 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10570 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10570 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10571 DEBUG RelationalRestructHelper  - removing operator:Select@881662115 OwnerIDs: 35(ID1) = (ID2) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10572 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10572 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10572 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10572 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10572 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10573 INFO  transform  - Starting transformation of Top@148353618 OwnerIDs: 35... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10573 DEBUG transform  - Before transformation: 
TopAO (148353618) Owner: 35
0 <- 0 MapAO (1182985125) Owner: 35
       0 <- 0 JoinAO (1839182545) Owner: 35 Predicate: (ID1) = (ID2) initialized = true
              0 <- 0 AccessAO (1643838324) Owner: 35
              1 <- 0 AccessAO (1409978427) Owner: 35
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10585 DEBUG ruleengine  - Ruleengine needed 11 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10586 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10586 INFO  transform  - Transformation of Top@148353618 OwnerIDs: 35 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10591 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10591 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10592 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10592 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10592 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10592 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['id','ID1','timestamp','P1.timestamp','name','P1.name','email','P1.email','creditcard','P1.creditcard','city','P1.city','state','P1.state'],pairs='true'},person)
operator_2 = RENAME({aliases=['id','ID2','timestamp','P2.timestamp','name','P2.name','email','P2.email','creditcard','P2.creditcard','city','P2.city','state','P2.state'],pairs='true'},person)
operator_3 = SELECT({predicate='ID1==ID2'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['ID1','ID2']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10593 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10593 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10594 DEBUG ReloadLog  - Query added to log: SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10594 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10599 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10599 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT P1.id AS ID1, P2.id AS ID2
FROM person AS P1, person AS P2
WHERE ID1=ID2;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10600 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10600 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10600 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10601 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10601 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10601 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10601 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-63] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10602 INFO  StandardExecutor  - Removing Query 35 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10602 DEBUG StandardExecutor  - Removing Ownership 35 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10602 INFO  StandardExecutor  - Query 35 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10602 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['id','ID1','timestamp','P1.timestamp','name','P1.name','email','P1.email','creditcard','P1.creditcard','city','P1.city','state','P1.state'],pairs='true'},person)
operator_2 = RENAME({aliases=['id','ID2','timestamp','P2.timestamp','name','P2.name','email','P2.email','creditcard','P2.creditcard','city','P2.city','state','P2.state'],pairs='true'},person)
operator_3 = SELECT({predicate='ID1==ID2'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['ID1','ID2']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10602 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10603 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10603 DEBUG AbstractTestComponent  - Sub test "SelectTest5.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10604 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10604 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 42 of 49: "SelectTest6.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10604 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10604 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10605 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10605 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10605 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10605 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10606 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10606 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10606 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6eaa21d8 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10606 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10606 DEBUG StandardExecutor  - Adding following query: SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10607 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= B.bidder, realSourcename= bid, sourcenameAlias= B, isFormSubQuery= false
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction]}, order= [bid.auction]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=B.bidder, sourcename= null
B.bidder
getAttributename() -> attributename=P.id, sourcename= null
B.bidder==P.id
B.bidder==P.id
parsePredicate() -> B.bidder==P.id
buildInput() -> skip
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
10612 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10612 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10612 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6e495b48 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10613 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10613 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.bidder==P.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10613 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10617 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10617 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10617 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10618 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10618 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10619 DEBUG RelationalRestructHelper  - removing operator:Select@184642382 OwnerIDs: 36(B.bidder) = (P.id) initialized = true - de.uniol.inf.is.odysseus.relational.rewrite.RelationalRestructHelper.removeOperator(RelationalRestructHelper.java:411) 
10619 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10619 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10620 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10620 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10620 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10620 INFO  transform  - Starting transformation of Top@1607020784 OwnerIDs: 36... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10621 DEBUG transform  - Before transformation: 
TopAO (1607020784) Owner: 36
0 <- 0 MapAO (922871524) Owner: 36
       0 <- 0 JoinAO (13001549) Owner: 36 Predicate: (B.bidder) = (P.id) initialized = true
              0 <- 0 AccessAO (1710591086) Owner: 36
              1 <- 0 AccessAO (1940749968) Owner: 36
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10626 DEBUG ruleengine  - Ruleengine needed 5 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10626 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10627 INFO  transform  - Transformation of Top@1607020784 OwnerIDs: 36 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10627 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10627 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10627 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10627 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10628 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10628 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.bidder==P.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10628 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10629 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10629 DEBUG ReloadLog  - Query added to log: SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10629 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10630 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10630 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT auction FROM bid AS B, person AS P WHERE B.bidder = P.id;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10630 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10631 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10631 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10631 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10631 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10631 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10632 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-64] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10632 INFO  StandardExecutor  - Removing Query 36 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10632 DEBUG StandardExecutor  - Removing Ownership 36 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10632 INFO  StandardExecutor  - Query 36 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10632 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['bidder','B.bidder','timestamp','B.timestamp','auction','B.auction','datetime','B.datetime','price','B.price'],pairs='true'},bid)
operator_2 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},person)
operator_3 = SELECT({predicate='B.bidder==P.id'},JOIN(operator_1,operator_2))
operator_4 = MAP({expressions=['B.auction']},operator_3)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10632 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10633 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10633 DEBUG AbstractTestComponent  - Sub test "SelectTest6.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10633 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10634 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 43 of 49: "SelectTest7.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10634 DEBUG AbstractTestComponent  - #PARSER CQL
#QUERY
SELECT C.name FROM category AS C WHERE C.id != 108;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10634 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10634 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10634 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10634 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#QUERY
SELECT C.name FROM category AS C WHERE C.id != 108;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10634 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10635 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10635 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10635 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@ab20d7c - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10635 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10635 DEBUG StandardExecutor  - Adding following query: SELECT C.name FROM category AS C WHERE C.id != 108; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10636 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= C.id, realSourcename= category, sourcenameAlias= C, isFormSubQuery= false
findbyName::C.name
alias!
registerAttributeAliases() -> attribute= C.name, realSourcename= category, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {category=[C.name]}, order= [C.name]
parsePredicate(List<Expressions>)
getAttributename() -> attributename=C.id, sourcename= null
C.id
C.id!=108
C.id!=108
parsePredicate() -> C.id!=108
buildInput() -> skip
buildJoin() --> SimpleSource
getProjectionAttribute() -> C.name
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
10642 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10642 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10642 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@13f9ad9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10643 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10643 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_2 = SELECT({predicate='C.id!=108'},operator_1)
operator_3 = MAP({expressions=['C.name']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10643 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10646 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10647 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10647 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10647 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10647 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10648 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10648 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10649 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10649 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10649 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10650 INFO  transform  - Starting transformation of Top@924393200 OwnerIDs: 37... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10650 DEBUG transform  - Before transformation: 
TopAO (924393200) Owner: 37
0 <- 0 MapAO (253380088) Owner: 37
       0 <- 0 SelectAO (1591683105) Owner: 37
              0 <- 0 AccessAO (81505591) Owner: 37
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10662 DEBUG ruleengine  - Ruleengine needed 11 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10663 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10663 INFO  transform  - Transformation of Top@924393200 OwnerIDs: 37 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10663 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10664 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10664 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10664 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10664 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10665 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_2 = SELECT({predicate='C.id!=108'},operator_1)
operator_3 = MAP({expressions=['C.name']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10665 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10666 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10666 DEBUG ReloadLog  - Query added to log: SELECT C.name FROM category AS C WHERE C.id != 108; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10666 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10667 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10667 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#QUERY
SELECT C.name FROM category AS C WHERE C.id != 108;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10667 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10668 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10668 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10669 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10669 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10669 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10669 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-65] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10670 INFO  StandardExecutor  - Removing Query 37 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10670 DEBUG StandardExecutor  - Removing Ownership 37 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10670 INFO  StandardExecutor  - Query 37 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10670 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_2 = SELECT({predicate='C.id!=108'},operator_1)
operator_3 = MAP({expressions=['C.name']},operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10670 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10671 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10671 DEBUG AbstractTestComponent  - Sub test "SelectTest7.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10671 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10672 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 44 of 49: "SetTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10672 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT * FROM bid
UNION
SELECT * FROM person
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10672 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10672 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10672 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10672 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT * FROM bid
UNION
SELECT * FROM person
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10672 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10673 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10673 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10673 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@62628e78 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10673 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10673 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid
UNION
SELECT * FROM person - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10674 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
getAttibutename() -> map = {bid=[timestamp, auction, bidder, datetime, price]}
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.datetime
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getAttibutename() -> map = {person=[timestamp, id, name, email, creditcard, city, state]}
buildJoin() --> SimpleSource
getProjectionAttribute() -> person.timestamp
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.id
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.name
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.email
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.creditcard
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.city
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> person.state
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
10680 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10681 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10681 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@3cd206b5 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10681 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10681 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
operator_2 = MAP({expressions=['person.timestamp','person.id','person.name','person.email','person.creditcard','person.city','person.state']},person)
operator_3 = UNION(operator_1,operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10682 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10689 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10690 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10690 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10690 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10690 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10691 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10691 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10692 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10692 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10692 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10692 INFO  transform  - Starting transformation of Top@2062209967 OwnerIDs: 38... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10692 DEBUG transform  - Before transformation: 
TopAO (2062209967) Owner: 38
0 <- 0 UnionAO (986238875) Owner: 38
       0 <- 0 MapAO (90096982) Owner: 38
              0 <- 0 AccessAO (454424866) Owner: 38
       1 <- 0 MapAO (936261188) Owner: 38
              0 <- 0 AccessAO (1267110705) Owner: 38
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10709 DEBUG ruleengine  - Ruleengine needed 16 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10710 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10710 INFO  transform  - Transformation of Top@2062209967 OwnerIDs: 38 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10710 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10710 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10711 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10711 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10711 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10711 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
operator_2 = MAP({expressions=['person.timestamp','person.id','person.name','person.email','person.creditcard','person.city','person.state']},person)
operator_3 = UNION(operator_1,operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10711 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10713 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10713 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid
UNION
SELECT * FROM person - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10713 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10714 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10714 INFO  StandardExecutor  - Starting query (ID: 38)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10714 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10715 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10715 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10716 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10717 INFO  StandardExecutor  - Query 38 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10718 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 38 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10718 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10718 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10718 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT * FROM bid
UNION
SELECT * FROM person
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10719 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10719 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10720 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10720 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10720 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10720 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10721 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-66] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10721 INFO  StandardExecutor  - Stopping query (ID: 38).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10721 DEBUG StandardExecutor  - Try to stop query 38 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10721 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10722 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10722 INFO  StandardExecutor  - Query 38 stopped. Execution time 5 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10722 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 38 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10723 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10723 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10723 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10723 INFO  StandardExecutor  - Removing Query 38 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10723 DEBUG StandardExecutor  - Removing Ownership 38 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10723 INFO  StandardExecutor  - Query 38 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10723 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
operator_2 = MAP({expressions=['person.timestamp','person.id','person.name','person.email','person.creditcard','person.city','person.state']},person)
operator_3 = UNION(operator_1,operator_2)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10724 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10725 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10725 DEBUG AbstractTestComponent  - Sub test "SetTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10725 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10725 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:50 CEST 2017Running sub test 45 of 49: "StreamToTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10725 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
DROP SINK out1 IF EXISTS
#QUERY
CREATE SINK out1 (attr1 INTEGER, attr2 INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'CSV'
TRANSPORT 'File'
DATAHANDLER 'TUPLE'
OPTIONS('filename' 'E:\\Users\\test.txt') 			
#QUERY
STREAM TO out1 SELECT auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10726 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10726 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10726 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10726 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
DROP SINK out1 IF EXISTS
#QUERY
CREATE SINK out1 (attr1 INTEGER, attr2 INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'CSV'
TRANSPORT 'File'
DATAHANDLER 'TUPLE'
OPTIONS('filename' 'E:\\Users\\test.txt') 			
#QUERY
STREAM TO out1 SELECT auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10726 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10727 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10727 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10727 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@14dc3f89 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10727 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10728 DEBUG StandardExecutor  - Adding following query: DROP SINK out1 IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10728 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10732 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10732 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10732 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.DropSinkCommand@64412d34 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10732 DEBUG ReloadLog  - Query added to log: DROP SINK out1 IF EXISTS - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10732 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10733 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10734 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@4d178d55 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10734 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10734 DEBUG StandardExecutor  - Adding following query: CREATE SINK out1 (attr1 INTEGER, attr2 INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'CSV'
TRANSPORT 'File'
DATAHANDLER 'TUPLE'
OPTIONS('filename' 'E:\\Users\\test.txt') - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10734 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
generateKeyValueString()= [filename]
[E:\Users\test.txt]
,
10737 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10737 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:677) 
10738 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@1a480135 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10738 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10738 DEBUG StandardExecutor  - Adding following query: STREAM TO out1 SELECT auction, bidder FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10738 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= bidder, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction, bidder]}, order= [bid.auction, bid.bidder]
buildInput() -> skip
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, C.id=C, B.bidder=B}
10742 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10742 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10742 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2875b016 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10742 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10742 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.auction','bid.bidder']},bid)
out1 = SENDER({sink='out1',wrapper='GenericPush',protocol='CSV',transport='File',datahandler='TUPLE',options=[['filename','E:\Users\test.txt']]},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10743 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10746 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10747 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10747 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10747 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10747 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10748 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10748 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10749 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10749 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10749 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10749 INFO  transform  - Starting transformation of Top@62156248 OwnerIDs: 39... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10750 DEBUG transform  - Before transformation: 
TopAO (62156248) Owner: 39
0 <- 0 SenderAO (962927234) Owner: 39
       0 <- 0 MapAO (1810349933) Owner: 39
              0 <- 0 AccessAO (323761934) Owner: 39
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10761 DEBUG ruleengine  - Ruleengine needed 7 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10761 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10761 INFO  transform  - Transformation of Top@62156248 OwnerIDs: 39 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10761 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10762 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10762 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10762 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10762 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10762 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.auction','bid.bidder']},bid)
out1 = SENDER({sink='out1',wrapper='GenericPush',protocol='CSV',transport='File',datahandler='TUPLE',options=[['filename','E:\Users\test.txt']]},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10762 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10763 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10764 DEBUG ReloadLog  - Query added to log: STREAM TO out1 SELECT auction, bidder FROM bid; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10764 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10767 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10768 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
DROP SINK out1 IF EXISTS
#QUERY
CREATE SINK out1 (attr1 INTEGER, attr2 INTEGER)
WRAPPER 'GenericPush'
PROTOCOL 'CSV'
TRANSPORT 'File'
DATAHANDLER 'TUPLE'
OPTIONS('filename' 'E:\\Users\\test.txt') 			
#QUERY
STREAM TO out1 SELECT auction, bidder FROM bid;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10768 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10773 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10774 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10775 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10775 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10775 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10779 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-67] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10780 INFO  StandardExecutor  - Removing Query 39 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10780 DEBUG StandardExecutor  - Removing Ownership 39 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10780 INFO  StandardExecutor  - Query 39 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10780 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.auction','bid.bidder']},bid)
out1 = SENDER({sink='out1',wrapper='GenericPush',protocol='CSV',transport='File',datahandler='TUPLE',options=[['filename','E:\Users\test.txt']]},operator_1)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10781 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10788 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10791 DEBUG AbstractTestComponent  - Sub test "StreamToTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10792 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10792 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:51 CEST 2017Running sub test 46 of 49: "SubQueryTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10792 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
        FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10792 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10792 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10792 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10793 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
        FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10793 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10793 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10794 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10794 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6601cc93 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10794 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10794 DEBUG StandardExecutor  - Adding following query: SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10794 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
findbyName::B1.price
alias!
registerAttributeAliases() -> attribute= B1.price, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
findbyName::B1.auction
alias!
registerAttributeAliases() -> attribute= B1.auction, realSourcename= bid, sourcenameAlias= B1, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[B1.price, B1.auction]}, order= [B1.price, num]
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@3fbfbf84 (operators: null)
parseSelectExpression() -> expression= de.uniol.inf.is.odysseus.parser.novel.cql.cQL.impl.SelectExpressionImpl@23f72d88 (operators: null)
getAttributename() -> attributename=B1.auction, sourcename= null
10807 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
10807 DEBUG MEP  - No such function: COUNT for parameter [Object] - de.uniol.inf.is.odysseus.mep.MEP.getFunction(MEP.java:457) 
registerAttributeAliases() -> attribute= price2, realSourcename= bid, sourcenameAlias= B2, isFormSubQuery= true
getSelectedAttributes() -> map= {bid=[price2]}, order= [price2]
buildJoin() --> SimpleSource
getAttributename() -> attributename=B1.auction, sourcename= null
getDataTypeFrom() -> attribute= B1.auction, attributename= B1.auction
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
buildInput() -> aggregate 
buildInput() -> aggregate : !(contains all project attributes)
buildJoin() --> SimpleSource
getProjectionAttribute() -> B1.price
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> num
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
parsePredicate(List<Expressions>)
getAttributename() -> attributename=num, sourcename= null
num
num>=200
num>=200
parsePredicate() -> num>=200
buildInput() -> skip
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
{attributename auction
 sourcename bid
 datatype Integer
 aliases [B1.auction]=[B1.auction], attributename price
 sourcename bid
 datatype Double
 aliases [B1.price, price2]=[B1.price, price2]}
getProjectionAttribute() -> price2
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
10824 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10824 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10824 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@87b5b49 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10825 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10825 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({aggregations=[['COUNT','B1.auction','num','Integer']]},operator_1)
operator_3 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['B1.price','num']},JOIN(operator_2,operator_3))
operator_5 = RENAME({aliases=['B1_price','price2'],pairs='true'},operator_4)
operator_6 = SELECT({predicate='num>=200'},operator_5)
operator_7 = MAP({expressions=['price2']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10825 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10830 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10830 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10831 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10831 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10831 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10832 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10833 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10833 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10833 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10834 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10837 INFO  transform  - Starting transformation of Top@199041063 OwnerIDs: 40... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10837 DEBUG transform  - Before transformation: 
TopAO (199041063) Owner: 40
0 <- 0 MapAO (837946527) Owner: 40
       0 <- 0 SelectAO (256139608) Owner: 40
              0 <- 0 MapAO (854640632) Owner: 40
                     0 <- 0 JoinAO (1347294617) Owner: 40 Predicate: null
                            0 <- 0 AggregateAO (1912172027) Owner: 40
                                   0 <- 0 TimeWindowAO (1562090557) Owner: 40
                                          0 <- 0 AccessAO (1776312161) Owner: 40
                            1 <- 0 TimeWindowAO (1235381529) Owner: 40
                                   0 <- 0 AccessAO (1930319715) Owner: 40
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10847 DEBUG ruleengine  - Ruleengine needed 9 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10847 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10847 INFO  transform  - Transformation of Top@199041063 OwnerIDs: 40 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10848 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10848 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10848 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10848 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10849 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10849 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({aggregations=[['COUNT','B1.auction','num','Integer']]},operator_1)
operator_3 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['B1.price','num']},JOIN(operator_2,operator_3))
operator_5 = RENAME({aliases=['B1_price','price2'],pairs='true'},operator_4)
operator_6 = SELECT({predicate='num>=200'},operator_5)
operator_7 = MAP({expressions=['price2']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10849 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10850 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10850 DEBUG ReloadLog  - Query added to log: SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10851 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10851 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10852 INFO  StandardExecutor  - Starting query (ID: 40)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10852 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10852 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10857 INFO  StandardExecutor  - Query 40 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10857 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 40 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10857 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 0 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10858 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10858 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT B2.price as price2
FROM   (SELECT B1.price, COUNT(B1.auction) AS num
        FROM bid [SIZE 60 MINUTES ADVANCE 1 MINUTES TIME] AS B1) AS B2
WHERE num >= 200;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10858 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10859 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10859 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10859 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10859 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10859 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10862 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-68] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10862 INFO  StandardExecutor  - Stopping query (ID: 40).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10862 DEBUG StandardExecutor  - Try to stop query 40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10862 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10863 DEBUG AggregateTIPO  - closing Aggregate - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:243) 
10863 DEBUG AggregateTIPO  - closing Aggregate done - de.uniol.inf.is.odysseus.server.intervalapproach.AggregateTIPO.process_close(AggregateTIPO.java:253) 
10863 INFO  StandardExecutor  - Query 40 stopped. Execution time 6 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10864 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 40 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10864 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10864 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10864 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10864 INFO  StandardExecutor  - Removing Query 40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10864 DEBUG StandardExecutor  - Removing Ownership 40 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10864 INFO  StandardExecutor  - Query 40 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10864 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_2 = AGGREGATE({aggregations=[['COUNT','B1.auction','num','Integer']]},operator_1)
operator_3 = RENAME({aliases=['auction','B1.auction','price','B1.price','timestamp','B1.timestamp','bidder','B1.bidder','datetime','B1.datetime'],pairs='true'},TIMEWINDOW({size=[60,'MINUTES'],advance=[1,'MINUTES']},bid))
operator_4 = MAP({expressions=['B1.price','num']},JOIN(operator_2,operator_3))
operator_5 = RENAME({aliases=['B1_price','price2'],pairs='true'},operator_4)
operator_6 = SELECT({predicate='num>=200'},operator_5)
operator_7 = MAP({expressions=['price2']},operator_6)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10865 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10876 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10876 DEBUG AbstractTestComponent  - Sub test "SubQueryTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10880 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10880 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:51 CEST 2017Running sub test 47 of 49: "WindowTest1.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10880 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT * FROM bid [UNBOUNDED];
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10880 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10880 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10880 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10880 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT * FROM bid [UNBOUNDED];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10881 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10881 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10881 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10881 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@6940f685 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10882 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10882 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid [UNBOUNDED]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10882 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
getAttibutename() -> map = {bid=[timestamp, auction, bidder, datetime, price]}
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.datetime
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
10893 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10893 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10893 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@783115d9 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10893 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10894 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10894 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10900 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10900 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10900 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10900 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10901 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10901 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10901 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10901 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10902 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10902 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10902 INFO  transform  - Starting transformation of Top@60221145 OwnerIDs: 41... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10902 DEBUG transform  - Before transformation: 
TopAO (60221145) Owner: 41
0 <- 0 MapAO (1966114624) Owner: 41
       0 <- 0 AccessAO (1523359711) Owner: 41
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10906 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10907 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10907 INFO  transform  - Transformation of Top@60221145 OwnerIDs: 41 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10907 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10907 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10907 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10908 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10908 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10908 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10908 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10912 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10912 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid [UNBOUNDED]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10912 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10913 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10913 INFO  StandardExecutor  - Starting query (ID: 41)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10914 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10914 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10915 INFO  StandardExecutor  - Query 41 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10917 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 41 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10917 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 1 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10918 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10918 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT * FROM bid [UNBOUNDED];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10918 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10919 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10920 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10920 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10920 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10920 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10924 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-69] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10925 INFO  StandardExecutor  - Stopping query (ID: 41).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10925 DEBUG StandardExecutor  - Try to stop query 41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10925 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10925 INFO  StandardExecutor  - Query 41 stopped. Execution time 10 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10926 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 41 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10926 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10926 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10926 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10926 INFO  StandardExecutor  - Removing Query 41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10926 DEBUG StandardExecutor  - Removing Ownership 41 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10926 INFO  StandardExecutor  - Query 41 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10926 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},bid)
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10927 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10933 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10933 DEBUG AbstractTestComponent  - Sub test "WindowTest1.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10933 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10933 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:51 CEST 2017Running sub test 48 of 49: "WindowTest2.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10933 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT * FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10933 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10933 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10933 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10933 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT * FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10934 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10934 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10934 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10934 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@2a32fb6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10934 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10934 DEBUG StandardExecutor  - Adding following query: SELECT * FROM bid [SIZE 5 MINUTES TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10935 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
getAttibutename() -> map = {bid=[timestamp, auction, bidder, datetime, price]}
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.timestamp
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.datetime
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.price
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
10939 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10939 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10940 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@11ebb1b6 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10940 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10940 DEBUG StandardExecutor  - Adding following query: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10940 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10945 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10946 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10946 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10946 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10947 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
10947 DEBUG ruleengine  - Ruleengine needed 0 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10948 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10948 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
10948 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
10948 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
10948 INFO  transform  - Starting transformation of Top@1510009630 OwnerIDs: 42... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
10949 DEBUG transform  - Before transformation: 
TopAO (1510009630) Owner: 42
0 <- 0 MapAO (922547904) Owner: 42
       0 <- 0 TimeWindowAO (447486093) Owner: 42
              0 <- 0 AccessAO (1881585646) Owner: 42
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
10952 DEBUG ruleengine  - Ruleengine needed 3 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
10952 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
10952 INFO  transform  - Transformation of Top@1510009630 OwnerIDs: 42 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
10953 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
10953 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
10953 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
10953 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
10953 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
10954 DEBUG ReloadLog  - Query added to log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10954 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10955 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10955 DEBUG ReloadLog  - Query added to log: SELECT * FROM bid [SIZE 5 MINUTES TIME]; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10955 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10956 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10957 INFO  StandardExecutor  - Starting query (ID: 42)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
10957 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
10957 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
10964 INFO  StandardExecutor  - Query 42 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
10964 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 42 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
10964 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 2 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
10965 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
10965 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT * FROM bid [SIZE 5 MINUTES TIME];
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
10965 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10966 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
10966 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
10966 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
10966 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
10966 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
10967 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-70] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
10967 INFO  StandardExecutor  - Stopping query (ID: 42).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
10967 DEBUG StandardExecutor  - Try to stop query 42 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
10967 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
10968 INFO  StandardExecutor  - Query 42 stopped. Execution time 4 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
10968 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 42 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
10968 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
10968 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
10968 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
10968 INFO  StandardExecutor  - Removing Query 42 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
10968 DEBUG StandardExecutor  - Removing Ownership 42 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
10969 INFO  StandardExecutor  - Query 42 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
10969 DEBUG ReloadLog  - Removing query from log: operator_1 = MAP({expressions=['bid.timestamp','bid.auction','bid.bidder','bid.datetime','bid.price']},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},bid))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
10969 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
10970 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
10970 DEBUG AbstractTestComponent  - Sub test "WindowTest2.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
10970 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
10970 DEBUG AbstractTestComponent  - Sat Jun 10 15:51:51 CEST 2017Running sub test 49 of 49: "WindowTest3.qry" .... - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:128) 
10970 DEBUG AbstractTestComponent  - #PARSER CQL
#RUNQUERY
SELECT auction, bidder, P.id, C.id 
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C;
 - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:129) 
10970 DEBUG AbstractTestComponent  - starting component test... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:41) 
10970 DEBUG AbstractTestComponent  - adding query... - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:42) 
10971 DEBUG StandardExecutor  - Adding textual query using OdysseusScript for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10971 DEBUG StandardExecutor  - Adding following query: #PARSER CQL
#RUNQUERY
SELECT auction, bidder, P.id, C.id 
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10971 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10971 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10976 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10976 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@36ddaebf - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10976 DEBUG StandardExecutor  - Adding textual query using CQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10976 DEBUG StandardExecutor  - Adding following query: SELECT auction, bidder, P.id, C.id
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10977 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
registerAttributeAliases() -> attribute= auction, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
registerAttributeAliases() -> attribute= bidder, realSourcename= bid, sourcenameAlias= null, isFormSubQuery= false
findbyName::P.id
findbyName::P.id
alias!
findbyName::P.id
registerAttributeAliases() -> attribute= P.id, realSourcename= person, sourcenameAlias= P, isFormSubQuery= false
findbyName::C.id
findbyName::C.id
findbyName::C.id
alias!
registerAttributeAliases() -> attribute= C.id, realSourcename= category, sourcenameAlias= C, isFormSubQuery= false
getSelectedAttributes() -> map= {bid=[auction, bidder], category=[C.id], person=[P.id]}, order= [bid.auction, bid.bidder, P.id, C.id]
buildInput() -> skip
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
buildJoin() --> SimpleSource
getProjectionAttribute() -> bid.auction
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> bid.bidder
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> P.id
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
getProjectionAttribute() -> C.id
{A=bid, B.datetime=B, C.name=C, B2.auction=B2, P.timestamp=P, P.email=P, auctioneer22=B2, P.state=P, B1.auction=B1, auctioneer111=B1, auctioneer=bid, P.name=P, P.creditcard=P, B.timestamp=B, P.id=P, B1.bidder=B1, B2.bidder=B2, price2=B2, B.price=B, B2.price=B2, auctioneer2=B2, auctioneer11=B1, auctioneer1=B1, B.auction=B, P.city=P, C.email=C, ID2=P2, ID1=P1, B1.price=B1, C.id=C, B.bidder=B}
10989 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10989 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10989 DEBUG StandardExecutor  - Executing de.uniol.inf.is.odysseus.core.server.planmanagement.executor.command.dd.AddQueryCommand@39e43310 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:475) 
10989 DEBUG StandardExecutor  - Adding textual query using PQL for user System... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:650) 
10990 DEBUG StandardExecutor  - Adding following query: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},person))
operator_2 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_3 = MAP({expressions=['bid.auction','bid.bidder','P.id','C.id']},JOIN(ELEMENTWINDOW({size=5,advance=1},bid),JOIN(operator_1,operator_2)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:651) 
10990 DEBUG StandardExecutor  - Translating query into logical plans - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:243) 
10998 DEBUG StandardExecutor  - Translation done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.createQueries(StandardExecutor.java:250) 
10998 DEBUG StandardExecutor  - Starting Optimization of logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:463) 
10998 DEBUG StandardExecutor  - Starting optimization and transformation for 1 logical queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:501) 
10999 DEBUG StandardQueryOptimizer  - Start rewriting of query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:134) 
10999 INFO  rewrite  - Starting rewriting... - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:46) 
11000 DEBUG ruleengine  - Ruleengine needed 1 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11000 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11000 INFO  rewrite  - Rewriting finished. - de.uniol.inf.is.odysseus.rewrite.engine.RewriteExecutor.rewritePlan(RewriteExecutor.java:103) 
11000 DEBUG StandardQueryOptimizer  - Rewriting of query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:138) 
11001 DEBUG StandardQueryOptimizer  - Starting transformation for the logical query... - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:157) 
11001 INFO  transform  - Starting transformation of Top@1028259121 OwnerIDs: 43... - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:61) 
11001 DEBUG transform  - Before transformation: 
TopAO (1028259121) Owner: 43
0 <- 0 MapAO (1075236033) Owner: 43
       0 <- 0 JoinAO (1187748003) Owner: 43 Predicate: null
              0 <- 0 ElementWindowAO (1073427864) Owner: 43
                     0 <- 0 AccessAO (1302984483) Owner: 43
              1 <- 0 JoinAO (992955027) Owner: 43 Predicate: null
                     0 <- 0 TimeWindowAO (557568981) Owner: 43
                            0 <- 0 AccessAO (1191863711) Owner: 43
                     1 <- 0 AccessAO (1159234226) Owner: 43
 - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:69) 
11019 DEBUG ruleengine  - Ruleengine needed 16 millis ! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:40) 
11020 DEBUG ruleengine  - 0 rules were successfully executed! - de.uniol.inf.is.odysseus.ruleengine.system.AbstractWorkingEnvironment.processEnvironment(AbstractWorkingEnvironment.java:41) 
11020 INFO  transform  - Transformation of Top@1028259121 OwnerIDs: 43 finished - de.uniol.inf.is.odysseus.transform.engine.TransformationExecutor.transform(TransformationExecutor.java:174) 
11020 DEBUG StandardQueryOptimizer  - Transformation into a physical query done. - de.uniol.inf.is.odysseus.planmanagement.optimization.query.standardqueryoptimizer.StandardQueryOptimizer.optimizeQuery(StandardQueryOptimizer.java:161) 
11021 DEBUG StandardExecutor  - Optimization and transformation for  1 logical queries done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:504) 
11021 DEBUG StandardExecutor  - Changing execution plan for optimized queries... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:505) 
11021 DEBUG StandardExecutor  - Execution plan changed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:507) 
11021 DEBUG StandardExecutor  - Optimization of logical queries done - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQueries(StandardExecutor.java:531) 
11021 DEBUG ReloadLog  - Query added to log: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},person))
operator_2 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_3 = MAP({expressions=['bid.auction','bid.bidder','P.id','C.id']},JOIN(ELEMENTWINDOW({size=5,advance=1},bid),JOIN(operator_1,operator_2)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11022 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11022 INFO  StandardExecutor  - Adding textual query using PQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11023 DEBUG ReloadLog  - Query added to log: SELECT auction, bidder, P.id, C.id
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C; - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11023 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11024 INFO  StandardExecutor  - Adding textual query using CQL for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11024 INFO  StandardExecutor  - Starting query (ID: 43)... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1111) 
11025 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
11025 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
11025 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
11026 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
11027 DEBUG ReceiverPO  - Process_open - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_open(ReceiverPO.java:80) 
11027 DEBUG AbstractTransportHandlerDelegate  - Calling open with InOnly for IN - de.uniol.inf.is.odysseus.core.physicaloperator.access.transport.AbstractTransportHandlerDelegate.open(AbstractTransportHandlerDelegate.java:111) 
11056 INFO  StandardExecutor  - Query 43 started. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.startQuery(StandardExecutor.java:1117) 
11056 DEBUG SingleSchedulerManager  - StartedQuery PQuery Id 43 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.startedQuery(SingleSchedulerManager.java:392) 
11067 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans create new Parts with Scheduling Biggest Queue assigned to thread 3 - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.addPartialPlan(AbstractSimpleThreadScheduler.java:185) 
11067 DEBUG AbstractScheduling  - Prepare Sources [] - de.uniol.inf.is.odysseus.core.server.scheduler.strategy.AbstractScheduling.prepareSources(AbstractScheduling.java:88) 
11068 DEBUG ReloadLog  - Query added to log: #PARSER CQL
#RUNQUERY
SELECT auction, bidder, P.id, C.id 
FROM bid [SIZE 5 TUPLE], person [SIZE 5 MINUTES TIME] AS P, category AS C;
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.queryAddedEvent(ReloadLog.java:107) 
11068 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11069 INFO  StandardExecutor  - Adding textual query using OdysseusScript for user System done. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.addQuery(StandardExecutor.java:673) 
11069 DEBUG AbstractTestComponent  - adding 1 queries done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:49) 
11069 DEBUG AbstractTestComponent  - result: OK - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:76) 
11069 DEBUG AbstractTestComponent  - sub test done. - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:77) 
11069 DEBUG AbstractTestComponent  - Try to remove all queries  - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:83) 
11070 DEBUG StandardExecutor  - Try to get lock on execution plan java.util.concurrent.locks.ReentrantLock@1cc39c60[Locked by thread Thread-71] - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:978) 
11070 INFO  StandardExecutor  - Stopping query (ID: 43).... - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1165) 
11070 DEBUG StandardExecutor  - Try to stop query 43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1197) 
11070 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
11072 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
11073 DEBUG ReceiverPO  - Process_close - de.uniol.inf.is.odysseus.core.server.physicaloperator.access.push.ReceiverPO.process_close(ReceiverPO.java:99) 
11073 INFO  StandardExecutor  - Query 43 stopped. Execution time 32 ms - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.stopQuery(StandardExecutor.java:1205) 
11073 DEBUG SingleSchedulerManager  - Stop Query PQuery Id 43 - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:401) 
11073 DEBUG SingleSchedulerManager  - Remove partial plans - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:402) 
11073 DEBUG SingleSchedulerManager  - decrease Source usage - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:404) 
11074 DEBUG SingleSchedulerManager  - Remove Leaf Sources - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stoppedQuery(SingleSchedulerManager.java:406) 
11074 INFO  StandardExecutor  - Removing Query 43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:987) 
11074 DEBUG StandardExecutor  - Removing Ownership 43 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:989) 
11074 INFO  StandardExecutor  - Query 43 removed. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.removeQuery(StandardExecutor.java:1033) 
11074 DEBUG ReloadLog  - Removing query from log: operator_1 = RENAME({aliases=['id','P.id','timestamp','P.timestamp','name','P.name','email','P.email','creditcard','P.creditcard','city','P.city','state','P.state'],pairs='true'},TIMEWINDOW({size=[5,'MINUTES'],advance=[1,'MINUTES']},person))
operator_2 = RENAME({aliases=['id','C.id','name','C.name','description','C.description','parentid','C.parentid'],pairs='true'},category)
operator_3 = MAP({expressions=['bid.auction','bid.bidder','P.id','C.id']},JOIN(ELEMENTWINDOW({size=5,advance=1},bid),JOIN(operator_1,operator_2)))
 - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.planModificationEvent(ReloadLog.java:147) 
11074 DEBUG ReloadLog  - Save queries in log. - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.reloadlog.ReloadLog.saveState(ReloadLog.java:122) 
11075 DEBUG AbstractTestComponent  - done - de.uniol.inf.is.odysseus.test.component.AbstractQueryTestComponent.executeTestSet(AbstractQueryTestComponent.java:98) 
11075 DEBUG AbstractTestComponent  - Sub test "WindowTest3.qry" ended with code: OK - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:142) 
11075 DEBUG AbstractTestComponent  - *************************************************************************************** - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.runTest(AbstractTestComponent.java:143) 
11075 DEBUG AbstractTestComponent  - Stopping executor - de.uniol.inf.is.odysseus.test.component.AbstractTestComponent.tryStopExecutor(AbstractTestComponent.java:110) 
11076 DEBUG SingleSchedulerManager  - Stop scheduling. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:304) 
11076 DEBUG AbstractSimpleThreadScheduler  - Stopping source treads - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:133) 
11076 DEBUG AbstractSimpleThreadScheduler  - Stopping scheduler executors - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.stopScheduling(AbstractSimpleThreadScheduler.java:138) 
11076 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
11076 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
11076 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
11076 DEBUG SchedulingExecutor  -  Terminated  - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.SchedulingExecutor.run(SchedulingExecutor.java:99) 
11076 DEBUG AbstractScheduler  - Stopping scheduling - de.uniol.inf.is.odysseus.core.server.scheduler.AbstractScheduler.stopScheduling(AbstractScheduler.java:216) 
11076 DEBUG AbstractSimpleThreadScheduler  - Setting new Plans to schedule :[] - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:158) 
11077 DEBUG AbstractSimpleThreadScheduler  - setPartialPlans done - de.uniol.inf.is.odysseus.scheduler.singlethreadscheduler.AbstractSimpleThreadScheduler.process_setPartialPlans(AbstractSimpleThreadScheduler.java:178) 
11077 DEBUG SingleSchedulerManager  - Scheduling stopped. - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.stopScheduling(SingleSchedulerManager.java:306) 
11080 DEBUG TestComponentRunner  - End Testcomponent 'CQL Parser Test'. Duration = 4329 ms - de.uniol.inf.is.odysseus.test.runner.TestComponentRunner.run(TestComponentRunner.java:73) 
11080 DEBUG TestRunnerApplication  - Total results for component "CQL Parser Test" - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:103) 
11080 DEBUG TestRunnerApplication  - Sub test 1: CreateDatabaseConnectionTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11080 DEBUG TestRunnerApplication  - Sub test 2: CreateDatabaseSinkTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11080 DEBUG TestRunnerApplication  - Sub test 3: CreateDatabaseSourceTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 4: CreateStreamFromFileTest.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 5: CreateStreamTest.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 6: CreateStreamToDatabaseSinkTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 7: CreateViewTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 8: ExistsTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 9: ExistsTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 10: ExistsTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 11: QuantificationTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 12: RenameTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 13: RenameTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 14: RenameTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 15: RenameTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 16: RenameTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 17: RenameTest6.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11081 DEBUG TestRunnerApplication  - Sub test 18: RenameTest7.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 19: SelectAggregationTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 20: SelectAggregationTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 21: SelectAggregationTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 22: SelectAggregationTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 23: SelectAggregationTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 24: SelectAllTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 25: SelectAllTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 26: SelectAllTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 27: SelectAllTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 28: SelectAllTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 29: SelectAllTest6.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 30: SelectExpressionTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 31: SelectExpressionTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11082 DEBUG TestRunnerApplication  - Sub test 32: SelectExpressionTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 33: SelectExpressionTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 34: SelectExpressionTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 35: SelectExpressionTest6.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 36: SelectExpressionTest7.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 37: SelectTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 38: SelectTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 39: SelectTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 40: SelectTest4.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 41: SelectTest5.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 42: SelectTest6.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 43: SelectTest7.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 44: SetTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 45: StreamToTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11083 DEBUG TestRunnerApplication  - Sub test 46: SubQueryTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11084 DEBUG TestRunnerApplication  - Sub test 47: WindowTest1.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11084 DEBUG TestRunnerApplication  - Sub test 48: WindowTest2.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11084 DEBUG TestRunnerApplication  - Sub test 49: WindowTest3.qry - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:107) 
11084 DEBUG TestRunnerApplication  - no components were added since 3ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
12089 DEBUG TestRunnerApplication  - no components were added since 5392ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
13091 DEBUG TestRunnerApplication  - no components were added since 6394ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
14094 DEBUG TestRunnerApplication  - no components were added since 7397ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
15095 DEBUG TestRunnerApplication  - no components were added since 8398ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
16096 DEBUG TestRunnerApplication  - no components were added since 9399ms. Waiting... main - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.executeComponents(TestRunnerApplication.java:122) 
17097 DEBUG TestRunnerApplication  - All tests were run. - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:74) 
17102 DEBUG TestRunnerApplication  -  Status                                                      Component      Time Error
--------------------------------------------------------------------------------------
     OK                                                CQL Parser Test    4329ms
--------------------------------------------------------------------------------------
-                     OK             CreateDatabaseConnectionTest1.qry     276ms
-                     OK                   CreateDatabaseSinkTest1.qry     368ms
-                     OK                 CreateDatabaseSourceTest1.qry      66ms
-                     OK                  CreateStreamFromFileTest.qry      28ms
-                     OK                          CreateStreamTest.qry     108ms
-                     OK           CreateStreamToDatabaseSinkTest1.qry     755ms
-                     OK                           CreateViewTest1.qry      38ms
-                     OK                               ExistsTest1.qry     126ms
-                     OK                               ExistsTest2.qry      79ms
-                     OK                               ExistsTest3.qry      85ms
-                     OK                       QuantificationTest1.qry      62ms
-                     OK                               RenameTest1.qry      58ms
-                     OK                               RenameTest2.qry     185ms
-                     OK                               RenameTest3.qry      43ms
-                     OK                               RenameTest4.qry      50ms
-                     OK                               RenameTest5.qry      55ms
-                     OK                               RenameTest6.qry      87ms
-                     OK                               RenameTest7.qry      92ms
-                     OK                    SelectAggregationTest1.qry      59ms
-                     OK                    SelectAggregationTest2.qry     161ms
-                     OK                    SelectAggregationTest3.qry      74ms
-                     OK                    SelectAggregationTest4.qry      39ms
-                     OK                    SelectAggregationTest5.qry      51ms
-                     OK                            SelectAllTest1.qry      60ms
-                     OK                            SelectAllTest2.qry      56ms
-                     OK                            SelectAllTest3.qry      71ms
-                     OK                            SelectAllTest4.qry      24ms
-                     OK                            SelectAllTest5.qry      56ms
-                     OK                            SelectAllTest6.qry      52ms
-                     OK                     SelectExpressionTest1.qry      31ms
-                     OK                     SelectExpressionTest2.qry      38ms
-                     OK                     SelectExpressionTest3.qry      60ms
-                     OK                     SelectExpressionTest4.qry      49ms
-                     OK                     SelectExpressionTest5.qry      66ms
-                     OK                     SelectExpressionTest6.qry      39ms
-                     OK                     SelectExpressionTest7.qry      53ms
-                     OK                               SelectTest1.qry      24ms
-                     OK                               SelectTest2.qry      23ms
-                     OK                               SelectTest3.qry      38ms
-                     OK                               SelectTest4.qry      69ms
-                     OK                               SelectTest5.qry      55ms
-                     OK                               SelectTest6.qry      28ms
-                     OK                               SelectTest7.qry      37ms
-                     OK                                  SetTest1.qry      53ms
-                     OK                             StreamToTest1.qry      65ms
-                     OK                             SubQueryTest1.qry      83ms
-                     OK                               WindowTest1.qry      52ms
-                     OK                               WindowTest2.qry      36ms
-                     OK                               WindowTest3.qry     104ms
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
     OK                                                                   4329ms 
 - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.printReports(TestRunnerApplication.java:205) 
17102 DEBUG TestRunnerApplication  - All tests finished with no errors. - de.uniol.inf.is.odysseus.test.runner.TestRunnerApplication.start(TestRunnerApplication.java:87) 
17154 DEBUG MEP  - Remove Function Provider: && - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17155 DEBUG MEP  - Remove Function Provider: || - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17155 DEBUG MEP  - Remove Function Provider: ! - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17155 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17156 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17156 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17156 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17156 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17156 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17156 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17156 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17157 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17157 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17157 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17157 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17157 DEBUG MEP  - Remove Function Provider: <= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17157 DEBUG MEP  - Remove Function Provider: <= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17157 DEBUG MEP  - Remove Function Provider: < - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17158 DEBUG MEP  - Remove Function Provider: < - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17158 DEBUG MEP  - Remove Function Provider: >= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17158 DEBUG MEP  - Remove Function Provider: >= - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17158 DEBUG MEP  - Remove Function Provider: > - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17158 DEBUG MEP  - Remove Function Provider: > - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17158 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17158 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17159 DEBUG MEP  - Remove Function Provider: toProbabilisticContinuousDouble - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17159 DEBUG MEP  - Remove Function Provider: toProbabilisticDiscreteDouble - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17159 DEBUG MEP  - Remove Function Provider: similarity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17159 DEBUG MEP  - Remove Function Provider: similarity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17159 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17159 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17159 DEBUG MEP  - Remove Function Provider: kl - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17159 DEBUG MEP  - Remove Function Provider: kl - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17160 DEBUG MEP  - Remove Function Provider: loglikelihood - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17160 DEBUG MEP  - Remove Function Provider: as2DVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17160 DEBUG MEP  - Remove Function Provider: as3DVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17160 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17160 DEBUG MEP  - Remove Function Provider: distance - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17160 DEBUG MEP  - Remove Function Provider: int - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17163 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17164 DEBUG MEP  - Remove Function Provider: path - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17164 DEBUG MEP  - Remove Function Provider: toKeyValue - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17164 DEBUG MEP  - Remove Function Provider: getElement - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17164 DEBUG MEP  - Remove Function Provider: getElements - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17178 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@2eb8ac11 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17178 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider@2eb8ac11 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17179 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.app.AppCommands@6a7331fb - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17179 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.app.AppCommands@6a7331fb - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17179 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@24102abb - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17179 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.report.console.ReportConsole@24102abb - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17179 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@5337ca1d - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17179 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.parser.pql.generator.PQLGeneratorConsole@5337ca1d - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17184 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@667c4449 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17185 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.core.internal.registry.osgi.RegistryCommandProvider@667c4449 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17186 DEBUG CommandProviderBinder  - Unbinding command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@5886bc79 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17186 DEBUG CommandProviderRegistry  - Unregistering command provider org.eclipse.equinox.internal.ds.SCRCommandProvider@5886bc79 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17186 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@6560cf36 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17187 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.core.server.console.OdysseusConsole@6560cf36 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17189 DEBUG CommandProviderBinder  - Unbinding command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@166a5d11 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderBinder.unbindCommandProvider(CommandProviderBinder.java:18) 
17189 DEBUG CommandProviderRegistry  - Unregistering command provider de.uniol.inf.is.odysseus.script.parser.console.OdysseusScriptConsole@166a5d11 - de.uniol.inf.is.odysseus.console.executor.impl.CommandProviderRegistry.unregister(CommandProviderRegistry.java:39) 
17203 DEBUG MEP  - Remove Function Provider: MDAIndex - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17203 DEBUG MEP  - Remove Function Provider: MDAIndices - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17203 DEBUG MEP  - Remove Function Provider: MDADim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17203 DEBUG MEP  - Remove Function Provider: MDAInit - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17204 DEBUG MEP  - Remove Function Provider: MDADrop - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17204 DEBUG MEP  - Remove Function Provider: MDAAddDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17204 DEBUG MEP  - Remove Function Provider: MDAAddDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17204 DEBUG MEP  - Remove Function Provider: MDARemoveDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17205 DEBUG MEP  - Remove Function Provider: MDAExchangeDim - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17206 DEBUG MEP  - Remove Function Provider: binomialTest - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17207 DEBUG VisitorService  - Removing visitor for CQL: de.uniol.inf.is.odysseus.context.cql.ContextVisitor - de.uniol.inf.is.odysseus.parser.cql.VisitorService.removeVisitor(VisitorService.java:54) 
17207 INFO  ExtensionFactory  - removed ContextParser for de.uniol.inf.is.odysseus.parser.novel.cql.server.CQLParser - de.uniol.inf.is.odysseus.parser.novel.cql.server.ExtensionFactory.removeExtension(ExtensionFactory.java:29) 
17208 INFO  ExtensionFactory  - removed DatabaseParser for de.uniol.inf.is.odysseus.parser.novel.cql.server.CQLParser - de.uniol.inf.is.odysseus.parser.novel.cql.server.ExtensionFactory.removeExtension(ExtensionFactory.java:29) 
17224 DEBUG StandardExecutor  - Removing all queries before shutdown - de.uniol.inf.is.odysseus.planmanagement.executor.standardexecutor.StandardExecutor.deactivate(StandardExecutor.java:151) 
17232 DEBUG MEP  - Remove Function Provider: ContextStore - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17234 DEBUG ruleengine  - Rewrite - Removing rules for... de.uniol.inf.is.odysseus.relational.rewrite.RuleProvider@32deb4b0 - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.unbindRuleProvider(AbstractInventory.java:218) 
17238 DEBUG ruleengine  - Rewrite - Removing rules for... de.uniol.inf.is.odysseus.server.intervalapproach.rewrite.RewriteRuleProvider@4297fd4 - de.uniol.inf.is.odysseus.ruleengine.ruleflow.AbstractInventory.unbindRuleProvider(AbstractInventory.java:218) 
17625 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
17625 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
17625 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
17625 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
17626 DEBUG SingleSchedulerManager  - SchedulingChanged false false - de.uniol.inf.is.odysseus.scheduler.manager.singleschedulermanager.SingleSchedulerManager.schedulingsChanged(SingleSchedulerManager.java:450) 
17631 DEBUG UserManagementProvider  - User management Memorystore removed - de.uniol.inf.is.odysseus.core.server.usermanagement.UserManagementProvider.unbindUserManagement(UserManagementProvider.java:134) 
17635 DEBUG MEP  - Remove Function Provider: retrieveQueryIDs - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17635 DEBUG MEP  - Remove Function Provider: filterQueryIDs - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17635 DEBUG MEP  - Remove Function Provider: QueryPriority - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17636 DEBUG MEP  - Remove Function Provider: IsACQuery - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17636 DEBUG MEP  - Remove Function Provider: QueryBasePriority - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17636 DEBUG MEP  - Remove Function Provider: QueryState - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17636 DEBUG MEP  - Remove Function Provider: QueryName - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17636 DEBUG MEP  - Remove Function Provider: QueryStartTS - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17636 DEBUG MEP  - Remove Function Provider: QueryLastStateChangeTS - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17636 DEBUG MEP  - Remove Function Provider: QuerySheddingFactor - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17637 DEBUG MEP  - Remove Function Provider: MaxSheddingFactor - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17637 DEBUG MEP  - Remove Function Provider: getSharedOpsCount - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17637 DEBUG MEP  - Remove Function Provider: getSourceCount - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17637 DEBUG MEP  - Remove Function Provider: kvread - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17637 DEBUG MEP  - Remove Function Provider: kvwrite - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17637 DEBUG MEP  - Remove Function Provider: kvremove - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17638 DEBUG MEP  - Remove Function Provider: DolToEur - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17638 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17638 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17638 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17638 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17638 DEBUG MEP  - Remove Function Provider: ^ - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17638 DEBUG MEP  - Remove Function Provider: union - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17638 DEBUG MEP  - Remove Function Provider: intersection - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17638 DEBUG MEP  - Remove Function Provider: difference - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17639 DEBUG MEP  - Remove Function Provider: toInterval - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17639 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17639 DEBUG MEP  - Remove Function Provider: get - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17639 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17639 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17639 DEBUG MEP  - Remove Function Provider: [] - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17639 DEBUG MEP  - Remove Function Provider: sub - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17640 DEBUG MEP  - Remove Function Provider: sub - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17640 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17640 DEBUG MEP  - Remove Function Provider: == - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17640 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17640 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17640 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17640 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17641 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17641 DEBUG MEP  - Remove Function Provider: + - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17641 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17641 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17641 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17641 DEBUG MEP  - Remove Function Provider: - - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17641 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17641 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17642 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17642 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17642 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17642 DEBUG MEP  - Remove Function Provider: * - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17642 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17642 DEBUG MEP  - Remove Function Provider: / - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17642 DEBUG MEP  - Remove Function Provider: ^ - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17642 DEBUG MEP  - Remove Function Provider: dotProduct - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17643 DEBUG MEP  - Remove Function Provider: dotProduct - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17643 DEBUG MEP  - Remove Function Provider: Min - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17643 DEBUG MEP  - Remove Function Provider: Min - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17643 DEBUG MEP  - Remove Function Provider: Max - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17643 DEBUG MEP  - Remove Function Provider: Max - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17643 DEBUG MEP  - Remove Function Provider: Count - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17643 DEBUG MEP  - Remove Function Provider: Count - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17643 DEBUG MEP  - Remove Function Provider: Sum - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17643 DEBUG MEP  - Remove Function Provider: Sum - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17643 DEBUG MEP  - Remove Function Provider: AVG - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17644 DEBUG MEP  - Remove Function Provider: AVG - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17644 DEBUG MEP  - Remove Function Provider: Median - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17644 DEBUG MEP  - Remove Function Provider: Median - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17644 DEBUG MEP  - Remove Function Provider: StdDev - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17644 DEBUG MEP  - Remove Function Provider: StdDev - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17644 DEBUG MEP  - Remove Function Provider: Var - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17644 DEBUG MEP  - Remove Function Provider: Var - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17644 DEBUG MEP  - Remove Function Provider: toVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17645 DEBUG MEP  - Remove Function Provider: toMatrix - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17645 DEBUG MEP  - Remove Function Provider: toString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17645 DEBUG MEP  - Remove Function Provider: toString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17645 DEBUG MEP  - Remove Function Provider: vectorFromString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17645 DEBUG MEP  - Remove Function Provider: vectorFromString - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17645 DEBUG MEP  - Remove Function Provider: readMatrix - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17645 DEBUG MEP  - Remove Function Provider: readVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17645 DEBUG MEP  - Remove Function Provider: readVector - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17646 DEBUG MEP  - Remove Function Provider: perms - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17646 DEBUG MEP  - Remove Function Provider: perm - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17646 DEBUG MEP  - Remove Function Provider: det - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17646 DEBUG MEP  - Remove Function Provider: tr - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17646 DEBUG MEP  - Remove Function Provider: trans - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17646 DEBUG MEP  - Remove Function Provider: inv - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17646 DEBUG MEP  - Remove Function Provider: identity - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17646 DEBUG MEP  - Remove Function Provider: zeros - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17646 DEBUG MEP  - Remove Function Provider: ones - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17647 DEBUG MEP  - Remove Function Provider: eig - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17647 DEBUG MEP  - Remove Function Provider: ieig - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
17647 DEBUG MEP  - Remove Function Provider: svd - de.uniol.inf.is.odysseus.mep.MEP.removeFunctionProvider(MEP.java:488) 
