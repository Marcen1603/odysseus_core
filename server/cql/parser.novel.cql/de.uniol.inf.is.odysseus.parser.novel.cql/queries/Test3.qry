#PARSER CQL
#RUNQUERY
CREATE VIEW view1 FROM(
	CREATE STREAM stream1 (id INTEGER, first_name STRING, last_name STRING, email STRING, gender STRING, ip_adress STRING)
	  WRAPPER 'GenericPull'
	  PROTOCOL 'CSV'
	  TRANSPORT 'File'
	  DATAHANDLER 'Tuple'
	  OPTIONS('readfirstline' 'false','filename' 'C:\\Users\\jp\\Documents\\repositories\\odysseus\\server\\cql\\parser.novel.cql\\de.uniol.inf.is.odysseus.parser.novel.cql\\queries\\data1.csv');
)
  
#PARSER CQL
#RUNQUERY
CREATE VIEW view2 FROM(
	CREATE STREAM stream1 (id2 INTEGER, first_name2 STRING, last_name2 STRING, email2 STRING, gender2 STRING, ip_adress2 STRING)
	  WRAPPER 'GenericPull'
	  PROTOCOL 'CSV'
	  TRANSPORT 'File'
	  DATAHANDLER 'Tuple'
	  OPTIONS('readfirstline' 'false','filename' 'C:\\Users\\jp\\Documents\\repositories\\odysseus\\server\\cql\\parser.novel.cql\\de.uniol.inf.is.odysseus.parser.novel.cql\\queries\\data1.csv');
) 
             
#PARSER PQL                
#RUNQUERY
join_1 = JOIN(TIMEWINDOW({size=[4, 'SECONDS'], advance=4}, view1), TIMEWINDOW({size=[1, 'SECONDS'], advance=4}, view2))
        
aggregation_2 = AGGREGATION({
                      aggregations=[
                        ['FUNCTION'='COUNT','INPUT_ATTRIBUTES'='id','OUTPUT_ATTRIBUTES'='Counter']
                      ]      
                    },
                    join_1
                  )  
                                    
proj_1 = PROJECT({
      attributes=['id2']  
    },
		join_1
  )      
              
result_1 = JOIN(proj_1, aggregation_2)
              
              