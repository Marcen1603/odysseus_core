/* Generated By:JJTree&JavaCC: Do not edit this line. NewSQLParserConstants.java */
package de.uniol.inf.is.odysseus.parser.cql.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface NewSQLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int K_ALL = 5;
  /** RegularExpression Id. */
  int K_ADD = 6;
  /** RegularExpression Id. */
  int K_ADVANCE = 7;
  /** RegularExpression Id. */
  int K_ALTER = 8;
  /** RegularExpression Id. */
  int K_ALWAYS = 9;
  /** RegularExpression Id. */
  int K_AND = 10;
  /** RegularExpression Id. */
  int K_ANY = 11;
  /** RegularExpression Id. */
  int K_AS = 12;
  /** RegularExpression Id. */
  int K_ASSIGN = 13;
  /** RegularExpression Id. */
  int K_AT = 14;
  /** RegularExpression Id. */
  int K_ATTACH = 15;
  /** RegularExpression Id. */
  int K_ATTRIBUTE = 16;
  /** RegularExpression Id. */
  int K_AUTO_RECONNECT = 17;
  /** RegularExpression Id. */
  int K_AVG = 18;
  /** RegularExpression Id. */
  int K_BROKER = 19;
  /** RegularExpression Id. */
  int K_BY = 20;
  /** RegularExpression Id. */
  int K_CHANNEL = 21;
  /** RegularExpression Id. */
  int K_CHECK = 22;
  /** RegularExpression Id. */
  int K_CONTEXT = 23;
  /** RegularExpression Id. */
  int K_COMMENT = 24;
  /** RegularExpression Id. */
  int K_CONNECTION = 25;
  /** RegularExpression Id. */
  int K_COUNT = 26;
  /** RegularExpression Id. */
  int K_CREATE = 27;
  /** RegularExpression Id. */
  int K_DATABASE = 28;
  /** RegularExpression Id. */
  int K_DATAHANDLER = 29;
  /** RegularExpression Id. */
  int K_DAY = 30;
  /** RegularExpression Id. */
  int K_DEFAULT = 31;
  /** RegularExpression Id. */
  int K_DELETE = 32;
  /** RegularExpression Id. */
  int K_DISTINCT = 33;
  /** RegularExpression Id. */
  int K_DETACH = 34;
  /** RegularExpression Id. */
  int K_DROP = 35;
  /** RegularExpression Id. */
  int K_EACH = 36;
  /** RegularExpression Id. */
  int K_EXISTS = 37;
  /** RegularExpression Id. */
  int K_FILE = 38;
  /** RegularExpression Id. */
  int K_FROM = 39;
  /** RegularExpression Id. */
  int K_GRANT = 40;
  /** RegularExpression Id. */
  int K_GROUP = 41;
  /** RegularExpression Id. */
  int K_HAVING = 42;
  /** RegularExpression Id. */
  int K_HOUR = 43;
  /** RegularExpression Id. */
  int K_IDENTIFIED = 44;
  /** RegularExpression Id. */
  int K_IF = 45;
  /** RegularExpression Id. */
  int K_IN = 46;
  /** RegularExpression Id. */
  int K_INFTY = 47;
  /** RegularExpression Id. */
  int K_INSERT = 48;
  /** RegularExpression Id. */
  int K_INTERSECTION = 49;
  /** RegularExpression Id. */
  int K_INTO = 50;
  /** RegularExpression Id. */
  int K_IS = 51;
  /** RegularExpression Id. */
  int K_JDBC = 52;
  /** RegularExpression Id. */
  int K_JOIN = 53;
  /** RegularExpression Id. */
  int K_KILL = 54;
  /** RegularExpression Id. */
  int K_KEY = 55;
  /** RegularExpression Id. */
  int K_LAZY_CONNECTION_CHECK = 56;
  /** RegularExpression Id. */
  int K_LIKE = 57;
  /** RegularExpression Id. */
  int K_LINEAR_STORE = 58;
  /** RegularExpression Id. */
  int K_LIST = 59;
  /** RegularExpression Id. */
  int K_LOGARITHMIC_STORE = 60;
  /** RegularExpression Id. */
  int K_LOGIN_REQUIRED = 61;
  /** RegularExpression Id. */
  int K_MATRIX = 62;
  /** RegularExpression Id. */
  int K_MAX = 63;
  /** RegularExpression Id. */
  int K_MAX_ADMISSION_COST_FACTOR = 64;
  /** RegularExpression Id. */
  int K_METADATA = 65;
  /** RegularExpression Id. */
  int K_METRIC = 66;
  /** RegularExpression Id. */
  int K_MILLISECOND = 67;
  /** RegularExpression Id. */
  int K_MIN = 68;
  /** RegularExpression Id. */
  int K_MINUS = 69;
  /** RegularExpression Id. */
  int K_MINUTE = 70;
  /** RegularExpression Id. */
  int K_MULTI = 71;
  /** RegularExpression Id. */
  int K_MV = 72;
  /** RegularExpression Id. */
  int K_NATURAL = 73;
  /** RegularExpression Id. */
  int K_NO_LAZY_CONNECTION_CHECK = 74;
  /** RegularExpression Id. */
  int K_NOT = 75;
  /** RegularExpression Id. */
  int K_NULL = 76;
  /** RegularExpression Id. */
  int K_OF = 77;
  /** RegularExpression Id. */
  int K_OFFSET = 78;
  /** RegularExpression Id. */
  int K_ON = 79;
  /** RegularExpression Id. */
  int K_OPTIONS = 80;
  /** RegularExpression Id. */
  int K_OR = 81;
  /** RegularExpression Id. */
  int K_PARTITION = 82;
  /** RegularExpression Id. */
  int K_PASSWORD = 83;
  /** RegularExpression Id. */
  int K_PENALTY = 84;
  /** RegularExpression Id. */
  int K_PRIORITY = 85;
  /** RegularExpression Id. */
  int K_PROB = 86;
  /** RegularExpression Id. */
  int K_PROTOCOL = 87;
  /** RegularExpression Id. */
  int K_QUEUE = 88;
  /** RegularExpression Id. */
  int K_RANGE = 89;
  /** RegularExpression Id. */
  int K_RECORD = 90;
  /** RegularExpression Id. */
  int K_RELATION = 91;
  /** RegularExpression Id. */
  int K_RELATIVE = 92;
  /** RegularExpression Id. */
  int K_REMOVE = 93;
  /** RegularExpression Id. */
  int K_REVOKE = 94;
  /** RegularExpression Id. */
  int K_ROLE = 95;
  /** RegularExpression Id. */
  int K_ROWS = 96;
  /** RegularExpression Id. */
  int K_SCOPE = 97;
  /** RegularExpression Id. */
  int K_SECOND = 98;
  /** RegularExpression Id. */
  int K_SELECT = 99;
  /** RegularExpression Id. */
  int K_SENSOR = 100;
  /** RegularExpression Id. */
  int K_SERVICE_LEVEL = 101;
  /** RegularExpression Id. */
  int K_SET = 102;
  /** RegularExpression Id. */
  int K_SILAB = 103;
  /** RegularExpression Id. */
  int K_SINGLE = 104;
  /** RegularExpression Id. */
  int K_SINK = 105;
  /** RegularExpression Id. */
  int K_SIZE = 106;
  /** RegularExpression Id. */
  int K_SLA = 107;
  /** RegularExpression Id. */
  int K_SLIDE = 108;
  /** RegularExpression Id. */
  int K_SOCKET = 109;
  /** RegularExpression Id. */
  int K_STORE = 110;
  /** RegularExpression Id. */
  int K_STREAM = 111;
  /** RegularExpression Id. */
  int K_SUM = 112;
  /** RegularExpression Id. */
  int K_TABLE = 113;
  /** RegularExpression Id. */
  int K_TENANT = 114;
  /** RegularExpression Id. */
  int K_TIME = 115;
  /** RegularExpression Id. */
  int K_TIME_SENSITIV = 116;
  /** RegularExpression Id. */
  int K_TIMEOUT = 117;
  /** RegularExpression Id. */
  int K_TO = 118;
  /** RegularExpression Id. */
  int K_TRANSPORT = 119;
  /** RegularExpression Id. */
  int K_TRUNCATE = 120;
  /** RegularExpression Id. */
  int K_TUPLE = 121;
  /** RegularExpression Id. */
  int K_TYPE = 122;
  /** RegularExpression Id. */
  int K_UNBOUNDED = 123;
  /** RegularExpression Id. */
  int K_UNION = 124;
  /** RegularExpression Id. */
  int K_USE = 125;
  /** RegularExpression Id. */
  int K_USER = 126;
  /** RegularExpression Id. */
  int K_VALID = 127;
  /** RegularExpression Id. */
  int K_VIEW = 128;
  /** RegularExpression Id. */
  int K_WEEK = 129;
  /** RegularExpression Id. */
  int K_WHERE = 130;
  /** RegularExpression Id. */
  int K_WITH = 131;
  /** RegularExpression Id. */
  int K_WRAPPER = 132;
  /** RegularExpression Id. */
  int S_DISTANCE = 133;
  /** RegularExpression Id. */
  int S_COMPARE = 134;
  /** RegularExpression Id. */
  int S_POINT = 135;
  /** RegularExpression Id. */
  int S_LINE = 136;
  /** RegularExpression Id. */
  int S_POLYGON = 137;
  /** RegularExpression Id. */
  int S_MULTI_POINT = 138;
  /** RegularExpression Id. */
  int S_MULTI_LINE = 139;
  /** RegularExpression Id. */
  int S_MULTI_POLYGON = 140;
  /** RegularExpression Id. */
  int SPATIAL = 141;
  /** RegularExpression Id. */
  int FLOAT = 142;
  /** RegularExpression Id. */
  int INTEGER = 143;
  /** RegularExpression Id. */
  int DIGIT = 144;
  /** RegularExpression Id. */
  int IPADDRESS = 145;
  /** RegularExpression Id. */
  int LINE_COMMENT = 146;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 147;
  /** RegularExpression Id. */
  int JDBC_STRING = 148;
  /** RegularExpression Id. */
  int IDENTIFIER = 149;
  /** RegularExpression Id. */
  int LETTER = 150;
  /** RegularExpression Id. */
  int SPECIAL_CHARS = 151;
  /** RegularExpression Id. */
  int CHAR_LITERAL = 152;
  /** RegularExpression Id. */
  int SQL_STRING = 153;
  /** RegularExpression Id. */
  int QUOTED_IDENTIFIER = 154;
  /** RegularExpression Id. */
  int COMPARE_OPERATOR = 155;
  /** RegularExpression Id. */
  int REGEXP = 156;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\t\"",
    "\"ALL\"",
    "\"ADD\"",
    "\"ADVANCE\"",
    "\"ALTER\"",
    "\"ALWAYS\"",
    "\"AND\"",
    "\"ANY\"",
    "\"AS\"",
    "\"ASSIGN\"",
    "\"AT\"",
    "\"ATTACH\"",
    "\"ATTRIBUTE\"",
    "\"AUTORECONNECT\"",
    "\"AVG\"",
    "\"BROKER\"",
    "\"BY\"",
    "\"CHANNEL\"",
    "\"CHECK\"",
    "\"CONTEXT\"",
    "\"COMMENT\"",
    "\"CONNECTION\"",
    "\"COUNT\"",
    "\"CREATE\"",
    "\"DATABASE\"",
    "\"DATAHANDLER\"",
    "<K_DAY>",
    "\"DEFAULT\"",
    "\"DELETE\"",
    "\"DISTINCT\"",
    "\"DETACH\"",
    "\"DROP\"",
    "\"EACH\"",
    "\"EXISTS\"",
    "\"FILE\"",
    "\"FROM\"",
    "\"GRANT\"",
    "\"GROUP\"",
    "\"HAVING\"",
    "<K_HOUR>",
    "\"IDENTIFIED\"",
    "\"IF\"",
    "\"IN\"",
    "\"INFTY\"",
    "\"INSERT\"",
    "\"INTERSECT\"",
    "\"INTO\"",
    "\"IS\"",
    "\"JDBC\"",
    "\"JOIN\"",
    "\"KILL\"",
    "\"KEY\"",
    "\"LAZY_CONNECTION_CHECK\"",
    "\"LIKE\"",
    "\"LINEAR_STORE\"",
    "\"LIST\"",
    "\"LOGARITHMIC_STORE\"",
    "\"LOGIN_REQUIRED\"",
    "\"MATRIX\"",
    "\"MAX\"",
    "\"MAX_ADMISSION_COST_FACTOR\"",
    "\"METADATA\"",
    "\"METRIC\"",
    "<K_MILLISECOND>",
    "\"MIN\"",
    "\"MINUS\"",
    "<K_MINUTE>",
    "\"MULTI\"",
    "\"MV\"",
    "\"NATURAL\"",
    "\"NO_LAZY_CONNECTION_CHECK\"",
    "\"NOT\"",
    "\"NULL\"",
    "\"OF\"",
    "\"OFFSET\"",
    "\"ON\"",
    "\"OPTIONS\"",
    "\"OR\"",
    "\"PARTITION\"",
    "\"PASSWORD\"",
    "\"PENALTY\"",
    "\"PRIORITY\"",
    "\"PROB\"",
    "\"PROTOCOL\"",
    "\"QUEUE\"",
    "\"RANGE\"",
    "\"RECORD\"",
    "\"RELATION\"",
    "\"RELATIVE\"",
    "\"REMOVE\"",
    "\"REVOKE\"",
    "\"ROLE\"",
    "\"ROWS\"",
    "\"SCOPE\"",
    "<K_SECOND>",
    "\"SELECT\"",
    "\"SENSOR\"",
    "\"SERVICELEVEL\"",
    "\"SET\"",
    "\"SILAB\"",
    "\"SINGLE\"",
    "\"SINK\"",
    "\"SIZE\"",
    "\"SLA\"",
    "\"SLIDE\"",
    "\"SOCKET\"",
    "\"STORE\"",
    "\"STREAM\"",
    "\"SUM\"",
    "\"TABLE\"",
    "\"TENANT\"",
    "\"TIME\"",
    "\"TIMESENSITIV\"",
    "\"TIMEOUT\"",
    "\"TO\"",
    "\"TRANSPORT\"",
    "\"TRUNCATE\"",
    "\"TUPLE\"",
    "\"TYPE\"",
    "\"UNBOUNDED\"",
    "\"UNION\"",
    "\"USE\"",
    "\"USER\"",
    "\"VALID\"",
    "\"VIEW\"",
    "<K_WEEK>",
    "\"WHERE\"",
    "\"WITH\"",
    "\"WRAPPER\"",
    "\"SPATIAL_DISTANCE\"",
    "<S_COMPARE>",
    "\"SPATIAL_POINT\"",
    "\"SPATIAL_LINE\"",
    "\"SPATIAL_POLYGON\"",
    "\"SPATIAL_MULTI_POINT\"",
    "\"SPATIAL_MULTI_LINE\"",
    "\"SPATIAL_MULTI_POLYGON\"",
    "\"SPATIAL\"",
    "<FLOAT>",
    "<INTEGER>",
    "<DIGIT>",
    "<IPADDRESS>",
    "<LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "<JDBC_STRING>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<SPECIAL_CHARS>",
    "<CHAR_LITERAL>",
    "<SQL_STRING>",
    "<QUOTED_IDENTIFIER>",
    "<COMPARE_OPERATOR>",
    "<REGEXP>",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\":\"",
    "\"[\"",
    "\"-\"",
    "\"*\"",
    "\"]\"",
    "\"+\"",
    "\"/\"",
    "\"^\"",
  };

}
