/*
 * generated by Xtext 2.12.0
 */
package de.uniol.inf.is.odysseus.server.formatting2

import de.uniol.inf.is.odysseus.server.streamingsparql.Base
import de.uniol.inf.is.odysseus.server.streamingsparql.DatasetClause
import de.uniol.inf.is.odysseus.server.streamingsparql.Prefix
import de.uniol.inf.is.odysseus.server.streamingsparql.SelectQuery
import de.uniol.inf.is.odysseus.server.streamingsparql.Variable
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class StreamingsparqlFormatter extends AbstractFormatter2 {
	
//	@Inject extension StreamingsparqlGrammarAccess

	def dispatch void format(Base base, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		base.getIref.format;
	}

	def dispatch void format(SelectQuery selectQuery, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		selectQuery.getBase.format;
		for (Prefix prefix : selectQuery.getPrefixes()) {
			prefix.format;
		}
		for (DatasetClause datasetClause : selectQuery.getDatasetClauses()) {
			datasetClause.format;
		}
		for (Variable variable : selectQuery.getVariables()) {
			variable.format;
		}
		selectQuery.getWhereClause.format;
		selectQuery.getFilterclause.format;
		selectQuery.getAggregateClause.format;
		selectQuery.getFilesinkclause.format;
	}
	
	// TODO: implement for Aggregate, GroupBy, Aggregation, Filterclause, GroupClause, DatasetClause, WhereClause, InnerWhereClause, GroupGraphPatternSub, TriplesSameSubject, PropertyList, GraphNode, Variable, TypeTag
}
