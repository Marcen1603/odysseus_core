/*******************************************************************************
 * Copyright 2012 The Odysseus Team
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
/* Generated By:JJTree: Do not edit this line. ASTSelectQuery.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package de.uniol.inf.is.odysseus.sparql.parser.ast;

import java.util.ArrayList;
import java.util.List;

import de.uniol.inf.is.odysseus.rdf.datamodel.IRI;
import de.uniol.inf.is.odysseus.rdf.datamodel.Variable;
import de.uniol.inf.is.odysseus.sparql.parser.helper.Aggregation;
import de.uniol.inf.is.odysseus.sparql.parser.helper.SourceInfo;

public
class ASTSelectQuery extends SimpleNode {
  
	private boolean distinct;
	
	private boolean resultStar;

	private List<Variable> resultVars;
	private List<Aggregation> aggregations;
	/**
	 * This list contains at the i-th position
	 * a 0, if the i-th element in the result
	 * schema is a variable. It contains a 1 at
	 * the i-th position, if the element at the
	 * i-th position in the result schema is
	 * an aggregation. 
	 */
	private List<Integer> varOrAgg;
	
	private List<SourceInfo> defaultStreams;
	private List<SourceInfo> namedStreams;
	
	private String fileURL;
	
	public void setSources(){
		
	}
	
  public ASTSelectQuery(int id) {
    super(id);
    this.resultVars = new ArrayList<Variable>();
    this.aggregations = new ArrayList<Aggregation>();
    this.varOrAgg = new ArrayList<Integer>();
    this.defaultStreams = new ArrayList<SourceInfo>();
    this.namedStreams = new ArrayList<SourceInfo>();
  }
  
  /**
   * This method separates default and named streams.
   * @param sources The sources identified in a query.
   */
  public void setSources(List<SourceInfo> sources){
	  for(SourceInfo si: sources){
		  if(si.isDefaultStream()){
			  this.defaultStreams.add(si);
		  }
		  else{
			  this.namedStreams.add(si);
		  }
	  }
  }
  
  public List<SourceInfo> getDefaultStreams(){
	  return this.defaultStreams;
  }
  
  public List<SourceInfo> getNamedStreams(){
	  return this.namedStreams;
  }

  public ASTSelectQuery(SPARQLParser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  @Override
public Object jjtAccept(SPARQLParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
  
  public void setDistinct(boolean b){
	  this.distinct = b;
  }
  
  public boolean isDistinct(){
	  return this.distinct;
  }
  
  public void addResultVar(Variable var){
	  this.resultVars.add(var);
  }
  
  public List<Variable> getResultVars(){
	  return this.resultVars;
  }
  
  public void addAggregation(Aggregation agg){
	  this.aggregations.add(agg);
  }
  
  public List<Aggregation> getAggregations(){
	  return this.aggregations;
  }
  
  public void addVarOrAgg(int i){
	  this.varOrAgg.add(new Integer(i));
  }
  
  public int getOutputSchemaSize(){
	  return this.varOrAgg.size();
  }
  
  public int getVarOrAgg(int pos){
	  return this.varOrAgg.get(pos).intValue();
  }
  
	public boolean isResultStar() {
		return resultStar;
	}

	public void setResultStar(boolean resultStar) {
		this.resultStar = resultStar;
	}
	
	public void setFileURL(IRI fileURL){
		this.fileURL = fileURL.getIRI();
	}
	
	public String getFileURL(){
		return this.fileURL;
	}
}
/* JavaCC - OriginalChecksum=51571ae8cff8f308bace52d2de247751 (do not edit this line) */
