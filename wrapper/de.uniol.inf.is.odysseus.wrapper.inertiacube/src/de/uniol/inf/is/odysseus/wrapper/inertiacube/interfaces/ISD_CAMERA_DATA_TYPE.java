package de.uniol.inf.is.odysseus.wrapper.inertiacube.interfaces;
import com.ochafik.lang.jnaerator.runtime.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ISD_CAMERA_DATA_TYPE extends Structure<ISD_CAMERA_DATA_TYPE, ISD_CAMERA_DATA_TYPE.ByValue, ISD_CAMERA_DATA_TYPE.ByReference > {
	/** C type : ISD_CAMERA_ENCODER_DATA_TYPE[8] */
	public ISD_CAMERA_ENCODER_DATA_TYPE[] Camera = new ISD_CAMERA_ENCODER_DATA_TYPE[8];
	public ISD_CAMERA_DATA_TYPE() {
		super();
	}
	@Override
	protected List<? > getFieldOrder() {
		return Arrays.asList("Camera");
	}
	/** @param Camera C type : ISD_CAMERA_ENCODER_DATA_TYPE[8] */
	public ISD_CAMERA_DATA_TYPE(ISD_CAMERA_ENCODER_DATA_TYPE Camera[]) {
		super();
		if ((Camera.length != this.Camera.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.Camera = Camera;
	}
	@Override
	protected ByReference newByReference() { return new ByReference(); }
	@Override
	protected ByValue newByValue() { return new ByValue(); }
	@Override
	protected ISD_CAMERA_DATA_TYPE newInstance() { return new ISD_CAMERA_DATA_TYPE(); }
	public static ISD_CAMERA_DATA_TYPE[] newArray(int arrayLength) {
		return Structure.newArray(ISD_CAMERA_DATA_TYPE.class, arrayLength);
	}
	public static class ByReference extends ISD_CAMERA_DATA_TYPE implements Structure.ByReference {
		
	};
	public static class ByValue extends ISD_CAMERA_DATA_TYPE implements Structure.ByValue {
		
	};
}
