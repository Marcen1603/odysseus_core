/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.uniol.inf.is.odysseus.wrapper.baslercamera.swig;

public class BaslerCamera {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected BaslerCamera(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BaslerCamera obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        BaslerJavaJNI.delete_BaslerCamera(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    BaslerJavaJNI.BaslerCamera_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    BaslerJavaJNI.BaslerCamera_change_ownership(this, swigCPtr, true);
  }

  public BaslerCamera(String serialNumber) {
    this(BaslerJavaJNI.new_BaslerCamera(serialNumber), true);
    BaslerJavaJNI.BaslerCamera_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void start(BaslerCamera.OperationMode operationMode) throws java.lang.RuntimeException {
    BaslerJavaJNI.BaslerCamera_start(swigCPtr, this, operationMode.swigValue());
  }

  public void stop() {
    BaslerJavaJNI.BaslerCamera_stop(swigCPtr, this);
  }

  public boolean trigger() {
    return BaslerJavaJNI.BaslerCamera_trigger(swigCPtr, this);
  }

  public boolean grabRGB8(java.nio.ByteBuffer buffer, int lineLength, long timeOutMs) throws java.lang.RuntimeException {
    return BaslerJavaJNI.BaslerCamera_grabRGB8(swigCPtr, this, buffer, lineLength, timeOutMs);
  }

  public int getImageWidth() {
    return BaslerJavaJNI.BaslerCamera_getImageWidth(swigCPtr, this);
  }

  public int getImageHeight() {
    return BaslerJavaJNI.BaslerCamera_getImageHeight(swigCPtr, this);
  }

  public void onGrabbed(java.nio.ByteBuffer buffer) {
    if (getClass() == BaslerCamera.class) BaslerJavaJNI.BaslerCamera_onGrabbed(swigCPtr, this, buffer); else BaslerJavaJNI.BaslerCamera_onGrabbedSwigExplicitBaslerCamera(swigCPtr, this, buffer);
  }

  public static void initializeSystem() throws java.lang.RuntimeException {
    BaslerJavaJNI.BaslerCamera_initializeSystem();
  }

  public static void shutDownSystem() {
    BaslerJavaJNI.BaslerCamera_shutDownSystem();
  }

  public static boolean isSystemInitialized() {
    return BaslerJavaJNI.BaslerCamera_isSystemInitialized();
  }

  public final static class OperationMode {
    public final static BaslerCamera.OperationMode PUSH = new BaslerCamera.OperationMode("PUSH", BaslerJavaJNI.BaslerCamera_PUSH_get());
    public final static BaslerCamera.OperationMode PULL = new BaslerCamera.OperationMode("PULL");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static OperationMode swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + OperationMode.class + " with value " + swigValue);
    }

    private OperationMode(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private OperationMode(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private OperationMode(String swigName, OperationMode swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static OperationMode[] swigValues = { PUSH, PULL };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
