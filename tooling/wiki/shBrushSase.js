SyntaxHighlighter.brushes.Sase = function()
{
// Copyright 2014 Christian Kuka christian@kuka.cc

// SASE keywords
var keywords =	'ALT AND AS AT AVG COUNT CREATE DAY DAYS ENDS FALS HOUR HOURS LEN MAX MILLISECOND MILLISECONDS MIN MINUTE MINUTES PATTERN RETURN SECOND SECONDS SEQ SKIP_TILL_ANY_MATCH SKIP_TILL_NEXT_MATCH STREAM STRICT_CONTIGUITY SUM TRUE VIEW WEEK WEEKS WHERE WITHIN';

// SASE datatypes
var datatypes = 'ASSOCIATIONRULE BOOLEAN BYTE CLASSIFIER CORRPARTIALAGGREGATE DATE DOCUMENT DOUBLE FLOAT FREQUENTITEMSET INTEGER KEYVALUEOBJECT LONG MEDIANPARTIALAGGREGATE OBJECT PROBABILISTICBOOLEAN PROBABILISTICBYTE PROBABILISTICCONTINUOUSBYTE PROBABILISTICCONTINUOUSDOUBLE PROBABILISTICCONTINUOUSFLOAT PROBABILISTICCONTINUOUSINTEGER PROBABILISTICCONTINUOUSLONG PROBABILISTICCONTINUOUSPREDICATERESULT PROBABILISTICCONTINUOUSSHORT PROBABILISTICDOUBLE PROBABILISTICFLOAT PROBABILISTICINTEGER PROBABILISTICLONG PROBABILISTICSHORT PROBABILISTICSTRING PROBABILISTICTUPLE SHORT SPATIALGEOMETRY STDDEVPARTIALAGGREGATE STRING TIMESTAMP VECTORPROBABILISTICCONTINUOUSDOUBLE';

// Odysseus Script
var preprocessors = '#ADDQUERY #BUFFERPLACEMENT #CONFIG #DEFINE #DOQUERYSHARING #DOREWRITE #DROPALLQUERIES #DROPALLSINKS #DROPALLSOURCES #ENDIF #IF #IFDEF #IFNDEF #IFSRCDEF #IFSRCNDEF #INPUT #INCLUDE #LOGIN #LOGOUT #LOOP #METADATA #ODYSSEUS_PARAM #PRINT #PARSER #QName #QUERY #RELOADFROMLOG #RUNQUERY #SCHEDULER #SLEEP #STARTQUERIES #STARTSCHEDULER #STOPSCHEDULER #TRANSCFG #UNDEF';

this.regexList = [
{ regex: /\/\/\/(.*)$/gm, css: 'comments' },// comments
{ regex: SyntaxHighlighter.regexLib.multiLineDoubleQuotedString, css: 'string' },// double quoted strings
{ regex: SyntaxHighlighter.regexLib.multiLineSingleQuotedString, css: 'string' },// single quoted strings
{ regex: new RegExp(this.getKeywords(preprocessors), 'gm'), css: 'preprocessor' },// Odysseus Script
{ regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'color5' },// SASE keywords
{ regex: new RegExp(this.getKeywords(datatyps), 'gm'), css: 'color2' }// SASE datatypes
];
};

SyntaxHighlighter.brushes.Sase.prototype = new SyntaxHighlighter.Highlighter();
SyntaxHighlighter.brushes.Sase.aliases = ['Sase', 'sase'];
