
package de.uniol.inf.is.odysseus.sensors.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SensorService", targetNamespace = "http://sensors.odysseus.is.inf.uniol.de/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SensorService {


    /**
     * 
     * @param securityToken
     * @param name
     * @throws InvalidUserDataException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "removeSensor", targetNamespace = "http://sensors.odysseus.is.inf.uniol.de/", className = "de.uniol.inf.is.odysseus.sensors.client.RemoveSensor")
    @ResponseWrapper(localName = "removeSensorResponse", targetNamespace = "http://sensors.odysseus.is.inf.uniol.de/", className = "de.uniol.inf.is.odysseus.sensors.client.RemoveSensorResponse")
    @Action(input = "http://sensors.odysseus.is.inf.uniol.de/SensorService/removeSensorRequest", output = "http://sensors.odysseus.is.inf.uniol.de/SensorService/removeSensorResponse", fault = {
        @FaultAction(className = InvalidUserDataException_Exception.class, value = "http://sensors.odysseus.is.inf.uniol.de/SensorService/removeSensor/Fault/InvalidUserDataException")
    })
    public void removeSensor(
        @WebParam(name = "securityToken", targetNamespace = "")
        String securityToken,
        @WebParam(name = "name", targetNamespace = "")
        String name)
        throws InvalidUserDataException_Exception
    ;

    /**
     * 
     * @param securityToken
     * @param sensorXml
     * @return
     *     returns java.lang.String
     * @throws InvalidUserDataException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addSensor", targetNamespace = "http://sensors.odysseus.is.inf.uniol.de/", className = "de.uniol.inf.is.odysseus.sensors.client.AddSensor")
    @ResponseWrapper(localName = "addSensorResponse", targetNamespace = "http://sensors.odysseus.is.inf.uniol.de/", className = "de.uniol.inf.is.odysseus.sensors.client.AddSensorResponse")
    @Action(input = "http://sensors.odysseus.is.inf.uniol.de/SensorService/addSensorRequest", output = "http://sensors.odysseus.is.inf.uniol.de/SensorService/addSensorResponse", fault = {
        @FaultAction(className = InvalidUserDataException_Exception.class, value = "http://sensors.odysseus.is.inf.uniol.de/SensorService/addSensor/Fault/InvalidUserDataException")
    })
    public String addSensor(
        @WebParam(name = "securityToken", targetNamespace = "")
        String securityToken,
        @WebParam(name = "sensorXml", targetNamespace = "")
        String sensorXml)
        throws InvalidUserDataException_Exception
    ;

}
