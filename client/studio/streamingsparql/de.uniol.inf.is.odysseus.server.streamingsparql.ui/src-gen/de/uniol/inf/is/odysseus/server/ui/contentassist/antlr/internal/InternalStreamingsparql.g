/*
 * generated by Xtext
 */
grammar InternalStreamingsparql;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.uniol.inf.is.odysseus.server.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.uniol.inf.is.odysseus.server.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.uniol.inf.is.odysseus.server.services.StreamingsparqlGrammarAccess;

}

@parser::members {
 
 	private StreamingsparqlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(StreamingsparqlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSPARQLQuery
entryRuleSPARQLQuery 
:
{ before(grammarAccess.getSPARQLQueryRule()); }
	 ruleSPARQLQuery
{ after(grammarAccess.getSPARQLQueryRule()); } 
	 EOF 
;

// Rule SPARQLQuery
ruleSPARQLQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSPARQLQueryAccess().getSelectQueryParserRuleCall()); }
	ruleSelectQuery
{ after(grammarAccess.getSPARQLQueryAccess().getSelectQueryParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefix
entryRulePrefix 
:
{ before(grammarAccess.getPrefixRule()); }
	 rulePrefix
{ after(grammarAccess.getPrefixRule()); } 
	 EOF 
;

// Rule Prefix
rulePrefix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixAccess().getAlternatives()); }
(rule__Prefix__Alternatives)
{ after(grammarAccess.getPrefixAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnNamedPrefix
entryRuleUnNamedPrefix 
:
{ before(grammarAccess.getUnNamedPrefixRule()); }
	 ruleUnNamedPrefix
{ after(grammarAccess.getUnNamedPrefixRule()); } 
	 EOF 
;

// Rule UnNamedPrefix
ruleUnNamedPrefix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnNamedPrefixAccess().getGroup()); }
(rule__UnNamedPrefix__Group__0)
{ after(grammarAccess.getUnNamedPrefixAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBase
entryRuleBase 
:
{ before(grammarAccess.getBaseRule()); }
	 ruleBase
{ after(grammarAccess.getBaseRule()); } 
	 EOF 
;

// Rule Base
ruleBase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBaseAccess().getGroup()); }
(rule__Base__Group__0)
{ after(grammarAccess.getBaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectQuery
entryRuleSelectQuery 
:
{ before(grammarAccess.getSelectQueryRule()); }
	 ruleSelectQuery
{ after(grammarAccess.getSelectQueryRule()); } 
	 EOF 
;

// Rule SelectQuery
ruleSelectQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectQueryAccess().getGroup()); }
(rule__SelectQuery__Group__0)
{ after(grammarAccess.getSelectQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAggregate
entryRuleAggregate 
:
{ before(grammarAccess.getAggregateRule()); }
	 ruleAggregate
{ after(grammarAccess.getAggregateRule()); } 
	 EOF 
;

// Rule Aggregate
ruleAggregate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAggregateAccess().getGroup()); }
(rule__Aggregate__Group__0)
{ after(grammarAccess.getAggregateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroupBy
entryRuleGroupBy 
:
{ before(grammarAccess.getGroupByRule()); }
	 ruleGroupBy
{ after(grammarAccess.getGroupByRule()); } 
	 EOF 
;

// Rule GroupBy
ruleGroupBy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroupByAccess().getGroup()); }
(rule__GroupBy__Group__0)
{ after(grammarAccess.getGroupByAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAggregation
entryRuleAggregation 
:
{ before(grammarAccess.getAggregationRule()); }
	 ruleAggregation
{ after(grammarAccess.getAggregationRule()); } 
	 EOF 
;

// Rule Aggregation
ruleAggregation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAggregationAccess().getGroup()); }
(rule__Aggregation__Group__0)
{ after(grammarAccess.getAggregationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilesinkclause
entryRuleFilesinkclause 
:
{ before(grammarAccess.getFilesinkclauseRule()); }
	 ruleFilesinkclause
{ after(grammarAccess.getFilesinkclauseRule()); } 
	 EOF 
;

// Rule Filesinkclause
ruleFilesinkclause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilesinkclauseAccess().getGroup()); }
(rule__Filesinkclause__Group__0)
{ after(grammarAccess.getFilesinkclauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilterclause
entryRuleFilterclause 
:
{ before(grammarAccess.getFilterclauseRule()); }
	 ruleFilterclause
{ after(grammarAccess.getFilterclauseRule()); } 
	 EOF 
;

// Rule Filterclause
ruleFilterclause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilterclauseAccess().getGroup()); }
(rule__Filterclause__Group__0)
{ after(grammarAccess.getFilterclauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDatasetClause
entryRuleDatasetClause 
:
{ before(grammarAccess.getDatasetClauseRule()); }
	 ruleDatasetClause
{ after(grammarAccess.getDatasetClauseRule()); } 
	 EOF 
;

// Rule DatasetClause
ruleDatasetClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDatasetClauseAccess().getGroup()); }
(rule__DatasetClause__Group__0)
{ after(grammarAccess.getDatasetClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhereClause
entryRuleWhereClause 
:
{ before(grammarAccess.getWhereClauseRule()); }
	 ruleWhereClause
{ after(grammarAccess.getWhereClauseRule()); } 
	 EOF 
;

// Rule WhereClause
ruleWhereClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhereClauseAccess().getGroup()); }
(rule__WhereClause__Group__0)
{ after(grammarAccess.getWhereClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInnerWhereClause
entryRuleInnerWhereClause 
:
{ before(grammarAccess.getInnerWhereClauseRule()); }
	 ruleInnerWhereClause
{ after(grammarAccess.getInnerWhereClauseRule()); } 
	 EOF 
;

// Rule InnerWhereClause
ruleInnerWhereClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInnerWhereClauseAccess().getGroup()); }
(rule__InnerWhereClause__Group__0)
{ after(grammarAccess.getInnerWhereClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroupGraphPatternSub
entryRuleGroupGraphPatternSub 
:
{ before(grammarAccess.getGroupGraphPatternSubRule()); }
	 ruleGroupGraphPatternSub
{ after(grammarAccess.getGroupGraphPatternSubRule()); } 
	 EOF 
;

// Rule GroupGraphPatternSub
ruleGroupGraphPatternSub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroupGraphPatternSubAccess().getGroup()); }
(rule__GroupGraphPatternSub__Group__0)
{ after(grammarAccess.getGroupGraphPatternSubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTriplesSameSubject
entryRuleTriplesSameSubject 
:
{ before(grammarAccess.getTriplesSameSubjectRule()); }
	 ruleTriplesSameSubject
{ after(grammarAccess.getTriplesSameSubjectRule()); } 
	 EOF 
;

// Rule TriplesSameSubject
ruleTriplesSameSubject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTriplesSameSubjectAccess().getGroup()); }
(rule__TriplesSameSubject__Group__0)
{ after(grammarAccess.getTriplesSameSubjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyList
entryRulePropertyList 
:
{ before(grammarAccess.getPropertyListRule()); }
	 rulePropertyList
{ after(grammarAccess.getPropertyListRule()); } 
	 EOF 
;

// Rule PropertyList
rulePropertyList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyListAccess().getGroup()); }
(rule__PropertyList__Group__0)
{ after(grammarAccess.getPropertyListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGraphNode
entryRuleGraphNode 
:
{ before(grammarAccess.getGraphNodeRule()); }
	 ruleGraphNode
{ after(grammarAccess.getGraphNodeRule()); } 
	 EOF 
;

// Rule GraphNode
ruleGraphNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGraphNodeAccess().getAlternatives()); }
(rule__GraphNode__Alternatives)
{ after(grammarAccess.getGraphNodeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getAlternatives()); }
(rule__Variable__Alternatives)
{ after(grammarAccess.getVariableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnNamedVariable
entryRuleUnNamedVariable 
:
{ before(grammarAccess.getUnNamedVariableRule()); }
	 ruleUnNamedVariable
{ after(grammarAccess.getUnNamedVariableRule()); } 
	 EOF 
;

// Rule UnNamedVariable
ruleUnNamedVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnNamedVariableAccess().getGroup()); }
(rule__UnNamedVariable__Group__0)
{ after(grammarAccess.getUnNamedVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getGroup()); }
(rule__Property__Group__0)
{ after(grammarAccess.getPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIRI
entryRuleIRI 
:
{ before(grammarAccess.getIRIRule()); }
	 ruleIRI
{ after(grammarAccess.getIRIRule()); } 
	 EOF 
;

// Rule IRI
ruleIRI
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIRIAccess().getGroup()); }
(rule__IRI__Group__0)
{ after(grammarAccess.getIRIAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}








// Rule Operator
ruleOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
(rule__Operator__Alternatives)
{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Prefix__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAccess().getGroup_0()); }
(rule__Prefix__Group_0__0)
{ after(grammarAccess.getPrefixAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrefixAccess().getUnNamedPrefixParserRuleCall_1()); }
	ruleUnNamedPrefix
{ after(grammarAccess.getPrefixAccess().getUnNamedPrefixParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getMethodAssignment_0_0()); }
(rule__SelectQuery__MethodAssignment_0_0)
{ after(grammarAccess.getSelectQueryAccess().getMethodAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getSelectQueryAccess().getRUNQUERYKeyword_0_1()); }

	'#RUNQUERY' 

{ after(grammarAccess.getSelectQueryAccess().getRUNQUERYKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getIsDistinctAssignment_5_0()); }
(rule__SelectQuery__IsDistinctAssignment_5_0)
{ after(grammarAccess.getSelectQueryAccess().getIsDistinctAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getSelectQueryAccess().getIsReducedAssignment_5_1()); }
(rule__SelectQuery__IsReducedAssignment_5_1)
{ after(grammarAccess.getSelectQueryAccess().getIsReducedAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GraphNode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphNodeAccess().getVariableAssignment_0()); }
(rule__GraphNode__VariableAssignment_0)
{ after(grammarAccess.getGraphNodeAccess().getVariableAssignment_0()); }
)

    |(
{ before(grammarAccess.getGraphNodeAccess().getLiteralAssignment_1()); }
(rule__GraphNode__LiteralAssignment_1)
{ after(grammarAccess.getGraphNodeAccess().getLiteralAssignment_1()); }
)

    |(
{ before(grammarAccess.getGraphNodeAccess().getIriAssignment_2()); }
(rule__GraphNode__IriAssignment_2)
{ after(grammarAccess.getGraphNodeAccess().getIriAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getUnnamedAssignment_0()); }
(rule__Variable__UnnamedAssignment_0)
{ after(grammarAccess.getVariableAccess().getUnnamedAssignment_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getPropertyAssignment_1()); }
(rule__Variable__PropertyAssignment_1)
{ after(grammarAccess.getVariableAccess().getPropertyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getLessThenEnumLiteralDeclaration_0()); }
(	'<' 
)
{ after(grammarAccess.getOperatorAccess().getLessThenEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getGreaterThenEnumLiteralDeclaration_1()); }
(	'>' 
)
{ after(grammarAccess.getOperatorAccess().getGreaterThenEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLessEqualEnumLiteralDeclaration_2()); }
(	'<=' 
)
{ after(grammarAccess.getOperatorAccess().getLessEqualEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getGreaterEqualEnumLiteralDeclaration_3()); }
(	'>=' 
)
{ after(grammarAccess.getOperatorAccess().getGreaterEqualEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getEqualEnumLiteralDeclaration_4()); }
(	'=' 
)
{ after(grammarAccess.getOperatorAccess().getEqualEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getNotEqualEnumLiteralDeclaration_5()); }
(	'!=' 
)
{ after(grammarAccess.getOperatorAccess().getNotEqualEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getSumEnumLiteralDeclaration_6()); }
(	'+' 
)
{ after(grammarAccess.getOperatorAccess().getSumEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getDivEnumLiteralDeclaration_7()); }
(	'/' 
)
{ after(grammarAccess.getOperatorAccess().getDivEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getSubEnumLiteralDeclaration_8()); }
(	'-' 
)
{ after(grammarAccess.getOperatorAccess().getSubEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getMultiplicityEnumLiteralDeclaration_9()); }
(	'*' 
)
{ after(grammarAccess.getOperatorAccess().getMultiplicityEnumLiteralDeclaration_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Prefix__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefix__Group_0__0__Impl
	rule__Prefix__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAccess().getPREFIXKeyword_0_0()); }

	'PREFIX' 

{ after(grammarAccess.getPrefixAccess().getPREFIXKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Prefix__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefix__Group_0__1__Impl
	rule__Prefix__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAccess().getNameAssignment_0_1()); }
(rule__Prefix__NameAssignment_0_1)
{ after(grammarAccess.getPrefixAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Prefix__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefix__Group_0__2__Impl
	rule__Prefix__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAccess().getColonKeyword_0_2()); }

	':' 

{ after(grammarAccess.getPrefixAccess().getColonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Prefix__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Prefix__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAccess().getIrefAssignment_0_3()); }
(rule__Prefix__IrefAssignment_0_3)
{ after(grammarAccess.getPrefixAccess().getIrefAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnNamedPrefix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnNamedPrefix__Group__0__Impl
	rule__UnNamedPrefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnNamedPrefix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnNamedPrefixAccess().getPREFIXKeyword_0()); }

	'PREFIX' 

{ after(grammarAccess.getUnNamedPrefixAccess().getPREFIXKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnNamedPrefix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnNamedPrefix__Group__1__Impl
	rule__UnNamedPrefix__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnNamedPrefix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnNamedPrefixAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getUnNamedPrefixAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnNamedPrefix__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnNamedPrefix__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnNamedPrefix__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnNamedPrefixAccess().getIrefAssignment_2()); }
(rule__UnNamedPrefix__IrefAssignment_2)
{ after(grammarAccess.getUnNamedPrefixAccess().getIrefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Base__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Base__Group__0__Impl
	rule__Base__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Base__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseAccess().getBASEKeyword_0()); }

	'BASE' 

{ after(grammarAccess.getBaseAccess().getBASEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Base__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Base__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Base__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseAccess().getIrefAssignment_1()); }
(rule__Base__IrefAssignment_1)
{ after(grammarAccess.getBaseAccess().getIrefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectQuery__Group__0__Impl
	rule__SelectQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getAlternatives_0()); }
(rule__SelectQuery__Alternatives_0)?
{ after(grammarAccess.getSelectQueryAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectQuery__Group__1__Impl
	rule__SelectQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getBaseAssignment_1()); }
(rule__SelectQuery__BaseAssignment_1)?
{ after(grammarAccess.getSelectQueryAccess().getBaseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectQuery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectQuery__Group__2__Impl
	rule__SelectQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getPrefixesAssignment_2()); }
(rule__SelectQuery__PrefixesAssignment_2)*
{ after(grammarAccess.getSelectQueryAccess().getPrefixesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectQuery__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectQuery__Group__3__Impl
	rule__SelectQuery__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getDatasetClausesAssignment_3()); }
(rule__SelectQuery__DatasetClausesAssignment_3)*
{ after(grammarAccess.getSelectQueryAccess().getDatasetClausesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectQuery__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectQuery__Group__4__Impl
	rule__SelectQuery__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getSELECTKeyword_4()); }

	'SELECT' 

{ after(grammarAccess.getSelectQueryAccess().getSELECTKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectQuery__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectQuery__Group__5__Impl
	rule__SelectQuery__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getAlternatives_5()); }
(rule__SelectQuery__Alternatives_5)?
{ after(grammarAccess.getSelectQueryAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectQuery__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectQuery__Group__6__Impl
	rule__SelectQuery__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getVariablesAssignment_6()); }
(rule__SelectQuery__VariablesAssignment_6)
{ after(grammarAccess.getSelectQueryAccess().getVariablesAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectQuery__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectQuery__Group__7__Impl
	rule__SelectQuery__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getVariablesAssignment_7()); }
(rule__SelectQuery__VariablesAssignment_7)*
{ after(grammarAccess.getSelectQueryAccess().getVariablesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectQuery__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectQuery__Group__8__Impl
	rule__SelectQuery__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getWhereClauseAssignment_8()); }
(rule__SelectQuery__WhereClauseAssignment_8)
{ after(grammarAccess.getSelectQueryAccess().getWhereClauseAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectQuery__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectQuery__Group__9__Impl
	rule__SelectQuery__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getFilterclauseAssignment_9()); }
(rule__SelectQuery__FilterclauseAssignment_9)?
{ after(grammarAccess.getSelectQueryAccess().getFilterclauseAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectQuery__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectQuery__Group__10__Impl
	rule__SelectQuery__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getAggregateClauseAssignment_10()); }
(rule__SelectQuery__AggregateClauseAssignment_10)?
{ after(grammarAccess.getSelectQueryAccess().getAggregateClauseAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectQuery__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectQuery__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getFilesinkclauseAssignment_11()); }
(rule__SelectQuery__FilesinkclauseAssignment_11)?
{ after(grammarAccess.getSelectQueryAccess().getFilesinkclauseAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__Aggregate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__0__Impl
	rule__Aggregate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getAGGREGATEKeyword_0()); }

	'AGGREGATE(' 

{ after(grammarAccess.getAggregateAccess().getAGGREGATEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__1__Impl
	rule__Aggregate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getGroup_1()); }
(rule__Aggregate__Group_1__0)?
{ after(grammarAccess.getAggregateAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__2__Impl
	rule__Aggregate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getGroup_2()); }
(rule__Aggregate__Group_2__0)?
{ after(grammarAccess.getAggregateAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getAggregateAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Aggregate__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group_1__0__Impl
	rule__Aggregate__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getAggregationsKeyword_1_0()); }

	'aggregations = [' 

{ after(grammarAccess.getAggregateAccess().getAggregationsKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group_1__1__Impl
	rule__Aggregate__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getAggregationsAssignment_1_1()); }
(rule__Aggregate__AggregationsAssignment_1_1)*
{ after(grammarAccess.getAggregateAccess().getAggregationsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getAggregateAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Aggregate__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group_2__0__Impl
	rule__Aggregate__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getCommaKeyword_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getAggregateAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getGroupbyAssignment_2_1()); }
(rule__Aggregate__GroupbyAssignment_2_1)
{ after(grammarAccess.getAggregateAccess().getGroupbyAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GroupBy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupBy__Group__0__Impl
	rule__GroupBy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByAccess().getGroup_byKeyword_0()); }

	'group_by=[' 

{ after(grammarAccess.getGroupByAccess().getGroup_byKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupBy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupBy__Group__1__Impl
	rule__GroupBy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByAccess().getVariablesAssignment_1()); }
(rule__GroupBy__VariablesAssignment_1)
{ after(grammarAccess.getGroupByAccess().getVariablesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupBy__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupBy__Group__2__Impl
	rule__GroupBy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByAccess().getGroup_2()); }
(rule__GroupBy__Group_2__0)*
{ after(grammarAccess.getGroupByAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupBy__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupBy__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getGroupByAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GroupBy__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupBy__Group_2__0__Impl
	rule__GroupBy__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getGroupByAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupBy__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupBy__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByAccess().getVariablesAssignment_2_1()); }
(rule__GroupBy__VariablesAssignment_2_1)
{ after(grammarAccess.getGroupByAccess().getVariablesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Aggregation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregation__Group__0__Impl
	rule__Aggregation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getAggregationAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregation__Group__1__Impl
	rule__Aggregation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getFunctionAssignment_1()); }
(rule__Aggregation__FunctionAssignment_1)
{ after(grammarAccess.getAggregationAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregation__Group__2__Impl
	rule__Aggregation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getAggregationAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregation__Group__3__Impl
	rule__Aggregation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getVarToAggAssignment_3()); }
(rule__Aggregation__VarToAggAssignment_3)
{ after(grammarAccess.getAggregationAccess().getVarToAggAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregation__Group__4__Impl
	rule__Aggregation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getAggregationAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregation__Group__5__Impl
	rule__Aggregation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getAggNameAssignment_5()); }
(rule__Aggregation__AggNameAssignment_5)
{ after(grammarAccess.getAggregationAccess().getAggNameAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregation__Group__6__Impl
	rule__Aggregation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getGroup_6()); }
(rule__Aggregation__Group_6__0)?
{ after(grammarAccess.getAggregationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregation__Group__7__Impl
	rule__Aggregation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getRightSquareBracketKeyword_7()); }

	']' 

{ after(grammarAccess.getAggregationAccess().getRightSquareBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregation__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getCommaKeyword_8()); }
(
	',' 
)?
{ after(grammarAccess.getAggregationAccess().getCommaKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Aggregation__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregation__Group_6__0__Impl
	rule__Aggregation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getAggregationAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregation__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getDatatypeAssignment_6_1()); }
(rule__Aggregation__DatatypeAssignment_6_1)
{ after(grammarAccess.getAggregationAccess().getDatatypeAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Filesinkclause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Filesinkclause__Group__0__Impl
	rule__Filesinkclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Filesinkclause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilesinkclauseAccess().getCSVFILESINKKeyword_0()); }

	'CSVFILESINK(' 

{ after(grammarAccess.getFilesinkclauseAccess().getCSVFILESINKKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Filesinkclause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Filesinkclause__Group__1__Impl
	rule__Filesinkclause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Filesinkclause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilesinkclauseAccess().getPathAssignment_1()); }
(rule__Filesinkclause__PathAssignment_1)
{ after(grammarAccess.getFilesinkclauseAccess().getPathAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Filesinkclause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Filesinkclause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Filesinkclause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilesinkclauseAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getFilesinkclauseAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Filterclause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Filterclause__Group__0__Impl
	rule__Filterclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Filterclause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterclauseAccess().getFILTERKeyword_0()); }

	'FILTER(' 

{ after(grammarAccess.getFilterclauseAccess().getFILTERKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Filterclause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Filterclause__Group__1__Impl
	rule__Filterclause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Filterclause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterclauseAccess().getLeftAssignment_1()); }
(rule__Filterclause__LeftAssignment_1)
{ after(grammarAccess.getFilterclauseAccess().getLeftAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Filterclause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Filterclause__Group__2__Impl
	rule__Filterclause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Filterclause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterclauseAccess().getOperatorAssignment_2()); }
(rule__Filterclause__OperatorAssignment_2)
{ after(grammarAccess.getFilterclauseAccess().getOperatorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Filterclause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Filterclause__Group__3__Impl
	rule__Filterclause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Filterclause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterclauseAccess().getRightAssignment_3()); }
(rule__Filterclause__RightAssignment_3)
{ after(grammarAccess.getFilterclauseAccess().getRightAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Filterclause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Filterclause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Filterclause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterclauseAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFilterclauseAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__DatasetClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group__0__Impl
	rule__DatasetClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getFROMKeyword_0()); }

	'FROM' 

{ after(grammarAccess.getDatasetClauseAccess().getFROMKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatasetClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group__1__Impl
	rule__DatasetClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getDataSetAssignment_1()); }
(rule__DatasetClause__DataSetAssignment_1)
{ after(grammarAccess.getDatasetClauseAccess().getDataSetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatasetClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group__2__Impl
	rule__DatasetClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getASKeyword_2()); }

	'AS' 

{ after(grammarAccess.getDatasetClauseAccess().getASKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatasetClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group__3__Impl
	rule__DatasetClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getNameAssignment_3()); }
(rule__DatasetClause__NameAssignment_3)
{ after(grammarAccess.getDatasetClauseAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatasetClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getGroup_4()); }
(rule__DatasetClause__Group_4__0)?
{ after(grammarAccess.getDatasetClauseAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DatasetClause__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group_4__0__Impl
	rule__DatasetClause__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getTYPEKeyword_4_0()); }

	'[TYPE ' 

{ after(grammarAccess.getDatasetClauseAccess().getTYPEKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatasetClause__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group_4__1__Impl
	rule__DatasetClause__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getTypeAssignment_4_1()); }
(rule__DatasetClause__TypeAssignment_4_1)
{ after(grammarAccess.getDatasetClauseAccess().getTypeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatasetClause__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group_4__2__Impl
	rule__DatasetClause__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getSIZEKeyword_4_2()); }

	'SIZE ' 

{ after(grammarAccess.getDatasetClauseAccess().getSIZEKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatasetClause__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group_4__3__Impl
	rule__DatasetClause__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getSizeAssignment_4_3()); }
(rule__DatasetClause__SizeAssignment_4_3)
{ after(grammarAccess.getDatasetClauseAccess().getSizeAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatasetClause__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group_4__4__Impl
	rule__DatasetClause__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getGroup_4_4()); }
(rule__DatasetClause__Group_4_4__0)?
{ after(grammarAccess.getDatasetClauseAccess().getGroup_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatasetClause__Group_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group_4__5__Impl
	rule__DatasetClause__Group_4__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getGroup_4_5()); }
(rule__DatasetClause__Group_4_5__0)?
{ after(grammarAccess.getDatasetClauseAccess().getGroup_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatasetClause__Group_4__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group_4__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group_4__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getRightSquareBracketKeyword_4_6()); }

	']' 

{ after(grammarAccess.getDatasetClauseAccess().getRightSquareBracketKeyword_4_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__DatasetClause__Group_4_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group_4_4__0__Impl
	rule__DatasetClause__Group_4_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group_4_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getADVANCEKeyword_4_4_0()); }

	'ADVANCE' 

{ after(grammarAccess.getDatasetClauseAccess().getADVANCEKeyword_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatasetClause__Group_4_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group_4_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group_4_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getAdvanceAssignment_4_4_1()); }
(rule__DatasetClause__AdvanceAssignment_4_4_1)
{ after(grammarAccess.getDatasetClauseAccess().getAdvanceAssignment_4_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DatasetClause__Group_4_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group_4_5__0__Impl
	rule__DatasetClause__Group_4_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group_4_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getUNITKeyword_4_5_0()); }

	'UNIT ' 

{ after(grammarAccess.getDatasetClauseAccess().getUNITKeyword_4_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatasetClause__Group_4_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatasetClause__Group_4_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__Group_4_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getUnitAssignment_4_5_1()); }
(rule__DatasetClause__UnitAssignment_4_5_1)
{ after(grammarAccess.getDatasetClauseAccess().getUnitAssignment_4_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WhereClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereClause__Group__0__Impl
	rule__WhereClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereClauseAccess().getWHEREKeyword_0()); }

	'WHERE' 

{ after(grammarAccess.getWhereClauseAccess().getWHEREKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhereClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereClause__Group__1__Impl
	rule__WhereClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereClauseAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getWhereClauseAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhereClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereClause__Group__2__Impl
	rule__WhereClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWhereClauseAccess().getWhereclausesAssignment_2()); }
(rule__WhereClause__WhereclausesAssignment_2)
{ after(grammarAccess.getWhereClauseAccess().getWhereclausesAssignment_2()); }
)
(
{ before(grammarAccess.getWhereClauseAccess().getWhereclausesAssignment_2()); }
(rule__WhereClause__WhereclausesAssignment_2)*
{ after(grammarAccess.getWhereClauseAccess().getWhereclausesAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhereClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereClauseAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getWhereClauseAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InnerWhereClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InnerWhereClause__Group__0__Impl
	rule__InnerWhereClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerWhereClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInnerWhereClauseAccess().getNameAssignment_0()); }
(rule__InnerWhereClause__NameAssignment_0)
{ after(grammarAccess.getInnerWhereClauseAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InnerWhereClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InnerWhereClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerWhereClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInnerWhereClauseAccess().getGroupGraphPatternAssignment_1()); }
(rule__InnerWhereClause__GroupGraphPatternAssignment_1)
{ after(grammarAccess.getInnerWhereClauseAccess().getGroupGraphPatternAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GroupGraphPatternSub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupGraphPatternSub__Group__0__Impl
	rule__GroupGraphPatternSub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupGraphPatternSub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupGraphPatternSubAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getGroupGraphPatternSubAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupGraphPatternSub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupGraphPatternSub__Group__1__Impl
	rule__GroupGraphPatternSub__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupGraphPatternSub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupGraphPatternSubAccess().getGraphPatternsAssignment_1()); }
(rule__GroupGraphPatternSub__GraphPatternsAssignment_1)
{ after(grammarAccess.getGroupGraphPatternSubAccess().getGraphPatternsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupGraphPatternSub__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupGraphPatternSub__Group__2__Impl
	rule__GroupGraphPatternSub__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupGraphPatternSub__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupGraphPatternSubAccess().getGroup_2()); }
(rule__GroupGraphPatternSub__Group_2__0)*
{ after(grammarAccess.getGroupGraphPatternSubAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupGraphPatternSub__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupGraphPatternSub__Group__3__Impl
	rule__GroupGraphPatternSub__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupGraphPatternSub__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupGraphPatternSubAccess().getFullStopKeyword_3()); }
(
	'.' 
)?
{ after(grammarAccess.getGroupGraphPatternSubAccess().getFullStopKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupGraphPatternSub__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupGraphPatternSub__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupGraphPatternSub__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupGraphPatternSubAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getGroupGraphPatternSubAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__GroupGraphPatternSub__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupGraphPatternSub__Group_2__0__Impl
	rule__GroupGraphPatternSub__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupGraphPatternSub__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupGraphPatternSubAccess().getFullStopKeyword_2_0()); }

	'.' 

{ after(grammarAccess.getGroupGraphPatternSubAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupGraphPatternSub__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupGraphPatternSub__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupGraphPatternSub__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupGraphPatternSubAccess().getGraphPatternsAssignment_2_1()); }
(rule__GroupGraphPatternSub__GraphPatternsAssignment_2_1)
{ after(grammarAccess.getGroupGraphPatternSubAccess().getGraphPatternsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TriplesSameSubject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriplesSameSubject__Group__0__Impl
	rule__TriplesSameSubject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TriplesSameSubject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriplesSameSubjectAccess().getSubjectAssignment_0()); }
(rule__TriplesSameSubject__SubjectAssignment_0)
{ after(grammarAccess.getTriplesSameSubjectAccess().getSubjectAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriplesSameSubject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriplesSameSubject__Group__1__Impl
	rule__TriplesSameSubject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TriplesSameSubject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriplesSameSubjectAccess().getPropertyListAssignment_1()); }
(rule__TriplesSameSubject__PropertyListAssignment_1)
{ after(grammarAccess.getTriplesSameSubjectAccess().getPropertyListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriplesSameSubject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriplesSameSubject__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TriplesSameSubject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriplesSameSubjectAccess().getGroup_2()); }
(rule__TriplesSameSubject__Group_2__0)*
{ after(grammarAccess.getTriplesSameSubjectAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TriplesSameSubject__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriplesSameSubject__Group_2__0__Impl
	rule__TriplesSameSubject__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TriplesSameSubject__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriplesSameSubjectAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getTriplesSameSubjectAccess().getSemicolonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriplesSameSubject__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriplesSameSubject__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TriplesSameSubject__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriplesSameSubjectAccess().getPropertyListAssignment_2_1()); }
(rule__TriplesSameSubject__PropertyListAssignment_2_1)
{ after(grammarAccess.getTriplesSameSubjectAccess().getPropertyListAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyList__Group__0__Impl
	rule__PropertyList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyListAccess().getPropertyAssignment_0()); }
(rule__PropertyList__PropertyAssignment_0)
{ after(grammarAccess.getPropertyListAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyListAccess().getObjectAssignment_1()); }
(rule__PropertyList__ObjectAssignment_1)
{ after(grammarAccess.getPropertyListAccess().getObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnNamedVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnNamedVariable__Group__0__Impl
	rule__UnNamedVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnNamedVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnNamedVariableAccess().getQuestionMarkKeyword_0()); }

	'?' 

{ after(grammarAccess.getUnNamedVariableAccess().getQuestionMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnNamedVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnNamedVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnNamedVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnNamedVariableAccess().getNameAssignment_1()); }
(rule__UnNamedVariable__NameAssignment_1)
{ after(grammarAccess.getUnNamedVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getPrefixAssignment_0()); }
(rule__Property__PrefixAssignment_0)
{ after(grammarAccess.getPropertyAccess().getPrefixAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getPropertyAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameAssignment_2()); }
(rule__Property__NameAssignment_2)
{ after(grammarAccess.getPropertyAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IRI__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IRI__Group__0__Impl
	rule__IRI__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IRI__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIRIAccess().getIRIAction_0()); }
(

)
{ after(grammarAccess.getIRIAccess().getIRIAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IRI__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IRI__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IRI__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIRIAccess().getValueAssignment_1()); }
(rule__IRI__ValueAssignment_1)
{ after(grammarAccess.getIRIAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Prefix__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getPrefixAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__IrefAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixAccess().getIrefIRI_TERMINALTerminalRuleCall_0_3_0()); }
	RULE_IRI_TERMINAL{ after(grammarAccess.getPrefixAccess().getIrefIRI_TERMINALTerminalRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnNamedPrefix__IrefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnNamedPrefixAccess().getIrefIRI_TERMINALTerminalRuleCall_2_0()); }
	RULE_IRI_TERMINAL{ after(grammarAccess.getUnNamedPrefixAccess().getIrefIRI_TERMINALTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Base__IrefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseAccess().getIrefIRIParserRuleCall_1_0()); }
	ruleIRI{ after(grammarAccess.getBaseAccess().getIrefIRIParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__MethodAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getMethodADDQUERYKeyword_0_0_0()); }
(
{ before(grammarAccess.getSelectQueryAccess().getMethodADDQUERYKeyword_0_0_0()); }

	'#ADDQUERY' 

{ after(grammarAccess.getSelectQueryAccess().getMethodADDQUERYKeyword_0_0_0()); }
)

{ after(grammarAccess.getSelectQueryAccess().getMethodADDQUERYKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__BaseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getBaseBaseParserRuleCall_1_0()); }
	ruleBase{ after(grammarAccess.getSelectQueryAccess().getBaseBaseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__PrefixesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getPrefixesPrefixParserRuleCall_2_0()); }
	rulePrefix{ after(grammarAccess.getSelectQueryAccess().getPrefixesPrefixParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__DatasetClausesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getDatasetClausesDatasetClauseParserRuleCall_3_0()); }
	ruleDatasetClause{ after(grammarAccess.getSelectQueryAccess().getDatasetClausesDatasetClauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__IsDistinctAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getIsDistinctDISTINCTKeyword_5_0_0()); }
(
{ before(grammarAccess.getSelectQueryAccess().getIsDistinctDISTINCTKeyword_5_0_0()); }

	'DISTINCT' 

{ after(grammarAccess.getSelectQueryAccess().getIsDistinctDISTINCTKeyword_5_0_0()); }
)

{ after(grammarAccess.getSelectQueryAccess().getIsDistinctDISTINCTKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__IsReducedAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getIsReducedREDUCEDKeyword_5_1_0()); }
(
{ before(grammarAccess.getSelectQueryAccess().getIsReducedREDUCEDKeyword_5_1_0()); }

	'REDUCED' 

{ after(grammarAccess.getSelectQueryAccess().getIsReducedREDUCEDKeyword_5_1_0()); }
)

{ after(grammarAccess.getSelectQueryAccess().getIsReducedREDUCEDKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__VariablesAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getVariablesVariableParserRuleCall_6_0()); }
	ruleVariable{ after(grammarAccess.getSelectQueryAccess().getVariablesVariableParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__VariablesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getVariablesVariableParserRuleCall_7_0()); }
	ruleVariable{ after(grammarAccess.getSelectQueryAccess().getVariablesVariableParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__WhereClauseAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getWhereClauseWhereClauseParserRuleCall_8_0()); }
	ruleWhereClause{ after(grammarAccess.getSelectQueryAccess().getWhereClauseWhereClauseParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__FilterclauseAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getFilterclauseFilterclauseParserRuleCall_9_0()); }
	ruleFilterclause{ after(grammarAccess.getSelectQueryAccess().getFilterclauseFilterclauseParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__AggregateClauseAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getAggregateClauseAggregateParserRuleCall_10_0()); }
	ruleAggregate{ after(grammarAccess.getSelectQueryAccess().getAggregateClauseAggregateParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectQuery__FilesinkclauseAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectQueryAccess().getFilesinkclauseFilesinkclauseParserRuleCall_11_0()); }
	ruleFilesinkclause{ after(grammarAccess.getSelectQueryAccess().getFilesinkclauseFilesinkclauseParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__AggregationsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getAggregationsAggregationParserRuleCall_1_1_0()); }
	ruleAggregation{ after(grammarAccess.getAggregateAccess().getAggregationsAggregationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__GroupbyAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getGroupbyGroupByParserRuleCall_2_1_0()); }
	ruleGroupBy{ after(grammarAccess.getAggregateAccess().getGroupbyGroupByParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__VariablesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByAccess().getVariablesVariableParserRuleCall_1_0()); }
	ruleVariable{ after(grammarAccess.getGroupByAccess().getVariablesVariableParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__VariablesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByAccess().getVariablesVariableParserRuleCall_2_1_0()); }
	ruleVariable{ after(grammarAccess.getGroupByAccess().getVariablesVariableParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getFunctionAGG_FUNCTIONTerminalRuleCall_1_0()); }
	RULE_AGG_FUNCTION{ after(grammarAccess.getAggregationAccess().getFunctionAGG_FUNCTIONTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__VarToAggAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getVarToAggVariableParserRuleCall_3_0()); }
	ruleVariable{ after(grammarAccess.getAggregationAccess().getVarToAggVariableParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__AggNameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getAggNameSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getAggregationAccess().getAggNameSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__DatatypeAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationAccess().getDatatypeSTRINGTerminalRuleCall_6_1_0()); }
	RULE_STRING{ after(grammarAccess.getAggregationAccess().getDatatypeSTRINGTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Filesinkclause__PathAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilesinkclauseAccess().getPathSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getFilesinkclauseAccess().getPathSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Filterclause__LeftAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterclauseAccess().getLeftVariableParserRuleCall_1_0()); }
	ruleVariable{ after(grammarAccess.getFilterclauseAccess().getLeftVariableParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Filterclause__OperatorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterclauseAccess().getOperatorOperatorEnumRuleCall_2_0()); }
	ruleOperator{ after(grammarAccess.getFilterclauseAccess().getOperatorOperatorEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Filterclause__RightAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterclauseAccess().getRightVariableParserRuleCall_3_0()); }
	ruleVariable{ after(grammarAccess.getFilterclauseAccess().getRightVariableParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DatasetClause__DataSetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getDataSetIRIParserRuleCall_1_0()); }
	ruleIRI{ after(grammarAccess.getDatasetClauseAccess().getDataSetIRIParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getDatasetClauseAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__TypeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getTypeWINDOWTYPETerminalRuleCall_4_1_0()); }
	RULE_WINDOWTYPE{ after(grammarAccess.getDatasetClauseAccess().getTypeWINDOWTYPETerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__SizeAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getSizeINTTerminalRuleCall_4_3_0()); }
	RULE_INT{ after(grammarAccess.getDatasetClauseAccess().getSizeINTTerminalRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__AdvanceAssignment_4_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getAdvanceINTTerminalRuleCall_4_4_1_0()); }
	RULE_INT{ after(grammarAccess.getDatasetClauseAccess().getAdvanceINTTerminalRuleCall_4_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DatasetClause__UnitAssignment_4_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatasetClauseAccess().getUnitUNITTYPETerminalRuleCall_4_5_1_0()); }
	RULE_UNITTYPE{ after(grammarAccess.getDatasetClauseAccess().getUnitUNITTYPETerminalRuleCall_4_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__WhereclausesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereClauseAccess().getWhereclausesInnerWhereClauseParserRuleCall_2_0()); }
	ruleInnerWhereClause{ after(grammarAccess.getWhereClauseAccess().getWhereclausesInnerWhereClauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InnerWhereClause__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInnerWhereClauseAccess().getNameDatasetClauseCrossReference_0_0()); }
(
{ before(grammarAccess.getInnerWhereClauseAccess().getNameDatasetClauseIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getInnerWhereClauseAccess().getNameDatasetClauseIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getInnerWhereClauseAccess().getNameDatasetClauseCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InnerWhereClause__GroupGraphPatternAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInnerWhereClauseAccess().getGroupGraphPatternGroupGraphPatternSubParserRuleCall_1_0()); }
	ruleGroupGraphPatternSub{ after(grammarAccess.getInnerWhereClauseAccess().getGroupGraphPatternGroupGraphPatternSubParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupGraphPatternSub__GraphPatternsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupGraphPatternSubAccess().getGraphPatternsTriplesSameSubjectParserRuleCall_1_0()); }
	ruleTriplesSameSubject{ after(grammarAccess.getGroupGraphPatternSubAccess().getGraphPatternsTriplesSameSubjectParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupGraphPatternSub__GraphPatternsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupGraphPatternSubAccess().getGraphPatternsTriplesSameSubjectParserRuleCall_2_1_0()); }
	ruleTriplesSameSubject{ after(grammarAccess.getGroupGraphPatternSubAccess().getGraphPatternsTriplesSameSubjectParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriplesSameSubject__SubjectAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriplesSameSubjectAccess().getSubjectGraphNodeParserRuleCall_0_0()); }
	ruleGraphNode{ after(grammarAccess.getTriplesSameSubjectAccess().getSubjectGraphNodeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriplesSameSubject__PropertyListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriplesSameSubjectAccess().getPropertyListPropertyListParserRuleCall_1_0()); }
	rulePropertyList{ after(grammarAccess.getTriplesSameSubjectAccess().getPropertyListPropertyListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriplesSameSubject__PropertyListAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriplesSameSubjectAccess().getPropertyListPropertyListParserRuleCall_2_1_0()); }
	rulePropertyList{ after(grammarAccess.getTriplesSameSubjectAccess().getPropertyListPropertyListParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyListAccess().getPropertyGraphNodeParserRuleCall_0_0()); }
	ruleGraphNode{ after(grammarAccess.getPropertyListAccess().getPropertyGraphNodeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__ObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyListAccess().getObjectGraphNodeParserRuleCall_1_0()); }
	ruleGraphNode{ after(grammarAccess.getPropertyListAccess().getObjectGraphNodeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GraphNode__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphNodeAccess().getVariableVariableParserRuleCall_0_0()); }
	ruleVariable{ after(grammarAccess.getGraphNodeAccess().getVariableVariableParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GraphNode__LiteralAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphNodeAccess().getLiteralSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getGraphNodeAccess().getLiteralSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GraphNode__IriAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphNodeAccess().getIriIRIParserRuleCall_2_0()); }
	ruleIRI{ after(grammarAccess.getGraphNodeAccess().getIriIRIParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__UnnamedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getUnnamedUnNamedVariableParserRuleCall_0_0()); }
	ruleUnNamedVariable{ after(grammarAccess.getVariableAccess().getUnnamedUnNamedVariableParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__PropertyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getPropertyPropertyParserRuleCall_1_0()); }
	ruleProperty{ after(grammarAccess.getVariableAccess().getPropertyPropertyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnNamedVariable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnNamedVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUnNamedVariableAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__PrefixAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getPrefixPrefixCrossReference_0_0()); }
(
{ before(grammarAccess.getPropertyAccess().getPrefixPrefixIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getPropertyAccess().getPrefixPrefixIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getPropertyAccess().getPrefixPrefixCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IRI__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIRIAccess().getValueIRI_TERMINALTerminalRuleCall_1_0()); }
	RULE_IRI_TERMINAL{ after(grammarAccess.getIRIAccess().getValueIRI_TERMINALTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




RULE_AGG_FUNCTION : ('COUNT'|'MAX'|'MIN'|'AVG'|'SUM'|'MEDIAN');

RULE_IRI_TERMINAL : '<' ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9'|'/'|':'|'.'|'#'|'?'|'@'|'$'|'&'|'=')* '>';

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_WINDOWTYPE : ('ELEMENT'|'TIME');

RULE_UNITTYPE : ('NANOSECONDS'|'MICROSECONDS'|'MILLISECONDS'|'SECONDS'|'MINUTES'|'HOURS'|'DAYS');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


