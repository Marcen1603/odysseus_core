/*
 * Odysseus API
 * This is the API of the [Odysseus](https://odysseus.uni-oldenburg.de/) server.
 *
 * OpenAPI spec version: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package de.uniol.inf.is.odysseus.rest2.client.api;

import java.io.IOException;

import okhttp3.MediaType;
import okhttp3.ResponseBody;
import okio.Buffer;
import okio.BufferedSource;
import okio.ForwardingSource;
import okio.Okio;
import okio.Source;

public class ProgressResponseBody extends ResponseBody {

	public interface ProgressListener {
		void update(long bytesRead, long contentLength, boolean done);
	}

	private final ResponseBody responseBody;
	private final ProgressListener progressListener;
	private BufferedSource bufferedSource;

	public ProgressResponseBody(ResponseBody responseBody, ProgressListener progressListener) {
		this.responseBody = responseBody;
		this.progressListener = progressListener;
	}

	@Override
	public MediaType contentType() {
		return this.responseBody.contentType();
	}

	@Override
	public long contentLength() {
		return this.responseBody.contentLength();
	}

	@Override
	public BufferedSource source() {
		if (this.bufferedSource == null) {
			this.bufferedSource = Okio.buffer(source(this.responseBody.source()));
		}
		return this.bufferedSource;
	}

	private Source source(Source source) {
		return new ForwardingSource(source) {
			long totalBytesRead = 0L;

			@Override
			public long read(Buffer sink, long byteCount) throws IOException {
				final long bytesRead = super.read(sink, byteCount);
				// read() returns the number of bytes read, or -1 if this source is exhausted.
				this.totalBytesRead += bytesRead != -1 ? bytesRead : 0;
				ProgressResponseBody.this.progressListener.update(this.totalBytesRead,
						ProgressResponseBody.this.responseBody.contentLength(), bytesRead == -1);
				return bytesRead;
			}
		};
	}
}
