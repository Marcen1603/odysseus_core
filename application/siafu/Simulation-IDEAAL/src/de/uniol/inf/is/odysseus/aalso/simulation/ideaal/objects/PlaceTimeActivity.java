package de.uniol.inf.is.odysseus.aalso.simulation.ideaal.objects;

import java.util.Random;

import de.uniol.inf.is.odysseus.aalso.simulation.ideaal.Constants.Activity;

/**
 * An instantiation of this class represents a single state in the scenario for the agents.
 * It saves the time when the state should be executed, the position the agent has to go to and the activity he has to perform there.
 * 
 * @author Jan-Benno Meyer zu Holte
 *
 */
public class PlaceTimeActivity {
	/**
	 * actual place names and activities of the actual scenario file line
	 */
	private String placeNamesAndActivities;
	/**
	 * the currently chosen place name generated by the generateCurrentPlaceAndActivity Method
	 * 
	 * @see #generateCurrentPlaceAndActivity()
	 */
	private String currentPlaceName;
	/**
	 * the currently chosen Activity generated by the generateCurrentPlaceAndActivity Method
	 * 
	 * @see #generateCurrentPlaceAndActivity()
	 */
	private Activity currentActivity;
	/**
	 * Hour of the state
	 */
	private int hour;
	/**
	 * Minute of the state
	 */
	private int minute;
	
	
	/**
	 * The constructor parses the passed scenarioline in the first place.
	 * The line is split into a substring of Place-names and Activities. 
	 * Calls the generateCurrentPlaceAndActivity Method to create the actual state values
	 * 
	 * @see #generateCurrentPlaceAndActivity()
	 * 
	 * @param line the line read from the scenariofile
	 */
	public PlaceTimeActivity(String line){
		String[] lineArray = line.split(",");
		String nameAndActivitiesFromLine = lineArray[1];
		String time = lineArray[0];
		this.setPlaceNamesAndActivities(nameAndActivitiesFromLine);
		generateCurrentPlaceAndActivity();
		String[] timeArray = time.split(":");
		this.setHour(Integer.parseInt(timeArray[0]));
		this.setMinute(Integer.parseInt(timeArray[1]));
	}
	
	/**
	 * parses the placeNamesAndActivities variable and sets the current Activity and Place by choosing them by equal chance from the substring of the line
	 */
	public void generateCurrentPlaceAndActivity() {
		// get place with concerning activities
		String[] placesAndActivities = this.getPlaceNamesAndActivities().split("#");
		Random generator = new Random();
		int randPlace;
		if(placesAndActivities.length > 1){
			randPlace = generator.nextInt(placesAndActivities.length);
		} else {
			randPlace = 0;
		}
		// get a specific activity for the place
		String placeAndActivities = placesAndActivities[randPlace];
		String placeAndActivitiesArray[] = placeAndActivities.split("-");
		int randActivity;
		if(placeAndActivitiesArray.length > 2){
			randActivity = generator.nextInt(placeAndActivitiesArray.length);
		} else {
			randActivity = 1;
		}
		this.setCurrentPlaceName(placeAndActivitiesArray[0]);
		this.setCurrentActivity(getActivityFromString(placeAndActivitiesArray[randActivity]));
	}
	
	
	/**
	 * 
	 * @param name name of the Activity
	 * 
	 * @return the Activity belonging to the passed name param
	 */
	private Activity getActivityFromString(String name) {
		if(name.equals("DUSCHEN")){
			return(Activity.DUSCHEN);
		} else if(name.equals("SCHLAFEN")){
			return(Activity.SCHLAFEN);
		} else if(name.equals("GEHEN")){
			return(Activity.GEHEN);
		} else if(name.equals("URINIEREN")){
			return(Activity.URINIEREN);
		} else if(name.equals("SITZEN")){
			return(Activity.SITZEN);
		} else if(name.equals("STEHEN")){
			return(Activity.STEHEN);
		} else if(name.equals("HAENDEWASCHEN")){
			return(Activity.HAENDEWASCHEN);
		} else if(name.equals("STUHLGANG")){
			return(Activity.SITZENUNDFERNSEHEN);
		} else if(name.equals("SITZENUNDFERNSEHEN")){
			return(Activity.SITZENUNDFERNSEHEN);
		} else if(name.equals("SITZENUNDESSEN")){
			return(Activity.SITZENUNDESSEN);
		} else if(name.equals("SPUELEN")){
			return(Activity.SPUELEN);
		} else if(name.equals("KARDIO")){
			return(Activity.KARDIO);
		} else if(name.equals("WEGGEHEN")){
			return(Activity.WEGGEHEN);
		} else if(name.equals("LESEN")){
			return(Activity.LESEN);
		} else {
			return(Activity.GEHEN);
		}
	}
	
	public int getHour() {
		return hour;
	}
	public void setHour(int hour) {
		this.hour = hour;
	}
	public int getMinute() {
		return minute;
	}
	public void setMinute(int minute) {
		this.minute = minute;
	}

	public void setCurrentPlaceName(String currentPlaceName) {
		this.currentPlaceName = currentPlaceName;
	}

	public String getCurrentPlaceName() {
		return currentPlaceName;
	}

	public void setCurrentActivity(Activity activity) {
		this.currentActivity = activity;
	}

	public Activity getCurrentActivity() {
		return currentActivity;
	}
	
	public String getPlaceNamesAndActivities() {
		return placeNamesAndActivities;
	}

	public void setPlaceNamesAndActivities(String placeNamesAndActivities) {
		this.placeNamesAndActivities = placeNamesAndActivities;
	}
	
}