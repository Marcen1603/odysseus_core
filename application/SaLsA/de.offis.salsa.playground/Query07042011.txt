///OdysseusScript
#PARSER PQL
#TRANSCFG Standard
#QUERY
///Your first query here


source1 = source({schema = ['scan:SpatialMultiPoint'], name = 'Laser1'})  
move1 = map({expressions = ['MoveViewPoint(scan, 3750.0, -4600.0)']}, source1)
renamedMove1 = rename({aliases = ['scan1']}, move1)
rotate1 = map({expressions = ['RotateViewPoint(scan1, 174.49)']}, renamedMove1)
renamedRotate1 = rename({aliases = ['scan1']}, rotate1)
window1 = window({type = 'time', size = 20, advance = 1}, renamedRotate1)

source2 = source({schema = ['scan:SpatialMultiPoint'], name = 'Laser2'})
renamed2 = rename({aliases = ['scan2']}, source2)
window2 = window({type = 'time', size = 20, advance = 1}, renamed2)

join = join(window1, window2)

merge = map({expressions = ['MergeGeometries(scan1,scan2)']}, join)
renamed = rename({aliases = ['scan']}, merge)

extractedFeature = map({expressions = ['ExtractSegments(scan,300.0)']}, renamed)

renamedExtractedFeature = rename({aliases = ['feature']}, extractedFeature)

unested = unnest({attribute = 'feature'}, renamedExtractedFeature)

bbox = map({expressions = ['BoundingBox(feature)']}, unested)
renamedBBox = rename({aliases = ['bbox']}, bbox)

objectFilter = select({predicate = RelationalPredicate('ObjectSize(bbox) > 500000')}, renamedBBox)
sink = mapsink(objectFilter)
