///OdysseusScript
#PARSER PQL
#TRANSCFG Standard
#QUERY
///Your first query here

lms1 = adapter({schema = ['scan:SpatialMultiPoint'], options = ['host:192.168.0.20', 'port:2111'], adapter = 'Sick'})  
gridLms1 = map({expressions = ['ToGrid(scan, -10000.0, -10000.0, 20000.0, 20000.0, 150.0)']}, lms1)
renamedGridLms1 = rename({aliases = ['scan']}, gridLms1)
window1 = window({size = 2, advance = 2, type = 'tuple'}, renamedGridLms1)


lms2 = adapter({schema = ['scan:SpatialMultiPoint'], options = ['host:192.168.0.10', 'port:2111'], adapter = 'Sick'})  
movedLms2 = map({expressions = ['MoveViewPoint(scan, 3750.0, -4600.0)']}, lms2)
renamedMovedLms2 = rename({aliases = ['scan']}, movedLms2)
rotatedLms2 = map({expressions = ['RotateViewPoint(scan, 174.49)']}, renamedMovedLms2)
renamedRotatedLms2 = rename({aliases = ['scan']}, rotatedLms2)
gridLms2 = map({expressions = ['ToGrid(scan, -10000.0, -10000.0, 20000.0, 20000.0, 150.0)']}, renamedRotatedLms2)
renamedGridLms2 = rename({aliases = ['scan']}, gridLms2)
window2 = window({size = 2, advance = 2, type = 'tuple'}, renamedGridLms2)

///segmentsLms1 = map({expressions = ['ExtractSegments(scan, 200)']}, lms1)
///renamedSegmentsLms1 = rename({aliases = ['scan']}, segmentsLms1)



union = union(window1,window2)
aggregate = aggregate({ aggregations=[ ['MERGEGRID', 'scan', 'scan'] ]}, union) 

///lms2 = adapter({schema = ['scan:SpatialMultiPoint'], options = ['host:192.168.0.10', 'port:2111'], adapter = 'Sick'})  
///movedLms2 = map({expressions = ['MoveViewPoint(scan, 3750.0, -4600.0)']}, lms2)
///renamedMovedLms2 = rename({aliases = ['scan']}, movedLms2)
///rotatedLms2 = map({expressions = ['RotateViewPoint(scan, 174.49)']}, renamedMovedLms2)
///renamedLms2 = rename({aliases = ['scan']}, rotatedLms2)
///segmentsLms2 = map({expressions = ['ExtractSegments(scan, 300)']}, renamedLms2)
///renamedSegmentsLms2 = rename({aliases = ['scan']}, segmentsLms2)
///scooter = adapter({schema = ['scan:SpatialPoint'], options = ['host:192.168.1.99', 'port:10000', 'service:ClientConnector', 'protocol:default', 'ownService:SaLsA.Simulation.Gui', 'ownPort:10200'], adapter = 'ICE'})  
///transformedScooter = map({expressions = ['RotateViewPoint(MoveViewPoint(scan, 17330, 0.0),-45.0)']}, scooter)
///renamedScooter = rename({aliases = ['scan']}, transformedScooter)


///union = union(renamedSegmentsLms1,renamedSegmentsLms2)

///unnest = unnest({attribute = 'scan'}, union)


///union2 = union(unnest , renamedScooter)
///objects1 = rename({aliases = ['scan']}, transform1)

///position = adapter({schema = ['scan:SpatialMultiPoint'], adapter = 'ICE', options = ['host:192.168.1.99', 'port:10000', 'service:ClientConnector', 'protocol:default', 'ownService:ServiceConnector', 'ownPort:20000' ]})
///source2 = adapter({schema = ['scan:SpatialMultiPoint'], adapter = 'Sick', options = ['host:192.168.0.20', 'port:2111']})
///lms2 = rename({aliases = ['scan']}, source2)

///speed = map({expressions = ['doubleToFloat(1)']}, lms1)

///visualizationOrg = mapsink(scooter)
visualization = mapsink(aggregate)
///setSpeed = binding({options = ['host:192.168.1.99', 'port:10000', 'service:ClientConnector', 'protocol:default', 'ownService:SaLsA.Simulation.Gui', 'ownPort:10200' ], adapter = 'ICE'}, speed)
