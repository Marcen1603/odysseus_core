///OdysseusScript
#PARSER PQL
#TRANSCFG Standard
#QUERY
///Your first query here

///lms1 = adapter({schema = ['scan:SpatialMultiPoint'], options = ['host:192.168.0.10','record:50', 'port:2111'], adapter = 'Sick'})  
lms1 = adapter({schema = ['scan:SpatialMultiPoint'], options = ['host:192.168.0.10', 'port:2111'], adapter = 'Sick'})  

move1 = map({expressions = ['MoveViewPoint(scan, 3750.0, -4600.0)']}, lms1)
renamedMove1 = rename({aliases = ['scan']}, move1)
rotate1 = map({expressions = ['RotateViewPoint(scan, 174.49)']}, renamedMove1)
renamedRotate1 = rename({aliases = ['scan']}, rotate1)

extractedFeature = map({expressions = ['ExtractSegments(scan,300.0)']}, renamedRotate1)

renamedExtractedFeature = rename({aliases = ['feature']}, extractedFeature)

///lms2 = adapter({schema = ['scan:SpatialMultiPoint'], options = ['host:192.168.0.20','record:50', 'port:2111'], adapter = 'Sick'})  
lms2 = adapter({schema = ['scan:SpatialMultiPoint'], options = ['host:192.168.0.20', 'port:2111'], adapter = 'Sick'})  

renamed2 = rename({aliases = ['scan']}, lms2)

extractedFeature2 = map({expressions = ['ExtractSegments(scan,300.0)']}, renamed2)

renamedExtractedFeature2 = rename({aliases = ['feature']}, extractedFeature2)

unested0 = unnest(renamedExtractedFeature)

unested1 = unnest(renamedExtractedFeature2)

SelectLines = SELECT({ predicate=RelationalPredicate('SpatialIsLine(feature)') }, unested0)

SelectLines2 = SELECT({ predicate=RelationalPredicate('SpatialIsLine(feature)') }, unested1)

united = UNION(SelectLines, SelectLines2)

///window = window({type = 'tuple', size = 200, advance = 20}, unested)
window = window({type = 'time', size = 20, advance = 1}, united)

aggregate = AGGREGATE({aggregations = [['PMERGE','feature','feature','tuple']] }, window)

unested2 = unnest(aggregate)

///sink = mapsink(window)
sink2 = mapsink(unested2)