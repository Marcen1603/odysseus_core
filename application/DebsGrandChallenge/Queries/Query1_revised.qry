#PARSER PQL
///#DEFINE LATENCY
#IFDEF LATENCY
#TRANSCFG StandardLatency
#DEFINE DUMPPATH F:/Grand Challenge/results/
#ELSE
#TRANSCFG Standard
#ENDIF
#DEFINE TwentyFourHours 86400000000000
#DOQUERYSHARING true
#RUNQUERY
/// Operator 1
bm05 = PROJECT({attributes=['ts','pp04']},gchSource)
s05 = RENAME({type='s05', aliases = ['ts', 'edge']},CHANGEDETECT({attr=['pp04'], heartbeatrate=10},bm05))

/// Operator 2
bm06 = PROJECT({attributes=['ts','pp05']},gchSource)
s06 = RENAME({type='s06', aliases = ['ts', 'edge']},CHANGEDETECT({attr=['pp05'], heartbeatrate=10},bm06))

/// Operator 3
bm07 = PROJECT({attributes=['ts','pp04']},gchSource)
s07 = RENAME({type='s07', aliases = ['ts', 'edge']},CHANGEDETECT({attr=['pp04'], heartbeatrate=10},bm07))

/// Operator 4
bm08 = PROJECT({attributes=['ts','pp05']},gchSource)
s08 = RENAME({type='s08', aliases = ['ts', 'edge']},CHANGEDETECT({attr=['pp05'], heartbeatrate=10},bm08))

/// Operator 5
bm09 = PROJECT({attributes=['ts','pp06']},gchSource)
s09 = RENAME({type='s09', aliases = ['ts', 'edge']},CHANGEDETECT({attr=['pp06'], heartbeatrate=10},bm09))

/// Operator 6
bm10 = PROJECT({attributes=['ts','pp06']},gchSource)
s10 = RENAME({type='s10', aliases = ['ts', 'edge']},CHANGEDETECT({attr=['pp06'], heartbeatrate=10},bm10))

/// Operator 7
s58_t = RENAME({aliases = ['ts1', 'ts2']} ,SASE({name='SEQ_5_8',heartbeatrate=1,oneMatchPerInstance='true',query='PATTERN SEQ(s05 s1, s08 s2) where skip_till_any_match(s1,s2){s1.edge = s2.edge} return s1.ts,s2.ts'}, s05, s08))
s58 = RENAME({type='s58',aliases = ['ts', 'dt']}, MAP({name='Duration_5_8',expressions = ['toLong(ts2)','toLong(ts2-ts1)']}, s58_t))

/// Operator 8
s69_t =  RENAME({aliases = ['ts1', 'ts2']} ,SASE({name='SEQ_6_9',heartbeatrate=1,oneMatchPerInstance='true',query='PATTERN SEQ(s06 s1, s09 s2) where skip_till_any_match(s1,s2){s1.edge=s2.edge} return s1.ts,s2.ts'}, s06, s09))
s69 = RENAME({type='s69',aliases = ['ts', 'dt']}, MAP({name='Duration_6_9',expressions = ['toLong(ts2)','toLong(ts2-ts1)']}, s69_t))

/// Operator 9
s710_t = RENAME({aliases = ['ts1', 'ts2']} ,SASE({name='SEQ_7_10',heartbeatrate=1,oneMatchPerInstance='true',query='PATTERN SEQ(s07 s1, s10 s2) where skip_till_any_match(s1,s2){s1.edge=s2.edge} return s1.ts,s2.ts'}, s07, s10))
s710 = RENAME({type='s710',aliases = ['ts', 'dt']}, MAP({name='Duration_7_10',expressions = ['toLong(ts2)','toLong(ts2-ts1)']}, s710_t))

/// 24 hour sliding window
s58_windowed = WINDOW({name='24HourWindow', SIZE=${TwentyFourHours}, ADVANCE=1, TYPE='TIME'}, s58)
s69_windowed = WINDOW({name='24HourWindow',SIZE=${TwentyFourHours}, ADVANCE=1, TYPE='TIME'}, s69)
s710_windowed = WINDOW({name='24HourWindow',SIZE=${TwentyFourHours}, ADVANCE=1, TYPE='TIME'}, s710)

/// Operator 10
sout10_agg = AGGREGATE({Name='MIN_MAX_MAX_1', dumpAtValueCount=1, aggregations=[		
		['MIN', 'dt', 'dtmin', 'long'],
		['MAX', 'dt', 'dtmax', 'long'],
		['MAX', 'ts', 'ts', 'long']]}, s58_windowed)

sout10 = RENAME({Name='Alarm_10',aliases = ['alarm', 'ts']}, MAP({expressions=['1', 'ts']}, SELECT({ predicate=RelationalPredicate('dtmin<dtmax/1.01') }, sout10_agg)))	

/// Operator 11
reg11 = REGRESSION({X='ts', Y='dt'}, s58_windowed)

/// Operator 12
sout12_agg = AGGREGATE({Name='MIN_MAX_MAX_2',dumpAtValueCount=1, aggregations=[		
		['MIN', 'dt', 'dtmin', 'long'],
		['MAX', 'dt', 'dtmax', 'long'],
		['MAX', 'ts', 'ts', 'long']]}, s69_windowed)

sout12 = RENAME({Name='Alarm_12', aliases = ['alarm', 'ts']}, MAP({expressions=['1', 'ts']}, SELECT({ predicate=RelationalPredicate('dtmin<dtmax/1.01') }, sout12_agg)))

/// Operator 13
reg13 = REGRESSION({X='ts', Y='dt'}, s69_windowed)

/// Operator 14
sout14_agg = AGGREGATE({Name='MIN_MAX_MAX_3',dumpAtValueCount=1, aggregations=[		
		['MIN', 'dt', 'dtmin', 'long'],
		['MAX', 'dt', 'dtmax', 'long'],
		['MAX', 'ts', 'ts', 'long']]}, s710_windowed)

sout14 = RENAME({Name='Alarm_14',aliases = ['alarm', 'ts']}, MAP({expressions=['1', 'ts']}, SELECT({ predicate=RelationalPredicate('dtmin<dtmax/1.01') }, sout14_agg)))	

/// Operator 15
reg15 = REGRESSION({X='ts', Y='dt'}, s710_windowed)

#IFDEF LATENCY
filesink1 = FILESINK({file='${DUMPPATH}q1_sout10.csv',  filetype='csv', dumpMetaData='true',cachesize = 1}, CALCLATENCY(sout10))
filesink2 = FILESINK({file='${DUMPPATH}q1_reg11.csv',  filetype='csv', dumpMetaData='true',cachesize = 1}, CALCLATENCY(reg11))
filesink3 = FILESINK({file='${DUMPPATH}q1_sout12.csv',  filetype='csv', dumpMetaData='true',cachesize = 1}, CALCLATENCY(sout12))
filesink4 = FILESINK({file='${DUMPPATH}q1_reg13.csv',  filetype='csv', dumpMetaData='true', cachesize = 1}, CALCLATENCY(reg13))
filesink5 = FILESINK({file='${DUMPPATH}q1_sout14.csv',  filetype='csv', dumpMetaData='true', cachesize = 1}, CALCLATENCY(sout14))
filesink6 = FILESINK({file='${DUMPPATH}q1_reg15.csv',  filetype='csv', dumpMetaData='true', cachesize = 1}, CALCLATENCY(reg15))
#ELSE
/// bla
#ENDIF
