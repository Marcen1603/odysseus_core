#DROPALLQUERIES
#DROPALLSOURCES
#DROPALLSINKS
#PARSER PQL
#DEFINE filename toXML2
#METADATA TimeInterval
#ADDQUERY
input = ACCESS({
            source='source1',
            protocol='XML',
            transport='File',
            wrapper='GenericPull',
            datahandler='Tuple',
            options=[
              ['filename', '${BUNDLE-ROOT}/queries/document.xml'],
              ['nickname', '/users/user/nickname'],
              ['fname', '/users/user/fname'],
              ['lname', '/users/user/lname'],
              ['email', '/users/user/email'],
              ['role', '/users/user/roles/role'],
              ['age', '/users/user/age']
            ],
            schema=[
              ['nickname','String'],
              ['fname', 'String'],
              ['lname', 'String'],
              ['email', 'String'],
              ['role', 'String'],
              ['age', 'Integer']
            ]                                                                                                                                              
          }                                                                                                                  
        )
             
win = TIMEWINDOW({SIZE = [1000000, 'MINUTES'], SLIDE = [1000000, 'MINUTES']}, input)
              
transform1 = TOXML({
                rootelement = 'user',
                xsdstring = '<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
							  <xs:element name="user">
							    <xs:complexType>
							      <xs:sequence>
							        <xs:element type="xs:string" name="nickname"/>
							        <xs:element type="xs:string" name="fname"/>
							        <xs:element type="xs:string" name="lname"/>
							        <xs:element type="xs:string" name="email"/>
							        <xs:element type="xs:byte" name="age"/>
							        <xs:element name="roles">
							          <xs:complexType>
							            <xs:sequence>
							              <xs:element type="xs:string" name="role"/>
							            </xs:sequence>
							          </xs:complexType>
							        </xs:element>
							      </xs:sequence>
							    </xs:complexType>
							  </xs:element>
							</xs:schema>'             
              },
              win
            )
            
transform2 = XMLTOTUPLE({
expressions = [
                  ['nickname','/user/nickname'],
                  ['fname', '/user/fname'],
                  ['lname', '/user/lname'],
                  ['email', '/user/email'],
                  ['role', '/user/roles/role[1]'],
                  ['age', '/user/age']
                  ],
                  schema = [              
                  ['nickname','String'],
                  ['fname', 'String'],
                  ['lname', 'String'],
                  ['email', 'String'],
                  ['role', 'String'],
                  ['age', 'String']
                  ]
                },
                transform1
              )

///outputXML2 = SENDER({
///                  sink='csvOutput',
///                  protocol='SimpleCSV',
///                  transport='File',
///                  wrapper='GenericPull',
///                  datahandler='Tuple',
///                  writemetadata = 'true',
///                  options=[
///                    ['filename','${BUNDLE-ROOT}/queries/${filename}.csv' ],
///                    ['csv.delimiter', '|'],
///                    ['csv.trim', 'true']
///                  ]                                   
///                },
///                transform2
///              )    
            