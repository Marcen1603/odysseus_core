/*
 * generated by Xtext 2.12.0
 */
grammar InternalECA;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.uniol.inf.is.odysseus.eca.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.uniol.inf.is.odysseus.eca.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.uniol.inf.is.odysseus.eca.services.ECAGrammarAccess;

}
@parser::members {
	private ECAGrammarAccess grammarAccess;

	public void setGrammarAccess(ECAGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getUnorderedGroup()); }
		(rule__Model__UnorderedGroup)
		{ after(grammarAccess.getModelAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant
entryRuleConstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getGroup()); }
		(rule__Constant__Group__0)
		{ after(grammarAccess.getConstantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWindow
entryRuleWindow
:
{ before(grammarAccess.getWindowRule()); }
	 ruleWindow
{ after(grammarAccess.getWindowRule()); } 
	 EOF 
;

// Rule Window
ruleWindow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWindowAccess().getGroup()); }
		(rule__Window__Group__0)
		{ after(grammarAccess.getWindowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimer
entryRuleTimer
:
{ before(grammarAccess.getTimerRule()); }
	 ruleTimer
{ after(grammarAccess.getTimerRule()); } 
	 EOF 
;

// Rule Timer
ruleTimer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimerAccess().getGroup()); }
		(rule__Timer__Group__0)
		{ after(grammarAccess.getTimerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinedEvent
entryRuleDefinedEvent
:
{ before(grammarAccess.getDefinedEventRule()); }
	 ruleDefinedEvent
{ after(grammarAccess.getDefinedEventRule()); } 
	 EOF 
;

// Rule DefinedEvent
ruleDefinedEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinedEventAccess().getGroup()); }
		(rule__DefinedEvent__Group__0)
		{ after(grammarAccess.getDefinedEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCONDITIONS
entryRuleCONDITIONS
:
{ before(grammarAccess.getCONDITIONSRule()); }
	 ruleCONDITIONS
{ after(grammarAccess.getCONDITIONSRule()); } 
	 EOF 
;

// Rule CONDITIONS
ruleCONDITIONS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCONDITIONSAccess().getGroup()); }
		(rule__CONDITIONS__Group__0)
		{ after(grammarAccess.getCONDITIONSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSUBCONDITION
entryRuleSUBCONDITION
:
{ before(grammarAccess.getSUBCONDITIONRule()); }
	 ruleSUBCONDITION
{ after(grammarAccess.getSUBCONDITIONRule()); } 
	 EOF 
;

// Rule SUBCONDITION
ruleSUBCONDITION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSUBCONDITIONAccess().getAlternatives()); }
		(rule__SUBCONDITION__Alternatives)
		{ after(grammarAccess.getSUBCONDITIONAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleSource
entryRuleRuleSource
:
{ before(grammarAccess.getRuleSourceRule()); }
	 ruleRuleSource
{ after(grammarAccess.getRuleSourceRule()); } 
	 EOF 
;

// Rule RuleSource
ruleRuleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleSourceAccess().getAlternatives()); }
		(rule__RuleSource__Alternatives)
		{ after(grammarAccess.getRuleSourceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSOURCECONDITION
entryRuleSOURCECONDITION
:
{ before(grammarAccess.getSOURCECONDITIONRule()); }
	 ruleSOURCECONDITION
{ after(grammarAccess.getSOURCECONDITIONRule()); } 
	 EOF 
;

// Rule SOURCECONDITION
ruleSOURCECONDITION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSOURCECONDITIONAccess().getGroup()); }
		(rule__SOURCECONDITION__Group__0)
		{ after(grammarAccess.getSOURCECONDITIONAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQUERYCONDITION
entryRuleQUERYCONDITION
:
{ before(grammarAccess.getQUERYCONDITIONRule()); }
	 ruleQUERYCONDITION
{ after(grammarAccess.getQUERYCONDITIONRule()); } 
	 EOF 
;

// Rule QUERYCONDITION
ruleQUERYCONDITION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQUERYCONDITIONAccess().getGroup()); }
		(rule__QUERYCONDITION__Group__0)
		{ after(grammarAccess.getQUERYCONDITIONAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSYSTEMCONDITION
entryRuleSYSTEMCONDITION
:
{ before(grammarAccess.getSYSTEMCONDITIONRule()); }
	 ruleSYSTEMCONDITION
{ after(grammarAccess.getSYSTEMCONDITIONRule()); } 
	 EOF 
;

// Rule SYSTEMCONDITION
ruleSYSTEMCONDITION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSYSTEMCONDITIONAccess().getGroup()); }
		(rule__SYSTEMCONDITION__Group__0)
		{ after(grammarAccess.getSYSTEMCONDITIONAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFREECONDITION
entryRuleFREECONDITION
:
{ before(grammarAccess.getFREECONDITIONRule()); }
	 ruleFREECONDITION
{ after(grammarAccess.getFREECONDITIONRule()); } 
	 EOF 
;

// Rule FREECONDITION
ruleFREECONDITION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFREECONDITIONAccess().getFreeConditionAssignment()); }
		(rule__FREECONDITION__FreeConditionAssignment)
		{ after(grammarAccess.getFREECONDITIONAccess().getFreeConditionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMAPCONDITION
entryRuleMAPCONDITION
:
{ before(grammarAccess.getMAPCONDITIONRule()); }
	 ruleMAPCONDITION
{ after(grammarAccess.getMAPCONDITIONRule()); } 
	 EOF 
;

// Rule MAPCONDITION
ruleMAPCONDITION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMAPCONDITIONAccess().getGroup()); }
		(rule__MAPCONDITION__Group__0)
		{ after(grammarAccess.getMAPCONDITIONAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleACTIONS
entryRuleACTIONS
:
{ before(grammarAccess.getACTIONSRule()); }
	 ruleACTIONS
{ after(grammarAccess.getACTIONSRule()); } 
	 EOF 
;

// Rule ACTIONS
ruleACTIONS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getACTIONSAccess().getGroup()); }
		(rule__ACTIONS__Group__0)
		{ after(grammarAccess.getACTIONSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSUBACTIONS
entryRuleSUBACTIONS
:
{ before(grammarAccess.getSUBACTIONSRule()); }
	 ruleSUBACTIONS
{ after(grammarAccess.getSUBACTIONSRule()); } 
	 EOF 
;

// Rule SUBACTIONS
ruleSUBACTIONS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSUBACTIONSAccess().getComActionAssignment()); }
		(rule__SUBACTIONS__ComActionAssignment)
		{ after(grammarAccess.getSUBACTIONSAccess().getComActionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCOMMANDACTION
entryRuleCOMMANDACTION
:
{ before(grammarAccess.getCOMMANDACTIONRule()); }
	 ruleCOMMANDACTION
{ after(grammarAccess.getCOMMANDACTIONRule()); } 
	 EOF 
;

// Rule COMMANDACTION
ruleCOMMANDACTION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCOMMANDACTIONAccess().getGroup()); }
		(rule__COMMANDACTION__Group__0)
		{ after(grammarAccess.getCOMMANDACTIONAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRNDQUERY
entryRuleRNDQUERY
:
{ before(grammarAccess.getRNDQUERYRule()); }
	 ruleRNDQUERY
{ after(grammarAccess.getRNDQUERYRule()); } 
	 EOF 
;

// Rule RNDQUERY
ruleRNDQUERY 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRNDQUERYAccess().getGroup()); }
		(rule__RNDQUERY__Group__0)
		{ after(grammarAccess.getRNDQUERYAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource
entryRuleSource
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceAccess().getNameAssignment()); }
		(rule__Source__NameAssignment)
		{ after(grammarAccess.getSourceAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEcaValue
entryRuleEcaValue
:
{ before(grammarAccess.getEcaValueRule()); }
	 ruleEcaValue
{ after(grammarAccess.getEcaValueRule()); } 
	 EOF 
;

// Rule EcaValue
ruleEcaValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEcaValueAccess().getAlternatives()); }
		(rule__EcaValue__Alternatives)
		{ after(grammarAccess.getEcaValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePREDEFINEDSOURCE
entryRulePREDEFINEDSOURCE
:
{ before(grammarAccess.getPREDEFINEDSOURCERule()); }
	 rulePREDEFINEDSOURCE
{ after(grammarAccess.getPREDEFINEDSOURCERule()); } 
	 EOF 
;

// Rule PREDEFINEDSOURCE
rulePREDEFINEDSOURCE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPREDEFINEDSOURCEAccess().getAlternatives()); }
		(rule__PREDEFINEDSOURCE__Alternatives)
		{ after(grammarAccess.getPREDEFINEDSOURCEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSYSTEMFUNCTION
entryRuleSYSTEMFUNCTION
:
{ before(grammarAccess.getSYSTEMFUNCTIONRule()); }
	 ruleSYSTEMFUNCTION
{ after(grammarAccess.getSYSTEMFUNCTIONRule()); } 
	 EOF 
;

// Rule SYSTEMFUNCTION
ruleSYSTEMFUNCTION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSYSTEMFUNCTIONAccess().getAlternatives()); }
		(rule__SYSTEMFUNCTION__Alternatives)
		{ after(grammarAccess.getSYSTEMFUNCTIONAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperator
entryRuleOperator
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSUBCONDITIONAccess().getSubsourceAssignment_0()); }
		(rule__SUBCONDITION__SubsourceAssignment_0)
		{ after(grammarAccess.getSUBCONDITIONAccess().getSubsourceAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSUBCONDITIONAccess().getSubsysAssignment_1()); }
		(rule__SUBCONDITION__SubsysAssignment_1)
		{ after(grammarAccess.getSUBCONDITIONAccess().getSubsysAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSUBCONDITIONAccess().getGroup_2()); }
		(rule__SUBCONDITION__Group_2__0)
		{ after(grammarAccess.getSUBCONDITIONAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getSUBCONDITIONAccess().getGroup_3()); }
		(rule__SUBCONDITION__Group_3__0)
		{ after(grammarAccess.getSUBCONDITIONAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getSUBCONDITIONAccess().getGroup_4()); }
		(rule__SUBCONDITION__Group_4__0)
		{ after(grammarAccess.getSUBCONDITIONAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSource__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSourceAccess().getGroup_0()); }
		(rule__RuleSource__Group_0__0)
		{ after(grammarAccess.getRuleSourceAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleSourceAccess().getNewSourceAssignment_1()); }
		(rule__RuleSource__NewSourceAssignment_1)
		{ after(grammarAccess.getRuleSourceAccess().getNewSourceAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getRuleSourceAccess().getPreSourceAssignment_2()); }
		(rule__RuleSource__PreSourceAssignment_2)
		{ after(grammarAccess.getRuleSourceAccess().getPreSourceAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMMANDACTION__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMMANDACTIONAccess().getFunctActionAssignment_2_0()); }
		(rule__COMMANDACTION__FunctActionAssignment_2_0)
		{ after(grammarAccess.getCOMMANDACTIONAccess().getFunctActionAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getCOMMANDACTIONAccess().getActionValueAssignment_2_1()); }
		(rule__COMMANDACTION__ActionValueAssignment_2_1)
		{ after(grammarAccess.getCOMMANDACTIONAccess().getActionValueAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getCOMMANDACTIONAccess().getInnerActionAssignment_2_2()); }
		(rule__COMMANDACTION__InnerActionAssignment_2_2)*
		{ after(grammarAccess.getCOMMANDACTIONAccess().getInnerActionAssignment_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__SelAlternatives_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRNDQUERYAccess().getSelMINKeyword_3_1_0_0()); }
		'MIN'
		{ after(grammarAccess.getRNDQUERYAccess().getSelMINKeyword_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRNDQUERYAccess().getSelMAXKeyword_3_1_0_1()); }
		'MAX'
		{ after(grammarAccess.getRNDQUERYAccess().getSelMAXKeyword_3_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcaValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcaValueAccess().getIntValueAssignment_0()); }
		(rule__EcaValue__IntValueAssignment_0)
		{ after(grammarAccess.getEcaValueAccess().getIntValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getEcaValueAccess().getIdValueAssignment_1()); }
		(rule__EcaValue__IdValueAssignment_1)
		{ after(grammarAccess.getEcaValueAccess().getIdValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getEcaValueAccess().getGroup_2()); }
		(rule__EcaValue__Group_2__0)
		{ after(grammarAccess.getEcaValueAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getEcaValueAccess().getStringValueAssignment_3()); }
		(rule__EcaValue__StringValueAssignment_3)
		{ after(grammarAccess.getEcaValueAccess().getStringValueAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getEcaValueAccess().getDoubleValueAssignment_4()); }
		(rule__EcaValue__DoubleValueAssignment_4)
		{ after(grammarAccess.getEcaValueAccess().getDoubleValueAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PREDEFINEDSOURCE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPREDEFINEDSOURCEAccess().getTimerEventKeyword_0()); }
		'TimerEvent'
		{ after(grammarAccess.getPREDEFINEDSOURCEAccess().getTimerEventKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getPREDEFINEDSOURCEAccess().getQueryEventKeyword_1()); }
		'QueryEvent'
		{ after(grammarAccess.getPREDEFINEDSOURCEAccess().getQueryEventKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SYSTEMFUNCTION__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSYSTEMFUNCTIONAccess().getCurCPULoadKeyword_0()); }
		'curCPULoad'
		{ after(grammarAccess.getSYSTEMFUNCTIONAccess().getCurCPULoadKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSYSTEMFUNCTIONAccess().getCurMEMLoadKeyword_1()); }
		'curMEMLoad'
		{ after(grammarAccess.getSYSTEMFUNCTIONAccess().getCurMEMLoadKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getSYSTEMFUNCTIONAccess().getCurNETLoadKeyword_2()); }
		'curNETLoad'
		{ after(grammarAccess.getSYSTEMFUNCTIONAccess().getCurNETLoadKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getLessThanSignKeyword_0()); }
		'<'
		{ after(grammarAccess.getOperatorAccess().getLessThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_1()); }
		'>'
		{ after(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getEqualsSignKeyword_2()); }
		'='
		{ after(grammarAccess.getOperatorAccess().getEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_3()); }
		'<='
		{ after(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
		'>='
		{ after(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getDEFINEKeyword_0()); }
	'DEFINE'
	{ after(grammarAccess.getConstantAccess().getDEFINEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__1__Impl
	rule__Constant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getCONSTANTKeyword_1()); }
	'CONSTANT'
	{ after(grammarAccess.getConstantAccess().getCONSTANTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__2__Impl
	rule__Constant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getNameAssignment_2()); }
	(rule__Constant__NameAssignment_2)
	{ after(grammarAccess.getConstantAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__3__Impl
	rule__Constant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getConstantAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__4__Impl
	rule__Constant__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getConstValueAssignment_4()); }
	(rule__Constant__ConstValueAssignment_4)
	{ after(grammarAccess.getConstantAccess().getConstValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getConstantAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__0__Impl
	rule__Window__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getDEFINEKeyword_0()); }
	'DEFINE'
	{ after(grammarAccess.getWindowAccess().getDEFINEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__1__Impl
	rule__Window__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getWINDOWSIZEKeyword_1()); }
	'WINDOWSIZE'
	{ after(grammarAccess.getWindowAccess().getWINDOWSIZEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__2__Impl
	rule__Window__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getWindowAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__3__Impl
	rule__Window__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getWindowValueAssignment_3()); }
	(rule__Window__WindowValueAssignment_3)
	{ after(grammarAccess.getWindowAccess().getWindowValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getWindowAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__0__Impl
	rule__Timer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getDEFINEKeyword_0()); }
	'DEFINE'
	{ after(grammarAccess.getTimerAccess().getDEFINEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__1__Impl
	rule__Timer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getTIMEINTERVALLKeyword_1()); }
	'TIMEINTERVALL'
	{ after(grammarAccess.getTimerAccess().getTIMEINTERVALLKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__2__Impl
	rule__Timer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getTimerAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__3__Impl
	rule__Timer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getTimerIntervallValueAssignment_3()); }
	(rule__Timer__TimerIntervallValueAssignment_3)
	{ after(grammarAccess.getTimerAccess().getTimerIntervallValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getTimerAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinedEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinedEvent__Group__0__Impl
	rule__DefinedEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinedEventAccess().getDEFINEKeyword_0()); }
	'DEFINE'
	{ after(grammarAccess.getDefinedEventAccess().getDEFINEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinedEvent__Group__1__Impl
	rule__DefinedEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinedEventAccess().getEVENTKeyword_1()); }
	'EVENT'
	{ after(grammarAccess.getDefinedEventAccess().getEVENTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinedEvent__Group__2__Impl
	rule__DefinedEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinedEventAccess().getNameAssignment_2()); }
	(rule__DefinedEvent__NameAssignment_2)
	{ after(grammarAccess.getDefinedEventAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinedEvent__Group__3__Impl
	rule__DefinedEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinedEventAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getDefinedEventAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinedEvent__Group__4__Impl
	rule__DefinedEvent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinedEventAccess().getDefinedSourceAssignment_4()); }
	(rule__DefinedEvent__DefinedSourceAssignment_4)
	{ after(grammarAccess.getDefinedEventAccess().getDefinedSourceAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinedEvent__Group__5__Impl
	rule__DefinedEvent__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinedEventAccess().getWITHKeyword_5()); }
	'WITH'
	{ after(grammarAccess.getDefinedEventAccess().getWITHKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinedEvent__Group__6__Impl
	rule__DefinedEvent__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinedEventAccess().getDefinedAttributeAssignment_6()); }
	(rule__DefinedEvent__DefinedAttributeAssignment_6)
	{ after(grammarAccess.getDefinedEventAccess().getDefinedAttributeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinedEvent__Group__7__Impl
	rule__DefinedEvent__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinedEventAccess().getDefinedOperatorAssignment_7()); }
	(rule__DefinedEvent__DefinedOperatorAssignment_7)
	{ after(grammarAccess.getDefinedEventAccess().getDefinedOperatorAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinedEvent__Group__8__Impl
	rule__DefinedEvent__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinedEventAccess().getDefinedValueAssignment_8()); }
	(rule__DefinedEvent__DefinedValueAssignment_8)
	{ after(grammarAccess.getDefinedEventAccess().getDefinedValueAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinedEvent__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinedEventAccess().getSemicolonKeyword_9()); }
	';'
	{ after(grammarAccess.getDefinedEventAccess().getSemicolonKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getONKeyword_0()); }
	'ON'
	{ after(grammarAccess.getRuleAccess().getONKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getNameAssignment_1()); }
	(rule__Rule__NameAssignment_1)
	{ after(grammarAccess.getRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getSourceAssignment_2()); }
	(rule__Rule__SourceAssignment_2)
	{ after(grammarAccess.getRuleAccess().getSourceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getIFKeyword_3()); }
	'IF'
	{ after(grammarAccess.getRuleAccess().getIFKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRuleConditionsAssignment_4()); }
	(rule__Rule__RuleConditionsAssignment_4)
	{ after(grammarAccess.getRuleAccess().getRuleConditionsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__5__Impl
	rule__Rule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getTHENKeyword_5()); }
	'THEN'
	{ after(grammarAccess.getRuleAccess().getTHENKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__6__Impl
	rule__Rule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRuleActionsAssignment_6()); }
	(rule__Rule__RuleActionsAssignment_6)
	{ after(grammarAccess.getRuleAccess().getRuleActionsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getSemicolonKeyword_7()); }
	';'
	{ after(grammarAccess.getRuleAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CONDITIONS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONDITIONS__Group__0__Impl
	rule__CONDITIONS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITIONS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONDITIONSAccess().getSUBCONDITIONParserRuleCall_0()); }
	ruleSUBCONDITION
	{ after(grammarAccess.getCONDITIONSAccess().getSUBCONDITIONParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITIONS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONDITIONS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITIONS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONDITIONSAccess().getGroup_1()); }
	(rule__CONDITIONS__Group_1__0)*
	{ after(grammarAccess.getCONDITIONSAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CONDITIONS__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONDITIONS__Group_1__0__Impl
	rule__CONDITIONS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITIONS__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONDITIONSAccess().getCONDITIONSLeftAction_1_0()); }
	()
	{ after(grammarAccess.getCONDITIONSAccess().getCONDITIONSLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITIONS__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONDITIONS__Group_1__1__Impl
	rule__CONDITIONS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITIONS__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONDITIONSAccess().getANDKeyword_1_1()); }
	'AND'
	{ after(grammarAccess.getCONDITIONSAccess().getANDKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITIONS__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONDITIONS__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITIONS__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONDITIONSAccess().getRightAssignment_1_2()); }
	(rule__CONDITIONS__RightAssignment_1_2)
	{ after(grammarAccess.getCONDITIONSAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SUBCONDITION__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SUBCONDITION__Group_2__0__Impl
	rule__SUBCONDITION__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSUBCONDITIONAccess().getSUBCONDITIONAction_2_0()); }
	()
	{ after(grammarAccess.getSUBCONDITIONAccess().getSUBCONDITIONAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SUBCONDITION__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSUBCONDITIONAccess().getSubfreeAssignment_2_1()); }
	(rule__SUBCONDITION__SubfreeAssignment_2_1)
	{ after(grammarAccess.getSUBCONDITIONAccess().getSubfreeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SUBCONDITION__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SUBCONDITION__Group_3__0__Impl
	rule__SUBCONDITION__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSUBCONDITIONAccess().getSUBCONDITIONAction_3_0()); }
	()
	{ after(grammarAccess.getSUBCONDITIONAccess().getSUBCONDITIONAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SUBCONDITION__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSUBCONDITIONAccess().getSubmapAssignment_3_1()); }
	(rule__SUBCONDITION__SubmapAssignment_3_1)?
	{ after(grammarAccess.getSUBCONDITIONAccess().getSubmapAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SUBCONDITION__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SUBCONDITION__Group_4__0__Impl
	rule__SUBCONDITION__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSUBCONDITIONAccess().getSUBCONDITIONAction_4_0()); }
	()
	{ after(grammarAccess.getSUBCONDITIONAccess().getSUBCONDITIONAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SUBCONDITION__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSUBCONDITIONAccess().getQueryCondAssignment_4_1()); }
	(rule__SUBCONDITION__QueryCondAssignment_4_1)
	{ after(grammarAccess.getSUBCONDITIONAccess().getQueryCondAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSource__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSource__Group_0__0__Impl
	rule__RuleSource__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSource__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSourceAccess().getDollarSignLeftCurlyBracketKeyword_0_0()); }
	'${'
	{ after(grammarAccess.getRuleSourceAccess().getDollarSignLeftCurlyBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSource__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSource__Group_0__1__Impl
	rule__RuleSource__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSource__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSourceAccess().getDefSourceAssignment_0_1()); }
	(rule__RuleSource__DefSourceAssignment_0_1)
	{ after(grammarAccess.getRuleSourceAccess().getDefSourceAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSource__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSource__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSource__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSourceAccess().getRightCurlyBracketKeyword_0_2()); }
	'}'
	{ after(grammarAccess.getRuleSourceAccess().getRightCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SOURCECONDITION__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SOURCECONDITION__Group__0__Impl
	rule__SOURCECONDITION__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SOURCECONDITION__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSOURCECONDITIONAccess().getCondAttributeAssignment_0()); }
	(rule__SOURCECONDITION__CondAttributeAssignment_0)
	{ after(grammarAccess.getSOURCECONDITIONAccess().getCondAttributeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SOURCECONDITION__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SOURCECONDITION__Group__1__Impl
	rule__SOURCECONDITION__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SOURCECONDITION__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSOURCECONDITIONAccess().getOperatorAssignment_1()); }
	(rule__SOURCECONDITION__OperatorAssignment_1)
	{ after(grammarAccess.getSOURCECONDITIONAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SOURCECONDITION__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SOURCECONDITION__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SOURCECONDITION__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSOURCECONDITIONAccess().getValueAssignment_2()); }
	(rule__SOURCECONDITION__ValueAssignment_2)
	{ after(grammarAccess.getSOURCECONDITIONAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QUERYCONDITION__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QUERYCONDITION__Group__0__Impl
	rule__QUERYCONDITION__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QUERYCONDITION__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQUERYCONDITIONAccess().getQueryNotAssignment_0()); }
	(rule__QUERYCONDITION__QueryNotAssignment_0)?
	{ after(grammarAccess.getQUERYCONDITIONAccess().getQueryNotAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QUERYCONDITION__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QUERYCONDITION__Group__1__Impl
	rule__QUERYCONDITION__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QUERYCONDITION__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQUERYCONDITIONAccess().getQueryExistsKeyword_1()); }
	'queryExists'
	{ after(grammarAccess.getQUERYCONDITIONAccess().getQueryExistsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QUERYCONDITION__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QUERYCONDITION__Group__2__Impl
	rule__QUERYCONDITION__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QUERYCONDITION__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQUERYCONDITIONAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getQUERYCONDITIONAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QUERYCONDITION__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QUERYCONDITION__Group__3__Impl
	rule__QUERYCONDITION__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QUERYCONDITION__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQUERYCONDITIONAccess().getQueryFunctAssignment_3()); }
	(rule__QUERYCONDITION__QueryFunctAssignment_3)
	{ after(grammarAccess.getQUERYCONDITIONAccess().getQueryFunctAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QUERYCONDITION__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QUERYCONDITION__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QUERYCONDITION__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQUERYCONDITIONAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getQUERYCONDITIONAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SYSTEMCONDITION__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SYSTEMCONDITION__Group__0__Impl
	rule__SYSTEMCONDITION__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SYSTEMCONDITION__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSYSTEMCONDITIONAccess().getSYSTEMKeyword_0()); }
	'SYSTEM.'
	{ after(grammarAccess.getSYSTEMCONDITIONAccess().getSYSTEMKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SYSTEMCONDITION__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SYSTEMCONDITION__Group__1__Impl
	rule__SYSTEMCONDITION__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SYSTEMCONDITION__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSYSTEMCONDITIONAccess().getSystemAttributeAssignment_1()); }
	(rule__SYSTEMCONDITION__SystemAttributeAssignment_1)
	{ after(grammarAccess.getSYSTEMCONDITIONAccess().getSystemAttributeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SYSTEMCONDITION__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SYSTEMCONDITION__Group__2__Impl
	rule__SYSTEMCONDITION__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SYSTEMCONDITION__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSYSTEMCONDITIONAccess().getOperatorAssignment_2()); }
	(rule__SYSTEMCONDITION__OperatorAssignment_2)
	{ after(grammarAccess.getSYSTEMCONDITIONAccess().getOperatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SYSTEMCONDITION__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SYSTEMCONDITION__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SYSTEMCONDITION__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSYSTEMCONDITIONAccess().getValueAssignment_3()); }
	(rule__SYSTEMCONDITION__ValueAssignment_3)
	{ after(grammarAccess.getSYSTEMCONDITIONAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MAPCONDITION__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MAPCONDITION__Group__0__Impl
	rule__MAPCONDITION__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MAPCONDITION__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMAPCONDITIONAccess().getGETKeyword_0()); }
	'GET'
	{ after(grammarAccess.getMAPCONDITIONAccess().getGETKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MAPCONDITION__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MAPCONDITION__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MAPCONDITION__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMAPCONDITIONAccess().getMapCondAssignment_1()); }
	(rule__MAPCONDITION__MapCondAssignment_1)
	{ after(grammarAccess.getMAPCONDITIONAccess().getMapCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ACTIONS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACTIONS__Group__0__Impl
	rule__ACTIONS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTIONS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACTIONSAccess().getSUBACTIONSParserRuleCall_0()); }
	ruleSUBACTIONS
	{ after(grammarAccess.getACTIONSAccess().getSUBACTIONSParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTIONS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACTIONS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTIONS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACTIONSAccess().getGroup_1()); }
	(rule__ACTIONS__Group_1__0)*
	{ after(grammarAccess.getACTIONSAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ACTIONS__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACTIONS__Group_1__0__Impl
	rule__ACTIONS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTIONS__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACTIONSAccess().getACTIONSLeftAction_1_0()); }
	()
	{ after(grammarAccess.getACTIONSAccess().getACTIONSLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTIONS__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACTIONS__Group_1__1__Impl
	rule__ACTIONS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTIONS__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACTIONSAccess().getANDKeyword_1_1()); }
	'AND'
	{ after(grammarAccess.getACTIONSAccess().getANDKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTIONS__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACTIONS__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTIONS__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACTIONSAccess().getRightAssignment_1_2()); }
	(rule__ACTIONS__RightAssignment_1_2)
	{ after(grammarAccess.getACTIONSAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__COMMANDACTION__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__COMMANDACTION__Group__0__Impl
	rule__COMMANDACTION__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__COMMANDACTION__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCOMMANDACTIONAccess().getSubActnameAssignment_0()); }
	(rule__COMMANDACTION__SubActnameAssignment_0)
	{ after(grammarAccess.getCOMMANDACTIONAccess().getSubActnameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMMANDACTION__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__COMMANDACTION__Group__1__Impl
	rule__COMMANDACTION__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__COMMANDACTION__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCOMMANDACTIONAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCOMMANDACTIONAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMMANDACTION__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__COMMANDACTION__Group__2__Impl
	rule__COMMANDACTION__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__COMMANDACTION__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCOMMANDACTIONAccess().getAlternatives_2()); }
	(rule__COMMANDACTION__Alternatives_2)
	{ after(grammarAccess.getCOMMANDACTIONAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMMANDACTION__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__COMMANDACTION__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__COMMANDACTION__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCOMMANDACTIONAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getCOMMANDACTIONAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RNDQUERY__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNDQUERY__Group__0__Impl
	rule__RNDQUERY__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNDQUERYAccess().getPrioKeyword_0()); }
	'prio'
	{ after(grammarAccess.getRNDQUERYAccess().getPrioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNDQUERY__Group__1__Impl
	rule__RNDQUERY__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNDQUERYAccess().getPriOperatorAssignment_1()); }
	(rule__RNDQUERY__PriOperatorAssignment_1)
	{ after(grammarAccess.getRNDQUERYAccess().getPriOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNDQUERY__Group__2__Impl
	rule__RNDQUERY__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNDQUERYAccess().getPriValAssignment_2()); }
	(rule__RNDQUERY__PriValAssignment_2)
	{ after(grammarAccess.getRNDQUERYAccess().getPriValAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNDQUERY__Group__3__Impl
	rule__RNDQUERY__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNDQUERYAccess().getGroup_3()); }
	(rule__RNDQUERY__Group_3__0)?
	{ after(grammarAccess.getRNDQUERYAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNDQUERY__Group__4__Impl
	rule__RNDQUERY__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNDQUERYAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getRNDQUERYAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNDQUERY__Group__5__Impl
	rule__RNDQUERY__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNDQUERYAccess().getStateKeyword_5()); }
	'state'
	{ after(grammarAccess.getRNDQUERYAccess().getStateKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNDQUERY__Group__6__Impl
	rule__RNDQUERY__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNDQUERYAccess().getEqualsSignKeyword_6()); }
	'='
	{ after(grammarAccess.getRNDQUERYAccess().getEqualsSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNDQUERY__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNDQUERYAccess().getStateNameAssignment_7()); }
	(rule__RNDQUERY__StateNameAssignment_7)
	{ after(grammarAccess.getRNDQUERYAccess().getStateNameAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RNDQUERY__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNDQUERY__Group_3__0__Impl
	rule__RNDQUERY__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNDQUERYAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getRNDQUERYAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNDQUERY__Group_3__1__Impl
	rule__RNDQUERY__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNDQUERYAccess().getSelAssignment_3_1()); }
	(rule__RNDQUERY__SelAssignment_3_1)
	{ after(grammarAccess.getRNDQUERYAccess().getSelAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNDQUERY__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNDQUERYAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getRNDQUERYAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EcaValue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcaValue__Group_2__0__Impl
	rule__EcaValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EcaValue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcaValueAccess().getGroup_2_0()); }
	(rule__EcaValue__Group_2_0__0)
	{ after(grammarAccess.getEcaValueAccess().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcaValue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcaValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EcaValue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcaValueAccess().getRightCurlyBracketKeyword_2_1()); }
	'}'
	{ after(grammarAccess.getEcaValueAccess().getRightCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EcaValue__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcaValue__Group_2_0__0__Impl
	rule__EcaValue__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EcaValue__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcaValueAccess().getDollarSignLeftCurlyBracketKeyword_2_0_0()); }
	'${'
	{ after(grammarAccess.getEcaValueAccess().getDollarSignLeftCurlyBracketKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcaValue__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcaValue__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EcaValue__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcaValueAccess().getConstValueAssignment_2_0_1()); }
	(rule__EcaValue__ConstValueAssignment_2_0_1)
	{ after(grammarAccess.getEcaValueAccess().getConstValueAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup());
	}
:
	rule__Model__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getModelAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getUnorderedGroup_0()); }
					(rule__Model__UnorderedGroup_0)
					{ after(grammarAccess.getModelAccess().getUnorderedGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getModelAccess().getRulesAssignment_1()); }
						(rule__Model__RulesAssignment_1)
						{ after(grammarAccess.getModelAccess().getRulesAssignment_1()); }
					)
					(
						{ before(grammarAccess.getModelAccess().getRulesAssignment_1()); }
						((rule__Model__RulesAssignment_1)=>rule__Model__RulesAssignment_1)*
						{ after(grammarAccess.getModelAccess().getRulesAssignment_1()); }
					)
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__UnorderedGroup_0
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup_0());
	}
:
	rule__Model__UnorderedGroup_0__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 0);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getModelAccess().getConstantsAssignment_0_0()); }
						(rule__Model__ConstantsAssignment_0_0)
						{ after(grammarAccess.getModelAccess().getConstantsAssignment_0_0()); }
					)
					(
						{ before(grammarAccess.getModelAccess().getConstantsAssignment_0_0()); }
						((rule__Model__ConstantsAssignment_0_0)=>rule__Model__ConstantsAssignment_0_0)*
						{ after(grammarAccess.getModelAccess().getConstantsAssignment_0_0()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 1);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getModelAccess().getDefEventsAssignment_0_1()); }
						(rule__Model__DefEventsAssignment_0_1)
						{ after(grammarAccess.getModelAccess().getDefEventsAssignment_0_1()); }
					)
					(
						{ before(grammarAccess.getModelAccess().getDefEventsAssignment_0_1()); }
						((rule__Model__DefEventsAssignment_0_1)=>rule__Model__DefEventsAssignment_0_1)*
						{ after(grammarAccess.getModelAccess().getDefEventsAssignment_0_1()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getWindowSizeAssignment_0_2()); }
					(rule__Model__WindowSizeAssignment_0_2)
					{ after(grammarAccess.getModelAccess().getWindowSizeAssignment_0_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getTimeIntervallAssignment_0_3()); }
					(rule__Model__TimeIntervallAssignment_0_3)
					{ after(grammarAccess.getModelAccess().getTimeIntervallAssignment_0_3()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
	rule__Model__UnorderedGroup_0__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
	rule__Model__UnorderedGroup_0__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
	rule__Model__UnorderedGroup_0__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ConstantsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConstantsConstantParserRuleCall_0_0_0()); }
		ruleConstant
		{ after(grammarAccess.getModelAccess().getConstantsConstantParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DefEventsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDefEventsDefinedEventParserRuleCall_0_1_0()); }
		ruleDefinedEvent
		{ after(grammarAccess.getModelAccess().getDefEventsDefinedEventParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__WindowSizeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getWindowSizeWindowParserRuleCall_0_2_0()); }
		ruleWindow
		{ after(grammarAccess.getModelAccess().getWindowSizeWindowParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TimeIntervallAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTimeIntervallTimerParserRuleCall_0_3_0()); }
		ruleTimer
		{ after(grammarAccess.getModelAccess().getTimeIntervallTimerParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RulesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRulesRuleParserRuleCall_1_0()); }
		ruleRule
		{ after(grammarAccess.getModelAccess().getRulesRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__ConstValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getConstValueINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getConstantAccess().getConstValueINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__WindowValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindowAccess().getWindowValueINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getWindowAccess().getWindowValueINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__TimerIntervallValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getTimerIntervallValueINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getTimerAccess().getTimerIntervallValueINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinedEventAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDefinedEventAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__DefinedSourceAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinedEventAccess().getDefinedSourceSourceParserRuleCall_4_0()); }
		ruleSource
		{ after(grammarAccess.getDefinedEventAccess().getDefinedSourceSourceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__DefinedAttributeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinedEventAccess().getDefinedAttributeIDTerminalRuleCall_6_0()); }
		RULE_ID
		{ after(grammarAccess.getDefinedEventAccess().getDefinedAttributeIDTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__DefinedOperatorAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinedEventAccess().getDefinedOperatorOperatorParserRuleCall_7_0()); }
		ruleOperator
		{ after(grammarAccess.getDefinedEventAccess().getDefinedOperatorOperatorParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedEvent__DefinedValueAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinedEventAccess().getDefinedValueEcaValueParserRuleCall_8_0()); }
		ruleEcaValue
		{ after(grammarAccess.getDefinedEventAccess().getDefinedValueEcaValueParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__SourceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getSourceRuleSourceParserRuleCall_2_0()); }
		ruleRuleSource
		{ after(grammarAccess.getRuleAccess().getSourceRuleSourceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__RuleConditionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getRuleConditionsCONDITIONSParserRuleCall_4_0()); }
		ruleCONDITIONS
		{ after(grammarAccess.getRuleAccess().getRuleConditionsCONDITIONSParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__RuleActionsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getRuleActionsACTIONSParserRuleCall_6_0()); }
		ruleACTIONS
		{ after(grammarAccess.getRuleAccess().getRuleActionsACTIONSParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITIONS__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONDITIONSAccess().getRightSUBCONDITIONParserRuleCall_1_2_0()); }
		ruleSUBCONDITION
		{ after(grammarAccess.getCONDITIONSAccess().getRightSUBCONDITIONParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__SubsourceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSUBCONDITIONAccess().getSubsourceSOURCECONDITIONParserRuleCall_0_0()); }
		ruleSOURCECONDITION
		{ after(grammarAccess.getSUBCONDITIONAccess().getSubsourceSOURCECONDITIONParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__SubsysAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSUBCONDITIONAccess().getSubsysSYSTEMCONDITIONParserRuleCall_1_0()); }
		ruleSYSTEMCONDITION
		{ after(grammarAccess.getSUBCONDITIONAccess().getSubsysSYSTEMCONDITIONParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__SubfreeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSUBCONDITIONAccess().getSubfreeFREECONDITIONParserRuleCall_2_1_0()); }
		ruleFREECONDITION
		{ after(grammarAccess.getSUBCONDITIONAccess().getSubfreeFREECONDITIONParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__SubmapAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSUBCONDITIONAccess().getSubmapMAPCONDITIONParserRuleCall_3_1_0()); }
		ruleMAPCONDITION
		{ after(grammarAccess.getSUBCONDITIONAccess().getSubmapMAPCONDITIONParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBCONDITION__QueryCondAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSUBCONDITIONAccess().getQueryCondQUERYCONDITIONParserRuleCall_4_1_0()); }
		ruleQUERYCONDITION
		{ after(grammarAccess.getSUBCONDITIONAccess().getQueryCondQUERYCONDITIONParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSource__DefSourceAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSourceAccess().getDefSourceDefinedEventCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getRuleSourceAccess().getDefSourceDefinedEventIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRuleSourceAccess().getDefSourceDefinedEventIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getRuleSourceAccess().getDefSourceDefinedEventCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSource__NewSourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSourceAccess().getNewSourceSourceParserRuleCall_1_0()); }
		ruleSource
		{ after(grammarAccess.getRuleSourceAccess().getNewSourceSourceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSource__PreSourceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSourceAccess().getPreSourcePREDEFINEDSOURCEParserRuleCall_2_0()); }
		rulePREDEFINEDSOURCE
		{ after(grammarAccess.getRuleSourceAccess().getPreSourcePREDEFINEDSOURCEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SOURCECONDITION__CondAttributeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSOURCECONDITIONAccess().getCondAttributeIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSOURCECONDITIONAccess().getCondAttributeIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SOURCECONDITION__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSOURCECONDITIONAccess().getOperatorOperatorParserRuleCall_1_0()); }
		ruleOperator
		{ after(grammarAccess.getSOURCECONDITIONAccess().getOperatorOperatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SOURCECONDITION__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSOURCECONDITIONAccess().getValueEcaValueParserRuleCall_2_0()); }
		ruleEcaValue
		{ after(grammarAccess.getSOURCECONDITIONAccess().getValueEcaValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QUERYCONDITION__QueryNotAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQUERYCONDITIONAccess().getQueryNotExclamationMarkKeyword_0_0()); }
		(
			{ before(grammarAccess.getQUERYCONDITIONAccess().getQueryNotExclamationMarkKeyword_0_0()); }
			'!'
			{ after(grammarAccess.getQUERYCONDITIONAccess().getQueryNotExclamationMarkKeyword_0_0()); }
		)
		{ after(grammarAccess.getQUERYCONDITIONAccess().getQueryNotExclamationMarkKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QUERYCONDITION__QueryFunctAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQUERYCONDITIONAccess().getQueryFunctRNDQUERYParserRuleCall_3_0()); }
		ruleRNDQUERY
		{ after(grammarAccess.getQUERYCONDITIONAccess().getQueryFunctRNDQUERYParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SYSTEMCONDITION__SystemAttributeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSYSTEMCONDITIONAccess().getSystemAttributeSYSTEMFUNCTIONParserRuleCall_1_0()); }
		ruleSYSTEMFUNCTION
		{ after(grammarAccess.getSYSTEMCONDITIONAccess().getSystemAttributeSYSTEMFUNCTIONParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SYSTEMCONDITION__OperatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSYSTEMCONDITIONAccess().getOperatorOperatorParserRuleCall_2_0()); }
		ruleOperator
		{ after(grammarAccess.getSYSTEMCONDITIONAccess().getOperatorOperatorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SYSTEMCONDITION__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSYSTEMCONDITIONAccess().getValueEcaValueParserRuleCall_3_0()); }
		ruleEcaValue
		{ after(grammarAccess.getSYSTEMCONDITIONAccess().getValueEcaValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FREECONDITION__FreeConditionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFREECONDITIONAccess().getFreeConditionSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getFREECONDITIONAccess().getFreeConditionSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MAPCONDITION__MapCondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMAPCONDITIONAccess().getMapCondSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMAPCONDITIONAccess().getMapCondSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTIONS__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getACTIONSAccess().getRightSUBACTIONSParserRuleCall_1_2_0()); }
		ruleSUBACTIONS
		{ after(grammarAccess.getACTIONSAccess().getRightSUBACTIONSParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUBACTIONS__ComActionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSUBACTIONSAccess().getComActionCOMMANDACTIONParserRuleCall_0()); }
		ruleCOMMANDACTION
		{ after(grammarAccess.getSUBACTIONSAccess().getComActionCOMMANDACTIONParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMMANDACTION__SubActnameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMMANDACTIONAccess().getSubActnameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCOMMANDACTIONAccess().getSubActnameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMMANDACTION__FunctActionAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMMANDACTIONAccess().getFunctActionRNDQUERYParserRuleCall_2_0_0()); }
		ruleRNDQUERY
		{ after(grammarAccess.getCOMMANDACTIONAccess().getFunctActionRNDQUERYParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMMANDACTION__ActionValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMMANDACTIONAccess().getActionValueEcaValueParserRuleCall_2_1_0()); }
		ruleEcaValue
		{ after(grammarAccess.getCOMMANDACTIONAccess().getActionValueEcaValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMMANDACTION__InnerActionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMMANDACTIONAccess().getInnerActionCOMMANDACTIONParserRuleCall_2_2_0()); }
		ruleCOMMANDACTION
		{ after(grammarAccess.getCOMMANDACTIONAccess().getInnerActionCOMMANDACTIONParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__PriOperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRNDQUERYAccess().getPriOperatorOperatorParserRuleCall_1_0()); }
		ruleOperator
		{ after(grammarAccess.getRNDQUERYAccess().getPriOperatorOperatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__PriValAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRNDQUERYAccess().getPriValINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getRNDQUERYAccess().getPriValINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__SelAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRNDQUERYAccess().getSelAlternatives_3_1_0()); }
		(rule__RNDQUERY__SelAlternatives_3_1_0)
		{ after(grammarAccess.getRNDQUERYAccess().getSelAlternatives_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNDQUERY__StateNameAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRNDQUERYAccess().getStateNameIDTerminalRuleCall_7_0()); }
		RULE_ID
		{ after(grammarAccess.getRNDQUERYAccess().getStateNameIDTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getSourceAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcaValue__IntValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcaValueAccess().getIntValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getEcaValueAccess().getIntValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcaValue__IdValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcaValueAccess().getIdValueIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEcaValueAccess().getIdValueIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcaValue__ConstValueAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcaValueAccess().getConstValueConstantCrossReference_2_0_1_0()); }
		(
			{ before(grammarAccess.getEcaValueAccess().getConstValueConstantIDTerminalRuleCall_2_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEcaValueAccess().getConstValueConstantIDTerminalRuleCall_2_0_1_0_1()); }
		)
		{ after(grammarAccess.getEcaValueAccess().getConstValueConstantCrossReference_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcaValue__StringValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcaValueAccess().getStringValueSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getEcaValueAccess().getStringValueSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcaValue__DoubleValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcaValueAccess().getDoubleValueDOUBLETerminalRuleCall_4_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getEcaValueAccess().getDoubleValueDOUBLETerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOUBLE : '-'? ('0'..'9')+ '.' '0'..'9';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
