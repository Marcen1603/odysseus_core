/* Generated By:JavaCC: Do not edit this line. NewSQLParserTreeConstants.java Version 5.0 */
package de.uniol.inf.is.odysseus.parser.cql.parser;

public interface NewSQLParserTreeConstants
{
  public int JJTSTATEMENT = 0;
  public int JJTDBEXECUTESTATEMENT = 1;
  public int JJTDATABASE = 2;
  public int JJTDBSELECTSTATEMENT = 3;
  public int JJTDATABASEOPTIONS = 4;
  public int JJTAS = 5;
  public int JJTSQL = 6;
  public int JJTPRIORIZEDSTATEMENT = 7;
  public int JJTCOMPLEXSELECTSTATEMENT = 8;
  public int JJTSELECTSTATEMENT = 9;
  public int JJTCREATESTATEMENT = 10;
  public int JJTCREATEFROMDATABASE = 11;
  public int JJTDATABASETIMESENSITIV = 12;
  public int JJTJDBCIDENTIFIER = 13;
  public int JJTCREATEVIEWSTATEMENT = 14;
  public int JJTCREATESENSOR = 15;
  public int JJTORSCHEMADEFINITION = 16;
  public int JJTRECORDDEFINITION = 17;
  public int JJTRECORDENTRYDEFINITION = 18;
  public int JJTLISTDEFINITION = 19;
  public int JJTATTRDEFINITION = 20;
  public int JJTATTRIBUTEDEFINITIONS = 21;
  public int JJTATTRIBUTEDEFINITION = 22;
  public int JJTTIMEDTUPLES = 23;
  public int JJTTIMEDTUPLE = 24;
  public int JJTTIMEINTERVAL = 25;
  public int JJTSOCKET = 26;
  public int JJTSILAB = 27;
  public int JJTCHANNEL = 28;
  public int JJTHOST = 29;
  public int JJTCSVSOURCE = 30;
  public int JJTSIMPLETUPLE = 31;
  public int JJTVOID = 32;
  public int JJTATTRIBUTETYPE = 33;
  public int JJTCOVARIANCEROW = 34;
  public int JJTDATEFORMAT = 35;
  public int JJTSETOPERATOR = 36;
  public int JJTSELECTCLAUSE = 37;
  public int JJTPROJECTIONMATRIX = 38;
  public int JJTPROJECTIONVECTOR = 39;
  public int JJTFROMCLAUSE = 40;
  public int JJTWHERECLAUSE = 41;
  public int JJTGROUPBYCLAUSE = 42;
  public int JJTHAVINGCLAUSE = 43;
  public int JJTSELECTALL = 44;
  public int JJTRENAMEDEXPRESSION = 45;
  public int JJTMATRIXEXPRESSION = 46;
  public int JJTPREDICATE = 47;
  public int JJTSIMPLEPREDICATE = 48;
  public int JJTBASICPREDICATE = 49;
  public int JJTSPATIALPREDICATE = 50;
  public int JJTPROBABILITYPREDICATE = 51;
  public int JJTPRIORITY = 52;
  public int JJTORPREDICATE = 53;
  public int JJTANDPREDICATE = 54;
  public int JJTNOTPREDICATE = 55;
  public int JJTQUANTIFICATIONPREDICATE = 56;
  public int JJTANYPREDICATE = 57;
  public int JJTALLPREDICATE = 58;
  public int JJTINPREDICATE = 59;
  public int JJTEXISTS = 60;
  public int JJTELEMENTPRIORITIES = 61;
  public int JJTELEMENTPRIORITY = 62;
  public int JJTDEFAULTPRIORITY = 63;
  public int JJTTUPLE = 64;
  public int JJTTUPLESET = 65;
  public int JJTQUANTIFICATIONOPERATOR = 66;
  public int JJTEXPRESSION = 67;
  public int JJTSIMPLETOKEN = 68;
  public int JJTFUNCTIONEXPRESSION = 69;
  public int JJTFUNCTIONNAME = 70;
  public int JJTAGGREGATEEXPRESSION = 71;
  public int JJTAGGREGATEFUNCTION = 72;
  public int JJTDISTINCTEXPRESSION = 73;
  public int JJTSIMPLESOURCE = 74;
  public int JJTSUBSELECT = 75;
  public int JJTSTREAMSQLWINDOW = 76;
  public int JJTPARTITION = 77;
  public int JJTADVANCE = 78;
  public int JJTSLIDE = 79;
  public int JJTIDENTIFIER = 80;
  public int JJTINTEGER = 81;
  public int JJTNUMBER = 82;
  public int JJTSTRING = 83;
  public int JJTCOMPAREOPERATOR = 84;
  public int JJTSPATIALCOMPAREOPERATOR = 85;
  public int JJTOSGI = 86;
  public int JJTCREATEBROKER = 87;
  public int JJTBROKERSOURCE = 88;
  public int JJTBROKERASSOURCE = 89;
  public int JJTBROKERSELECTINTO = 90;
  public int JJTBROKERSIMPLESOURCE = 91;
  public int JJTBROKERQUEUE = 92;
  public int JJTMETRIC = 93;
  public int JJTCREATEUSERSTATEMENT = 94;
  public int JJTALTERUSERSTATEMENT = 95;
  public int JJTCREATESLASTATEMENT = 96;
  public int JJTPERCENTILECONSTRAINT = 97;
  public int JJTCREATETENANTSTATEMENT = 98;
  public int JJTADDUSERTOTENANTSTATEMENT = 99;
  public int JJTREMOVEUSERFROMTENANTSTATEMENT = 100;
  public int JJTDROPSTREAMSTATEMENT = 101;
  public int JJTDROPVIEWSTATEMENT = 102;


  public String[] jjtNodeName = {
    "Statement",
    "DBExecuteStatement",
    "Database",
    "DBSelectStatement",
    "DatabaseOptions",
    "AS",
    "SQL",
    "PriorizedStatement",
    "ComplexSelectStatement",
    "SelectStatement",
    "CreateStatement",
    "CreateFromDatabase",
    "DatabaseTimeSensitiv",
    "JdbcIdentifier",
    "CreateViewStatement",
    "CreateSensor",
    "ORSchemaDefinition",
    "RecordDefinition",
    "RecordEntryDefinition",
    "ListDefinition",
    "AttrDefinition",
    "AttributeDefinitions",
    "AttributeDefinition",
    "TimedTuples",
    "TimedTuple",
    "TimeInterval",
    "Socket",
    "Silab",
    "Channel",
    "Host",
    "CSVSource",
    "SimpleTuple",
    "void",
    "AttributeType",
    "CovarianceRow",
    "DateFormat",
    "SetOperator",
    "SelectClause",
    "ProjectionMatrix",
    "ProjectionVector",
    "FromClause",
    "WhereClause",
    "GroupByClause",
    "HavingClause",
    "SelectAll",
    "RenamedExpression",
    "MatrixExpression",
    "Predicate",
    "SimplePredicate",
    "BasicPredicate",
    "SpatialPredicate",
    "ProbabilityPredicate",
    "Priority",
    "OrPredicate",
    "AndPredicate",
    "NotPredicate",
    "QuantificationPredicate",
    "AnyPredicate",
    "AllPredicate",
    "InPredicate",
    "Exists",
    "ElementPriorities",
    "ElementPriority",
    "DefaultPriority",
    "Tuple",
    "TupleSet",
    "QuantificationOperator",
    "Expression",
    "SimpleToken",
    "FunctionExpression",
    "FunctionName",
    "AggregateExpression",
    "AggregateFunction",
    "DistinctExpression",
    "SimpleSource",
    "Subselect",
    "StreamSQLWindow",
    "Partition",
    "Advance",
    "Slide",
    "Identifier",
    "Integer",
    "Number",
    "String",
    "CompareOperator",
    "SpatialCompareOperator",
    "OSGI",
    "CreateBroker",
    "BrokerSource",
    "BrokerAsSource",
    "BrokerSelectInto",
    "BrokerSimpleSource",
    "BrokerQueue",
    "Metric",
    "CreateUserStatement",
    "AlterUserStatement",
    "CreateSLAStatement",
    "PercentileConstraint",
    "CreateTenantStatement",
    "AddUserToTenantStatement",
    "RemoveUserFromTenantStatement",
    "DropStreamStatement",
    "DropViewStatement",
  };
}
/* JavaCC - OriginalChecksum=7637b77ed8fcdd98903d2365a563c359 (do not edit this line) */
