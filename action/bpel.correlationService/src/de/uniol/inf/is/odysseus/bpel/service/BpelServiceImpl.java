/** Copyright [2011] [The Odysseus Team]
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package de.uniol.inf.is.odysseus.bpel.service;

import java.util.HashMap;
import java.util.Map;


/**
 * This class was generated by Apache CXF 2.2.5
 * Thu Apr 08 13:13:21 CEST 2010
 * Generated source version: 2.2.5
 * 
 */

@javax.jws.WebService(
                      serviceName = "bpelService",
                      portName = "bpelServiceSOAP",
                      targetNamespace = "http://de.uni.ol.inf.is.odysseus/bpelService/",
                      wsdlLocation = "resources/bpelService.wsdl",
                      endpointInterface = "de.uniol.inf.is.odysseus.bpel.service.BpelService")
                      
public class BpelServiceImpl implements BpelService {
	private Map<Integer, Integer> maintainedMachines;
    
	public BpelServiceImpl(){
		this.maintainedMachines = new HashMap<Integer, Integer>();
	}
	
	/* (non-Javadoc)
     * @see de.uniol.inf.is.odysseus.bpel.service.BpelService#getCorrelation(java.lang.String  uri )*
     */
    @Override
	public java.lang.String getCorrelation(java.lang.String uri) { 
       return ""+uri.hashCode()+System.currentTimeMillis();
    }

    /* (non-Javadoc)
     * @see de.uniol.inf.is.odysseus.bpel.service.BpelService#checkIfMachineIsMaintained(int  tool )*
     */
    @Override
	public int checkIfMachineIsMaintained(int machine) { 
        Integer maintainedBy = this.maintainedMachines.get(machine);
        if (maintainedBy == null){
        	this.maintainedMachines.put(machine, 1);
        	return 0;
        }
        return maintainedBy;
    }

	@Override
	public void machineSuccessfullyMaintained(int maintainedMachine) {
		Integer maintainedBy = this.maintainedMachines.get(maintainedMachine);
	    if (maintainedBy != null){
	    	maintainedBy--;
	    	this.maintainedMachines.put(maintainedMachine, maintainedBy);
	    }
	}

}
