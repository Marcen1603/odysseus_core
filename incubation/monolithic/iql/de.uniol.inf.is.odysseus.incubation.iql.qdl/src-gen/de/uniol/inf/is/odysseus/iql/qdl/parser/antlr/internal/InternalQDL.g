/*
* generated by Xtext
*/
grammar InternalQDL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.uniol.inf.is.odysseus.iql.qdl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.uniol.inf.is.odysseus.iql.qdl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.uniol.inf.is.odysseus.iql.qdl.services.QDLGrammarAccess;

}

@parser::members {

 	private QDLGrammarAccess grammarAccess;
 	
    public InternalQDLParser(TokenStream input, QDLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "QDLModel";	
   	}
   	
   	@Override
   	protected QDLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleQDLModel
entryRuleQDLModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQDLModelRule()); }
	 iv_ruleQDLModel=ruleQDLModel 
	 { $current=$iv_ruleQDLModel.current; } 
	 EOF 
;

// Rule QDLModel
ruleQDLModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getQDLModelAccess().getNamespacesIQLNamespaceParserRuleCall_0_0()); 
	    }
		lv_namespaces_0_0=ruleIQLNamespace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQDLModelRule());
	        }
       		add(
       			$current, 
       			"namespaces",
        		lv_namespaces_0_0, 
        		"IQLNamespace");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getQDLModelAccess().getElementsQDLModelElementParserRuleCall_1_0()); 
	    }
		lv_elements_1_0=ruleQDLModelElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQDLModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_1_0, 
        		"QDLModelElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleQDLModelElement
entryRuleQDLModelElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQDLModelElementRule()); }
	 iv_ruleQDLModelElement=ruleQDLModelElement 
	 { $current=$iv_ruleQDLModelElement.current; } 
	 EOF 
;

// Rule QDLModelElement
ruleQDLModelElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getQDLModelElementAccess().getJavametadataIQLJavaMetadataParserRuleCall_0_0()); 
	    }
		lv_javametadata_0_0=ruleIQLJavaMetadata		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQDLModelElementRule());
	        }
       		add(
       			$current, 
       			"javametadata",
        		lv_javametadata_0_0, 
        		"IQLJavaMetadata");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
(
		{ 
	        newCompositeNode(grammarAccess.getQDLModelElementAccess().getInnerIQLClassParserRuleCall_1_0_0()); 
	    }
		lv_inner_1_1=ruleIQLClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQDLModelElementRule());
	        }
       		set(
       			$current, 
       			"inner",
        		lv_inner_1_1, 
        		"IQLClass");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getQDLModelElementAccess().getInnerIQLInterfaceParserRuleCall_1_0_1()); 
	    }
		lv_inner_1_2=ruleIQLInterface		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQDLModelElementRule());
	        }
       		set(
       			$current, 
       			"inner",
        		lv_inner_1_2, 
        		"IQLInterface");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getQDLModelElementAccess().getInnerQDLQueryParserRuleCall_1_0_2()); 
	    }
		lv_inner_1_3=ruleQDLQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQDLModelElementRule());
	        }
       		set(
       			$current, 
       			"inner",
        		lv_inner_1_3, 
        		"QDLQuery");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
;





// Entry rule entryRuleQDLQuery
entryRuleQDLQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQDLQueryRule()); }
	 iv_ruleQDLQuery=ruleQDLQuery 
	 { $current=$iv_ruleQDLQuery.current; } 
	 EOF 
;

// Rule QDLQuery
ruleQDLQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getQDLQueryAccess().getQDLQueryAction_0(),
            $current);
    }
)	otherlv_1='query' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQDLQueryAccess().getQueryKeyword_1());
    }
(
(
		lv_simpleName_2_0=RULE_ID
		{
			newLeafNode(lv_simpleName_2_0, grammarAccess.getQDLQueryAccess().getSimpleNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQDLQueryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"simpleName",
        		lv_simpleName_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQDLQueryAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQDLQueryAccess().getMetadataListIQLMetadataListParserRuleCall_3_1_0()); 
	    }
		lv_metadataList_4_0=ruleIQLMetadataList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQDLQueryRule());
	        }
       		set(
       			$current, 
       			"metadataList",
        		lv_metadataList_4_0, 
        		"IQLMetadataList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getQDLQueryAccess().getRightParenthesisKeyword_3_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getQDLQueryAccess().getStatementsIQLStatementBlockParserRuleCall_4_0()); 
	    }
		lv_statements_6_0=ruleIQLStatementBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQDLQueryRule());
	        }
       		set(
       			$current, 
       			"statements",
        		lv_statements_6_0, 
        		"IQLStatementBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIQLRelationalExpression
entryRuleIQLRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLRelationalExpressionRule()); }
	 iv_ruleIQLRelationalExpression=ruleIQLRelationalExpression 
	 { $current=$iv_ruleIQLRelationalExpression.current; } 
	 EOF 
;

// Rule IQLRelationalExpression
ruleIQLRelationalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIQLRelationalExpressionAccess().getIQLSubscribeExpressionParserRuleCall_0()); 
    }
    this_IQLSubscribeExpression_0=ruleIQLSubscribeExpression
    { 
        $current = $this_IQLSubscribeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'instanceof' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIQLRelationalExpressionAccess().getIQLInstanceOfExpressionLeftOperandAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='instanceof' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIQLRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLRelationalExpressionAccess().getTargetRefJvmTypeReferenceParserRuleCall_1_0_1_0()); 
	    }
		lv_targetRef_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"targetRef",
        		lv_targetRef_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(
(
ruleOpRelational
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIQLRelationalExpressionAccess().getIQLRelationalExpressionLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLRelationalExpressionAccess().getOpOpRelationalParserRuleCall_1_1_0_0_1_0()); 
	    }
		lv_op_5_0=ruleOpRelational		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_5_0, 
        		"OpRelational");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLRelationalExpressionAccess().getRightOperandIQLSubscribeExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_6_0=ruleIQLSubscribeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_6_0, 
        		"IQLSubscribeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleIQLSubscribeExpression
entryRuleIQLSubscribeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLSubscribeExpressionRule()); }
	 iv_ruleIQLSubscribeExpression=ruleIQLSubscribeExpression 
	 { $current=$iv_ruleIQLSubscribeExpression.current; } 
	 EOF 
;

// Rule IQLSubscribeExpression
ruleIQLSubscribeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIQLSubscribeExpressionAccess().getIQLPortExpressionParserRuleCall_0()); 
    }
    this_IQLPortExpression_0=ruleIQLPortExpression
    { 
        $current = $this_IQLPortExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleIQLSubscribe
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIQLSubscribeExpressionAccess().getIQLSubscribeExpressionLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLSubscribeExpressionAccess().getOpIQLSubscribeParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleIQLSubscribe		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLSubscribeExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"IQLSubscribe");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLSubscribeExpressionAccess().getRightOperandIQLPortExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleIQLPortExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLSubscribeExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"IQLPortExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleIQLPortExpression
entryRuleIQLPortExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLPortExpressionRule()); }
	 iv_ruleIQLPortExpression=ruleIQLPortExpression 
	 { $current=$iv_ruleIQLPortExpression.current; } 
	 EOF 
;

// Rule IQLPortExpression
ruleIQLPortExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIQLPortExpressionAccess().getIQLAdditiveExpressionParserRuleCall_0()); 
    }
    this_IQLAdditiveExpression_0=ruleIQLAdditiveExpression
    { 
        $current = $this_IQLAdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
	':' 
 

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIQLPortExpressionAccess().getIQLPortExpressionLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_op_2_0=	':' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getIQLPortExpressionAccess().getOpColonKeyword_1_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLPortExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, ":");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLPortExpressionAccess().getRightOperandIQLAdditiveExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleIQLAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLPortExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"IQLAdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleIQLSubscribe
entryRuleIQLSubscribe returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLSubscribeRule()); } 
	 iv_ruleIQLSubscribe=ruleIQLSubscribe 
	 { $current=$iv_ruleIQLSubscribe.current.getText(); }  
	 EOF 
;

// Rule IQLSubscribe
ruleIQLSubscribe returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='->' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLSubscribeAccess().getHyphenMinusGreaterThanSignKeyword_0()); 
    }

    |
	kw='<-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLSubscribeAccess().getLessThanSignHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleIQLMetadataValueSingle
entryRuleIQLMetadataValueSingle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLMetadataValueSingleRule()); }
	 iv_ruleIQLMetadataValueSingle=ruleIQLMetadataValueSingle 
	 { $current=$iv_ruleIQLMetadataValueSingle.current; } 
	 EOF 
;

// Rule IQLMetadataValueSingle
ruleIQLMetadataValueSingle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLMetadataValueSingleAccess().getIQLMetadataValueSingleIntAction_0_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getIQLMetadataValueSingleAccess().getValueINTTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLMetadataValueSingleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLMetadataValueSingleAccess().getIQLMetadataValueSingleDoubleAction_1_0(),
            $current);
    }
)(
(
		lv_value_3_0=RULE_DOUBLE
		{
			newLeafNode(lv_value_3_0, grammarAccess.getIQLMetadataValueSingleAccess().getValueDOUBLETerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLMetadataValueSingleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"DOUBLE");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLMetadataValueSingleAccess().getIQLMetadataValueSingleStringAction_2_0(),
            $current);
    }
)(
(
		lv_value_5_0=RULE_STRING
		{
			newLeafNode(lv_value_5_0, grammarAccess.getIQLMetadataValueSingleAccess().getValueSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLMetadataValueSingleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"STRING");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLMetadataValueSingleAccess().getIQLMetadataValueSingleBooleanAction_3_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMetadataValueSingleAccess().getValueBOOLEANParserRuleCall_3_1_0()); 
	    }
		lv_value_7_0=ruleBOOLEAN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMetadataValueSingleRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"BOOLEAN");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((((
)(
(
RULE_ID

)
)))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLMetadataValueSingleAccess().getQDLMetadataValueSingleIDAction_4_0_0(),
            $current);
    }
)(
(
		lv_value_9_0=RULE_ID
		{
			newLeafNode(lv_value_9_0, grammarAccess.getIQLMetadataValueSingleAccess().getValueIDTerminalRuleCall_4_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLMetadataValueSingleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_9_0, 
        		"ID");
	    }

)
)))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLMetadataValueSingleAccess().getIQLMetadataValueSingleTypeRefAction_5_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMetadataValueSingleAccess().getValueJvmTypeReferenceParserRuleCall_5_1_0()); 
	    }
		lv_value_11_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMetadataValueSingleRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_11_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLMetadataValueSingleAccess().getIQLMetadataValueSingleNullAction_6_0(),
            $current);
    }
)	otherlv_13='null' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIQLMetadataValueSingleAccess().getNullKeyword_6_1());
    }
))
;





// Entry rule entryRuleIQLJavaText
entryRuleIQLJavaText returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLJavaTextRule()); } 
	 iv_ruleIQLJavaText=ruleIQLJavaText 
	 { $current=$iv_ruleIQLJavaText.current.getText(); }  
	 EOF 
;

// Rule IQLJavaText
ruleIQLJavaText returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIQLJavaTextAccess().getIQL_JAVA_KEYWORDSParserRuleCall_0()); 
    }
    this_IQL_JAVA_KEYWORDS_0=ruleIQL_JAVA_KEYWORDS    {
		$current.merge(this_IQL_JAVA_KEYWORDS_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_WS_1=RULE_WS    {
		$current.merge(this_WS_1);
    }

    { 
    newLeafNode(this_WS_1, grammarAccess.getIQLJavaTextAccess().getWSTerminalRuleCall_1()); 
    }

    |    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getIQLJavaTextAccess().getIDTerminalRuleCall_2()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLJavaTextAccess().getBOOLEANParserRuleCall_3()); 
    }
    this_BOOLEAN_3=ruleBOOLEAN    {
		$current.merge(this_BOOLEAN_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_DOUBLE_4=RULE_DOUBLE    {
		$current.merge(this_DOUBLE_4);
    }

    { 
    newLeafNode(this_DOUBLE_4, grammarAccess.getIQLJavaTextAccess().getDOUBLETerminalRuleCall_4()); 
    }

    |    this_STRING_5=RULE_STRING    {
		$current.merge(this_STRING_5);
    }

    { 
    newLeafNode(this_STRING_5, grammarAccess.getIQLJavaTextAccess().getSTRINGTerminalRuleCall_5()); 
    }

    |    this_INT_6=RULE_INT    {
		$current.merge(this_INT_6);
    }

    { 
    newLeafNode(this_INT_6, grammarAccess.getIQLJavaTextAccess().getINTTerminalRuleCall_6()); 
    }

    |    this_ANY_OTHER_7=RULE_ANY_OTHER    {
		$current.merge(this_ANY_OTHER_7);
    }

    { 
    newLeafNode(this_ANY_OTHER_7, grammarAccess.getIQLJavaTextAccess().getANY_OTHERTerminalRuleCall_7()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getPlusSignKeyword_8()); 
    }

    |
	kw='+=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getPlusSignEqualsSignKeyword_9()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getHyphenMinusKeyword_10()); 
    }

    |
	kw='-=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getHyphenMinusEqualsSignKeyword_11()); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getAsteriskKeyword_12()); 
    }

    |
	kw='*=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getAsteriskEqualsSignKeyword_13()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getSolidusKeyword_14()); 
    }

    |
	kw='/=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getSolidusEqualsSignKeyword_15()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getPercentSignKeyword_16()); 
    }

    |
	kw='%=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getPercentSignEqualsSignKeyword_17()); 
    }

    |
	kw='++' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getPlusSignPlusSignKeyword_18()); 
    }

    |
	kw='--' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getHyphenMinusHyphenMinusKeyword_19()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getGreaterThanSignKeyword_20()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getGreaterThanSignEqualsSignKeyword_21()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getLessThanSignKeyword_22()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getLessThanSignEqualsSignKeyword_23()); 
    }

    |
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getExclamationMarkKeyword_24()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getExclamationMarkEqualsSignKeyword_25()); 
    }

    |
	kw='&&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getAmpersandAmpersandKeyword_26()); 
    }

    |
	kw='||' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getVerticalLineVerticalLineKeyword_27()); 
    }

    |
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getEqualsSignEqualsSignKeyword_28()); 
    }

    |
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getEqualsSignKeyword_29()); 
    }

    |
	kw='~' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getTildeKeyword_30()); 
    }

    |
	kw='?:' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getQuestionMarkColonKeyword_31()); 
    }

    |
	kw='|' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getVerticalLineKeyword_32()); 
    }

    |
	kw='|=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getVerticalLineEqualsSignKeyword_33()); 
    }

    |
	kw='^' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getCircumflexAccentKeyword_34()); 
    }

    |
	kw='^=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getCircumflexAccentEqualsSignKeyword_35()); 
    }

    |
	kw='&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getAmpersandKeyword_36()); 
    }

    |
	kw='&=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getAmpersandEqualsSignKeyword_37()); 
    }

    |
	kw='>>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getGreaterThanSignGreaterThanSignKeyword_38()); 
    }

    |
	kw='>>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_39()); 
    }

    |
	kw='<<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getLessThanSignLessThanSignKeyword_40()); 
    }

    |
	kw='<<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getLessThanSignLessThanSignEqualsSignKeyword_41()); 
    }

    |
	kw='>>>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_42()); 
    }

    |
	kw='>>>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getGreaterThanSignGreaterThanSignGreaterThanSignEqualsSignKeyword_43()); 
    }

    |
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getLeftSquareBracketKeyword_44()); 
    }

    |
	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getRightSquareBracketKeyword_45()); 
    }

    |
	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getLeftCurlyBracketKeyword_46()); 
    }

    |
	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getRightCurlyBracketKeyword_47()); 
    }

    |
	kw='(' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getLeftParenthesisKeyword_48()); 
    }

    |
	kw=')' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getRightParenthesisKeyword_49()); 
    }

    |
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getFullStopKeyword_50()); 
    }

    |
	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getColonKeyword_51()); 
    }

    |
	kw=';' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getSemicolonKeyword_52()); 
    }

    |
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getCommaKeyword_53()); 
    }

    |
	kw='null' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getNullKeyword_54()); 
    }

    |
	kw='query' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQLJavaTextAccess().getQueryKeyword_55()); 
    }
)*
    ;







// Entry rule entryRuleIQLModelElement
entryRuleIQLModelElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLModelElementRule()); }
	 iv_ruleIQLModelElement=ruleIQLModelElement 
	 { $current=$iv_ruleIQLModelElement.current; } 
	 EOF 
;

// Rule IQLModelElement
ruleIQLModelElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLModelElementAccess().getJavametadataIQLJavaMetadataParserRuleCall_0_0()); 
	    }
		lv_javametadata_0_0=ruleIQLJavaMetadata		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLModelElementRule());
	        }
       		add(
       			$current, 
       			"javametadata",
        		lv_javametadata_0_0, 
        		"IQLJavaMetadata");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLModelElementAccess().getInnerIQLClassParserRuleCall_1_0_0()); 
	    }
		lv_inner_1_1=ruleIQLClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLModelElementRule());
	        }
       		set(
       			$current, 
       			"inner",
        		lv_inner_1_1, 
        		"IQLClass");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getIQLModelElementAccess().getInnerIQLInterfaceParserRuleCall_1_0_1()); 
	    }
		lv_inner_1_2=ruleIQLInterface		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLModelElementRule());
	        }
       		set(
       			$current, 
       			"inner",
        		lv_inner_1_2, 
        		"IQLInterface");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
;





// Entry rule entryRuleIQLNamespace
entryRuleIQLNamespace returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLNamespaceRule()); }
	 iv_ruleIQLNamespace=ruleIQLNamespace 
	 { $current=$iv_ruleIQLNamespace.current; } 
	 EOF 
;

// Rule IQLNamespace
ruleIQLNamespace returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='use' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIQLNamespaceAccess().getUseKeyword_0());
    }
(
(
		lv_static_1_0=	'static' 
    {
        newLeafNode(lv_static_1_0, grammarAccess.getIQLNamespaceAccess().getStaticStaticKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLNamespaceRule());
	        }
       		setWithLastConsumed($current, "static", true, "static");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLNamespaceAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_2_0()); 
	    }
		lv_importedNamespace_2_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLNamespaceRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_2_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLNamespaceAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleIQLClass
entryRuleIQLClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLClassRule()); }
	 iv_ruleIQLClass=ruleIQLClass 
	 { $current=$iv_ruleIQLClass.current; } 
	 EOF 
;

// Rule IQLClass
ruleIQLClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLClassAccess().getIQLClassAction_0(),
            $current);
    }
)	otherlv_1='class' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLClassAccess().getClassKeyword_1());
    }
(
(
		lv_simpleName_2_0=RULE_ID
		{
			newLeafNode(lv_simpleName_2_0, grammarAccess.getIQLClassAccess().getSimpleNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"simpleName",
        		lv_simpleName_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='extends' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLClassAccess().getExtendsKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLClassAccess().getExtendedClassJvmTypeReferenceParserRuleCall_3_1_0()); 
	    }
		lv_extendedClass_4_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLClassRule());
	        }
       		set(
       			$current, 
       			"extendedClass",
        		lv_extendedClass_4_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='implements' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIQLClassAccess().getImplementsKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLClassAccess().getExtendedInterfacesJvmTypeReferenceParserRuleCall_4_1_0()); 
	    }
		lv_extendedInterfaces_6_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLClassRule());
	        }
       		add(
       			$current, 
       			"extendedInterfaces",
        		lv_extendedInterfaces_6_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIQLClassAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLClassAccess().getExtendedInterfacesJvmTypeReferenceParserRuleCall_4_2_1_0()); 
	    }
		lv_extendedInterfaces_8_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLClassRule());
	        }
       		add(
       			$current, 
       			"extendedInterfaces",
        		lv_extendedInterfaces_8_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIQLClassAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLClassAccess().getMembersIQLAttributeParserRuleCall_6_0_0()); 
	    }
		lv_members_10_1=ruleIQLAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLClassRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_10_1, 
        		"IQLAttribute");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getIQLClassAccess().getMembersIQLMethodParserRuleCall_6_0_1()); 
	    }
		lv_members_10_2=ruleIQLMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLClassRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_10_2, 
        		"IQLMethod");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getIQLClassAccess().getMembersIQLJavaMemberParserRuleCall_6_0_2()); 
	    }
		lv_members_10_3=ruleIQLJavaMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLClassRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_10_3, 
        		"IQLJavaMember");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIQLClassAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleIQLInterface
entryRuleIQLInterface returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLInterfaceRule()); }
	 iv_ruleIQLInterface=ruleIQLInterface 
	 { $current=$iv_ruleIQLInterface.current; } 
	 EOF 
;

// Rule IQLInterface
ruleIQLInterface returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLInterfaceAccess().getIQLInterfaceAction_0(),
            $current);
    }
)	otherlv_1='interface' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLInterfaceAccess().getInterfaceKeyword_1());
    }
(
(
		lv_simpleName_2_0=RULE_ID
		{
			newLeafNode(lv_simpleName_2_0, grammarAccess.getIQLInterfaceAccess().getSimpleNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLInterfaceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"simpleName",
        		lv_simpleName_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='extends' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLInterfaceAccess().getExtendsKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLInterfaceAccess().getExtendedInterfacesJvmTypeReferenceParserRuleCall_3_1_0()); 
	    }
		lv_extendedInterfaces_4_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLInterfaceRule());
	        }
       		add(
       			$current, 
       			"extendedInterfaces",
        		lv_extendedInterfaces_4_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIQLInterfaceAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLInterfaceAccess().getExtendedInterfacesJvmTypeReferenceParserRuleCall_3_2_1_0()); 
	    }
		lv_extendedInterfaces_6_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLInterfaceRule());
	        }
       		add(
       			$current, 
       			"extendedInterfaces",
        		lv_extendedInterfaces_6_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))?)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIQLInterfaceAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLInterfaceAccess().getMembersIQLMethodDeclarationParserRuleCall_5_0_0()); 
	    }
		lv_members_8_1=ruleIQLMethodDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLInterfaceRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_8_1, 
        		"IQLMethodDeclaration");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getIQLInterfaceAccess().getMembersIQLJavaMemberParserRuleCall_5_0_1()); 
	    }
		lv_members_8_2=ruleIQLJavaMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLInterfaceRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_8_2, 
        		"IQLJavaMember");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIQLInterfaceAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleIQLJavaMetadata
entryRuleIQLJavaMetadata returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLJavaMetadataRule()); }
	 iv_ruleIQLJavaMetadata=ruleIQLJavaMetadata 
	 { $current=$iv_ruleIQLJavaMetadata.current; } 
	 EOF 
;

// Rule IQLJavaMetadata
ruleIQLJavaMetadata returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLJavaMetadataAccess().getJavaIQLJavaParserRuleCall_0()); 
	    }
		lv_java_0_0=ruleIQLJava		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLJavaMetadataRule());
	        }
       		set(
       			$current, 
       			"java",
        		lv_java_0_0, 
        		"IQLJava");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleIQLAttribute
entryRuleIQLAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLAttributeRule()); }
	 iv_ruleIQLAttribute=ruleIQLAttribute 
	 { $current=$iv_ruleIQLAttribute.current; } 
	 EOF 
;

// Rule IQLAttribute
ruleIQLAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLAttributeAccess().getIQLAttributeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLAttributeAccess().getTypeJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_simpleName_2_0=RULE_ID
		{
			newLeafNode(lv_simpleName_2_0, grammarAccess.getIQLAttributeAccess().getSimpleNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"simpleName",
        		lv_simpleName_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLAttributeAccess().getInitIQLVariableInitializationParserRuleCall_3_0()); 
	    }
		lv_init_3_0=ruleIQLVariableInitialization		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLAttributeRule());
	        }
       		set(
       			$current, 
       			"init",
        		lv_init_3_0, 
        		"IQLVariableInitialization");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIQLAttributeAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); }
	 iv_ruleJvmTypeReference=ruleJvmTypeReference 
	 { $current=$iv_ruleJvmTypeReference.current; } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getIQLSimpleTypeRefParserRuleCall_0()); 
    }
    this_IQLSimpleTypeRef_0=ruleIQLSimpleTypeRef
    { 
        $current = $this_IQLSimpleTypeRef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getIQLArrayTypeRefParserRuleCall_1()); 
    }
    this_IQLArrayTypeRef_1=ruleIQLArrayTypeRef
    { 
        $current = $this_IQLArrayTypeRef_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIQLSimpleTypeRef
entryRuleIQLSimpleTypeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLSimpleTypeRefRule()); }
	 iv_ruleIQLSimpleTypeRef=ruleIQLSimpleTypeRef 
	 { $current=$iv_ruleIQLSimpleTypeRef.current; } 
	 EOF 
;

// Rule IQLSimpleTypeRef
ruleIQLSimpleTypeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLSimpleTypeRefAccess().getIQLSimpleTypeRefAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLSimpleTypeRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIQLSimpleTypeRefAccess().getTypeJvmTypeCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIQLArrayTypeRef
entryRuleIQLArrayTypeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLArrayTypeRefRule()); }
	 iv_ruleIQLArrayTypeRef=ruleIQLArrayTypeRef 
	 { $current=$iv_ruleIQLArrayTypeRef.current; } 
	 EOF 
;

// Rule IQLArrayTypeRef
ruleIQLArrayTypeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLArrayTypeRefAccess().getIQLArrayTypeRefAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLArrayTypeRefAccess().getTypeIQLArrayTypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleIQLArrayType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLArrayTypeRefRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"IQLArrayType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIQLArrayType
entryRuleIQLArrayType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLArrayTypeRule()); }
	 iv_ruleIQLArrayType=ruleIQLArrayType 
	 { $current=$iv_ruleIQLArrayType.current; } 
	 EOF 
;

// Rule IQLArrayType
ruleIQLArrayType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLArrayTypeAccess().getIQLArrayTypeAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLArrayTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIQLArrayTypeAccess().getComponentTypeJvmTypeCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLArrayTypeAccess().getDimensionsArrayBracketsParserRuleCall_2_0()); 
	    }
		lv_dimensions_2_0=ruleArrayBrackets		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLArrayTypeRule());
	        }
       		add(
       			$current, 
       			"dimensions",
        		lv_dimensions_2_0, 
        		"ArrayBrackets");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleArrayBrackets
entryRuleArrayBrackets returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayBracketsRule()); } 
	 iv_ruleArrayBrackets=ruleArrayBrackets 
	 { $current=$iv_ruleArrayBrackets.current.getText(); }  
	 EOF 
;

// Rule ArrayBrackets
ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmFormalParameterRule()); }
	 iv_ruleJvmFormalParameter=ruleJvmFormalParameter 
	 { $current=$iv_ruleJvmFormalParameter.current; } 
	 EOF 
;

// Rule JvmFormalParameter
ruleJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterType_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getJvmFormalParameterAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmFormalParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleIQLMethod
entryRuleIQLMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLMethodRule()); }
	 iv_ruleIQLMethod=ruleIQLMethod 
	 { $current=$iv_ruleIQLMethod.current; } 
	 EOF 
;

// Rule IQLMethod
ruleIQLMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLMethodAccess().getIQLMethodAction_0(),
            $current);
    }
)(
(
		lv_override_1_0=	'override' 
    {
        newLeafNode(lv_override_1_0, grammarAccess.getIQLMethodAccess().getOverrideOverrideKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLMethodRule());
	        }
       		setWithLastConsumed($current, "override", true, "override");
	    }

)
)?(
(
		lv_simpleName_2_0=RULE_ID
		{
			newLeafNode(lv_simpleName_2_0, grammarAccess.getIQLMethodAccess().getSimpleNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"simpleName",
        		lv_simpleName_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLMethodAccess().getLeftParenthesisKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMethodAccess().getParametersJvmFormalParameterParserRuleCall_3_1_0_0()); 
	    }
		lv_parameters_4_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMethodRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_4_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIQLMethodAccess().getCommaKeyword_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMethodAccess().getParametersJvmFormalParameterParserRuleCall_3_1_1_1_0()); 
	    }
		lv_parameters_6_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMethodRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_6_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIQLMethodAccess().getRightParenthesisKeyword_3_2());
    }
)?(	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIQLMethodAccess().getColonKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMethodAccess().getReturnTypeJvmTypeReferenceParserRuleCall_4_1_0()); 
	    }
		lv_returnType_9_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMethodRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_9_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMethodAccess().getBodyIQLStatementBlockParserRuleCall_5_0()); 
	    }
		lv_body_10_0=ruleIQLStatementBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMethodRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_10_0, 
        		"IQLStatementBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIQLMethodDeclaration
entryRuleIQLMethodDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLMethodDeclarationRule()); }
	 iv_ruleIQLMethodDeclaration=ruleIQLMethodDeclaration 
	 { $current=$iv_ruleIQLMethodDeclaration.current; } 
	 EOF 
;

// Rule IQLMethodDeclaration
ruleIQLMethodDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLMethodDeclarationAccess().getIQLMethodDeclarationAction_0(),
            $current);
    }
)(
(
		lv_simpleName_1_0=RULE_ID
		{
			newLeafNode(lv_simpleName_1_0, grammarAccess.getIQLMethodDeclarationAccess().getSimpleNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLMethodDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"simpleName",
        		lv_simpleName_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIQLMethodDeclarationAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMethodDeclarationAccess().getParametersJvmFormalParameterParserRuleCall_3_0_0()); 
	    }
		lv_parameters_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMethodDeclarationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIQLMethodDeclarationAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMethodDeclarationAccess().getParametersJvmFormalParameterParserRuleCall_3_1_1_0()); 
	    }
		lv_parameters_5_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMethodDeclarationRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIQLMethodDeclarationAccess().getRightParenthesisKeyword_4());
    }
(	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIQLMethodDeclarationAccess().getColonKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMethodDeclarationAccess().getReturnTypeJvmTypeReferenceParserRuleCall_5_1_0()); 
	    }
		lv_returnType_8_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMethodDeclarationRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_8_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIQLMethodDeclarationAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleIQLJavaMember
entryRuleIQLJavaMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLJavaMemberRule()); }
	 iv_ruleIQLJavaMember=ruleIQLJavaMember 
	 { $current=$iv_ruleIQLJavaMember.current; } 
	 EOF 
;

// Rule IQLJavaMember
ruleIQLJavaMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLJavaMemberAccess().getIQLJavaMemberAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLJavaMemberAccess().getJavaIQLJavaParserRuleCall_1_0()); 
	    }
		lv_java_1_0=ruleIQLJava		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLJavaMemberRule());
	        }
       		set(
       			$current, 
       			"java",
        		lv_java_1_0, 
        		"IQLJava");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIQLMetadataList
entryRuleIQLMetadataList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLMetadataListRule()); }
	 iv_ruleIQLMetadataList=ruleIQLMetadataList 
	 { $current=$iv_ruleIQLMetadataList.current; } 
	 EOF 
;

// Rule IQLMetadataList
ruleIQLMetadataList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMetadataListAccess().getElementsIQLMetadataParserRuleCall_0_0()); 
	    }
		lv_elements_0_0=ruleIQLMetadata		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMetadataListRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"IQLMetadata");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLMetadataListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMetadataListAccess().getElementsIQLMetadataParserRuleCall_1_1_0()); 
	    }
		lv_elements_2_0=ruleIQLMetadata		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMetadataListRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"IQLMetadata");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleIQLMetadata
entryRuleIQLMetadata returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLMetadataRule()); }
	 iv_ruleIQLMetadata=ruleIQLMetadata 
	 { $current=$iv_ruleIQLMetadata.current; } 
	 EOF 
;

// Rule IQLMetadata
ruleIQLMetadata returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getIQLMetadataAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLMetadataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLMetadataAccess().getEqualsSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMetadataAccess().getValueIQLMetadataValueParserRuleCall_1_1_0()); 
	    }
		lv_value_2_0=ruleIQLMetadataValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMetadataRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"IQLMetadataValue");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleIQLMetadataValue
entryRuleIQLMetadataValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLMetadataValueRule()); }
	 iv_ruleIQLMetadataValue=ruleIQLMetadataValue 
	 { $current=$iv_ruleIQLMetadataValue.current; } 
	 EOF 
;

// Rule IQLMetadataValue
ruleIQLMetadataValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIQLMetadataValueAccess().getIQLMetadataValueSingleParserRuleCall_0()); 
    }
    this_IQLMetadataValueSingle_0=ruleIQLMetadataValueSingle
    { 
        $current = $this_IQLMetadataValueSingle_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLMetadataValueAccess().getIQLMetadataValueListParserRuleCall_1()); 
    }
    this_IQLMetadataValueList_1=ruleIQLMetadataValueList
    { 
        $current = $this_IQLMetadataValueList_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLMetadataValueAccess().getIQLMetadataValueMapParserRuleCall_2()); 
    }
    this_IQLMetadataValueMap_2=ruleIQLMetadataValueMap
    { 
        $current = $this_IQLMetadataValueMap_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIQLMetadataValueList
entryRuleIQLMetadataValueList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLMetadataValueListRule()); }
	 iv_ruleIQLMetadataValueList=ruleIQLMetadataValueList 
	 { $current=$iv_ruleIQLMetadataValueList.current; } 
	 EOF 
;

// Rule IQLMetadataValueList
ruleIQLMetadataValueList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLMetadataValueListAccess().getIQLMetadataValueListAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLMetadataValueListAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMetadataValueListAccess().getElementsIQLMetadataValueParserRuleCall_2_0_0()); 
	    }
		lv_elements_2_0=ruleIQLMetadataValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMetadataValueListRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"IQLMetadataValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLMetadataValueListAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMetadataValueListAccess().getElementsIQLMetadataValueParserRuleCall_2_1_1_0()); 
	    }
		lv_elements_4_0=ruleIQLMetadataValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMetadataValueListRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"IQLMetadataValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIQLMetadataValueListAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleIQLMetadataValueMap
entryRuleIQLMetadataValueMap returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLMetadataValueMapRule()); }
	 iv_ruleIQLMetadataValueMap=ruleIQLMetadataValueMap 
	 { $current=$iv_ruleIQLMetadataValueMap.current; } 
	 EOF 
;

// Rule IQLMetadataValueMap
ruleIQLMetadataValueMap returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLMetadataValueMapAccess().getIQLMetadataValueMapAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLMetadataValueMapAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMetadataValueMapAccess().getElementsIQLMetadataValueMapElementParserRuleCall_2_0_0()); 
	    }
		lv_elements_2_0=ruleIQLMetadataValueMapElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMetadataValueMapRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"IQLMetadataValueMapElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLMetadataValueMapAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMetadataValueMapAccess().getElementsIQLMetadataValueMapElementParserRuleCall_2_1_1_0()); 
	    }
		lv_elements_4_0=ruleIQLMetadataValueMapElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMetadataValueMapRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"IQLMetadataValueMapElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIQLMetadataValueMapAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleIQLMetadataValueMapElement
entryRuleIQLMetadataValueMapElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLMetadataValueMapElementRule()); }
	 iv_ruleIQLMetadataValueMapElement=ruleIQLMetadataValueMapElement 
	 { $current=$iv_ruleIQLMetadataValueMapElement.current; } 
	 EOF 
;

// Rule IQLMetadataValueMapElement
ruleIQLMetadataValueMapElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMetadataValueMapElementAccess().getKeyIQLMetadataValueParserRuleCall_0_0()); 
	    }
		lv_key_0_0=ruleIQLMetadataValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMetadataValueMapElementRule());
	        }
       		set(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"IQLMetadataValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLMetadataValueMapElementAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMetadataValueMapElementAccess().getValueIQLMetadataValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleIQLMetadataValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMetadataValueMapElementRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"IQLMetadataValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIQLVariableDeclaration
entryRuleIQLVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLVariableDeclarationRule()); }
	 iv_ruleIQLVariableDeclaration=ruleIQLVariableDeclaration 
	 { $current=$iv_ruleIQLVariableDeclaration.current; } 
	 EOF 
;

// Rule IQLVariableDeclaration
ruleIQLVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLVariableDeclarationAccess().getIQLVariableDeclarationAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLVariableDeclarationAccess().getRefJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_ref_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getIQLVariableDeclarationAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLVariableDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleIQLVariableInitialization
entryRuleIQLVariableInitialization returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLVariableInitializationRule()); }
	 iv_ruleIQLVariableInitialization=ruleIQLVariableInitialization 
	 { $current=$iv_ruleIQLVariableInitialization.current; } 
	 EOF 
;

// Rule IQLVariableInitialization
ruleIQLVariableInitialization returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLVariableInitializationAccess().getIQLVariableInitializationAction_0_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLVariableInitializationAccess().getArgsListIQLArgumentsListParserRuleCall_0_1_0_0()); 
	    }
		lv_argsList_1_0=ruleIQLArgumentsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLVariableInitializationRule());
	        }
       		set(
       			$current, 
       			"argsList",
        		lv_argsList_1_0, 
        		"IQLArgumentsList");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLVariableInitializationAccess().getArgsMapIQLArgumentsMapParserRuleCall_0_1_1_0()); 
	    }
		lv_argsMap_2_0=ruleIQLArgumentsMap		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLVariableInitializationRule());
	        }
       		set(
       			$current, 
       			"argsMap",
        		lv_argsMap_2_0, 
        		"IQLArgumentsMap");
	        afterParserOrEnumRuleCall();
	    }

)
)?))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLVariableInitializationAccess().getArgsMapIQLArgumentsMapParserRuleCall_1_0()); 
	    }
		lv_argsMap_3_0=ruleIQLArgumentsMap		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLVariableInitializationRule());
	        }
       		set(
       			$current, 
       			"argsMap",
        		lv_argsMap_3_0, 
        		"IQLArgumentsMap");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIQLVariableInitializationAccess().getEqualsSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLVariableInitializationAccess().getValueIQLExpressionParserRuleCall_2_1_0()); 
	    }
		lv_value_5_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLVariableInitializationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleIQLArgumentsList
entryRuleIQLArgumentsList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLArgumentsListRule()); }
	 iv_ruleIQLArgumentsList=ruleIQLArgumentsList 
	 { $current=$iv_ruleIQLArgumentsList.current; } 
	 EOF 
;

// Rule IQLArgumentsList
ruleIQLArgumentsList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLArgumentsListAccess().getIQLArgumentsListAction_0(),
            $current);
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLArgumentsListAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLArgumentsListAccess().getElementsIQLExpressionParserRuleCall_2_0_0()); 
	    }
		lv_elements_2_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLArgumentsListRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLArgumentsListAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLArgumentsListAccess().getElementsIQLExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_elements_4_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLArgumentsListRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIQLArgumentsListAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleIQLArgumentsMap
entryRuleIQLArgumentsMap returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLArgumentsMapRule()); }
	 iv_ruleIQLArgumentsMap=ruleIQLArgumentsMap 
	 { $current=$iv_ruleIQLArgumentsMap.current; } 
	 EOF 
;

// Rule IQLArgumentsMap
ruleIQLArgumentsMap returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLArgumentsMapAccess().getIQLArgumentsMapAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLArgumentsMapAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLArgumentsMapAccess().getElementsIQLArgumentsMapKeyValueParserRuleCall_2_0_0()); 
	    }
		lv_elements_2_0=ruleIQLArgumentsMapKeyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLArgumentsMapRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"IQLArgumentsMapKeyValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLArgumentsMapAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLArgumentsMapAccess().getElementsIQLArgumentsMapKeyValueParserRuleCall_2_1_1_0()); 
	    }
		lv_elements_4_0=ruleIQLArgumentsMapKeyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLArgumentsMapRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"IQLArgumentsMapKeyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIQLArgumentsMapAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleIQLArgumentsMapKeyValue
entryRuleIQLArgumentsMapKeyValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLArgumentsMapKeyValueRule()); }
	 iv_ruleIQLArgumentsMapKeyValue=ruleIQLArgumentsMapKeyValue 
	 { $current=$iv_ruleIQLArgumentsMapKeyValue.current; } 
	 EOF 
;

// Rule IQLArgumentsMapKeyValue
ruleIQLArgumentsMapKeyValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLArgumentsMapKeyValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIQLArgumentsMapKeyValueAccess().getKeyJvmIdentifiableElementCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLArgumentsMapKeyValueAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLArgumentsMapKeyValueAccess().getValueIQLExpressionParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLArgumentsMapKeyValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIQLStatement
entryRuleIQLStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLStatementRule()); }
	 iv_ruleIQLStatement=ruleIQLStatement 
	 { $current=$iv_ruleIQLStatement.current; } 
	 EOF 
;

// Rule IQLStatement
ruleIQLStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLStatementBlockParserRuleCall_0()); 
    }
    this_IQLStatementBlock_0=ruleIQLStatementBlock
    { 
        $current = $this_IQLStatementBlock_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLExpressionStatementParserRuleCall_1()); 
    }
    this_IQLExpressionStatement_1=ruleIQLExpressionStatement
    { 
        $current = $this_IQLExpressionStatement_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLIfStatementParserRuleCall_2()); 
    }
    this_IQLIfStatement_2=ruleIQLIfStatement
    { 
        $current = $this_IQLIfStatement_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLWhileStatementParserRuleCall_3()); 
    }
    this_IQLWhileStatement_3=ruleIQLWhileStatement
    { 
        $current = $this_IQLWhileStatement_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLDoWhileStatementParserRuleCall_4()); 
    }
    this_IQLDoWhileStatement_4=ruleIQLDoWhileStatement
    { 
        $current = $this_IQLDoWhileStatement_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLForStatementParserRuleCall_5()); 
    }
    this_IQLForStatement_5=ruleIQLForStatement
    { 
        $current = $this_IQLForStatement_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLForEachStatementParserRuleCall_6()); 
    }
    this_IQLForEachStatement_6=ruleIQLForEachStatement
    { 
        $current = $this_IQLForEachStatement_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLSwitchStatementParserRuleCall_7()); 
    }
    this_IQLSwitchStatement_7=ruleIQLSwitchStatement
    { 
        $current = $this_IQLSwitchStatement_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLVariableStatementParserRuleCall_8()); 
    }
    this_IQLVariableStatement_8=ruleIQLVariableStatement
    { 
        $current = $this_IQLVariableStatement_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLBreakStatementParserRuleCall_9()); 
    }
    this_IQLBreakStatement_9=ruleIQLBreakStatement
    { 
        $current = $this_IQLBreakStatement_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLContinueStatementParserRuleCall_10()); 
    }
    this_IQLContinueStatement_10=ruleIQLContinueStatement
    { 
        $current = $this_IQLContinueStatement_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLReturnStatementParserRuleCall_11()); 
    }
    this_IQLReturnStatement_11=ruleIQLReturnStatement
    { 
        $current = $this_IQLReturnStatement_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLConstructorCallStatementParserRuleCall_12()); 
    }
    this_IQLConstructorCallStatement_12=ruleIQLConstructorCallStatement
    { 
        $current = $this_IQLConstructorCallStatement_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIQLStatementAccess().getIQLJavaStatementParserRuleCall_13()); 
    }
    this_IQLJavaStatement_13=ruleIQLJavaStatement
    { 
        $current = $this_IQLJavaStatement_13.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIQLStatementBlock
entryRuleIQLStatementBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLStatementBlockRule()); }
	 iv_ruleIQLStatementBlock=ruleIQLStatementBlock 
	 { $current=$iv_ruleIQLStatementBlock.current; } 
	 EOF 
;

// Rule IQLStatementBlock
ruleIQLStatementBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLStatementBlockAccess().getIQLStatementBlockAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLStatementBlockAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLStatementBlockAccess().getStatementsIQLStatementParserRuleCall_2_0()); 
	    }
		lv_statements_2_0=ruleIQLStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLStatementBlockRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_2_0, 
        		"IQLStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLStatementBlockAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleIQLJavaStatement
entryRuleIQLJavaStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLJavaStatementRule()); }
	 iv_ruleIQLJavaStatement=ruleIQLJavaStatement 
	 { $current=$iv_ruleIQLJavaStatement.current; } 
	 EOF 
;

// Rule IQLJavaStatement
ruleIQLJavaStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLJavaStatementAccess().getIQLJavaStatementAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLJavaStatementAccess().getJavaIQLJavaParserRuleCall_1_0()); 
	    }
		lv_java_1_0=ruleIQLJava		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLJavaStatementRule());
	        }
       		set(
       			$current, 
       			"java",
        		lv_java_1_0, 
        		"IQLJava");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIQLIfStatement
entryRuleIQLIfStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLIfStatementRule()); }
	 iv_ruleIQLIfStatement=ruleIQLIfStatement 
	 { $current=$iv_ruleIQLIfStatement.current; } 
	 EOF 
;

// Rule IQLIfStatement
ruleIQLIfStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLIfStatementAccess().getIQLIfStatementAction_0(),
            $current);
    }
)	otherlv_1='if' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLIfStatementAccess().getIfKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIQLIfStatementAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLIfStatementAccess().getPredicateIQLExpressionParserRuleCall_3_0()); 
	    }
		lv_predicate_3_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLIfStatementRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_3_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIQLIfStatementAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLIfStatementAccess().getThenBodyIQLStatementParserRuleCall_5_0()); 
	    }
		lv_thenBody_5_0=ruleIQLStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLIfStatementRule());
	        }
       		set(
       			$current, 
       			"thenBody",
        		lv_thenBody_5_0, 
        		"IQLStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_6='else' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIQLIfStatementAccess().getElseKeyword_6_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLIfStatementAccess().getElseBodyIQLStatementParserRuleCall_6_1_0()); 
	    }
		lv_elseBody_7_0=ruleIQLStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLIfStatementRule());
	        }
       		set(
       			$current, 
       			"elseBody",
        		lv_elseBody_7_0, 
        		"IQLStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleIQLWhileStatement
entryRuleIQLWhileStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLWhileStatementRule()); }
	 iv_ruleIQLWhileStatement=ruleIQLWhileStatement 
	 { $current=$iv_ruleIQLWhileStatement.current; } 
	 EOF 
;

// Rule IQLWhileStatement
ruleIQLWhileStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLWhileStatementAccess().getIQLWhileStatementAction_0(),
            $current);
    }
)	otherlv_1='while' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLWhileStatementAccess().getWhileKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIQLWhileStatementAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLWhileStatementAccess().getPredicateIQLExpressionParserRuleCall_3_0()); 
	    }
		lv_predicate_3_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLWhileStatementRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_3_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIQLWhileStatementAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLWhileStatementAccess().getBodyIQLStatementParserRuleCall_5_0()); 
	    }
		lv_body_5_0=ruleIQLStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLWhileStatementRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"IQLStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIQLDoWhileStatement
entryRuleIQLDoWhileStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLDoWhileStatementRule()); }
	 iv_ruleIQLDoWhileStatement=ruleIQLDoWhileStatement 
	 { $current=$iv_ruleIQLDoWhileStatement.current; } 
	 EOF 
;

// Rule IQLDoWhileStatement
ruleIQLDoWhileStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLDoWhileStatementAccess().getIQLDoWhileStatementAction_0(),
            $current);
    }
)	otherlv_1='do' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLDoWhileStatementAccess().getDoKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLDoWhileStatementAccess().getBodyIQLStatementParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleIQLStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLDoWhileStatementRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"IQLStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='while' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLDoWhileStatementAccess().getWhileKeyword_3());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIQLDoWhileStatementAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLDoWhileStatementAccess().getPredicateIQLExpressionParserRuleCall_5_0()); 
	    }
		lv_predicate_5_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLDoWhileStatementRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_5_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIQLDoWhileStatementAccess().getRightParenthesisKeyword_6());
    }
	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIQLDoWhileStatementAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleIQLForStatement
entryRuleIQLForStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLForStatementRule()); }
	 iv_ruleIQLForStatement=ruleIQLForStatement 
	 { $current=$iv_ruleIQLForStatement.current; } 
	 EOF 
;

// Rule IQLForStatement
ruleIQLForStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLForStatementAccess().getIQLForStatementAction_0(),
            $current);
    }
)	otherlv_1='for' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLForStatementAccess().getForKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIQLForStatementAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLForStatementAccess().getVarIQLVariableDeclarationParserRuleCall_3_0()); 
	    }
		lv_var_3_0=ruleIQLVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLForStatementRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_3_0, 
        		"IQLVariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIQLForStatementAccess().getEqualsSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLForStatementAccess().getValueIQLExpressionParserRuleCall_5_0()); 
	    }
		lv_value_5_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLForStatementRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIQLForStatementAccess().getSemicolonKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLForStatementAccess().getPredicateIQLExpressionParserRuleCall_7_0()); 
	    }
		lv_predicate_7_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLForStatementRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_7_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIQLForStatementAccess().getSemicolonKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLForStatementAccess().getUpdateExprIQLExpressionParserRuleCall_9_0()); 
	    }
		lv_updateExpr_9_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLForStatementRule());
	        }
       		set(
       			$current, 
       			"updateExpr",
        		lv_updateExpr_9_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getIQLForStatementAccess().getRightParenthesisKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLForStatementAccess().getBodyIQLStatementParserRuleCall_11_0()); 
	    }
		lv_body_11_0=ruleIQLStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLForStatementRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_11_0, 
        		"IQLStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIQLForEachStatement
entryRuleIQLForEachStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLForEachStatementRule()); }
	 iv_ruleIQLForEachStatement=ruleIQLForEachStatement 
	 { $current=$iv_ruleIQLForEachStatement.current; } 
	 EOF 
;

// Rule IQLForEachStatement
ruleIQLForEachStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLForEachStatementAccess().getIQLForEachStatementAction_0(),
            $current);
    }
)	otherlv_1='for' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLForEachStatementAccess().getForKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIQLForEachStatementAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLForEachStatementAccess().getVarIQLVariableDeclarationParserRuleCall_3_0()); 
	    }
		lv_var_3_0=ruleIQLVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLForEachStatementRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_3_0, 
        		"IQLVariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIQLForEachStatementAccess().getColonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLForEachStatementAccess().getForExpressionIQLExpressionParserRuleCall_5_0()); 
	    }
		lv_forExpression_5_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLForEachStatementRule());
	        }
       		set(
       			$current, 
       			"forExpression",
        		lv_forExpression_5_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIQLForEachStatementAccess().getRightParenthesisKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLForEachStatementAccess().getBodyIQLStatementParserRuleCall_7_0()); 
	    }
		lv_body_7_0=ruleIQLStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLForEachStatementRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_7_0, 
        		"IQLStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIQLSwitchStatement
entryRuleIQLSwitchStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLSwitchStatementRule()); }
	 iv_ruleIQLSwitchStatement=ruleIQLSwitchStatement 
	 { $current=$iv_ruleIQLSwitchStatement.current; } 
	 EOF 
;

// Rule IQLSwitchStatement
ruleIQLSwitchStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLSwitchStatementAccess().getIQLSwitchStatementAction_0(),
            $current);
    }
)	otherlv_1='switch' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLSwitchStatementAccess().getSwitchKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIQLSwitchStatementAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLSwitchStatementAccess().getExprIQLExpressionParserRuleCall_3_0()); 
	    }
		lv_expr_3_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLSwitchStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIQLSwitchStatementAccess().getRightParenthesisKeyword_4());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIQLSwitchStatementAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLSwitchStatementAccess().getCasesIQLCasePartParserRuleCall_6_0()); 
	    }
		lv_cases_6_0=ruleIQLCasePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLSwitchStatementRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_6_0, 
        		"IQLCasePart");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_7='default' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIQLSwitchStatementAccess().getDefaultKeyword_7_0());
    }
	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIQLSwitchStatementAccess().getColonKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLSwitchStatementAccess().getStatementsIQLStatementParserRuleCall_7_2_0()); 
	    }
		lv_statements_9_0=ruleIQLStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLSwitchStatementRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_9_0, 
        		"IQLStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getIQLSwitchStatementAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleIQLCasePart
entryRuleIQLCasePart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLCasePartRule()); }
	 iv_ruleIQLCasePart=ruleIQLCasePart 
	 { $current=$iv_ruleIQLCasePart.current; } 
	 EOF 
;

// Rule IQLCasePart
ruleIQLCasePart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLCasePartAccess().getIQLCasePartAction_0(),
            $current);
    }
)	otherlv_1='case' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLCasePartAccess().getCaseKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLCasePartAccess().getExprIQLLiteralExpressionParserRuleCall_2_0()); 
	    }
		lv_expr_2_0=ruleIQLLiteralExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLCasePartRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"IQLLiteralExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLCasePartAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLCasePartAccess().getStatementsIQLStatementParserRuleCall_4_0()); 
	    }
		lv_statements_4_0=ruleIQLStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLCasePartRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_4_0, 
        		"IQLStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleIQLExpressionStatement
entryRuleIQLExpressionStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLExpressionStatementRule()); }
	 iv_ruleIQLExpressionStatement=ruleIQLExpressionStatement 
	 { $current=$iv_ruleIQLExpressionStatement.current; } 
	 EOF 
;

// Rule IQLExpressionStatement
ruleIQLExpressionStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLExpressionStatementAccess().getIQLExpressionStatementAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLExpressionStatementAccess().getExpressionIQLExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLExpressionStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIQLExpressionStatementAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleIQLVariableStatement
entryRuleIQLVariableStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLVariableStatementRule()); }
	 iv_ruleIQLVariableStatement=ruleIQLVariableStatement 
	 { $current=$iv_ruleIQLVariableStatement.current; } 
	 EOF 
;

// Rule IQLVariableStatement
ruleIQLVariableStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLVariableStatementAccess().getIQLVariableStatementAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLVariableStatementAccess().getVarIQLVariableDeclarationParserRuleCall_1_0()); 
	    }
		lv_var_1_0=ruleIQLVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLVariableStatementRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_1_0, 
        		"IQLVariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLVariableStatementAccess().getInitIQLVariableInitializationParserRuleCall_2_0()); 
	    }
		lv_init_2_0=ruleIQLVariableInitialization		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLVariableStatementRule());
	        }
       		set(
       			$current, 
       			"init",
        		lv_init_2_0, 
        		"IQLVariableInitialization");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLVariableStatementAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleIQLConstructorCallStatement
entryRuleIQLConstructorCallStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLConstructorCallStatementRule()); }
	 iv_ruleIQLConstructorCallStatement=ruleIQLConstructorCallStatement 
	 { $current=$iv_ruleIQLConstructorCallStatement.current; } 
	 EOF 
;

// Rule IQLConstructorCallStatement
ruleIQLConstructorCallStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLConstructorCallStatementAccess().getIQLConstructorCallStatementAction_0(),
            $current);
    }
)((
(
		lv_this_1_0=	'this' 
    {
        newLeafNode(lv_this_1_0, grammarAccess.getIQLConstructorCallStatementAccess().getThisThisKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLConstructorCallStatementRule());
	        }
       		setWithLastConsumed($current, "this", true, "this");
	    }

)
)
    |(
(
		lv_super_2_0=	'super' 
    {
        newLeafNode(lv_super_2_0, grammarAccess.getIQLConstructorCallStatementAccess().getSuperSuperKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLConstructorCallStatementRule());
	        }
       		setWithLastConsumed($current, "super", true, "super");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLConstructorCallStatementAccess().getArgsIQLArgumentsListParserRuleCall_2_0()); 
	    }
		lv_args_3_0=ruleIQLArgumentsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLConstructorCallStatementRule());
	        }
       		set(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"IQLArgumentsList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIQLConstructorCallStatementAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleIQLBreakStatement
entryRuleIQLBreakStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLBreakStatementRule()); }
	 iv_ruleIQLBreakStatement=ruleIQLBreakStatement 
	 { $current=$iv_ruleIQLBreakStatement.current; } 
	 EOF 
;

// Rule IQLBreakStatement
ruleIQLBreakStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLBreakStatementAccess().getIQLBreakStatementAction_0(),
            $current);
    }
)	otherlv_1='break' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLBreakStatementAccess().getBreakKeyword_1());
    }
	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIQLBreakStatementAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleIQLContinueStatement
entryRuleIQLContinueStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLContinueStatementRule()); }
	 iv_ruleIQLContinueStatement=ruleIQLContinueStatement 
	 { $current=$iv_ruleIQLContinueStatement.current; } 
	 EOF 
;

// Rule IQLContinueStatement
ruleIQLContinueStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLContinueStatementAccess().getIQLContinueStatementAction_0(),
            $current);
    }
)	otherlv_1='continue' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLContinueStatementAccess().getContinueKeyword_1());
    }
	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIQLContinueStatementAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleIQLReturnStatement
entryRuleIQLReturnStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLReturnStatementRule()); }
	 iv_ruleIQLReturnStatement=ruleIQLReturnStatement 
	 { $current=$iv_ruleIQLReturnStatement.current; } 
	 EOF 
;

// Rule IQLReturnStatement
ruleIQLReturnStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLReturnStatementAccess().getIQLReturnStatementAction_0(),
            $current);
    }
)	otherlv_1='return' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLReturnStatementAccess().getReturnKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLReturnStatementAccess().getExpressionIQLExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLReturnStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLReturnStatementAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleIQLExpression
entryRuleIQLExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLExpressionRule()); }
	 iv_ruleIQLExpression=ruleIQLExpression 
	 { $current=$iv_ruleIQLExpression.current; } 
	 EOF 
;

// Rule IQLExpression
ruleIQLExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getIQLExpressionAccess().getIQLAssignmentExpressionParserRuleCall()); 
    }
    this_IQLAssignmentExpression_0=ruleIQLAssignmentExpression
    { 
        $current = $this_IQLAssignmentExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleIQLAssignmentExpression
entryRuleIQLAssignmentExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLAssignmentExpressionRule()); }
	 iv_ruleIQLAssignmentExpression=ruleIQLAssignmentExpression 
	 { $current=$iv_ruleIQLAssignmentExpression.current; } 
	 EOF 
;

// Rule IQLAssignmentExpression
ruleIQLAssignmentExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIQLAssignmentExpressionAccess().getIQLLogicalOrExpressionParserRuleCall_0()); 
    }
    this_IQLLogicalOrExpression_0=ruleIQLLogicalOrExpression
    { 
        $current = $this_IQLLogicalOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleOpAssign
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIQLAssignmentExpressionAccess().getIQLAssignmentExpressionLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLAssignmentExpressionAccess().getOpOpAssignParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleOpAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"OpAssign");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLAssignmentExpressionAccess().getRightOperandIQLAssignmentExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleIQLAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"IQLAssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleOpAssign
entryRuleOpAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAssignRule()); } 
	 iv_ruleOpAssign=ruleOpAssign 
	 { $current=$iv_ruleOpAssign.current.getText(); }  
	 EOF 
;

// Rule OpAssign
ruleOpAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAssignAccess().getEqualsSignKeyword_0()); 
    }

    |
	kw='+=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAssignAccess().getPlusSignEqualsSignKeyword_1()); 
    }

    |
	kw='-=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAssignAccess().getHyphenMinusEqualsSignKeyword_2()); 
    }

    |
	kw='*=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAssignAccess().getAsteriskEqualsSignKeyword_3()); 
    }

    |
	kw='/=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAssignAccess().getSolidusEqualsSignKeyword_4()); 
    }

    |
	kw='%=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAssignAccess().getPercentSignEqualsSignKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleIQLLogicalOrExpression
entryRuleIQLLogicalOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLLogicalOrExpressionRule()); }
	 iv_ruleIQLLogicalOrExpression=ruleIQLLogicalOrExpression 
	 { $current=$iv_ruleIQLLogicalOrExpression.current; } 
	 EOF 
;

// Rule IQLLogicalOrExpression
ruleIQLLogicalOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIQLLogicalOrExpressionAccess().getIQLLogicalAndExpressionParserRuleCall_0()); 
    }
    this_IQLLogicalAndExpression_0=ruleIQLLogicalAndExpression
    { 
        $current = $this_IQLLogicalAndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleOpLogicalOr
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIQLLogicalOrExpressionAccess().getIQLLogicalOrExpressionLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLLogicalOrExpressionAccess().getOpOpLogicalOrParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleOpLogicalOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLLogicalOrExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"OpLogicalOr");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLLogicalOrExpressionAccess().getRightOperandIQLLogicalAndExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleIQLLogicalAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLLogicalOrExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"IQLLogicalAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpLogicalOr
entryRuleOpLogicalOr returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpLogicalOrRule()); } 
	 iv_ruleOpLogicalOr=ruleOpLogicalOr 
	 { $current=$iv_ruleOpLogicalOr.current.getText(); }  
	 EOF 
;

// Rule OpLogicalOr
ruleOpLogicalOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='||' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpLogicalOrAccess().getVerticalLineVerticalLineKeyword()); 
    }

    ;





// Entry rule entryRuleIQLLogicalAndExpression
entryRuleIQLLogicalAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLLogicalAndExpressionRule()); }
	 iv_ruleIQLLogicalAndExpression=ruleIQLLogicalAndExpression 
	 { $current=$iv_ruleIQLLogicalAndExpression.current; } 
	 EOF 
;

// Rule IQLLogicalAndExpression
ruleIQLLogicalAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIQLLogicalAndExpressionAccess().getIQLEqualityExpressionParserRuleCall_0()); 
    }
    this_IQLEqualityExpression_0=ruleIQLEqualityExpression
    { 
        $current = $this_IQLEqualityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleOpLogicalAnd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIQLLogicalAndExpressionAccess().getIQLLogicalAndExpressionLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLLogicalAndExpressionAccess().getOpOpLogicalAndParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleOpLogicalAnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLLogicalAndExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"OpLogicalAnd");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLLogicalAndExpressionAccess().getRightOperandIQLEqualityExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleIQLEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLLogicalAndExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"IQLEqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpLogicalAnd
entryRuleOpLogicalAnd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpLogicalAndRule()); } 
	 iv_ruleOpLogicalAnd=ruleOpLogicalAnd 
	 { $current=$iv_ruleOpLogicalAnd.current.getText(); }  
	 EOF 
;

// Rule OpLogicalAnd
ruleOpLogicalAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='&&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpLogicalAndAccess().getAmpersandAmpersandKeyword()); 
    }

    ;





// Entry rule entryRuleIQLEqualityExpression
entryRuleIQLEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLEqualityExpressionRule()); }
	 iv_ruleIQLEqualityExpression=ruleIQLEqualityExpression 
	 { $current=$iv_ruleIQLEqualityExpression.current; } 
	 EOF 
;

// Rule IQLEqualityExpression
ruleIQLEqualityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIQLEqualityExpressionAccess().getIQLRelationalExpressionParserRuleCall_0()); 
    }
    this_IQLRelationalExpression_0=ruleIQLRelationalExpression
    { 
        $current = $this_IQLRelationalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleOpEquality
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIQLEqualityExpressionAccess().getIQLEqualityExpressionLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLEqualityExpressionAccess().getOpOpEqualityParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleOpEquality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"OpEquality");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLEqualityExpressionAccess().getRightOperandIQLRelationalExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleIQLRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"IQLRelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpEquality
entryRuleOpEquality returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpEqualityRule()); } 
	 iv_ruleOpEquality=ruleOpEquality 
	 { $current=$iv_ruleOpEquality.current.getText(); }  
	 EOF 
;

// Rule OpEquality
ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleOpRelational
entryRuleOpRelational returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpRelationalRule()); } 
	 iv_ruleOpRelational=ruleOpRelational 
	 { $current=$iv_ruleOpRelational.current.getText(); }  
	 EOF 
;

// Rule OpRelational
ruleOpRelational returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpRelationalAccess().getGreaterThanSignKeyword_0()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpRelationalAccess().getGreaterThanSignEqualsSignKeyword_1()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpRelationalAccess().getLessThanSignKeyword_2()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpRelationalAccess().getLessThanSignEqualsSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleIQLAdditiveExpression
entryRuleIQLAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLAdditiveExpressionRule()); }
	 iv_ruleIQLAdditiveExpression=ruleIQLAdditiveExpression 
	 { $current=$iv_ruleIQLAdditiveExpression.current; } 
	 EOF 
;

// Rule IQLAdditiveExpression
ruleIQLAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIQLAdditiveExpressionAccess().getIQLMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_IQLMultiplicativeExpression_0=ruleIQLMultiplicativeExpression
    { 
        $current = $this_IQLMultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleOpAdd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIQLAdditiveExpressionAccess().getIQLAdditiveExpressionLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLAdditiveExpressionAccess().getOpOpAddParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleOpAdd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"OpAdd");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLAdditiveExpressionAccess().getRightOperandIQLMultiplicativeExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleIQLMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"IQLMultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAdd
entryRuleOpAdd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAddRule()); } 
	 iv_ruleOpAdd=ruleOpAdd 
	 { $current=$iv_ruleOpAdd.current.getText(); }  
	 EOF 
;

// Rule OpAdd
ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleIQLMultiplicativeExpression
entryRuleIQLMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLMultiplicativeExpressionRule()); }
	 iv_ruleIQLMultiplicativeExpression=ruleIQLMultiplicativeExpression 
	 { $current=$iv_ruleIQLMultiplicativeExpression.current; } 
	 EOF 
;

// Rule IQLMultiplicativeExpression
ruleIQLMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIQLMultiplicativeExpressionAccess().getIQLUnaryExpressionParserRuleCall_0()); 
    }
    this_IQLUnaryExpression_0=ruleIQLUnaryExpression
    { 
        $current = $this_IQLUnaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleOpMulti
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIQLMultiplicativeExpressionAccess().getIQLMultiplicativeExpressionLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMultiplicativeExpressionAccess().getOpOpMultiParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleOpMulti		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"OpMulti");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMultiplicativeExpressionAccess().getRightOperandIQLUnaryExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleIQLUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"IQLUnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpMulti
entryRuleOpMulti returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiRule()); } 
	 iv_ruleOpMulti=ruleOpMulti 
	 { $current=$iv_ruleOpMulti.current.getText(); }  
	 EOF 
;

// Rule OpMulti
ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_1()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleIQLUnaryExpression
entryRuleIQLUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLUnaryExpressionRule()); }
	 iv_ruleIQLUnaryExpression=ruleIQLUnaryExpression 
	 { $current=$iv_ruleIQLUnaryExpression.current; } 
	 EOF 
;

// Rule IQLUnaryExpression
ruleIQLUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLUnaryExpressionAccess().getIQLPlusMinusExpressionAction_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLUnaryExpressionAccess().getOpOpUnaryPlusMinusParserRuleCall_0_0_1_0()); 
	    }
		lv_op_1_0=ruleOpUnaryPlusMinus		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_1_0, 
        		"OpUnaryPlusMinus");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLUnaryExpressionAccess().getOperandIQLMemberCallExpressionParserRuleCall_0_1_0()); 
	    }
		lv_operand_2_0=ruleIQLMemberCallExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_2_0, 
        		"IQLMemberCallExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLUnaryExpressionAccess().getIQLBooleanNotExpressionAction_1_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLUnaryExpressionAccess().getOpOpUnaryBooleanNotParserRuleCall_1_0_1_0()); 
	    }
		lv_op_4_0=ruleOpUnaryBooleanNot		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"OpUnaryBooleanNot");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLUnaryExpressionAccess().getOperandIQLMemberCallExpressionParserRuleCall_1_1_0()); 
	    }
		lv_operand_5_0=ruleIQLMemberCallExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_5_0, 
        		"IQLMemberCallExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLUnaryExpressionAccess().getIQLPrefixExpressionAction_2_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLUnaryExpressionAccess().getOpOpPrefixParserRuleCall_2_0_1_0()); 
	    }
		lv_op_7_0=ruleOpPrefix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_7_0, 
        		"OpPrefix");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLUnaryExpressionAccess().getOperandIQLMemberCallExpressionParserRuleCall_2_1_0()); 
	    }
		lv_operand_8_0=ruleIQLMemberCallExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_8_0, 
        		"IQLMemberCallExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)	'(' 
(
(
ruleJvmTypeReference
)
)	')' 
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLUnaryExpressionAccess().getIQLTypeCastExpressionAction_3_0_0_0(),
            $current);
    }
)	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getIQLUnaryExpressionAccess().getLeftParenthesisKeyword_3_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLUnaryExpressionAccess().getTargetRefJvmTypeReferenceParserRuleCall_3_0_0_2_0()); 
	    }
		lv_targetRef_11_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"targetRef",
        		lv_targetRef_11_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getIQLUnaryExpressionAccess().getRightParenthesisKeyword_3_0_0_3());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLUnaryExpressionAccess().getOperandIQLMemberCallExpressionParserRuleCall_3_1_0()); 
	    }
		lv_operand_13_0=ruleIQLMemberCallExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_13_0, 
        		"IQLMemberCallExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getIQLUnaryExpressionAccess().getIQLMemberCallExpressionParserRuleCall_4_0()); 
    }
    this_IQLMemberCallExpression_14=ruleIQLMemberCallExpression
    { 
        $current = $this_IQLMemberCallExpression_14.current; 
        afterParserOrEnumRuleCall();
    }
((((
)(
(
ruleOpPostfix
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIQLUnaryExpressionAccess().getIQLPostfixExpressionOperandAction_4_1_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLUnaryExpressionAccess().getOpOpPostfixParserRuleCall_4_1_0_1_0()); 
	    }
		lv_op_16_0=ruleOpPostfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_16_0, 
        		"OpPostfix");
	        afterParserOrEnumRuleCall();
	    }

)
)))?))
;





// Entry rule entryRuleOpUnaryPlusMinus
entryRuleOpUnaryPlusMinus returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpUnaryPlusMinusRule()); } 
	 iv_ruleOpUnaryPlusMinus=ruleOpUnaryPlusMinus 
	 { $current=$iv_ruleOpUnaryPlusMinus.current.getText(); }  
	 EOF 
;

// Rule OpUnaryPlusMinus
ruleOpUnaryPlusMinus returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryPlusMinusAccess().getHyphenMinusKeyword_0()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryPlusMinusAccess().getPlusSignKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleOpUnaryBooleanNot
entryRuleOpUnaryBooleanNot returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpUnaryBooleanNotRule()); } 
	 iv_ruleOpUnaryBooleanNot=ruleOpUnaryBooleanNot 
	 { $current=$iv_ruleOpUnaryBooleanNot.current.getText(); }  
	 EOF 
;

// Rule OpUnaryBooleanNot
ruleOpUnaryBooleanNot returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryBooleanNotAccess().getExclamationMarkKeyword()); 
    }

    ;





// Entry rule entryRuleOpPrefix
entryRuleOpPrefix returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpPrefixRule()); } 
	 iv_ruleOpPrefix=ruleOpPrefix 
	 { $current=$iv_ruleOpPrefix.current.getText(); }  
	 EOF 
;

// Rule OpPrefix
ruleOpPrefix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='++' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpPrefixAccess().getPlusSignPlusSignKeyword_0()); 
    }

    |
	kw='--' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpPrefixAccess().getHyphenMinusHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleOpPostfix
entryRuleOpPostfix returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpPostfixRule()); } 
	 iv_ruleOpPostfix=ruleOpPostfix 
	 { $current=$iv_ruleOpPostfix.current.getText(); }  
	 EOF 
;

// Rule OpPostfix
ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='++' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0()); 
    }

    |
	kw='--' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleIQLMemberCallExpression
entryRuleIQLMemberCallExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLMemberCallExpressionRule()); }
	 iv_ruleIQLMemberCallExpression=ruleIQLMemberCallExpression 
	 { $current=$iv_ruleIQLMemberCallExpression.current; } 
	 EOF 
;

// Rule IQLMemberCallExpression
ruleIQLMemberCallExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIQLMemberCallExpressionAccess().getIQLOtherExpressionsParserRuleCall_0()); 
    }
    this_IQLOtherExpressions_0=ruleIQLOtherExpressions
    { 
        $current = $this_IQLOtherExpressions_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)	'[' 
(
(
ruleIQLExpression
)
)(	',' 
(
(
ruleIQLExpression
)
))?	']' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIQLMemberCallExpressionAccess().getIQLArrayExpressionLeftOperandAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIQLMemberCallExpressionAccess().getLeftSquareBracketKeyword_1_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMemberCallExpressionAccess().getExpressionsIQLExpressionParserRuleCall_1_0_0_2_0()); 
	    }
		lv_expressions_3_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMemberCallExpressionRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_3_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIQLMemberCallExpressionAccess().getCommaKeyword_1_0_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMemberCallExpressionAccess().getExpressionsIQLExpressionParserRuleCall_1_0_0_3_1_0()); 
	    }
		lv_expressions_5_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMemberCallExpressionRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_5_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIQLMemberCallExpressionAccess().getRightSquareBracketKeyword_1_0_0_4());
    }
))
    |(((((
)	'.' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getIQLMemberCallExpressionAccess().getIQLMemberSelectionExpressionLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)	otherlv_8='.' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIQLMemberCallExpressionAccess().getFullStopKeyword_1_1_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMemberCallExpressionAccess().getSelIQLMemberSelectionParserRuleCall_1_1_1_0()); 
	    }
		lv_sel_9_0=ruleIQLMemberSelection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMemberCallExpressionRule());
	        }
       		set(
       			$current, 
       			"sel",
        		lv_sel_9_0, 
        		"IQLMemberSelection");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleIQLMemberSelection
entryRuleIQLMemberSelection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLMemberSelectionRule()); }
	 iv_ruleIQLMemberSelection=ruleIQLMemberSelection 
	 { $current=$iv_ruleIQLMemberSelection.current; } 
	 EOF 
;

// Rule IQLMemberSelection
ruleIQLMemberSelection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLMemberSelectionRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getIQLMemberSelectionAccess().getMemberJvmMemberCrossReference_0_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLMemberSelectionAccess().getArgsIQLArgumentsListParserRuleCall_1_0()); 
	    }
		lv_args_1_0=ruleIQLArgumentsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLMemberSelectionRule());
	        }
       		set(
       			$current, 
       			"args",
        		lv_args_1_0, 
        		"IQLArgumentsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleIQLOtherExpressions
entryRuleIQLOtherExpressions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLOtherExpressionsRule()); }
	 iv_ruleIQLOtherExpressions=ruleIQLOtherExpressions 
	 { $current=$iv_ruleIQLOtherExpressions.current; } 
	 EOF 
;

// Rule IQLOtherExpressions
ruleIQLOtherExpressions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLOtherExpressionsAccess().getIQLJvmElementCallExpressionAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLOtherExpressionsRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIQLOtherExpressionsAccess().getElementJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLOtherExpressionsAccess().getArgsIQLArgumentsListParserRuleCall_0_2_0()); 
	    }
		lv_args_2_0=ruleIQLArgumentsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLOtherExpressionsRule());
	        }
       		set(
       			$current, 
       			"args",
        		lv_args_2_0, 
        		"IQLArgumentsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLOtherExpressionsAccess().getIQLThisExpressionAction_1_0(),
            $current);
    }
)	otherlv_4='this' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIQLOtherExpressionsAccess().getThisKeyword_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLOtherExpressionsAccess().getIQLSuperExpressionAction_2_0(),
            $current);
    }
)	otherlv_6='super' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIQLOtherExpressionsAccess().getSuperKeyword_2_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLOtherExpressionsAccess().getIQLParenthesisExpressionAction_3_0(),
            $current);
    }
)	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIQLOtherExpressionsAccess().getLeftParenthesisKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLOtherExpressionsAccess().getExprIQLExpressionParserRuleCall_3_2_0()); 
	    }
		lv_expr_9_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLOtherExpressionsRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_9_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getIQLOtherExpressionsAccess().getRightParenthesisKeyword_3_3());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLOtherExpressionsAccess().getIQLNewExpressionAction_4_0(),
            $current);
    }
)	otherlv_12='new' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getIQLOtherExpressionsAccess().getNewKeyword_4_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLOtherExpressionsAccess().getRefIQLArrayTypeRefParserRuleCall_4_2_0_0()); 
	    }
		lv_ref_13_0=ruleIQLArrayTypeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLOtherExpressionsRule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_13_0, 
        		"IQLArrayTypeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLOtherExpressionsAccess().getRefIQLSimpleTypeRefParserRuleCall_4_2_1_0_0()); 
	    }
		lv_ref_14_0=ruleIQLSimpleTypeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLOtherExpressionsRule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_14_0, 
        		"IQLSimpleTypeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLOtherExpressionsAccess().getArgsListIQLArgumentsListParserRuleCall_4_2_1_1_0_0_0()); 
	    }
		lv_argsList_15_0=ruleIQLArgumentsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLOtherExpressionsRule());
	        }
       		set(
       			$current, 
       			"argsList",
        		lv_argsList_15_0, 
        		"IQLArgumentsList");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLOtherExpressionsAccess().getArgsMapIQLArgumentsMapParserRuleCall_4_2_1_1_0_1_0()); 
	    }
		lv_argsMap_16_0=ruleIQLArgumentsMap		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLOtherExpressionsRule());
	        }
       		set(
       			$current, 
       			"argsMap",
        		lv_argsMap_16_0, 
        		"IQLArgumentsMap");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLOtherExpressionsAccess().getArgsMapIQLArgumentsMapParserRuleCall_4_2_1_1_1_0()); 
	    }
		lv_argsMap_17_0=ruleIQLArgumentsMap		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLOtherExpressionsRule());
	        }
       		set(
       			$current, 
       			"argsMap",
        		lv_argsMap_17_0, 
        		"IQLArgumentsMap");
	        afterParserOrEnumRuleCall();
	    }

)
)))))
    |
    { 
        newCompositeNode(grammarAccess.getIQLOtherExpressionsAccess().getIQLLiteralExpressionParserRuleCall_5()); 
    }
    this_IQLLiteralExpression_18=ruleIQLLiteralExpression
    { 
        $current = $this_IQLLiteralExpression_18.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIQLLiteralExpression
entryRuleIQLLiteralExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLLiteralExpressionRule()); }
	 iv_ruleIQLLiteralExpression=ruleIQLLiteralExpression 
	 { $current=$iv_ruleIQLLiteralExpression.current; } 
	 EOF 
;

// Rule IQLLiteralExpression
ruleIQLLiteralExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLLiteralExpressionAccess().getIQLLiteralExpressionIntAction_0_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getIQLLiteralExpressionAccess().getValueINTTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLLiteralExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLLiteralExpressionAccess().getIQLLiteralExpressionDoubleAction_1_0(),
            $current);
    }
)(
(
		lv_value_3_0=RULE_DOUBLE
		{
			newLeafNode(lv_value_3_0, grammarAccess.getIQLLiteralExpressionAccess().getValueDOUBLETerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLLiteralExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"DOUBLE");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLLiteralExpressionAccess().getIQLLiteralExpressionStringAction_2_0(),
            $current);
    }
)(
(
		lv_value_5_0=RULE_STRING
		{
			newLeafNode(lv_value_5_0, grammarAccess.getIQLLiteralExpressionAccess().getValueSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLLiteralExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"STRING");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLLiteralExpressionAccess().getIQLLiteralExpressionBooleanAction_3_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLLiteralExpressionAccess().getValueBOOLEANParserRuleCall_3_1_0()); 
	    }
		lv_value_7_0=ruleBOOLEAN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLLiteralExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"BOOLEAN");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLLiteralExpressionAccess().getIQLLiteralExpressionRangeAction_4_0(),
            $current);
    }
)(
(
		lv_value_9_0=RULE_RANGE
		{
			newLeafNode(lv_value_9_0, grammarAccess.getIQLLiteralExpressionAccess().getValueRANGETerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIQLLiteralExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_9_0, 
        		"RANGE");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLLiteralExpressionAccess().getIQLLiteralExpressionTypeAction_5_0(),
            $current);
    }
)	otherlv_11='class(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIQLLiteralExpressionAccess().getClassKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLLiteralExpressionAccess().getValueJvmTypeReferenceParserRuleCall_5_2_0()); 
	    }
		lv_value_12_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLLiteralExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_12_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIQLLiteralExpressionAccess().getRightParenthesisKeyword_5_3());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLLiteralExpressionAccess().getIQLLiteralExpressionNullAction_6_0(),
            $current);
    }
)	otherlv_15='null' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIQLLiteralExpressionAccess().getNullKeyword_6_1());
    }
)
    |((	ruleIQLLiteralExpressionList)=>
    { 
        newCompositeNode(grammarAccess.getIQLLiteralExpressionAccess().getIQLLiteralExpressionListParserRuleCall_7()); 
    }
    this_IQLLiteralExpressionList_16=ruleIQLLiteralExpressionList
    { 
        $current = $this_IQLLiteralExpressionList_16.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getIQLLiteralExpressionAccess().getIQLLiteralExpressionMapParserRuleCall_8()); 
    }
    this_IQLLiteralExpressionMap_17=ruleIQLLiteralExpressionMap
    { 
        $current = $this_IQLLiteralExpressionMap_17.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIQLLiteralExpressionList
entryRuleIQLLiteralExpressionList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLLiteralExpressionListRule()); }
	 iv_ruleIQLLiteralExpressionList=ruleIQLLiteralExpressionList 
	 { $current=$iv_ruleIQLLiteralExpressionList.current; } 
	 EOF 
;

// Rule IQLLiteralExpressionList
ruleIQLLiteralExpressionList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLLiteralExpressionListAccess().getIQLLiteralExpressionListAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLLiteralExpressionListAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLLiteralExpressionListAccess().getElementsIQLExpressionParserRuleCall_2_0_0()); 
	    }
		lv_elements_2_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLLiteralExpressionListRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLLiteralExpressionListAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLLiteralExpressionListAccess().getElementsIQLExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_elements_4_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLLiteralExpressionListRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIQLLiteralExpressionListAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleIQLLiteralExpressionMap
entryRuleIQLLiteralExpressionMap returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLLiteralExpressionMapRule()); }
	 iv_ruleIQLLiteralExpressionMap=ruleIQLLiteralExpressionMap 
	 { $current=$iv_ruleIQLLiteralExpressionMap.current; } 
	 EOF 
;

// Rule IQLLiteralExpressionMap
ruleIQLLiteralExpressionMap returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIQLLiteralExpressionMapAccess().getIQLLiteralExpressionMapAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLLiteralExpressionMapAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLLiteralExpressionMapAccess().getElementsIQLLiteralExpressionMapKeyValueParserRuleCall_2_0_0()); 
	    }
		lv_elements_2_0=ruleIQLLiteralExpressionMapKeyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLLiteralExpressionMapRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"IQLLiteralExpressionMapKeyValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIQLLiteralExpressionMapAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLLiteralExpressionMapAccess().getElementsIQLLiteralExpressionMapKeyValueParserRuleCall_2_1_1_0()); 
	    }
		lv_elements_4_0=ruleIQLLiteralExpressionMapKeyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLLiteralExpressionMapRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"IQLLiteralExpressionMapKeyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIQLLiteralExpressionMapAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleIQLLiteralExpressionMapKeyValue
entryRuleIQLLiteralExpressionMapKeyValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQLLiteralExpressionMapKeyValueRule()); }
	 iv_ruleIQLLiteralExpressionMapKeyValue=ruleIQLLiteralExpressionMapKeyValue 
	 { $current=$iv_ruleIQLLiteralExpressionMapKeyValue.current; } 
	 EOF 
;

// Rule IQLLiteralExpressionMapKeyValue
ruleIQLLiteralExpressionMapKeyValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIQLLiteralExpressionMapKeyValueAccess().getKeyIQLExpressionParserRuleCall_0_0()); 
	    }
		lv_key_0_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLLiteralExpressionMapKeyValueRule());
	        }
       		set(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIQLLiteralExpressionMapKeyValueAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLLiteralExpressionMapKeyValueAccess().getValueIQLExpressionParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleIQLExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLLiteralExpressionMapKeyValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"IQLExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='::*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getColonColonAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleIQLJava
entryRuleIQLJava returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getIQLJavaRule()); }
	 iv_ruleIQLJava=ruleIQLJava 
	 { $current=$iv_ruleIQLJava.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IQLJava
ruleIQLJava returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT");
    }
    @after { leaveRule(); }:
(	otherlv_0='$*' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIQLJavaAccess().getDollarSignAsteriskKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIQLJavaAccess().getTextIQLJavaTextParserRuleCall_1_0()); 
	    }
		lv_text_1_0=ruleIQLJavaText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIQLJavaRule());
	        }
       		set(
       			$current, 
       			"text",
        		lv_text_1_0, 
        		"IQLJavaText");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='*$' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIQLJavaAccess().getAsteriskDollarSignKeyword_2());
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleIQL_JAVA_KEYWORDS
entryRuleIQL_JAVA_KEYWORDS returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIQL_JAVA_KEYWORDSRule()); } 
	 iv_ruleIQL_JAVA_KEYWORDS=ruleIQL_JAVA_KEYWORDS 
	 { $current=$iv_ruleIQL_JAVA_KEYWORDS.current.getText(); }  
	 EOF 
;

// Rule IQL_JAVA_KEYWORDS
ruleIQL_JAVA_KEYWORDS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='break' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getBreakKeyword_0()); 
    }

    |
	kw='case' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getCaseKeyword_1()); 
    }

    |
	kw='class' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getClassKeyword_2()); 
    }

    |
	kw='continue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getContinueKeyword_3()); 
    }

    |
	kw='default' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getDefaultKeyword_4()); 
    }

    |
	kw='do' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getDoKeyword_5()); 
    }

    |
	kw='else' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getElseKeyword_6()); 
    }

    |
	kw='extends' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getExtendsKeyword_7()); 
    }

    |
	kw='for' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getForKeyword_8()); 
    }

    |
	kw='if' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getIfKeyword_9()); 
    }

    |
	kw='implements' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getImplementsKeyword_10()); 
    }

    |
	kw='instanceof' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getInstanceofKeyword_11()); 
    }

    |
	kw='interface' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getInterfaceKeyword_12()); 
    }

    |
	kw='new' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getNewKeyword_13()); 
    }

    |
	kw='package' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getPackageKeyword_14()); 
    }

    |
	kw='return' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getReturnKeyword_15()); 
    }

    |
	kw='super' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getSuperKeyword_16()); 
    }

    |
	kw='switch' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getSwitchKeyword_17()); 
    }

    |
	kw='this' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getThisKeyword_18()); 
    }

    |
	kw='while' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getWhileKeyword_19()); 
    }

    |
	kw='abstract' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getAbstractKeyword_20()); 
    }

    |
	kw='assert' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getAssertKeyword_21()); 
    }

    |
	kw='catch' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getCatchKeyword_22()); 
    }

    |
	kw='const' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getConstKeyword_23()); 
    }

    |
	kw='enum' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getEnumKeyword_24()); 
    }

    |
	kw='final' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getFinalKeyword_25()); 
    }

    |
	kw='finally' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getFinallyKeyword_26()); 
    }

    |
	kw='goto' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getGotoKeyword_27()); 
    }

    |
	kw='import' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getImportKeyword_28()); 
    }

    |
	kw='native' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getNativeKeyword_29()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getPrivateKeyword_30()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getProtectedKeyword_31()); 
    }

    |
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getPublicKeyword_32()); 
    }

    |
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getStaticKeyword_33()); 
    }

    |
	kw='synchronized' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getSynchronizedKeyword_34()); 
    }

    |
	kw='throw' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getThrowKeyword_35()); 
    }

    |
	kw='throws' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getThrowsKeyword_36()); 
    }

    |
	kw='transient' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getTransientKeyword_37()); 
    }

    |
	kw='try' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getTryKeyword_38()); 
    }

    |
	kw='volatile' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getVolatileKeyword_39()); 
    }

    |
	kw='strictfp' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIQL_JAVA_KEYWORDSAccess().getStrictfpKeyword_40()); 
    }
)
    ;





// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBOOLEANRule()); } 
	 iv_ruleBOOLEAN=ruleBOOLEAN 
	 { $current=$iv_ruleBOOLEAN.current.getText(); }  
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); 
    }
)
    ;





RULE_RANGE : RULE_INT '..' RULE_INT;

RULE_INT : ('0'..'9')+;

RULE_DOUBLE : ('0'..'9')* '.' ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


