/*
* generated by Xtext
*/
package de.uniol.inf.is.odysseus.iql.odl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import de.uniol.inf.is.odysseus.iql.basic.services.BasicIQLGrammarAccess;

@Singleton
public class ODLGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ODLFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ODLFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cODLFileAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNamespacesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNamespacesIQLNamespaceParserRuleCall_1_0 = (RuleCall)cNamespacesAssignment_1.eContents().get(0);
		private final Assignment cElementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cElementsODLTypeDefsParserRuleCall_2_0 = (RuleCall)cElementsAssignment_2.eContents().get(0);
		
		//ODLFile returns iql::IQLFile:
		//	{ODLFile} namespaces+=IQLNamespace* elements+=ODLTypeDefs*;
		public ParserRule getRule() { return rule; }

		//{ODLFile} namespaces+=IQLNamespace* elements+=ODLTypeDefs*
		public Group getGroup() { return cGroup; }

		//{ODLFile}
		public Action getODLFileAction_0() { return cODLFileAction_0; }

		//namespaces+=IQLNamespace*
		public Assignment getNamespacesAssignment_1() { return cNamespacesAssignment_1; }

		//IQLNamespace
		public RuleCall getNamespacesIQLNamespaceParserRuleCall_1_0() { return cNamespacesIQLNamespaceParserRuleCall_1_0; }

		//elements+=ODLTypeDefs*
		public Assignment getElementsAssignment_2() { return cElementsAssignment_2; }

		//ODLTypeDefs
		public RuleCall getElementsODLTypeDefsParserRuleCall_2_0() { return cElementsODLTypeDefsParserRuleCall_2_0; }
	}

	public class ODLTypeDefsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ODLTypeDefs");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIQLClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIQLInterfaceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cODLOperatorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ODLTypeDefs returns iql::IQLTypeDef:
		//	IQLClass | => IQLInterface | ODLOperator;
		public ParserRule getRule() { return rule; }

		//=> IQLClass | => IQLInterface | ODLOperator
		public Alternatives getAlternatives() { return cAlternatives; }

		//=> IQLClass
		public RuleCall getIQLClassParserRuleCall_0() { return cIQLClassParserRuleCall_0; }

		//=> IQLInterface
		public RuleCall getIQLInterfaceParserRuleCall_1() { return cIQLInterfaceParserRuleCall_1; }

		//ODLOperator
		public RuleCall getODLOperatorParserRuleCall_2() { return cODLOperatorParserRuleCall_2; }
	}

	public class ODLOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ODLOperator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cODLOperatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cJavametadataAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cJavametadataIQLJavaMetadataParserRuleCall_1_0 = (RuleCall)cJavametadataAssignment_1.eContents().get(0);
		private final Keyword cOperatorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSimpleNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSimpleNameIDTerminalRuleCall_3_0 = (RuleCall)cSimpleNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMetadataListAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMetadataListIQLMetadataListParserRuleCall_4_1_0 = (RuleCall)cMetadataListAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMembersAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Alternatives cMembersAlternatives_6_0 = (Alternatives)cMembersAssignment_6.eContents().get(0);
		private final RuleCall cMembersIQLAttributeParserRuleCall_6_0_0 = (RuleCall)cMembersAlternatives_6_0.eContents().get(0);
		private final RuleCall cMembersIQLMethodParserRuleCall_6_0_1 = (RuleCall)cMembersAlternatives_6_0.eContents().get(1);
		private final RuleCall cMembersODLParameterParserRuleCall_6_0_2 = (RuleCall)cMembersAlternatives_6_0.eContents().get(2);
		private final RuleCall cMembersODLMethodParserRuleCall_6_0_3 = (RuleCall)cMembersAlternatives_6_0.eContents().get(3);
		private final RuleCall cMembersIQLJavaMemberParserRuleCall_6_0_4 = (RuleCall)cMembersAlternatives_6_0.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ODLOperator returns iql::IQLTypeDef:
		//	{ODLOperator} javametadata+=IQLJavaMetadata* "operator" simpleName=ID ("(" metadataList=IQLMetadataList? ")")? "{"
		//	members+=(IQLAttribute | IQLMethod | ODLParameter | ODLMethod | IQLJavaMember)* "}";
		public ParserRule getRule() { return rule; }

		//{ODLOperator} javametadata+=IQLJavaMetadata* "operator" simpleName=ID ("(" metadataList=IQLMetadataList? ")")? "{"
		//members+=(IQLAttribute | IQLMethod | ODLParameter | ODLMethod | IQLJavaMember)* "}"
		public Group getGroup() { return cGroup; }

		//{ODLOperator}
		public Action getODLOperatorAction_0() { return cODLOperatorAction_0; }

		//javametadata+=IQLJavaMetadata*
		public Assignment getJavametadataAssignment_1() { return cJavametadataAssignment_1; }

		//IQLJavaMetadata
		public RuleCall getJavametadataIQLJavaMetadataParserRuleCall_1_0() { return cJavametadataIQLJavaMetadataParserRuleCall_1_0; }

		//"operator"
		public Keyword getOperatorKeyword_2() { return cOperatorKeyword_2; }

		//simpleName=ID
		public Assignment getSimpleNameAssignment_3() { return cSimpleNameAssignment_3; }

		//ID
		public RuleCall getSimpleNameIDTerminalRuleCall_3_0() { return cSimpleNameIDTerminalRuleCall_3_0; }

		//("(" metadataList=IQLMetadataList? ")")?
		public Group getGroup_4() { return cGroup_4; }

		//"("
		public Keyword getLeftParenthesisKeyword_4_0() { return cLeftParenthesisKeyword_4_0; }

		//metadataList=IQLMetadataList?
		public Assignment getMetadataListAssignment_4_1() { return cMetadataListAssignment_4_1; }

		//IQLMetadataList
		public RuleCall getMetadataListIQLMetadataListParserRuleCall_4_1_0() { return cMetadataListIQLMetadataListParserRuleCall_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4_2() { return cRightParenthesisKeyword_4_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//members+=(IQLAttribute | IQLMethod | ODLParameter | ODLMethod | IQLJavaMember)*
		public Assignment getMembersAssignment_6() { return cMembersAssignment_6; }

		//IQLAttribute | IQLMethod | ODLParameter | ODLMethod | IQLJavaMember
		public Alternatives getMembersAlternatives_6_0() { return cMembersAlternatives_6_0; }

		//IQLAttribute
		public RuleCall getMembersIQLAttributeParserRuleCall_6_0_0() { return cMembersIQLAttributeParserRuleCall_6_0_0; }

		//IQLMethod
		public RuleCall getMembersIQLMethodParserRuleCall_6_0_1() { return cMembersIQLMethodParserRuleCall_6_0_1; }

		//ODLParameter
		public RuleCall getMembersODLParameterParserRuleCall_6_0_2() { return cMembersODLParameterParserRuleCall_6_0_2; }

		//ODLMethod
		public RuleCall getMembersODLMethodParserRuleCall_6_0_3() { return cMembersODLMethodParserRuleCall_6_0_3; }

		//IQLJavaMember
		public RuleCall getMembersIQLJavaMemberParserRuleCall_6_0_4() { return cMembersIQLJavaMemberParserRuleCall_6_0_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ODLParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ODLParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cODLParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Assignment cParameterAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cParameterParameterKeyword_2_0 = (Keyword)cParameterAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMetadataListAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMetadataListIQLMetadataListParserRuleCall_3_1_0 = (RuleCall)cMetadataListAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Assignment cSimpleNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSimpleNameIDTerminalRuleCall_5_0 = (RuleCall)cSimpleNameAssignment_5.eContents().get(0);
		private final Assignment cInitAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cInitIQLVariableInitializationParserRuleCall_6_0 = (RuleCall)cInitAssignment_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ODLParameter returns iql::IQLAttribute:
		//	{ODLParameter} optional?="optional"? parameter?="parameter" ("(" metadataList=IQLMetadataList? ")")?
		//	type=JvmTypeReference simpleName=ID init=IQLVariableInitialization? ";";
		public ParserRule getRule() { return rule; }

		//{ODLParameter} optional?="optional"? parameter?="parameter" ("(" metadataList=IQLMetadataList? ")")?
		//type=JvmTypeReference simpleName=ID init=IQLVariableInitialization? ";"
		public Group getGroup() { return cGroup; }

		//{ODLParameter}
		public Action getODLParameterAction_0() { return cODLParameterAction_0; }

		//optional?="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//parameter?="parameter"
		public Assignment getParameterAssignment_2() { return cParameterAssignment_2; }

		//"parameter"
		public Keyword getParameterParameterKeyword_2_0() { return cParameterParameterKeyword_2_0; }

		//("(" metadataList=IQLMetadataList? ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//metadataList=IQLMetadataList?
		public Assignment getMetadataListAssignment_3_1() { return cMetadataListAssignment_3_1; }

		//IQLMetadataList
		public RuleCall getMetadataListIQLMetadataListParserRuleCall_3_1_0() { return cMetadataListIQLMetadataListParserRuleCall_3_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_4_0() { return cTypeJvmTypeReferenceParserRuleCall_4_0; }

		//simpleName=ID
		public Assignment getSimpleNameAssignment_5() { return cSimpleNameAssignment_5; }

		//ID
		public RuleCall getSimpleNameIDTerminalRuleCall_5_0() { return cSimpleNameIDTerminalRuleCall_5_0; }

		//init=IQLVariableInitialization?
		public Assignment getInitAssignment_6() { return cInitAssignment_6; }

		//IQLVariableInitialization
		public RuleCall getInitIQLVariableInitializationParserRuleCall_6_0() { return cInitIQLVariableInitializationParserRuleCall_6_0; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class ODLMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ODLMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cODLMethodAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cOnAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Keyword cOnOnKeyword_1_0_0 = (Keyword)cOnAssignment_1_0.eContents().get(0);
		private final Assignment cValidateAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cValidateValidateKeyword_1_1_0 = (Keyword)cValidateAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cSimpleNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cSimpleNameIDTerminalRuleCall_2_0_0 = (RuleCall)cSimpleNameAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cGroup_2_1.eContents().get(1);
		private final Assignment cParametersAssignment_2_1_1_0 = (Assignment)cGroup_2_1_1.eContents().get(0);
		private final RuleCall cParametersJvmFormalParameterParserRuleCall_2_1_1_0_0 = (RuleCall)cParametersAssignment_2_1_1_0.eContents().get(0);
		private final Group cGroup_2_1_1_1 = (Group)cGroup_2_1_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_1_1_0 = (Keyword)cGroup_2_1_1_1.eContents().get(0);
		private final Assignment cParametersAssignment_2_1_1_1_1 = (Assignment)cGroup_2_1_1_1.eContents().get(1);
		private final RuleCall cParametersJvmFormalParameterParserRuleCall_2_1_1_1_1_0 = (RuleCall)cParametersAssignment_2_1_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cColonKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cReturnTypeAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cReturnTypeJvmTypeReferenceParserRuleCall_2_2_1_0 = (RuleCall)cReturnTypeAssignment_2_2_1.eContents().get(0);
		private final Assignment cBodyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBodyIQLStatementBlockParserRuleCall_3_0 = (RuleCall)cBodyAssignment_3.eContents().get(0);
		
		//ODLMethod returns iql::IQLMethod:
		//	{ODLMethod} (on?="on" | validate?="validate") (simpleName=ID ("(" (parameters+=JvmFormalParameter (","
		//	parameters+=JvmFormalParameter)*)? ")")? (":" returnType=JvmTypeReference)?)? body=IQLStatementBlock;
		public ParserRule getRule() { return rule; }

		//{ODLMethod} (on?="on" | validate?="validate") (simpleName=ID ("(" (parameters+=JvmFormalParameter (","
		//parameters+=JvmFormalParameter)*)? ")")? (":" returnType=JvmTypeReference)?)? body=IQLStatementBlock
		public Group getGroup() { return cGroup; }

		//{ODLMethod}
		public Action getODLMethodAction_0() { return cODLMethodAction_0; }

		//on?="on" | validate?="validate"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//on?="on"
		public Assignment getOnAssignment_1_0() { return cOnAssignment_1_0; }

		//"on"
		public Keyword getOnOnKeyword_1_0_0() { return cOnOnKeyword_1_0_0; }

		//validate?="validate"
		public Assignment getValidateAssignment_1_1() { return cValidateAssignment_1_1; }

		//"validate"
		public Keyword getValidateValidateKeyword_1_1_0() { return cValidateValidateKeyword_1_1_0; }

		//(simpleName=ID ("(" (parameters+=JvmFormalParameter ("," parameters+=JvmFormalParameter)*)? ")")? (":"
		//returnType=JvmTypeReference)?)?
		public Group getGroup_2() { return cGroup_2; }

		//simpleName=ID
		public Assignment getSimpleNameAssignment_2_0() { return cSimpleNameAssignment_2_0; }

		//ID
		public RuleCall getSimpleNameIDTerminalRuleCall_2_0_0() { return cSimpleNameIDTerminalRuleCall_2_0_0; }

		//("(" (parameters+=JvmFormalParameter ("," parameters+=JvmFormalParameter)*)? ")")?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_1_0() { return cLeftParenthesisKeyword_2_1_0; }

		//(parameters+=JvmFormalParameter ("," parameters+=JvmFormalParameter)*)?
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }

		//parameters+=JvmFormalParameter
		public Assignment getParametersAssignment_2_1_1_0() { return cParametersAssignment_2_1_1_0; }

		//JvmFormalParameter
		public RuleCall getParametersJvmFormalParameterParserRuleCall_2_1_1_0_0() { return cParametersJvmFormalParameterParserRuleCall_2_1_1_0_0; }

		//("," parameters+=JvmFormalParameter)*
		public Group getGroup_2_1_1_1() { return cGroup_2_1_1_1; }

		//","
		public Keyword getCommaKeyword_2_1_1_1_0() { return cCommaKeyword_2_1_1_1_0; }

		//parameters+=JvmFormalParameter
		public Assignment getParametersAssignment_2_1_1_1_1() { return cParametersAssignment_2_1_1_1_1; }

		//JvmFormalParameter
		public RuleCall getParametersJvmFormalParameterParserRuleCall_2_1_1_1_1_0() { return cParametersJvmFormalParameterParserRuleCall_2_1_1_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_1_2() { return cRightParenthesisKeyword_2_1_2; }

		//(":" returnType=JvmTypeReference)?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//":"
		public Keyword getColonKeyword_2_2_0() { return cColonKeyword_2_2_0; }

		//returnType=JvmTypeReference
		public Assignment getReturnTypeAssignment_2_2_1() { return cReturnTypeAssignment_2_2_1; }

		//JvmTypeReference
		public RuleCall getReturnTypeJvmTypeReferenceParserRuleCall_2_2_1_0() { return cReturnTypeJvmTypeReferenceParserRuleCall_2_2_1_0; }

		//body=IQLStatementBlock
		public Assignment getBodyAssignment_3() { return cBodyAssignment_3; }

		//IQLStatementBlock
		public RuleCall getBodyIQLStatementBlockParserRuleCall_3_0() { return cBodyIQLStatementBlockParserRuleCall_3_0; }
	}
	
	
	private final ODLFileElements pODLFile;
	private final ODLTypeDefsElements pODLTypeDefs;
	private final ODLOperatorElements pODLOperator;
	private final ODLParameterElements pODLParameter;
	private final ODLMethodElements pODLMethod;
	
	private final Grammar grammar;

	private final BasicIQLGrammarAccess gaBasicIQL;

	@Inject
	public ODLGrammarAccess(GrammarProvider grammarProvider,
		BasicIQLGrammarAccess gaBasicIQL) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaBasicIQL = gaBasicIQL;
		this.pODLFile = new ODLFileElements();
		this.pODLTypeDefs = new ODLTypeDefsElements();
		this.pODLOperator = new ODLOperatorElements();
		this.pODLParameter = new ODLParameterElements();
		this.pODLMethod = new ODLMethodElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.uniol.inf.is.odysseus.iql.odl.ODL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public BasicIQLGrammarAccess getBasicIQLGrammarAccess() {
		return gaBasicIQL;
	}

	
	//ODLFile returns iql::IQLFile:
	//	{ODLFile} namespaces+=IQLNamespace* elements+=ODLTypeDefs*;
	public ODLFileElements getODLFileAccess() {
		return pODLFile;
	}
	
	public ParserRule getODLFileRule() {
		return getODLFileAccess().getRule();
	}

	//ODLTypeDefs returns iql::IQLTypeDef:
	//	IQLClass | => IQLInterface | ODLOperator;
	public ODLTypeDefsElements getODLTypeDefsAccess() {
		return pODLTypeDefs;
	}
	
	public ParserRule getODLTypeDefsRule() {
		return getODLTypeDefsAccess().getRule();
	}

	//ODLOperator returns iql::IQLTypeDef:
	//	{ODLOperator} javametadata+=IQLJavaMetadata* "operator" simpleName=ID ("(" metadataList=IQLMetadataList? ")")? "{"
	//	members+=(IQLAttribute | IQLMethod | ODLParameter | ODLMethod | IQLJavaMember)* "}";
	public ODLOperatorElements getODLOperatorAccess() {
		return pODLOperator;
	}
	
	public ParserRule getODLOperatorRule() {
		return getODLOperatorAccess().getRule();
	}

	//ODLParameter returns iql::IQLAttribute:
	//	{ODLParameter} optional?="optional"? parameter?="parameter" ("(" metadataList=IQLMetadataList? ")")?
	//	type=JvmTypeReference simpleName=ID init=IQLVariableInitialization? ";";
	public ODLParameterElements getODLParameterAccess() {
		return pODLParameter;
	}
	
	public ParserRule getODLParameterRule() {
		return getODLParameterAccess().getRule();
	}

	//ODLMethod returns iql::IQLMethod:
	//	{ODLMethod} (on?="on" | validate?="validate") (simpleName=ID ("(" (parameters+=JvmFormalParameter (","
	//	parameters+=JvmFormalParameter)*)? ")")? (":" returnType=JvmTypeReference)?)? body=IQLStatementBlock;
	public ODLMethodElements getODLMethodAccess() {
		return pODLMethod;
	}
	
	public ParserRule getODLMethodRule() {
		return getODLMethodAccess().getRule();
	}

	//IQLFile:
	//	("namespace" name=QualifiedName ";")? namespaces+=IQLNamespace* elements+=IQLTypeDefs*;
	public BasicIQLGrammarAccess.IQLFileElements getIQLFileAccess() {
		return gaBasicIQL.getIQLFileAccess();
	}
	
	public ParserRule getIQLFileRule() {
		return getIQLFileAccess().getRule();
	}

	//IQLTypeDefs returns IQLTypeDef:
	//	IQLClass | IQLInterface;
	public BasicIQLGrammarAccess.IQLTypeDefsElements getIQLTypeDefsAccess() {
		return gaBasicIQL.getIQLTypeDefsAccess();
	}
	
	public ParserRule getIQLTypeDefsRule() {
		return getIQLTypeDefsAccess().getRule();
	}

	//IQLNamespace:
	//	"use" importedNamespace=QualifiedNameWithWildcard ";";
	public BasicIQLGrammarAccess.IQLNamespaceElements getIQLNamespaceAccess() {
		return gaBasicIQL.getIQLNamespaceAccess();
	}
	
	public ParserRule getIQLNamespaceRule() {
		return getIQLNamespaceAccess().getRule();
	}

	//IQLClass returns IQLTypeDef:
	//	{IQLClass} javametadata+=IQLJavaMetadata* "class" simpleName=ID ("extends" extendedClass=JvmTypeReference)?
	//	("implements" extendedInterfaces+=JvmTypeReference ("," extendedInterfaces+=JvmTypeReference)?)? "{"
	//	members+=(IQLAttribute | IQLMethod | IQLJavaMember)* "}";
	public BasicIQLGrammarAccess.IQLClassElements getIQLClassAccess() {
		return gaBasicIQL.getIQLClassAccess();
	}
	
	public ParserRule getIQLClassRule() {
		return getIQLClassAccess().getRule();
	}

	//IQLInterface returns IQLTypeDef:
	//	{IQLInterface} javametadata+=IQLJavaMetadata* "interface" simpleName=ID ("extends"
	//	extendedInterfaces+=JvmTypeReference ("," extendedInterfaces+=JvmTypeReference)?)? "{"
	//	members+=(IQLMethodDeclarationMember | IQLJavaMember)* "}";
	public BasicIQLGrammarAccess.IQLInterfaceElements getIQLInterfaceAccess() {
		return gaBasicIQL.getIQLInterfaceAccess();
	}
	
	public ParserRule getIQLInterfaceRule() {
		return getIQLInterfaceAccess().getRule();
	}

	//IQLTypeDef returns types::JvmGenericType:
	//	{IQLTypeDef};
	public BasicIQLGrammarAccess.IQLTypeDefElements getIQLTypeDefAccess() {
		return gaBasicIQL.getIQLTypeDefAccess();
	}
	
	public ParserRule getIQLTypeDefRule() {
		return getIQLTypeDefAccess().getRule();
	}

	//IQLJavaMetadata:
	//	{IQLJavaMetadata} "$*" text=IQLJava "*$";
	public BasicIQLGrammarAccess.IQLJavaMetadataElements getIQLJavaMetadataAccess() {
		return gaBasicIQL.getIQLJavaMetadataAccess();
	}
	
	public ParserRule getIQLJavaMetadataRule() {
		return getIQLJavaMetadataAccess().getRule();
	}

	///////////////////////////////////////////////
	///////////////////////////////////////////////
	///////////////////////////////////////////////
	//IQLAttribute returns types::JvmField:
	//	{IQLAttribute} type=JvmTypeReference simpleName=ID init=IQLVariableInitialization? ";";
	public BasicIQLGrammarAccess.IQLAttributeElements getIQLAttributeAccess() {
		return gaBasicIQL.getIQLAttributeAccess();
	}
	
	public ParserRule getIQLAttributeRule() {
		return getIQLAttributeAccess().getRule();
	}

	//JvmTypeReference returns types::JvmTypeReference:
	//	IQLSimpleTypeRef | IQLArrayTypeRef;
	public BasicIQLGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaBasicIQL.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}

	//JvmType returns types::JvmType:
	//	IQLSimpleType | IQLArrayType;
	public BasicIQLGrammarAccess.JvmTypeElements getJvmTypeAccess() {
		return gaBasicIQL.getJvmTypeAccess();
	}
	
	public ParserRule getJvmTypeRule() {
		return getJvmTypeAccess().getRule();
	}

	//IQLSimpleTypeRef:
	//	type=IQLSimpleType;
	public BasicIQLGrammarAccess.IQLSimpleTypeRefElements getIQLSimpleTypeRefAccess() {
		return gaBasicIQL.getIQLSimpleTypeRefAccess();
	}
	
	public ParserRule getIQLSimpleTypeRefRule() {
		return getIQLSimpleTypeRefAccess().getRule();
	}

	//IQLArrayTypeRef:
	//	type=IQLArrayType;
	public BasicIQLGrammarAccess.IQLArrayTypeRefElements getIQLArrayTypeRefAccess() {
		return gaBasicIQL.getIQLArrayTypeRefAccess();
	}
	
	public ParserRule getIQLArrayTypeRefRule() {
		return getIQLArrayTypeRefAccess().getRule();
	}

	//IQLSimpleType:
	//	type=[types::JvmType|QualifiedName];
	public BasicIQLGrammarAccess.IQLSimpleTypeElements getIQLSimpleTypeAccess() {
		return gaBasicIQL.getIQLSimpleTypeAccess();
	}
	
	public ParserRule getIQLSimpleTypeRule() {
		return getIQLSimpleTypeAccess().getRule();
	}

	//IQLArrayType:
	//	type=[types::JvmType|QualifiedName] dimensions+=ArrayBrackets+;
	public BasicIQLGrammarAccess.IQLArrayTypeElements getIQLArrayTypeAccess() {
		return gaBasicIQL.getIQLArrayTypeAccess();
	}
	
	public ParserRule getIQLArrayTypeRule() {
		return getIQLArrayTypeAccess().getRule();
	}

	//ArrayBrackets:
	//	"[" "]";
	public BasicIQLGrammarAccess.ArrayBracketsElements getArrayBracketsAccess() {
		return gaBasicIQL.getArrayBracketsAccess();
	}
	
	public ParserRule getArrayBracketsRule() {
		return getArrayBracketsAccess().getRule();
	}

	//JvmFormalParameter returns types::JvmFormalParameter:
	//	IQLFormalParameter;
	public BasicIQLGrammarAccess.JvmFormalParameterElements getJvmFormalParameterAccess() {
		return gaBasicIQL.getJvmFormalParameterAccess();
	}
	
	public ParserRule getJvmFormalParameterRule() {
		return getJvmFormalParameterAccess().getRule();
	}

	//IQLFormalParameter returns IQLVariableDeclaration:
	//	parameterType=JvmTypeReference name=ID;
	public BasicIQLGrammarAccess.IQLFormalParameterElements getIQLFormalParameterAccess() {
		return gaBasicIQL.getIQLFormalParameterAccess();
	}
	
	public ParserRule getIQLFormalParameterRule() {
		return getIQLFormalParameterAccess().getRule();
	}

	//IQLMethod returns types::JvmOperation:
	//	{IQLMethod} simpleName=ID ("(" (parameters+=JvmFormalParameter ("," parameters+=JvmFormalParameter)*)? ")")? (":"
	//	returnType=JvmTypeReference)? body=IQLStatementBlock;
	public BasicIQLGrammarAccess.IQLMethodElements getIQLMethodAccess() {
		return gaBasicIQL.getIQLMethodAccess();
	}
	
	public ParserRule getIQLMethodRule() {
		return getIQLMethodAccess().getRule();
	}

	//IQLMethodDeclarationMember returns types::JvmOperation:
	//	{IQLMethodDeclarationMember} simpleName=ID "(" (parameters+=JvmFormalParameter (","
	//	parameters+=JvmFormalParameter)*)? ")" (":" returnType=JvmTypeReference)? ";";
	public BasicIQLGrammarAccess.IQLMethodDeclarationMemberElements getIQLMethodDeclarationMemberAccess() {
		return gaBasicIQL.getIQLMethodDeclarationMemberAccess();
	}
	
	public ParserRule getIQLMethodDeclarationMemberRule() {
		return getIQLMethodDeclarationMemberAccess().getRule();
	}

	//IQLJavaMember returns types::JvmMember:
	//	{IQLJavaMember} "$*" text=IQLJava "*$";
	public BasicIQLGrammarAccess.IQLJavaMemberElements getIQLJavaMemberAccess() {
		return gaBasicIQL.getIQLJavaMemberAccess();
	}
	
	public ParserRule getIQLJavaMemberRule() {
		return getIQLJavaMemberAccess().getRule();
	}

	///////////////////////////////////////////////
	///////////////////////////////////////////////
	///////////////////////////////////////////////
	//IQLMetadataList:
	//	elements+=IQLMetadata ("," elements+=IQLMetadata)*;
	public BasicIQLGrammarAccess.IQLMetadataListElements getIQLMetadataListAccess() {
		return gaBasicIQL.getIQLMetadataListAccess();
	}
	
	public ParserRule getIQLMetadataListRule() {
		return getIQLMetadataListAccess().getRule();
	}

	//IQLMetadata:
	//	name=ID "=" value=IQLMetadataValue;
	public BasicIQLGrammarAccess.IQLMetadataElements getIQLMetadataAccess() {
		return gaBasicIQL.getIQLMetadataAccess();
	}
	
	public ParserRule getIQLMetadataRule() {
		return getIQLMetadataAccess().getRule();
	}

	//IQLMetadataValue:
	//	IQLMetadataValueSingle | IQLMetadataValueList | IQLMetadataValueMap;
	public BasicIQLGrammarAccess.IQLMetadataValueElements getIQLMetadataValueAccess() {
		return gaBasicIQL.getIQLMetadataValueAccess();
	}
	
	public ParserRule getIQLMetadataValueRule() {
		return getIQLMetadataValueAccess().getRule();
	}

	//IQLMetadataValueSingle returns IQLMetadataValue:
	//	{IQLMetadataValueSingleLong} value=INT | {IQLMetadataValueSingleDouble} value=DOUBLE | {IQLMetadataValueSingleString}
	//	value=STRING | {IQLMetadataValueSingleBoolean} value=BOOLEAN | {IQLMetadataValueSingleChar} value=CHAR |
	//	{IQLMetadataValueSingleTypeRef} value=JvmTypeReference | {IQLMetadataValueSingleNull} value="null";
	public BasicIQLGrammarAccess.IQLMetadataValueSingleElements getIQLMetadataValueSingleAccess() {
		return gaBasicIQL.getIQLMetadataValueSingleAccess();
	}
	
	public ParserRule getIQLMetadataValueSingleRule() {
		return getIQLMetadataValueSingleAccess().getRule();
	}

	//IQLMetadataValueList returns IQLMetadataValue:
	//	{IQLMetadataValueList} "[" (elements+=IQLMetadataValue ("," elements+=IQLMetadataValue)*)? "]";
	public BasicIQLGrammarAccess.IQLMetadataValueListElements getIQLMetadataValueListAccess() {
		return gaBasicIQL.getIQLMetadataValueListAccess();
	}
	
	public ParserRule getIQLMetadataValueListRule() {
		return getIQLMetadataValueListAccess().getRule();
	}

	//IQLMetadataValueMap returns IQLMetadataValue:
	//	{IQLMetadataValueMap} "{" (elements+=IQLMetadataValueMapElement ("," elements+=IQLMetadataValueMapElement)*)? "}";
	public BasicIQLGrammarAccess.IQLMetadataValueMapElements getIQLMetadataValueMapAccess() {
		return gaBasicIQL.getIQLMetadataValueMapAccess();
	}
	
	public ParserRule getIQLMetadataValueMapRule() {
		return getIQLMetadataValueMapAccess().getRule();
	}

	//IQLMetadataValueMapElement:
	//	key=IQLMetadataValue "=" value=IQLMetadataValue;
	public BasicIQLGrammarAccess.IQLMetadataValueMapElementElements getIQLMetadataValueMapElementAccess() {
		return gaBasicIQL.getIQLMetadataValueMapElementAccess();
	}
	
	public ParserRule getIQLMetadataValueMapElementRule() {
		return getIQLMetadataValueMapElementAccess().getRule();
	}

	///////////////////////////////////////////////
	///////////////////////////////////////////////
	///////////////////////////////////////////////
	//IQLVariableDeclaration:
	//	ref=JvmTypeReference name=ID;
	public BasicIQLGrammarAccess.IQLVariableDeclarationElements getIQLVariableDeclarationAccess() {
		return gaBasicIQL.getIQLVariableDeclarationAccess();
	}
	
	public ParserRule getIQLVariableDeclarationRule() {
		return getIQLVariableDeclarationAccess().getRule();
	}

	//IQLVariableInitialization:
	//	{IQLVariableInitialization} (argsList=IQLArgumentsList argsMap=IQLArgumentsMap?) | "=" value=IQLExpression;
	public BasicIQLGrammarAccess.IQLVariableInitializationElements getIQLVariableInitializationAccess() {
		return gaBasicIQL.getIQLVariableInitializationAccess();
	}
	
	public ParserRule getIQLVariableInitializationRule() {
		return getIQLVariableInitializationAccess().getRule();
	}

	//IQLArgumentsList:
	//	{IQLArgumentsList} "(" (elements+=IQLExpression ("," elements+=IQLExpression)*)? ")";
	public BasicIQLGrammarAccess.IQLArgumentsListElements getIQLArgumentsListAccess() {
		return gaBasicIQL.getIQLArgumentsListAccess();
	}
	
	public ParserRule getIQLArgumentsListRule() {
		return getIQLArgumentsListAccess().getRule();
	}

	//IQLArgumentsMap:
	//	{IQLArgumentsMap} "{" (elements+=IQLArgumentsMapKeyValue ("," elements+=IQLArgumentsMapKeyValue)*)? "}";
	public BasicIQLGrammarAccess.IQLArgumentsMapElements getIQLArgumentsMapAccess() {
		return gaBasicIQL.getIQLArgumentsMapAccess();
	}
	
	public ParserRule getIQLArgumentsMapRule() {
		return getIQLArgumentsMapAccess().getRule();
	}

	//IQLArgumentsMapKeyValue:
	//	key=ID "=" value=IQLExpression;
	public BasicIQLGrammarAccess.IQLArgumentsMapKeyValueElements getIQLArgumentsMapKeyValueAccess() {
		return gaBasicIQL.getIQLArgumentsMapKeyValueAccess();
	}
	
	public ParserRule getIQLArgumentsMapKeyValueRule() {
		return getIQLArgumentsMapKeyValueAccess().getRule();
	}

	///////////////////////////////////////////////
	///////////////////////////////////////////////
	///////////////////////////////////////////////
	//IQLStatement:
	//	IQLStatementBlock | IQLExpressionStatement | IQLIfStatement | IQLWhileStatement | IQLDoWhileStatement |
	//	IQLForStatement | IQLForEachStatement | IQLSwitchStatement | => IQLVariableStatement | IQLBreakStatement |
	//	IQLContinueStatement | IQLReturnStatement | IQLConstructorCallStatement | IQLJavaStatement;
	public BasicIQLGrammarAccess.IQLStatementElements getIQLStatementAccess() {
		return gaBasicIQL.getIQLStatementAccess();
	}
	
	public ParserRule getIQLStatementRule() {
		return getIQLStatementAccess().getRule();
	}

	//IQLStatementBlock returns IQLStatement:
	//	{IQLStatementBlock} "{" statements+=IQLStatement* "}";
	public BasicIQLGrammarAccess.IQLStatementBlockElements getIQLStatementBlockAccess() {
		return gaBasicIQL.getIQLStatementBlockAccess();
	}
	
	public ParserRule getIQLStatementBlockRule() {
		return getIQLStatementBlockAccess().getRule();
	}

	//IQLJavaStatement returns IQLStatement:
	//	{IQLJavaStatement} "$*" text=IQLJava "*$";
	public BasicIQLGrammarAccess.IQLJavaStatementElements getIQLJavaStatementAccess() {
		return gaBasicIQL.getIQLJavaStatementAccess();
	}
	
	public ParserRule getIQLJavaStatementRule() {
		return getIQLJavaStatementAccess().getRule();
	}

	//IQLIfStatement returns IQLStatement:
	//	{IQLIfStatement} "if" "(" predicate=IQLExpression ")" thenBody=IQLStatement ("else" elseBody=IQLStatement)?;
	public BasicIQLGrammarAccess.IQLIfStatementElements getIQLIfStatementAccess() {
		return gaBasicIQL.getIQLIfStatementAccess();
	}
	
	public ParserRule getIQLIfStatementRule() {
		return getIQLIfStatementAccess().getRule();
	}

	//IQLWhileStatement returns IQLStatement:
	//	{IQLWhileStatement} "while" "(" predicate=IQLExpression ")" body=IQLStatement;
	public BasicIQLGrammarAccess.IQLWhileStatementElements getIQLWhileStatementAccess() {
		return gaBasicIQL.getIQLWhileStatementAccess();
	}
	
	public ParserRule getIQLWhileStatementRule() {
		return getIQLWhileStatementAccess().getRule();
	}

	//IQLDoWhileStatement returns IQLStatement:
	//	{IQLDoWhileStatement} "do" body=IQLStatement "while" "(" predicate=IQLExpression ")";
	public BasicIQLGrammarAccess.IQLDoWhileStatementElements getIQLDoWhileStatementAccess() {
		return gaBasicIQL.getIQLDoWhileStatementAccess();
	}
	
	public ParserRule getIQLDoWhileStatementRule() {
		return getIQLDoWhileStatementAccess().getRule();
	}

	//IQLForStatement returns IQLStatement:
	//	{IQLForStatement} "for" "(" var=IQLVariableStatement predicate=IQLExpressionStatement updateExpr=IQLExpression ")"
	//	body=IQLStatement;
	public BasicIQLGrammarAccess.IQLForStatementElements getIQLForStatementAccess() {
		return gaBasicIQL.getIQLForStatementAccess();
	}
	
	public ParserRule getIQLForStatementRule() {
		return getIQLForStatementAccess().getRule();
	}

	//IQLForEachStatement returns IQLStatement:
	//	{IQLForEachStatement} "for" "(" var=IQLVariableDeclaration ":" forExpression=IQLExpression ")" body=IQLStatement;
	public BasicIQLGrammarAccess.IQLForEachStatementElements getIQLForEachStatementAccess() {
		return gaBasicIQL.getIQLForEachStatementAccess();
	}
	
	public ParserRule getIQLForEachStatementRule() {
		return getIQLForEachStatementAccess().getRule();
	}

	//IQLSwitchStatement returns IQLStatement:
	//	{IQLSwitchStatement} "switch" "(" expr=IQLExpression ")" "{" cases+=IQLCasePart* ("default" ":"
	//	default=IQLStatement)? "}";
	public BasicIQLGrammarAccess.IQLSwitchStatementElements getIQLSwitchStatementAccess() {
		return gaBasicIQL.getIQLSwitchStatementAccess();
	}
	
	public ParserRule getIQLSwitchStatementRule() {
		return getIQLSwitchStatementAccess().getRule();
	}

	//IQLCasePart:
	//	{IQLCasePart} "case" expr=IQLLiteralExpression ":" body=IQLStatement;
	public BasicIQLGrammarAccess.IQLCasePartElements getIQLCasePartAccess() {
		return gaBasicIQL.getIQLCasePartAccess();
	}
	
	public ParserRule getIQLCasePartRule() {
		return getIQLCasePartAccess().getRule();
	}

	//IQLExpressionStatement returns IQLStatement:
	//	{IQLExpressionStatement} expression=IQLExpression ";";
	public BasicIQLGrammarAccess.IQLExpressionStatementElements getIQLExpressionStatementAccess() {
		return gaBasicIQL.getIQLExpressionStatementAccess();
	}
	
	public ParserRule getIQLExpressionStatementRule() {
		return getIQLExpressionStatementAccess().getRule();
	}

	//IQLVariableStatement returns IQLStatement:
	//	{IQLVariableStatement} var=IQLVariableDeclaration init=IQLVariableInitialization ";";
	public BasicIQLGrammarAccess.IQLVariableStatementElements getIQLVariableStatementAccess() {
		return gaBasicIQL.getIQLVariableStatementAccess();
	}
	
	public ParserRule getIQLVariableStatementRule() {
		return getIQLVariableStatementAccess().getRule();
	}

	//IQLConstructorCallStatement returns IQLStatement:
	//	{IQLConstructorCallStatement} keyword=("super" | "this") args=IQLArgumentsList ";";
	public BasicIQLGrammarAccess.IQLConstructorCallStatementElements getIQLConstructorCallStatementAccess() {
		return gaBasicIQL.getIQLConstructorCallStatementAccess();
	}
	
	public ParserRule getIQLConstructorCallStatementRule() {
		return getIQLConstructorCallStatementAccess().getRule();
	}

	//IQLBreakStatement returns IQLStatement:
	//	{IQLBreakStatement} "break" ";";
	public BasicIQLGrammarAccess.IQLBreakStatementElements getIQLBreakStatementAccess() {
		return gaBasicIQL.getIQLBreakStatementAccess();
	}
	
	public ParserRule getIQLBreakStatementRule() {
		return getIQLBreakStatementAccess().getRule();
	}

	//IQLContinueStatement returns IQLStatement:
	//	{IQLContinueStatement} "continue" ";";
	public BasicIQLGrammarAccess.IQLContinueStatementElements getIQLContinueStatementAccess() {
		return gaBasicIQL.getIQLContinueStatementAccess();
	}
	
	public ParserRule getIQLContinueStatementRule() {
		return getIQLContinueStatementAccess().getRule();
	}

	//IQLReturnStatement returns IQLStatement:
	//	{IQLReturnStatement} "return" expression=IQLExpression ";";
	public BasicIQLGrammarAccess.IQLReturnStatementElements getIQLReturnStatementAccess() {
		return gaBasicIQL.getIQLReturnStatementAccess();
	}
	
	public ParserRule getIQLReturnStatementRule() {
		return getIQLReturnStatementAccess().getRule();
	}

	///////////////////////////////////////////////
	///////////////////////////////////////////////
	///////////////////////////////////////////////
	//IQLExpression:
	//	IQLAssignmentExpression;
	public BasicIQLGrammarAccess.IQLExpressionElements getIQLExpressionAccess() {
		return gaBasicIQL.getIQLExpressionAccess();
	}
	
	public ParserRule getIQLExpressionRule() {
		return getIQLExpressionAccess().getRule();
	}

	//IQLAssignmentExpression returns IQLExpression:
	//	IQLLogicalOrExpression (=> ({IQLAssignmentExpression.leftOperand=current} op=OpAssign)
	//	rightOperand=IQLAssignmentExpression)?;
	public BasicIQLGrammarAccess.IQLAssignmentExpressionElements getIQLAssignmentExpressionAccess() {
		return gaBasicIQL.getIQLAssignmentExpressionAccess();
	}
	
	public ParserRule getIQLAssignmentExpressionRule() {
		return getIQLAssignmentExpressionAccess().getRule();
	}

	//OpAssign:
	//	"=" | "+=" | "-=" | "*=" | "/=" | "%=";
	public BasicIQLGrammarAccess.OpAssignElements getOpAssignAccess() {
		return gaBasicIQL.getOpAssignAccess();
	}
	
	public ParserRule getOpAssignRule() {
		return getOpAssignAccess().getRule();
	}

	//IQLLogicalOrExpression returns IQLExpression:
	//	IQLLogicalAndExpression (=> ({IQLLogicalOrExpression.leftOperand=current} op=OpLogicalOr)
	//	rightOperand=IQLLogicalAndExpression)*;
	public BasicIQLGrammarAccess.IQLLogicalOrExpressionElements getIQLLogicalOrExpressionAccess() {
		return gaBasicIQL.getIQLLogicalOrExpressionAccess();
	}
	
	public ParserRule getIQLLogicalOrExpressionRule() {
		return getIQLLogicalOrExpressionAccess().getRule();
	}

	//OpLogicalOr:
	//	"||";
	public BasicIQLGrammarAccess.OpLogicalOrElements getOpLogicalOrAccess() {
		return gaBasicIQL.getOpLogicalOrAccess();
	}
	
	public ParserRule getOpLogicalOrRule() {
		return getOpLogicalOrAccess().getRule();
	}

	//IQLLogicalAndExpression returns IQLExpression:
	//	IQLEqualityExpression (=> ({IQLLogicalAndExpression.leftOperand=current} op=OpLogicalAnd)
	//	rightOperand=IQLEqualityExpression)*;
	public BasicIQLGrammarAccess.IQLLogicalAndExpressionElements getIQLLogicalAndExpressionAccess() {
		return gaBasicIQL.getIQLLogicalAndExpressionAccess();
	}
	
	public ParserRule getIQLLogicalAndExpressionRule() {
		return getIQLLogicalAndExpressionAccess().getRule();
	}

	//OpLogicalAnd:
	//	"&&";
	public BasicIQLGrammarAccess.OpLogicalAndElements getOpLogicalAndAccess() {
		return gaBasicIQL.getOpLogicalAndAccess();
	}
	
	public ParserRule getOpLogicalAndRule() {
		return getOpLogicalAndAccess().getRule();
	}

	//IQLEqualityExpression returns IQLExpression:
	//	IQLRelationalExpression (=> ({IQLEqualityExpression.leftOperand=current} op=OpEquality)
	//	rightOperand=IQLRelationalExpression)*;
	public BasicIQLGrammarAccess.IQLEqualityExpressionElements getIQLEqualityExpressionAccess() {
		return gaBasicIQL.getIQLEqualityExpressionAccess();
	}
	
	public ParserRule getIQLEqualityExpressionRule() {
		return getIQLEqualityExpressionAccess().getRule();
	}

	//OpEquality:
	//	"==" | "!=";
	public BasicIQLGrammarAccess.OpEqualityElements getOpEqualityAccess() {
		return gaBasicIQL.getOpEqualityAccess();
	}
	
	public ParserRule getOpEqualityRule() {
		return getOpEqualityAccess().getRule();
	}

	//IQLRelationalExpression returns IQLExpression:
	//	IQLAdditiveExpression (=> ({IQLInstanceOfExpression.leftOperand=current} "instanceof") targetRef=JvmTypeReference |
	//	=> ({IQLRelationalExpression.leftOperand=current} op=OpRelational) rightOperand=IQLAdditiveExpression)*;
	public BasicIQLGrammarAccess.IQLRelationalExpressionElements getIQLRelationalExpressionAccess() {
		return gaBasicIQL.getIQLRelationalExpressionAccess();
	}
	
	public ParserRule getIQLRelationalExpressionRule() {
		return getIQLRelationalExpressionAccess().getRule();
	}

	//OpRelational:
	//	">" | ">=" | "<" | "<=";
	public BasicIQLGrammarAccess.OpRelationalElements getOpRelationalAccess() {
		return gaBasicIQL.getOpRelationalAccess();
	}
	
	public ParserRule getOpRelationalRule() {
		return getOpRelationalAccess().getRule();
	}

	//IQLAdditiveExpression returns IQLExpression:
	//	IQLMultiplicativeExpression (=> ({IQLAdditiveExpression.leftOperand=current} op=OpAdd)
	//	rightOperand=IQLMultiplicativeExpression)*;
	public BasicIQLGrammarAccess.IQLAdditiveExpressionElements getIQLAdditiveExpressionAccess() {
		return gaBasicIQL.getIQLAdditiveExpressionAccess();
	}
	
	public ParserRule getIQLAdditiveExpressionRule() {
		return getIQLAdditiveExpressionAccess().getRule();
	}

	//OpAdd:
	//	"+" | "-";
	public BasicIQLGrammarAccess.OpAddElements getOpAddAccess() {
		return gaBasicIQL.getOpAddAccess();
	}
	
	public ParserRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}

	//IQLMultiplicativeExpression returns IQLExpression:
	//	IQLUnaryExpression (=> ({IQLMultiplicativeExpression.leftOperand=current} op=OpMulti)
	//	rightOperand=IQLUnaryExpression)*;
	public BasicIQLGrammarAccess.IQLMultiplicativeExpressionElements getIQLMultiplicativeExpressionAccess() {
		return gaBasicIQL.getIQLMultiplicativeExpressionAccess();
	}
	
	public ParserRule getIQLMultiplicativeExpressionRule() {
		return getIQLMultiplicativeExpressionAccess().getRule();
	}

	//OpMulti:
	//	"*" | "/" | "%";
	public BasicIQLGrammarAccess.OpMultiElements getOpMultiAccess() {
		return gaBasicIQL.getOpMultiAccess();
	}
	
	public ParserRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}

	//IQLUnaryExpression returns IQLExpression:
	//	({IQLPlusMinusExpression} op=OpUnaryPlusMinus) operand=IQLMemberCallExpression | ({IQLBooleanNotExpression}
	//	op=OpUnaryBooleanNot) operand=IQLMemberCallExpression | ({IQLPrefixExpression} op=OpPrefix)
	//	operand=IQLMemberCallExpression | => ({IQLTypeCastExpression} "(" targetRef=JvmTypeReference ")")
	//	operand=IQLMemberCallExpression | IQLMemberCallExpression => ({IQLPostfixExpression.operand=current} op=OpPostfix)?;
	public BasicIQLGrammarAccess.IQLUnaryExpressionElements getIQLUnaryExpressionAccess() {
		return gaBasicIQL.getIQLUnaryExpressionAccess();
	}
	
	public ParserRule getIQLUnaryExpressionRule() {
		return getIQLUnaryExpressionAccess().getRule();
	}

	//OpUnaryPlusMinus:
	//	"-" | "+";
	public BasicIQLGrammarAccess.OpUnaryPlusMinusElements getOpUnaryPlusMinusAccess() {
		return gaBasicIQL.getOpUnaryPlusMinusAccess();
	}
	
	public ParserRule getOpUnaryPlusMinusRule() {
		return getOpUnaryPlusMinusAccess().getRule();
	}

	//OpUnaryBooleanNot:
	//	"!";
	public BasicIQLGrammarAccess.OpUnaryBooleanNotElements getOpUnaryBooleanNotAccess() {
		return gaBasicIQL.getOpUnaryBooleanNotAccess();
	}
	
	public ParserRule getOpUnaryBooleanNotRule() {
		return getOpUnaryBooleanNotAccess().getRule();
	}

	//OpPrefix:
	//	"++" | "--";
	public BasicIQLGrammarAccess.OpPrefixElements getOpPrefixAccess() {
		return gaBasicIQL.getOpPrefixAccess();
	}
	
	public ParserRule getOpPrefixRule() {
		return getOpPrefixAccess().getRule();
	}

	//OpPostfix:
	//	"++" | "--";
	public BasicIQLGrammarAccess.OpPostfixElements getOpPostfixAccess() {
		return gaBasicIQL.getOpPostfixAccess();
	}
	
	public ParserRule getOpPostfixRule() {
		return getOpPostfixAccess().getRule();
	}

	//IQLMemberCallExpression returns IQLExpression:
	//	IQLTerminalExpression => ({IQLArrayExpression.leftOperand=current} "[" expr=IQLExpression "]")* (=>
	//	({IQLMemberSelectionExpression.leftOperand=current} ".") rightOperand=(IQLAttributeSelection | IQLMethodSelection))*;
	public BasicIQLGrammarAccess.IQLMemberCallExpressionElements getIQLMemberCallExpressionAccess() {
		return gaBasicIQL.getIQLMemberCallExpressionAccess();
	}
	
	public ParserRule getIQLMemberCallExpressionRule() {
		return getIQLMemberCallExpressionAccess().getRule();
	}

	//IQLAttributeSelection returns IQLMemberSelection:
	//	{IQLAttributeSelection} var=[types::JvmField];
	public BasicIQLGrammarAccess.IQLAttributeSelectionElements getIQLAttributeSelectionAccess() {
		return gaBasicIQL.getIQLAttributeSelectionAccess();
	}
	
	public ParserRule getIQLAttributeSelectionRule() {
		return getIQLAttributeSelectionAccess().getRule();
	}

	//IQLMethodSelection returns IQLMemberSelection:
	//	{IQLMethodSelection} method=ID args=IQLArgumentsList;
	public BasicIQLGrammarAccess.IQLMethodSelectionElements getIQLMethodSelectionAccess() {
		return gaBasicIQL.getIQLMethodSelectionAccess();
	}
	
	public ParserRule getIQLMethodSelectionRule() {
		return getIQLMethodSelectionAccess().getRule();
	}

	//IQLTerminalExpression returns IQLExpression:
	//	{IQLTerminalExpressionVariable} var=[IQLVariableDeclaration] | {IQLTerminalExpressionThis} "this" |
	//	{IQLTerminalExpressionSuper} "super" | {IQLTerminalExpressionParenthesis} "(" expr=IQLExpression ")" |
	//	{IQLTerminalExpressionNew} "new" (ref=IQLArrayTypeRef | ref=IQLSimpleTypeRef argsList=IQLArgumentsList
	//	argsMap=IQLArgumentsMap?) | IQLLiteralExpression;
	public BasicIQLGrammarAccess.IQLTerminalExpressionElements getIQLTerminalExpressionAccess() {
		return gaBasicIQL.getIQLTerminalExpressionAccess();
	}
	
	public ParserRule getIQLTerminalExpressionRule() {
		return getIQLTerminalExpressionAccess().getRule();
	}

	//IQLLiteralExpression returns IQLExpression:
	//	{IQLLiteralExpressionInt} value=INT | {IQLLiteralExpressionDouble} value=DOUBLE | {IQLLiteralExpressionString}
	//	value=STRING | {IQLLiteralExpressionBoolean} value=BOOLEAN | {IQLLiteralExpressionChar} value=CHAR |
	//	{IQLLiteralExpressionRange} value=RANGE | {IQLLiteralExpressionNull} "null" | => IQLLiteralExpressionList |
	//	IQLLiteralExpressionMap;
	public BasicIQLGrammarAccess.IQLLiteralExpressionElements getIQLLiteralExpressionAccess() {
		return gaBasicIQL.getIQLLiteralExpressionAccess();
	}
	
	public ParserRule getIQLLiteralExpressionRule() {
		return getIQLLiteralExpressionAccess().getRule();
	}

	//IQLLiteralExpressionList returns IQLExpression:
	//	{IQLLiteralExpressionList} "[" (elements+=IQLExpression ("," elements+=IQLExpression)*)? "]";
	public BasicIQLGrammarAccess.IQLLiteralExpressionListElements getIQLLiteralExpressionListAccess() {
		return gaBasicIQL.getIQLLiteralExpressionListAccess();
	}
	
	public ParserRule getIQLLiteralExpressionListRule() {
		return getIQLLiteralExpressionListAccess().getRule();
	}

	//IQLLiteralExpressionMap returns IQLExpression:
	//	{IQLLiteralExpressionMap} "[" (elements+=IQLLiteralExpressionMapKeyValue (","
	//	elements+=IQLLiteralExpressionMapKeyValue)*)? "]";
	public BasicIQLGrammarAccess.IQLLiteralExpressionMapElements getIQLLiteralExpressionMapAccess() {
		return gaBasicIQL.getIQLLiteralExpressionMapAccess();
	}
	
	public ParserRule getIQLLiteralExpressionMapRule() {
		return getIQLLiteralExpressionMapAccess().getRule();
	}

	//IQLLiteralExpressionMapKeyValue:
	//	key=IQLExpression ":" value=IQLExpression;
	public BasicIQLGrammarAccess.IQLLiteralExpressionMapKeyValueElements getIQLLiteralExpressionMapKeyValueAccess() {
		return gaBasicIQL.getIQLLiteralExpressionMapKeyValueAccess();
	}
	
	public ParserRule getIQLLiteralExpressionMapKeyValueRule() {
		return getIQLLiteralExpressionMapKeyValueAccess().getRule();
	}

	///////////////////////////////////////////////
	///////////////////////////////////////////////
	///////////////////////////////////////////////
	//QualifiedNameWithWildcard:
	//	QualifiedName "::*"?;
	public BasicIQLGrammarAccess.QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return gaBasicIQL.getQualifiedNameWithWildcardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//QualifiedName:
	//	ID ("::" ID)*;
	public BasicIQLGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaBasicIQL.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//terminal RANGE:
	//	INT ".." INT;
	public TerminalRule getRANGERule() {
		return gaBasicIQL.getRANGERule();
	} 

	//IQLJava:
	//	{IQLJava} (text+=IQLJavaText | keywords+=IQLJavaKeywords)*;
	public BasicIQLGrammarAccess.IQLJavaElements getIQLJavaAccess() {
		return gaBasicIQL.getIQLJavaAccess();
	}
	
	public ParserRule getIQLJavaRule() {
		return getIQLJavaAccess().getRule();
	}

	//IQLJavaText:
	//	ID | BOOLEAN | DOUBLE | STRING | CHAR | INT | ANY_OTHER | "+" | "+=" | "-" | "-=" | "*" | "*=" | "/" | "/=" | "%" |
	//	"%=" | "++" | "--" | ">" | ">=" | "<" | "<=" | "!" | "!=" | "&&" | "||" | "==" | "=" | "~" | "?:" | "|" | "|=" | "^"
	//	| "^=" | "&" | "&=" | ">>" | ">>=" | "<<" | "<<=" | ">>>" | ">>>=" | "[" | "]" | "{" | "}" | "(" | ")" | "." | ":" |
	//	";" | "," | "null";
	public BasicIQLGrammarAccess.IQLJavaTextElements getIQLJavaTextAccess() {
		return gaBasicIQL.getIQLJavaTextAccess();
	}
	
	public ParserRule getIQLJavaTextRule() {
		return getIQLJavaTextAccess().getRule();
	}

	//IQLJavaKeywords:
	//	{IQLJavaKeywords} keyword=("break" | "case" | "class" | "continue" | "default" | "do" | "else" | "extends" | "for" |
	//	"if" | "implements" | "instanceof" | "interface" | "new" | "package" | "return" | "super" | "switch" | "this" |
	//	"while" | "abstract" | "assert" | "catch" | "const" | "enum" | "final" | "finally" | "goto" | "import" | "native" |
	//	"private" | "protected" | "public" | "static" | "synchronized" | "throw" | "throws" | "transient" | "try" |
	//	"volatile" | "strictfp");
	public BasicIQLGrammarAccess.IQLJavaKeywordsElements getIQLJavaKeywordsAccess() {
		return gaBasicIQL.getIQLJavaKeywordsAccess();
	}
	
	public ParserRule getIQLJavaKeywordsRule() {
		return getIQLJavaKeywordsAccess().getRule();
	}

	//terminal BOOLEAN returns ecore::EBoolean:
	//	"true" | "false";
	public TerminalRule getBOOLEANRule() {
		return gaBasicIQL.getBOOLEANRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaBasicIQL.getINTRule();
	} 

	//terminal DOUBLE returns ecore::EDouble:
	//	"0".."9"* "." "0".."9"+;
	public TerminalRule getDOUBLERule() {
		return gaBasicIQL.getDOUBLERule();
	} 

	//terminal CHAR returns ecore::EChar:
	//	"\'" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\'" | "\\") | !("\\" | "\'")) "\'";
	public TerminalRule getCHARRule() {
		return gaBasicIQL.getCHARRule();
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaBasicIQL.getIDRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaBasicIQL.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaBasicIQL.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaBasicIQL.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaBasicIQL.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaBasicIQL.getANY_OTHERRule();
	} 
}
