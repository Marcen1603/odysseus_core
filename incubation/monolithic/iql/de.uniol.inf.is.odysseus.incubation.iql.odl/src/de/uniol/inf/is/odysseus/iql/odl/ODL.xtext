grammar de.uniol.inf.is.odysseus.iql.odl.ODL with de.uniol.inf.is.odysseus.iql.basic.BasicIQL

generate oDL "http://www.uniol.de/inf/is/odysseus/iql/odl/ODL"


import "http://www.uniol.de/inf/is/odysseus/iql/basic/BasicIQL" as iql
import "http://www.eclipse.org/xtext/common/JavaVMTypes" as types

ODLFile returns iql::IQLFile:
	{ODLFile}
	namespaces+=IQLNamespace*
	(elements+=ODLTypeDefinition)*
;

ODLTypeDefinition returns iql::IQLTypeDefinition:
	{ODLTypeDefinition}
	(javametadata+=IQLJavaMetadata)*
	inner=(IQLClass | IQLInterface | ODLOperator)
; 

ODLOperator returns  types::JvmGenericType:
	{ODLOperator}
	'operator' simpleName=ID ('(' (metadataList=IQLMetadataList)? ')')? '{'
		members += (IQLAttribute | IQLMethod | ODLParameter | ODLMethod | IQLJavaMember)*
	'}'		
;

ODLParameter returns iql::IQLAttribute:
	{ODLParameter}		
	(optional?='optional')? parameter?='parameter' ('(' (metadataList=IQLMetadataList)? ')')?
	type=JvmTypeReference simpleName=ID (init=IQLVariableInitialization)? ';'
;


ODLMethod returns iql::IQLMethod:
	{ODLMethod}		
	(on?='on' | validate?='validate')
	(simpleName=ID ('(' (parameters+=JvmFormalParameter (',' parameters+=JvmFormalParameter)*)? ')')? (':' returnType=JvmTypeReference)?)?
	body=IQLStatementBlock
;