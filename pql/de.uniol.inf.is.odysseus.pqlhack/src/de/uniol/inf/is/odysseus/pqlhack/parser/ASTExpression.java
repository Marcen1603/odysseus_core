/* Generated By:JJTree: Do not edit this line. ASTExpression.java Version 4.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY= */
package de.uniol.inf.is.odysseus.pqlhack.parser;

@SuppressWarnings("all")
public class ASTExpression extends SimpleNode {
  
	private String operator;
	
  public ASTExpression(int id) {
    super(id);
  }

  public ASTExpression(ProceduralExpressionParser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(ProceduralExpressionParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
  
  public void setOperator(String operator){
	  this.operator = operator;
  }
  
  public String getOperator(){
	  return this.operator;
  }
  
	@Override
	public String toString() {
		if (jjtGetNumChildren() == 1) {
			return jjtGetChild(0).toString();
		} else {
			return jjtGetChild(0).toString() + " " + getOperator() + " "
					+ jjtGetChild(1).toString();
		}
	}
  
}
/* JavaCC - OriginalChecksum=f5fffdfb0c9f07ad9774eca82f2eb74b (do not edit this line) */
