/* Generated By:JJTree&JavaCC: Do not edit this line. ProceduralExpressionParserConstants.java */
package de.uniol.inf.is.odysseus.pqlhack.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ProceduralExpressionParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int K_ACCESS = 5;
  /** RegularExpression Id. */
  int K_AS = 6;
  /** RegularExpression Id. */
  int K_AND = 7;
  /** RegularExpression Id. */
  int K_AVG = 8;
  /** RegularExpression Id. */
  int K_BROKER = 9;
  /** RegularExpression Id. */
  int K_COUNT = 10;
  /** RegularExpression Id. */
  int K_DEFAULT = 11;
  /** RegularExpression Id. */
  int K_JOIN = 12;
  /** RegularExpression Id. */
  int K_LOGICAL = 13;
  /** RegularExpression Id. */
  int K_MAX = 14;
  /** RegularExpression Id. */
  int K_MIN = 15;
  /** RegularExpression Id. */
  int K_NOT = 16;
  /** RegularExpression Id. */
  int K_OR = 17;
  /** RegularExpression Id. */
  int K_ON = 18;
  /** RegularExpression Id. */
  int K_PLAN = 19;
  /** RegularExpression Id. */
  int K_PROJECTION = 20;
  /** RegularExpression Id. */
  int K_QUEUE = 21;
  /** RegularExpression Id. */
  int K_RELATIONAL_PROJECTION = 22;
  /** RegularExpression Id. */
  int K_RELATIONAL_SELECTION = 23;
  /** RegularExpression Id. */
  int K_RELATIONAL_JOIN = 24;
  /** RegularExpression Id. */
  int K_RELATIONAL_NEST = 25;
  /** RegularExpression Id. */
  int K_RELATIONAL_UNNEST = 26;
  /** RegularExpression Id. */
  int K_SELECTION = 27;
  /** RegularExpression Id. */
  int K_SET_PREDICTION = 28;
  /** RegularExpression Id. */
  int K_SIZE = 29;
  /** RegularExpression Id. */
  int K_SLIDE = 30;
  /** RegularExpression Id. */
  int K_SLDING_TIME_WINDOW = 31;
  /** RegularExpression Id. */
  int K_SUM = 32;
  /** RegularExpression Id. */
  int K_TUMBLING_TIME_WINDOW = 33;
  /** RegularExpression Id. */
  int K_WHERE = 34;
  /** RegularExpression Id. */
  int K_TEST = 35;
  /** RegularExpression Id. */
  int IDENTIFIER = 36;
  /** RegularExpression Id. */
  int LETTER = 37;
  /** RegularExpression Id. */
  int SPECIAL_CHARS = 38;
  /** RegularExpression Id. */
  int CHAR_LITERAL = 39;
  /** RegularExpression Id. */
  int QUOTED_IDENTIFIER = 40;
  /** RegularExpression Id. */
  int COMPARE_OPERATOR = 41;
  /** RegularExpression Id. */
  int REGEXP = 42;
  /** RegularExpression Id. */
  int FLOAT = 43;
  /** RegularExpression Id. */
  int INTEGER = 44;
  /** RegularExpression Id. */
  int DIGIT = 45;
  /** RegularExpression Id. */
  int IPADDRESS = 46;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"ACCESS\"",
    "\"AS\"",
    "\"AND\"",
    "\"AVG\"",
    "\"BROKER\"",
    "\"COUNT\"",
    "\"DEFAULT\"",
    "\"JOIN\"",
    "\"LOGICAL\"",
    "\"MAX\"",
    "\"MIN\"",
    "\"NOT\"",
    "\"OR\"",
    "\"ON\"",
    "\"PLAN\"",
    "\"PROJECTION\"",
    "\"QUEUE\"",
    "\"RPROJECTION\"",
    "\"RSELECTION\"",
    "\"RJOIN\"",
    "\"RNEST\"",
    "\"RUNNEST\"",
    "\"SELECTION\"",
    "\"SET-PREDICTION\"",
    "\"SIZE\"",
    "\"SLIDE\"",
    "\"SLIDING-TIME-WINDOW\"",
    "\"SUM\"",
    "\"TUMBLING-TIME-WINDOW\"",
    "\"WHERE\"",
    "\"TESTOP\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<SPECIAL_CHARS>",
    "<CHAR_LITERAL>",
    "<QUOTED_IDENTIFIER>",
    "<COMPARE_OPERATOR>",
    "<REGEXP>",
    "<FLOAT>",
    "<INTEGER>",
    "<DIGIT>",
    "<IPADDRESS>",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"*\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"^\"",
    "\";\"",
    "\":=\"",
  };

}
