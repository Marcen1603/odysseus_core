/**
 * generated by Xtext
 */
package de.uniol.inf.is.odysseus.eca.validation;

import com.google.common.base.Objects;
import de.uniol.inf.is.odysseus.eca.eCA.COMMANDACTION;
import de.uniol.inf.is.odysseus.eca.eCA.ECAPackage;
import de.uniol.inf.is.odysseus.eca.eCA.RNDQUERY;
import de.uniol.inf.is.odysseus.eca.validation.AbstractECAValidator;
import org.eclipse.xtext.validation.Check;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class ECAValidator extends AbstractECAValidator {
  public final static String INVALID_START = "State invalid for startQuery";
  
  public final static String INVALID_STOP = "State invalid for stopQuery";
  
  @Check
  public void checkState(final COMMANDACTION act) {
    String actName = null;
    String actState = null;
    String _subActname = act.getSubActname();
    boolean _notEquals = (!Objects.equal(_subActname, null));
    if (_notEquals) {
      String _subActname_1 = act.getSubActname();
      actName = _subActname_1;
    }
    RNDQUERY _functAction = act.getFunctAction();
    String _stateName = _functAction.getStateName();
    boolean _notEquals_1 = (!Objects.equal(_stateName, null));
    if (_notEquals_1) {
      RNDQUERY _functAction_1 = act.getFunctAction();
      String _stateName_1 = _functAction_1.getStateName();
      actState = _stateName_1;
    }
    boolean _and = false;
    boolean _and_1 = false;
    RNDQUERY _functAction_2 = act.getFunctAction();
    String _stateName_2 = _functAction_2.getStateName();
    boolean _notEquals_2 = (!Objects.equal(_stateName_2, null));
    if (!_notEquals_2) {
      _and_1 = false;
    } else {
      boolean _notEquals_3 = (!Objects.equal(actName, null));
      _and_1 = _notEquals_3;
    }
    if (!_and_1) {
      _and = false;
    } else {
      boolean _notEquals_4 = (!Objects.equal(actState, null));
      _and = _notEquals_4;
    }
    if (_and) {
      boolean _and_2 = false;
      boolean _equals = actName.equals("startQuery");
      if (!_equals) {
        _and_2 = false;
      } else {
        boolean _equals_1 = actState.equals("INACTIVE");
        boolean _not = (!_equals_1);
        _and_2 = _not;
      }
      if (_and_2) {
        RNDQUERY _functAction_3 = act.getFunctAction();
        String _stateName_3 = _functAction_3.getStateName();
        String _plus = ("Cannot start Query if state = " + _stateName_3);
        String _plus_1 = (_plus + "!");
        this.error(_plus_1, 
          ECAPackage.Literals.COMMANDACTION__FUNCT_ACTION, 
          ECAValidator.INVALID_START);
      } else {
        boolean _and_3 = false;
        boolean _equals_2 = actName.equals("stopQuery");
        if (!_equals_2) {
          _and_3 = false;
        } else {
          boolean _or = false;
          boolean _equals_3 = actState.equals("RUNNING");
          if (_equals_3) {
            _or = true;
          } else {
            boolean _equals_4 = actState.equals("PARTIAL");
            _or = _equals_4;
          }
          boolean _not_1 = (!_or);
          _and_3 = _not_1;
        }
        if (_and_3) {
          RNDQUERY _functAction_4 = act.getFunctAction();
          String _stateName_4 = _functAction_4.getStateName();
          String _plus_2 = ("Cannot stop Query if state = " + _stateName_4);
          String _plus_3 = (_plus_2 + "!");
          this.error(_plus_3, 
            ECAPackage.Literals.COMMANDACTION__FUNCT_ACTION, 
            ECAValidator.INVALID_STOP);
        } else {
          boolean _and_4 = false;
          boolean _equals_5 = actName.equals("suspendQuery");
          if (!_equals_5) {
            _and_4 = false;
          } else {
            boolean _or_1 = false;
            boolean _equals_6 = actState.equals("RUNNING");
            if (_equals_6) {
              _or_1 = true;
            } else {
              boolean _equals_7 = actState.equals("PARTIAL");
              _or_1 = _equals_7;
            }
            boolean _not_2 = (!_or_1);
            _and_4 = _not_2;
          }
          if (_and_4) {
            RNDQUERY _functAction_5 = act.getFunctAction();
            String _stateName_5 = _functAction_5.getStateName();
            String _plus_4 = ("Cannot suspend Query if state = " + _stateName_5);
            String _plus_5 = (_plus_4 + "!");
            this.error(_plus_5, act, 
              ECAPackage.Literals.COMMANDACTION__FUNCT_ACTION);
          } else {
            boolean _and_5 = false;
            boolean _equals_8 = actName.equals("resumeQuery");
            if (!_equals_8) {
              _and_5 = false;
            } else {
              boolean _or_2 = false;
              boolean _equals_9 = actState.equals("SUSPENDED");
              if (_equals_9) {
                _or_2 = true;
              } else {
                boolean _equals_10 = actState.equals("PARTIAL_SUSPENDED");
                _or_2 = _equals_10;
              }
              boolean _not_3 = (!_or_2);
              _and_5 = _not_3;
            }
            if (_and_5) {
              RNDQUERY _functAction_6 = act.getFunctAction();
              String _stateName_6 = _functAction_6.getStateName();
              String _plus_6 = ("Cannot resume Query if state = " + _stateName_6);
              String _plus_7 = (_plus_6 + "!");
              this.error(_plus_7, act, 
                ECAPackage.Literals.COMMANDACTION__FUNCT_ACTION);
            } else {
              boolean _and_6 = false;
              boolean _equals_11 = actName.equals("fullQuery");
              if (!_equals_11) {
                _and_6 = false;
              } else {
                boolean _or_3 = false;
                boolean _equals_12 = actState.equals("PARTIAL");
                if (_equals_12) {
                  _or_3 = true;
                } else {
                  boolean _equals_13 = actState.equals("PARTIAL_SUSPENDED");
                  _or_3 = _equals_13;
                }
                boolean _not_4 = (!_or_3);
                _and_6 = _not_4;
              }
              if (_and_6) {
                RNDQUERY _functAction_7 = act.getFunctAction();
                String _stateName_7 = _functAction_7.getStateName();
                String _plus_8 = ("Cannot set Query full if state = " + _stateName_7);
                String _plus_9 = (_plus_8 + "!");
                this.error(_plus_9, act, 
                  ECAPackage.Literals.COMMANDACTION__FUNCT_ACTION);
              } else {
                boolean _and_7 = false;
                boolean _equals_14 = actName.equals("partialQuery");
                if (!_equals_14) {
                  _and_7 = false;
                } else {
                  boolean _or_4 = false;
                  boolean _or_5 = false;
                  boolean _equals_15 = actState.equals("INACTIVE");
                  if (_equals_15) {
                    _or_5 = true;
                  } else {
                    boolean _equals_16 = actState.equals("RUNNING");
                    _or_5 = _equals_16;
                  }
                  if (_or_5) {
                    _or_4 = true;
                  } else {
                    boolean _equals_17 = actState.equals("SUSPENDED");
                    _or_4 = _equals_17;
                  }
                  boolean _not_5 = (!_or_4);
                  _and_7 = _not_5;
                }
                if (_and_7) {
                  RNDQUERY _functAction_8 = act.getFunctAction();
                  String _stateName_8 = _functAction_8.getStateName();
                  String _plus_10 = ("Cannot set Query partial if state = " + _stateName_8);
                  String _plus_11 = (_plus_10 + "!");
                  this.error(_plus_11, act, 
                    ECAPackage.Literals.COMMANDACTION__FUNCT_ACTION);
                }
              }
            }
          }
        }
      }
    }
  }
}
