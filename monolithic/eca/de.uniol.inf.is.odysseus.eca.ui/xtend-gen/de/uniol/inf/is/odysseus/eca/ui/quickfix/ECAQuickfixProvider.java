/**
 * generated by Xtext
 */
package de.uniol.inf.is.odysseus.eca.ui.quickfix;

import de.uniol.inf.is.odysseus.eca.validation.ECAValidator;
import org.eclipse.xtext.ui.editor.model.IXtextDocument;
import org.eclipse.xtext.ui.editor.model.edit.IModification;
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext;
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider;
import org.eclipse.xtext.ui.editor.quickfix.Fix;
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor;
import org.eclipse.xtext.validation.Issue;

/**
 * Custom quickfixes.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#quick-fixes
 */
@SuppressWarnings("all")
public class ECAQuickfixProvider extends DefaultQuickfixProvider {
  @Fix(ECAValidator.INVALID_START)
  public void startQuery(final Issue issue, final IssueResolutionAcceptor acceptor) {
    final IModification _function = (IModificationContext context) -> {
      final IXtextDocument xtextDocument = context.getXtextDocument();
      final String newState = "INACTIVE";
      Integer _offset = issue.getOffset();
      Integer _length = issue.getLength();
      xtextDocument.replace((_offset).intValue(), (_length).intValue(), newState);
    };
    acceptor.accept(issue, "Change to INACTIVE !QuickFix not working!", "Use compatible state.", "upcase.png", _function);
  }
  
  @Fix(ECAValidator.INVALID_STOP)
  public void stopQuery(final Issue issue, final IssueResolutionAcceptor acceptor) {
    final IModification _function = (IModificationContext context) -> {
      final IXtextDocument xtextDocument = context.getXtextDocument();
      final String newState = "RUNNING";
      Integer _offset = issue.getOffset();
      Integer _length = issue.getLength();
      xtextDocument.replace((_offset).intValue(), (_length).intValue(), newState);
    };
    acceptor.accept(issue, "Change to RUNNING", "Use compatible state.", "upcase.png", _function);
    final IModification _function_1 = (IModificationContext context) -> {
      final IXtextDocument xtextDocument = context.getXtextDocument();
      final String newState = "PARTIAL";
      Integer _offset = issue.getOffset();
      Integer _length = issue.getLength();
      xtextDocument.replace((_offset).intValue(), (_length).intValue(), newState);
    };
    acceptor.accept(issue, "Change to PARTIAL", "Use compatible state.", "upcase.png", _function_1);
  }
}
