/*
 * generated by Xtext
 */
package de.uniol.inf.is.odysseus.iql.basic.formatting;

import javax.inject.Inject;

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;

import de.uniol.inf.is.odysseus.iql.basic.services.BasicIQLGrammarAccess;

public abstract class AbstractIQLFormatter extends AbstractDeclarativeFormatter {
	
	@Inject
	private BasicIQLGrammarAccess basic;
	
	@Override
	protected void configureFormatting(FormattingConfig c) {
		c.setLinewrap(0, 1, 2).before(basic.getSL_COMMENTRule());
		c.setLinewrap(0, 1, 2).before(basic.getML_COMMENTRule());
		c.setLinewrap(0, 1, 1).after(basic.getML_COMMENTRule());
		
		c.setLinewrap(1, 1, 1).after(basic.getIQLNamespaceRule());
		c.setNoSpace().before(basic.getIQLNamespaceAccess().getSemicolonKeyword_3());

		
		c.setLinewrap(2, 2, 10).after(basic.getIQLClassAccess().getLeftCurlyBracketKeyword_5());
		c.setLinewrap(1, 1, 10).after(basic.getIQLAttributeRule());
		c.setNoSpace().before(basic.getIQLAttributeAccess().getSemicolonKeyword_4());
		
		c.setLinewrap(1, 1, 10).after(basic.getIQLMethodRule());

		c.setLinewrap(2, 2, 10).after(basic.getIQLStatementBlockAccess().getLeftCurlyBracketKeyword_1());
		c.setLinewrap(0, 0, 10).after(basic.getIQLStatementRule());
	}
}
