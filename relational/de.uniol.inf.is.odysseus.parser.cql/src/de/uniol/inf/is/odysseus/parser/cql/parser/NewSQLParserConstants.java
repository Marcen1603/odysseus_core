/* Generated By:JJTree&JavaCC: Do not edit this line. NewSQLParserConstants.java */
package de.uniol.inf.is.odysseus.parser.cql.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface NewSQLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int K_ALL = 5;
  /** RegularExpression Id. */
  int K_ADVANCE = 6;
  /** RegularExpression Id. */
  int K_ALWAYS = 7;
  /** RegularExpression Id. */
  int K_AND = 8;
  /** RegularExpression Id. */
  int K_ANY = 9;
  /** RegularExpression Id. */
  int K_AS = 10;
  /** RegularExpression Id. */
  int K_AVG = 11;
  /** RegularExpression Id. */
  int K_BROKER = 12;
  /** RegularExpression Id. */
  int K_BY = 13;
  /** RegularExpression Id. */
  int K_CHANNEL = 14;
  /** RegularExpression Id. */
  int K_COMMENT = 15;
  /** RegularExpression Id. */
  int K_COUNT = 16;
  /** RegularExpression Id. */
  int K_CREATE = 17;
  /** RegularExpression Id. */
  int K_CSV = 18;
  /** RegularExpression Id. */
  int K_DATE = 19;
  /** RegularExpression Id. */
  int K_DAY = 20;
  /** RegularExpression Id. */
  int K_DB_EXECUTE = 21;
  /** RegularExpression Id. */
  int K_DB_SELECT = 22;
  /** RegularExpression Id. */
  int K_DB_SCHEMA = 23;
  /** RegularExpression Id. */
  int K_DEFAULT = 24;
  /** RegularExpression Id. */
  int K_DISTINCT = 25;
  /** RegularExpression Id. */
  int K_DOUBLE = 26;
  /** RegularExpression Id. */
  int K_END_TIMESTAMP = 27;
  /** RegularExpression Id. */
  int K_EXISTS = 28;
  /** RegularExpression Id. */
  int K_FLOAT = 29;
  /** RegularExpression Id. */
  int K_FROM = 30;
  /** RegularExpression Id. */
  int K_GROUP = 31;
  /** RegularExpression Id. */
  int K_HAVING = 32;
  /** RegularExpression Id. */
  int K_HOUR = 33;
  /** RegularExpression Id. */
  int K_IN = 34;
  /** RegularExpression Id. */
  int K_INFTY = 35;
  /** RegularExpression Id. */
  int K_INTEGER = 36;
  /** RegularExpression Id. */
  int K_INTERSECTION = 37;
  /** RegularExpression Id. */
  int K_INTO = 38;
  /** RegularExpression Id. */
  int K_IS = 39;
  /** RegularExpression Id. */
  int K_JOIN = 40;
  /** RegularExpression Id. */
  int K_LIKE = 41;
  /** RegularExpression Id. */
  int K_LONG = 42;
  /** RegularExpression Id. */
  int K_MATRIX = 43;
  /** RegularExpression Id. */
  int K_MAX = 44;
  /** RegularExpression Id. */
  int K_METRIC = 45;
  /** RegularExpression Id. */
  int K_MIN = 46;
  /** RegularExpression Id. */
  int K_MINUS = 47;
  /** RegularExpression Id. */
  int K_MINUTE = 48;
  /** RegularExpression Id. */
  int K_MV = 49;
  /** RegularExpression Id. */
  int K_NATURAL = 50;
  /** RegularExpression Id. */
  int K_NOT = 51;
  /** RegularExpression Id. */
  int K_NULL = 52;
  /** RegularExpression Id. */
  int K_OF = 53;
  /** RegularExpression Id. */
  int K_OFFSET = 54;
  /** RegularExpression Id. */
  int K_ON = 55;
  /** RegularExpression Id. */
  int K_OR = 56;
  /** RegularExpression Id. */
  int K_OSGI = 57;
  /** RegularExpression Id. */
  int K_OUTPUT = 58;
  /** RegularExpression Id. */
  int K_PARTITION = 59;
  /** RegularExpression Id. */
  int K_PRIORITY = 60;
  /** RegularExpression Id. */
  int K_PROB = 61;
  /** RegularExpression Id. */
  int K_QUEUE = 62;
  /** RegularExpression Id. */
  int K_RANGE = 63;
  /** RegularExpression Id. */
  int K_REAL = 64;
  /** RegularExpression Id. */
  int K_RELATION = 65;
  /** RegularExpression Id. */
  int K_RELATIVE = 66;
  /** RegularExpression Id. */
  int K_ROWS = 67;
  /** RegularExpression Id. */
  int K_SECOND = 68;
  /** RegularExpression Id. */
  int K_SELECT = 69;
  /** RegularExpression Id. */
  int K_SET = 70;
  /** RegularExpression Id. */
  int K_SILAB = 71;
  /** RegularExpression Id. */
  int K_SIZE = 72;
  /** RegularExpression Id. */
  int K_SLIDE = 73;
  /** RegularExpression Id. */
  int K_SOCKET = 74;
  /** RegularExpression Id. */
  int K_START_TIMESTAMP = 75;
  /** RegularExpression Id. */
  int K_STREAM = 76;
  /** RegularExpression Id. */
  int K_STRING = 77;
  /** RegularExpression Id. */
  int K_SUM = 78;
  /** RegularExpression Id. */
  int K_TIME = 79;
  /** RegularExpression Id. */
  int K_TIMEOUT = 80;
  /** RegularExpression Id. */
  int K_TO = 81;
  /** RegularExpression Id. */
  int K_TUPLE = 82;
  /** RegularExpression Id. */
  int K_UNBOUNDED = 83;
  /** RegularExpression Id. */
  int K_UNION = 84;
  /** RegularExpression Id. */
  int K_VALID = 85;
  /** RegularExpression Id. */
  int K_VIEW = 86;
  /** RegularExpression Id. */
  int K_WEEK = 87;
  /** RegularExpression Id. */
  int K_WHERE = 88;
  /** RegularExpression Id. */
  int K_WITH = 89;
  /** RegularExpression Id. */
  int K_SENSOR = 90;
  /** RegularExpression Id. */
  int K_ATTRIBUTE = 91;
  /** RegularExpression Id. */
  int K_RECORD = 92;
  /** RegularExpression Id. */
  int K_LIST = 93;
  /** RegularExpression Id. */
  int S_DISTANCE = 94;
  /** RegularExpression Id. */
  int S_COMPARE = 95;
  /** RegularExpression Id. */
  int S_POINT = 96;
  /** RegularExpression Id. */
  int S_SEGMENT = 97;
  /** RegularExpression Id. */
  int S_LINE = 98;
  /** RegularExpression Id. */
  int S_FACET = 99;
  /** RegularExpression Id. */
  int S_SOLID = 100;
  /** RegularExpression Id. */
  int FLOAT = 101;
  /** RegularExpression Id. */
  int INTEGER = 102;
  /** RegularExpression Id. */
  int DIGIT = 103;
  /** RegularExpression Id. */
  int IPADDRESS = 104;
  /** RegularExpression Id. */
  int LINE_COMMENT = 105;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 106;
  /** RegularExpression Id. */
  int IDENTIFIER = 107;
  /** RegularExpression Id. */
  int LETTER = 108;
  /** RegularExpression Id. */
  int SPECIAL_CHARS = 109;
  /** RegularExpression Id. */
  int CHAR_LITERAL = 110;
  /** RegularExpression Id. */
  int SQL_STRING = 111;
  /** RegularExpression Id. */
  int QUOTED_IDENTIFIER = 112;
  /** RegularExpression Id. */
  int COMPARE_OPERATOR = 113;
  /** RegularExpression Id. */
  int REGEXP = 114;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\t\"",
    "\"ALL\"",
    "\"ADVANCE\"",
    "\"ALWAYS\"",
    "\"AND\"",
    "\"ANY\"",
    "\"AS\"",
    "\"AVG\"",
    "\"BROKER\"",
    "\"BY\"",
    "\"CHANNEL\"",
    "\"COMMENT\"",
    "\"COUNT\"",
    "\"CREATE\"",
    "\"CSV\"",
    "\"DATE\"",
    "<K_DAY>",
    "\"DB_EXECUTE\"",
    "\"DATABASE\"",
    "\"SCHEMA\"",
    "\"DEFAULT\"",
    "\"DISTINCT\"",
    "\"DOUBLE\"",
    "\"ENDTIMESTAMP\"",
    "\"EXISTS\"",
    "\"FLOAT\"",
    "\"FROM\"",
    "\"GROUP\"",
    "\"HAVING\"",
    "<K_HOUR>",
    "\"IN\"",
    "\"INFTY\"",
    "\"INTEGER\"",
    "\"INTERSECT\"",
    "\"INTO\"",
    "\"IS\"",
    "\"JOIN\"",
    "\"LIKE\"",
    "\"LONG\"",
    "\"MATRIX\"",
    "\"MAX\"",
    "\"METRIC\"",
    "\"MIN\"",
    "\"MINUS\"",
    "<K_MINUTE>",
    "\"MV\"",
    "\"NATURAL\"",
    "\"NOT\"",
    "\"NULL\"",
    "\"OF\"",
    "\"OFFSET\"",
    "\"ON\"",
    "\"OR\"",
    "\"OSGI\"",
    "\"OUTPUT\"",
    "\"PARTITION\"",
    "\"PRIORITY\"",
    "\"PROB\"",
    "\"QUEUE\"",
    "\"RANGE\"",
    "\"REAL\"",
    "\"RELATION\"",
    "\"RELATIVE\"",
    "\"ROWS\"",
    "<K_SECOND>",
    "\"SELECT\"",
    "\"SET\"",
    "\"SILAB\"",
    "\"SIZE\"",
    "\"SLIDE\"",
    "\"SOCKET\"",
    "\"STARTTIMESTAMP\"",
    "\"STREAM\"",
    "\"STRING\"",
    "\"SUM\"",
    "\"TIME\"",
    "\"TIMEOUT\"",
    "\"TO\"",
    "\"TUPLE\"",
    "\"UNBOUNDED\"",
    "\"UNION\"",
    "\"VALID\"",
    "\"VIEW\"",
    "<K_WEEK>",
    "\"WHERE\"",
    "\"WITH\"",
    "\"SENSOR\"",
    "\"ATTRIBUTE\"",
    "\"RECORD\"",
    "\"LIST\"",
    "\"SPATIAL_DISTANCE\"",
    "<S_COMPARE>",
    "\"POINT3D\"",
    "\"SEGMENT3D\"",
    "\"LINE3D\"",
    "\"FACET3D\"",
    "\"SOLID3D\"",
    "<FLOAT>",
    "<INTEGER>",
    "<DIGIT>",
    "<IPADDRESS>",
    "<LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<SPECIAL_CHARS>",
    "<CHAR_LITERAL>",
    "<SQL_STRING>",
    "<QUOTED_IDENTIFIER>",
    "<COMPARE_OPERATOR>",
    "<REGEXP>",
    "\";\"",
    "\"(\"",
    "\",\"",
    "\")\"",
    "\"[\"",
    "\"-\"",
    "\":\"",
    "\"*\"",
    "\"]\"",
    "\"+\"",
    "\"/\"",
    "\"^\"",
  };

}
