/* Generated By:JJTree: Do not edit this line. ASTProbabilityPredicate.java Version 4.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY= */
package de.uniol.inf.is.odysseus.parser.cql.parser;

import java.util.ArrayList;

public class ASTProbabilityPredicate extends AbstractPredicate {
  private ArrayList xLow;
  private ArrayList xUp;
  private double prob;
  
  private OperandTypes covOperandType;
  
  private String compareOperator;
  
  /**
   * Indicates, whether this is a predicate
   * over more than one source (true) or not (false);
   */
  private boolean joinPredicate;
  
  public enum OperandTypes{
	  PLUS, MINUS
  }
	
  public ASTProbabilityPredicate(int id) {
    super(id);
  }

  public ASTProbabilityPredicate(NewSQLParser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(NewSQLParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
  
  public void setXLow(ArrayList xLow){
	  this.xLow = xLow;
  }
  
  public ArrayList getXLow(){
	  return this.xLow;
  }
  
  public void setXUp(ArrayList xUp){
	  this.xUp = xUp;
  }
  
  public ArrayList getXUp(){
	  return this.xUp;
  }
  
  public void setProb(double prob){
	  this.prob = prob;
  }
  
  public double getProb(){
	  return this.prob;
  }
  
  public void setCovOperandType(OperandTypes type){
	  this.covOperandType = type;
  }
  
  public OperandTypes getCovOperandType(){
	  return this.covOperandType;
  }
  
  public String getCompareOperator() {
	return compareOperator;
  }

  public void setCompareOperator(String compareOperator) {
	this.compareOperator = compareOperator;
  }
  
  public void setJoinPredicate(boolean b){
	  this.joinPredicate = b;
  }
  
  public boolean isJoinPredicate(){
	  return this.joinPredicate;
  }

}
/* JavaCC - OriginalChecksum=20335a3b6e2e43475b3164d0810379c4 (do not edit this line) */
