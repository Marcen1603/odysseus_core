package de.uniol.inf.is.odysseus.wrapper.inertiacube.interfaces;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.NativeLong;
import de.uniol.inf.is.odysseus.wrapper.inertiacube.interfaces.ISenseLib.Bool;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ISD_STATION_INFO_TYPE extends Structure<ISD_STATION_INFO_TYPE, ISD_STATION_INFO_TYPE.ByValue, ISD_STATION_INFO_TYPE.ByReference > {
	/** Unique number identifying a station. It is the same as that */
	public int ID;
	/**
	 * TRUE if ON, FALSE if OFF<br>
	 * C type : Bool
	 */
	public Bool State;
	/**
	 * 0 (OFF) or 2 (ON).  Setting 1 is no longer used and will<br>
	 * C type : Bool
	 */
	public Bool Compass;
	/** InertiaCube associated with this station (IS-600). If no InertiaCube is */
	public NativeLong InertiaCube;
	/** Perceptual enhancement; levels 0, 1, or 2 */
	public int Enhancement;
	/** Sensitivity; levels 1 to 4 (only used with Enhancement = 1 or 2) */
	public int Sensitivity;
	/** 0 to 50 msec */
	public int Prediction;
	/** ISD_EULER or ISD_QUATERNION (only needed for IS-900, IS-1200) */
	public int AngleFormat;
	/**
	 * TRUE if time stamp is requested<br>
	 * C type : Bool
	 */
	public Bool TimeStamped;
	/**
	 * TRUE if button and joystick data is requested<br>
	 * C type : Bool
	 */
	public Bool GetInputs;
	/**
	 * TRUE if raw encoder data is requested<br>
	 * C type : Bool
	 */
	public Bool GetEncoderData;
	/** ----------------------------------------------------------------------------------------- */
	public byte CompassCompensation;
	/** ----------------------------------------------------------------------------------------- */
	public byte ImuShockSuppression;
	/** ----------------------------------------------------------------------------------------- */
	public byte UrmRejectionFactor;
	public byte bReserved2;
	/** Coordinate frame in which position and orientation data is reported */
	public int CoordFrame;
	/** ----------------------------------------------------------------------------------------- */
	public int AccelSensitivity;
	public float fReserved1;
	public float fReserved2;
	/**
	 * Coordinates in station frame (relative to tracker origin) of the point being tracked<br>
	 * C type : float[3]
	 */
	public float[] TipOffset = new float[3];
	public float fReserved3;
	/**
	 * TRUE to get computed FOV, aperture, etc<br>
	 * C type : Bool
	 */
	public Bool GetCameraData;
	/** C type : Bool */
	public Bool GetAuxInputs;
	/** C type : Bool */
	public Bool GetCovarianceData;
	/**
	 * Retrieving extended data will reduce update rate with even a single tracker<br>
	 * C type : Bool
	 */
	public Bool GetExtendedData;
	public ISD_STATION_INFO_TYPE() {
		super();
	}
	@Override
	protected List<? > getFieldOrder() {
		return Arrays.asList("ID", "State", "Compass", "InertiaCube", "Enhancement", "Sensitivity", "Prediction", "AngleFormat", "TimeStamped", "GetInputs", "GetEncoderData", "CompassCompensation", "ImuShockSuppression", "UrmRejectionFactor", "bReserved2", "CoordFrame", "AccelSensitivity", "fReserved1", "fReserved2", "TipOffset", "fReserved3", "GetCameraData", "GetAuxInputs", "GetCovarianceData", "GetExtendedData");
	}
	@Override
	protected ByReference newByReference() { return new ByReference(); }
	@Override
	protected ByValue newByValue() { return new ByValue(); }
	@Override
	protected ISD_STATION_INFO_TYPE newInstance() { return new ISD_STATION_INFO_TYPE(); }
	public static ISD_STATION_INFO_TYPE[] newArray(int arrayLength) {
		return Structure.newArray(ISD_STATION_INFO_TYPE.class, arrayLength);
	}
	public static class ByReference extends ISD_STATION_INFO_TYPE implements Structure.ByReference {
		
	};
	public static class ByValue extends ISD_STATION_INFO_TYPE implements Structure.ByValue {
		
	};
}
